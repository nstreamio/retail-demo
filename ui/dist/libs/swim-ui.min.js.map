{"version":3,"file":"swim-ui.min.js","sources":["../../../node_modules/tslib/tslib.es6.mjs","../swim-model/src/main/Model.ts","../swim-model/src/main/ModelRelation.ts","../swim-model/src/main/ModelRef.ts","../swim-model/src/main/ModelSet.ts","../swim-model/src/main/Trait.ts","../swim-model/src/main/TraitRelation.ts","../swim-model/src/main/TraitRef.ts","../swim-model/src/main/TraitSet.ts","../swim-model/src/main/TraitModelRef.ts","../swim-model/src/main/TraitModelSet.ts","../swim-model/src/main/RefresherService.ts","../swim-model/src/main/StorageService.ts","../swim-model/src/main/SelectionService.ts","../swim-model/src/main/SelectableTrait.ts","../swim-style/src/main/Font.ts","../swim-style/src/main/Color.ts","../swim-style/src/main/RgbColor.ts","../swim-style/src/main/HslColor.ts","../swim-style/src/main/ColorStop.ts","../swim-style/src/main/LinearGradient.ts","../swim-style/src/main/BoxShadow.ts","../swim-style/src/main/StyleValue.ts","../swim-style/src/main/ToAttributeString.ts","../swim-style/src/main/ToStyleString.ts","../swim-style/src/main/ToCssValue.ts","../swim-style/src/main/Focus.ts","../swim-style/src/main/Presence.ts","../swim-style/src/main/Expansion.ts","../swim-theme/src/main/LookVector.ts","../swim-theme/src/main/FeelVector.ts","../swim-theme/src/main/MoodVector.ts","../swim-theme/src/main/MoodMatrix.ts","../swim-theme/src/main/ThemeMatrix.ts","../swim-theme/src/main/ThemeContext.ts","../swim-theme/src/main/ThemeAnimator.ts","../swim-theme/src/main/ThemeConstraintAnimator.ts","../swim-theme/src/main/Look.ts","../swim-theme/src/main/Feel.ts","../swim-theme/src/main/Mood.ts","../swim-theme/src/main/Theme.ts","../swim-view/src/main/View.ts","../swim-view/src/main/ViewRelation.ts","../swim-view/src/main/ViewRef.ts","../swim-view/src/main/ViewSet.ts","../swim-view/src/main/Gesture.ts","../swim-view/src/main/PositionGesture.ts","../swim-view/src/main/MomentumGesture.ts","../swim-view/src/main/ScaleGesture.ts","../swim-view/src/main/Viewport.ts","../swim-view/src/main/ViewportService.ts","../swim-view/src/main/DisplayerService.ts","../swim-view/src/main/SolverService.ts","../swim-view/src/main/StylerService.ts","../swim-dom/src/main/AttributeContext.ts","../swim-dom/src/main/AttributeAnimator.ts","../swim-dom/src/main/StyleContext.ts","../swim-dom/src/main/StyleAnimator.ts","../swim-dom/src/main/StyleConstraintAnimator.ts","../swim-dom/src/main/StyleAttribute.ts","../swim-dom/src/main/CssScope.ts","../swim-dom/src/main/StyleSheet.ts","../swim-dom/src/main/CssRule.ts","../swim-dom/src/main/StyleRule.ts","../swim-dom/src/main/MediaRule.ts","../swim-dom/src/main/ClassList.ts","../swim-dom/src/main/NodeView.ts","../swim-dom/src/main/TextView.ts","../swim-dom/src/main/ElementView.ts","../swim-dom/src/main/HtmlView.ts","../swim-dom/src/main/StyleView.ts","../swim-dom/src/main/SvgView.ts","../swim-dom/src/main/DomService.ts","../swim-dom/src/main/ModalView.ts","../swim-dom/src/main/ModalService.ts","../swim-graphics/src/main/GraphicsRenderer.ts","../swim-graphics/src/main/Graphics.ts","../swim-graphics/src/main/GraphicsView.ts","../swim-graphics/src/main/DrawingRenderer.ts","../swim-graphics/src/main/PathContext.ts","../swim-graphics/src/main/PathRenderer.ts","../swim-graphics/src/main/PaintingRenderer.ts","../swim-graphics/src/main/SvgContext.ts","../swim-graphics/src/main/SvgRenderer.ts","../swim-graphics/src/main/CanvasRenderer.ts","../swim-graphics/src/main/WebGLRenderer.ts","../swim-graphics/src/main/Sprite.ts","../swim-graphics/src/main/SpriteSheet.ts","../swim-graphics/src/main/SpriteService.ts","../swim-graphics/src/main/CanvasView.ts","../swim-graphics/src/main/RasterView.ts","../swim-graphics/src/main/FillView.ts","../swim-graphics/src/main/StrokeView.ts","../swim-graphics/src/main/Rect.ts","../swim-graphics/src/main/RectView.ts","../swim-graphics/src/main/Arc.ts","../swim-graphics/src/main/ArcView.ts","../swim-graphics/src/main/TypesetView.ts","../swim-graphics/src/main/TextRun.ts","../swim-graphics/src/main/TextRunView.ts","../swim-graphics/src/main/IconLayout.ts","../swim-graphics/src/main/Icon.ts","../swim-graphics/src/main/FilledIcon.ts","../swim-graphics/src/main/VectorIcon.ts","../swim-graphics/src/main/CircleIcon.ts","../swim-graphics/src/main/PolygonIcon.ts","../swim-graphics/src/main/EnclosedIcon.ts","../swim-graphics/src/main/IconView.ts","../swim-graphics/src/main/GraphicsIconView.ts","../swim-graphics/src/main/SvgIconView.ts","../swim-graphics/src/main/HtmlIconView.ts","../swim-controller/src/main/Controller.ts","../swim-controller/src/main/ControllerRelation.ts","../swim-controller/src/main/ControllerRef.ts","../swim-controller/src/main/ControllerSet.ts","../swim-controller/src/main/TraitViewRef.ts","../swim-controller/src/main/ViewControllerRef.ts","../swim-controller/src/main/ViewControllerSet.ts","../swim-controller/src/main/TraitControllerRef.ts","../swim-controller/src/main/TraitControllerSet.ts","../swim-controller/src/main/TraitViewControllerRef.ts","../swim-controller/src/main/TraitViewControllerSet.ts","../swim-controller/src/main/ExecutorService.ts","../swim-controller/src/main/HistoryState.ts","../swim-controller/src/main/HistoryService.ts","../swim-controller/src/main/Hyperlink.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FromLike} from \"@swim/util\";\nimport type {Dictionary} from \"@swim/util\";\nimport type {MutableDictionary} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerTemplate} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {ComponentFlags} from \"@swim/component\";\nimport type {ComponentObserver} from \"@swim/component\";\nimport {Component} from \"@swim/component\";\nimport type {ValueLike} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport type {UriLike} from \"@swim/uri\";\nimport {Uri} from \"@swim/uri\";\nimport type {WarpDownlinkModel} from \"@swim/client\";\nimport {WarpDownlink} from \"@swim/client\";\nimport {EventDownlink} from \"@swim/client\";\nimport {ValueDownlink} from \"@swim/client\";\nimport {ListDownlink} from \"@swim/client\";\nimport {MapDownlink} from \"@swim/client\";\nimport {WarpRef} from \"@swim/client\";\nimport {WarpClient} from \"@swim/client\";\nimport {ModelRelation} from \"./\"; // forward import\nimport {Trait} from \"./\"; // forward import\nimport {TraitRelation} from \"./\"; // forward import\nimport {RefresherService} from \"./\"; // forward import\nimport {SelectionService} from \"./\"; // forward import\n\n/** @public */\nexport type ModelFlags = ComponentFlags;\n\n/** @public */\nexport interface ModelFactory<M extends Model = Model> extends Creatable<M>, FromLike<M> {\n}\n\n/** @public */\nexport interface ModelClass<M extends Model = Model> extends Function, ModelFactory<M> {\n  readonly prototype: M;\n}\n\n/** @public */\nexport interface ModelConstructor<M extends Model = Model> extends ModelClass<M> {\n  new(): M;\n}\n\n/** @public */\nexport interface ModelObserver<M extends Model = Model> extends ComponentObserver<M> {\n  modelWillAttachParent?(parent: Model, model: M): void;\n\n  modelDidAttachParent?(parent: Model, model: M): void;\n\n  modelWillDetachParent?(parent: Model, model: M): void;\n\n  modelDidDetachParent?(parent: Model, model: M): void;\n\n  modelWillInsertChild?(child: Model, target: Model | null, model: M): void;\n\n  modelDidInsertChild?(child: Model, target: Model | null, model: M): void;\n\n  modelWillRemoveChild?(child: Model, model: M): void;\n\n  modelDidRemoveChild?(child: Model, model: M): void;\n\n  modelWillReinsertChild?(child: Model, target: Model | null, model: M): void;\n\n  modelDidReinsertChild?(child: Model, target: Model | null, model: M): void;\n\n  modelWillInsertTrait?(trait: Trait, target: Trait | null, model: M): void;\n\n  modelDidInsertTrait?(trait: Trait, target: Trait | null, model: M): void;\n\n  modelWillRemoveTrait?(trait: Trait, model: M): void;\n\n  modelDidRemoveTrait?(trait: Trait, model: M): void;\n\n  modelWillMount?(model: M): void;\n\n  modelDidMount?(model: M): void;\n\n  modelWillUnmount?(model: M): void;\n\n  modelDidUnmount?(model: M): void;\n\n  modelWillMutate?(model: M): void;\n\n  modelDidMutate?(model: M): void;\n\n  modelWillAggregate?(model: M): void;\n\n  modelDidAggregate?(model: M): void;\n\n  modelWillCorrelate?(model: M): void;\n\n  modelDidCorrelate?(model: M): void;\n\n  modelWillValidate?(model: M): void;\n\n  modelDidValidate?(model: M): void;\n\n  modelWillReconcile?(model: M): void;\n\n  modelDidReconcile?(model: M): void;\n\n  modelWillStartConsuming?(model: M): void;\n\n  modelDidStartConsuming?(model: M): void;\n\n  modelWillStopConsuming?(model: M): void;\n\n  modelDidStopConsuming?(model: M): void;\n}\n\n/** @public */\nexport class Model extends Component<Model> implements Consumable, WarpRef {\n  constructor() {\n    super();\n    this.consumers = null;\n    this.firstTrait = null;\n    this.lastTrait = null;\n    this.traitMap = null;\n  }\n\n  /** @override */\n  declare readonly observerType?: Class<ModelObserver>;\n\n  override get componentType(): Class<Model> {\n    return Model;\n  }\n\n  protected override willAttachParent(parent: Model): void {\n    this.callObservers(\"modelWillAttachParent\", parent, this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onAttachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didAttachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidAttachParent\", parent, this);\n  }\n\n  protected override willDetachParent(parent: Model): void {\n    this.callObservers(\"modelWillDetachParent\", parent, this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onDetachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didDetachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidDetachParent\", parent, this);\n  }\n\n  protected override willInsertChild(child: Model, target: Model | null): void {\n    super.willInsertChild(child, target);\n    this.callObservers(\"modelWillInsertChild\", child, target, this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onInsertChild(child: Model, target: Model | null): void {\n    super.onInsertChild(child, target);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didInsertChild(child: Model, target: Model | null): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidInsertChild\", child, target, this);\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ModelFlags): void {\n    if ((this.flags & Model.MountedFlag) !== 0) {\n      if (updateFlags === void 0) {\n        updateFlags = 0;\n      }\n      updateFlags |= this.flags & Model.UpdateMask;\n      if ((updateFlags & Model.AnalyzeMask) !== 0) {\n        this.cascadeAnalyze(updateFlags);\n      }\n    }\n  }\n\n  protected override willRemoveChild(child: Model): void {\n    super.willRemoveChild(child);\n    this.callObservers(\"modelWillRemoveChild\", child, this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onRemoveChild(child: Model): void {\n    super.onRemoveChild(child);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didRemoveChild(child: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidRemoveChild\", child, this);\n    super.didRemoveChild(child);\n  }\n\n  protected override willReinsertChild(child: Model, target: Model | null): void {\n    super.willReinsertChild(child, target);\n    this.callObservers(\"modelWillReinsertChild\", child, target, this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willReinsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onReinsertChild(child: Model, target: Model | null): void {\n    super.onReinsertChild(child, target);\n  }\n\n  protected override didReinsertChild(child: Model, target: Model | null): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didReinsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidReinsertChild\", child, target, this);\n    super.didReinsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeMount(): void {\n    if ((this.flags & Model.MountedFlag) !== 0) {\n      throw new Error(\"already mounted\");\n    }\n    this.willMount();\n    this.setFlags(this.flags | Model.MountedFlag);\n    this.onMount();\n    this.mountTraits();\n    this.mountChildren();\n    this.didMount();\n  }\n\n  protected override willMount(): void {\n    super.willMount();\n    this.callObservers(\"modelWillMount\", this);\n  }\n\n  protected override didMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & Model.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n\n    this.mountFasteners();\n\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n\n    this.callObservers(\"modelDidMount\", this);\n    super.didMount();\n  }\n\n  /** @internal */\n  override cascadeUnmount(): void {\n    if ((this.flags & Model.MountedFlag) === 0) {\n      throw new Error(\"already unmounted\");\n    }\n    this.willUnmount();\n    this.setFlags(this.flags & ~Model.MountedFlag);\n    this.unmountChildren();\n    this.unmountTraits();\n    this.onUnmount();\n    this.didUnmount();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    this.callObservers(\"modelWillUnmount\", this);\n\n    this.stopConsuming();\n  }\n\n  protected override didUnmount(): void {\n    this.callObservers(\"modelDidUnmount\", this);\n    super.didUnmount();\n  }\n\n  getTraitFastener<F extends Fastener>(fastenerName: PropertyKey, fastenerType?: Proto<F>, contextType?: Proto<any> | null): F | null {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const fastener = trait.getFastener(fastenerName, fastenerType, contextType);\n      if (fastener !== null) {\n        return fastener;\n      }\n      trait = trait.nextTrait;\n    }\n    return null;\n  }\n\n  override requireUpdate(updateFlags: ModelFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & Model.UpdateMask;\n    if (deltaUpdateFlags === 0) {\n      return;\n    }\n    this.setFlags(flags | deltaUpdateFlags);\n    this.requestUpdate(this, deltaUpdateFlags, immediate);\n  }\n\n  protected needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      updateFlags = trait.needsUpdate(updateFlags, immediate);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Model.UpdateMask;\n    if ((updateFlags & Model.AnalyzeMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsAnalyze;\n    }\n    if ((updateFlags & Model.RefreshMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsRefresh;\n    }\n    if (deltaUpdateFlags === 0 && !immediate) {\n      return;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    const parent = this.parent;\n    if (parent !== null) {\n      parent.requestUpdate(target, updateFlags, immediate);\n    } else if (this.mounted) {\n      const updaterService = this.updater.service;\n      if (updaterService !== null) {\n        updaterService.requestUpdate(target, updateFlags, immediate);\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & Model.UpdatingMask) !== 0;\n  }\n\n  get analyzing(): boolean {\n    return (this.flags & Model.AnalyzingFlag) !== 0;\n  }\n\n  protected needsAnalyze(analyzeFlags: ModelFlags): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      analyzeFlags = trait.needsAnalyze(analyzeFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return analyzeFlags;\n  }\n\n  cascadeAnalyze(analyzeFlags: ModelFlags): void {\n    try {\n      analyzeFlags &= ~Model.NeedsAnalyze;\n      analyzeFlags |= this.flags & Model.UpdateMask;\n      analyzeFlags = this.needsAnalyze(analyzeFlags);\n      if ((analyzeFlags & Model.AnalyzeMask) === 0) {\n        return;\n      }\n      let cascadeFlags = analyzeFlags;\n      this.setFlags(this.flags & ~Model.NeedsAnalyze | Model.AnalyzingFlag);\n      this.willAnalyze(cascadeFlags);\n      if (((this.flags | analyzeFlags) & Model.NeedsMutate) !== 0) {\n        cascadeFlags |= Model.NeedsMutate;\n        this.setFlags(this.flags & ~Model.NeedsMutate);\n        this.willMutate();\n      }\n      if (((this.flags | analyzeFlags) & Model.NeedsAggregate) !== 0) {\n        cascadeFlags |= Model.NeedsAggregate;\n        this.setFlags(this.flags & ~Model.NeedsAggregate);\n        this.willAggregate();\n      }\n      if (((this.flags | analyzeFlags) & Model.NeedsCorrelate) !== 0) {\n        cascadeFlags |= Model.NeedsCorrelate;\n        this.setFlags(this.flags & ~Model.NeedsCorrelate);\n        this.willCorrelate();\n      }\n\n      this.onAnalyze(cascadeFlags);\n      if ((cascadeFlags & Model.NeedsMutate) !== 0) {\n        this.onMutate();\n      }\n      if ((cascadeFlags & Model.NeedsAggregate) !== 0) {\n        this.onAggregate();\n      }\n      if ((cascadeFlags & Model.NeedsCorrelate) !== 0) {\n        this.onCorrelate();\n      }\n\n      if ((cascadeFlags & Model.AnalyzeMask) !== 0) {\n        this.analyzeChildren(cascadeFlags, this.analyzeChild);\n      }\n\n      if ((cascadeFlags & Model.NeedsCorrelate) !== 0) {\n        this.didCorrelate();\n      }\n      if ((cascadeFlags & Model.NeedsAggregate) !== 0) {\n        this.didAggregate();\n      }\n      if ((cascadeFlags & Model.NeedsMutate) !== 0) {\n        this.didMutate();\n      }\n      this.didAnalyze(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~Model.AnalyzingFlag);\n    }\n  }\n\n  protected willAnalyze(analyzeFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAnalyze(analyzeFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onAnalyze(analyzeFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAnalyze(analyzeFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didAnalyze(analyzeFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAnalyze(analyzeFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected willMutate(): void {\n    this.callObservers(\"modelWillMutate\", this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willMutate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onMutate(): void {\n    this.recohereFasteners(this.updateTime);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onMutate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didMutate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didMutate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidMutate\", this);\n  }\n\n  protected willAggregate(): void {\n    this.callObservers(\"modelWillAggregate\", this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAggregate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onAggregate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAggregate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didAggregate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAggregate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidAggregate\", this);\n  }\n\n  protected willCorrelate(): void {\n    this.callObservers(\"modelWillCorrelate\", this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willCorrelate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onCorrelate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onCorrelate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didCorrelate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didCorrelate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidCorrelate\", this);\n  }\n\n  protected analyzeChildren(analyzeFlags: ModelFlags, analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags) => void): void {\n    const trait = this.firstTrait;\n    if (trait !== null) {\n      this.analyzeTraitChildren(trait, analyzeFlags, analyzeChild);\n    } else {\n      this.analyzeOwnChildren(analyzeFlags, analyzeChild);\n    }\n  }\n\n  protected analyzeTraitChildren(trait: Trait, analyzeFlags: ModelFlags, analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags) => void): void {\n    const next = trait.nextTrait;\n    if (next !== null) {\n      trait.analyzeChildren(analyzeFlags, analyzeChild as any, this.analyzeTraitChildren.bind(this, next) as any);\n    } else {\n      trait.analyzeChildren(analyzeFlags, analyzeChild as any, this.analyzeOwnChildren as any);\n    }\n  }\n\n  protected analyzeOwnChildren(analyzeFlags: ModelFlags,\n                               analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      analyzeChild.call(this, child, analyzeFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent analyze pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected analyzeChild(child: Model, analyzeFlags: ModelFlags): void {\n    child.cascadeAnalyze(analyzeFlags);\n  }\n\n  get refreshing(): boolean {\n    return (this.flags & Model.RefreshingFlag) !== 0;\n  }\n\n  protected needsRefresh(refreshFlags: ModelFlags): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      refreshFlags = trait.needsRefresh(refreshFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return refreshFlags;\n  }\n\n  cascadeRefresh(refreshFlags: ModelFlags): void {\n    try {\n      refreshFlags &= ~Model.NeedsRefresh;\n      refreshFlags |= this.flags & Model.UpdateMask;\n      refreshFlags = this.needsRefresh(refreshFlags);\n      if ((refreshFlags & Model.RefreshMask) === 0) {\n        return;\n      }\n      let cascadeFlags = refreshFlags;\n      this.setFlags(this.flags & ~Model.NeedsRefresh | Model.RefreshingFlag);\n      this.willRefresh(cascadeFlags);\n      if (((this.flags | refreshFlags) & Model.NeedsValidate) !== 0) {\n        cascadeFlags |= Model.NeedsValidate;\n        this.setFlags(this.flags & ~Model.NeedsValidate);\n        this.willValidate();\n      }\n      if (((this.flags | refreshFlags) & Model.NeedsReconcile) !== 0) {\n        cascadeFlags |= Model.NeedsReconcile;\n        this.setFlags(this.flags & ~Model.NeedsReconcile);\n        this.willReconcile();\n      }\n\n      this.onRefresh(cascadeFlags);\n      if ((cascadeFlags & Model.NeedsValidate) !== 0) {\n        this.onValidate();\n      }\n      if ((cascadeFlags & Model.NeedsReconcile) !== 0) {\n        this.onReconcile();\n      }\n\n      if ((cascadeFlags & Model.RefreshMask)) {\n        this.refreshChildren(cascadeFlags, this.refreshChild);\n      }\n\n      if ((cascadeFlags & Model.NeedsReconcile) !== 0) {\n        this.didReconcile();\n      }\n      if ((cascadeFlags & Model.NeedsValidate) !== 0) {\n        this.didValidate();\n      }\n      this.didRefresh(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~Model.RefreshingFlag);\n    }\n  }\n\n  protected willRefresh(refreshFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willRefresh(refreshFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onRefresh(refreshFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onRefresh(refreshFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didRefresh(refreshFlags: ModelFlags): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didRefresh(refreshFlags);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected willValidate(): void {\n    this.callObservers(\"modelWillValidate\", this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willValidate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onValidate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onValidate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didValidate(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didValidate();\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidValidate\", this);\n  }\n\n  protected willReconcile(): void {\n    this.callObservers(\"modelWillReconcile\", this);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willReconcile();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onReconcile(): void {\n    this.recohereDownlinks(this.updateTime);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onReconcile();\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didReconcile(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didReconcile();\n      trait = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidReconcile\", this);\n  }\n\n  protected refreshChildren(refreshFlags: ModelFlags, refreshChild: (this: this, child: Model, refreshFlags: ModelFlags) => void): void {\n    const trait = this.firstTrait;\n    if (trait !== null) {\n      this.refreshTraitChildren(trait, refreshFlags, refreshChild);\n    } else {\n      this.refreshOwnChildren(refreshFlags, refreshChild);\n    }\n  }\n\n  protected refreshTraitChildren(trait: Trait, refreshFlags: ModelFlags, refreshChild: (this: this, child: Model, refreshFlags: ModelFlags) => void): void {\n    const next = trait.nextTrait;\n    if (next !== null) {\n      trait.refreshChildren(refreshFlags, refreshChild as any, this.refreshTraitChildren.bind(this, next) as any);\n    } else {\n      trait.refreshChildren(refreshFlags, refreshChild as any, this.refreshOwnChildren as any);\n    }\n  }\n\n  protected refreshOwnChildren(refreshFlags: ModelFlags, refreshChild: (this: this, child: Model, refreshFlags: ModelFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      refreshChild.call(this, child, refreshFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent refresh pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected refreshChild(child: Model, refreshFlags: ModelFlags): void {\n    child.cascadeRefresh(refreshFlags);\n  }\n\n  readonly firstTrait: Trait | null;\n\n  /** @internal */\n  setFirstTrait(firstTrait: Trait | null): void {\n    (this as Mutable<this>).firstTrait = firstTrait;\n  }\n\n  readonly lastTrait: Trait | null;\n\n  /** @internal */\n  setLastTrait(lastTrait: Trait | null): void {\n    (this as Mutable<this>).lastTrait = lastTrait;\n  }\n\n  forEachTrait<T>(callback: (trait: Trait) => T | void): T | undefined;\n  forEachTrait<T, S>(callback: (this: S, trait: Trait) => T | void, thisArg: S): T | undefined;\n  forEachTrait<T, S>(callback: (this: S | undefined, trait: Trait) => T | void, thisArg?: S): T | undefined {\n    let result: T | undefined;\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      const result = callback.call(thisArg, trait);\n      if (result !== void 0) {\n        break;\n      }\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return result;\n  }\n\n  /** @internal */\n  readonly traitMap: Dictionary<Trait> | null;\n\n  /** @internal */\n  protected insertTraitMap(trait: Trait): void {\n    const key = trait.key;\n    if (key !== void 0) {\n      let traitMap = this.traitMap as MutableDictionary<Trait>;\n      if (traitMap === null) {\n        traitMap = {};\n        (this as Mutable<this>).traitMap = traitMap;\n      }\n      traitMap[key] = trait;\n    }\n  }\n\n  /** @internal */\n  protected removeTraitMap(trait: Trait): void {\n    const key = trait.key;\n    if (key === void 0) {\n      return;\n    }\n    const traitMap = this.traitMap as MutableDictionary<Trait>;\n    if (traitMap !== null) {\n      delete traitMap[key];\n    }\n  }\n\n  findTrait<F extends Class<Trait>>(key: string | undefined, traitClass: F | null | undefined): InstanceType<F> | null;\n  findTrait(key: string | undefined, traitClass: Class<Trait> | null | undefined): Trait | null;\n  findTrait(key: string | undefined, traitClass: Class<Trait> | null | undefined): Trait | null {\n    if (key !== void 0) {\n      const traitMap = this.traitMap;\n      if (traitMap !== null) {\n        const trait = traitMap[key];\n        if (trait !== void 0 && (traitClass === void 0 || traitClass === null || trait instanceof traitClass)) {\n          return trait;\n        }\n      }\n    }\n    if (traitClass !== void 0 && traitClass !== null) {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        if (trait instanceof traitClass) {\n          return trait;\n        }\n        trait = (trait as Trait).nextTrait;\n      }\n    }\n    return null;\n  }\n\n  hasTrait(key: string, traitClass?: Class<Trait>): boolean;\n  hasTrait(traitClass: Class<Trait>): boolean;\n  hasTrait(key: string | Class<Trait>, traitClass?: Class<Trait>): boolean {\n    if (typeof key === \"string\") {\n      const traitMap = this.traitMap;\n      if (traitMap !== null) {\n        const trait = traitMap[key];\n        if (trait !== void 0 && (traitClass === void 0 || trait instanceof traitClass)) {\n          return true;\n        }\n      }\n    } else {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        if (trait instanceof key) {\n          return true;\n        }\n        trait = (trait as Trait).nextTrait;\n      }\n    }\n    return false;\n  }\n\n  getTrait<F extends Class<Trait>>(key: string, traitClass: F): InstanceType<F> | null;\n  getTrait(key: string, traitClass?: Class<Trait>): Trait | null;\n  getTrait<F extends Class<Trait>>(traitClass: F): InstanceType<F> | null;\n  getTrait(key: string | Class<Trait>, traitClass?: Class<Trait>): Trait | null {\n    if (typeof key === \"string\") {\n      const traitMap = this.traitMap;\n      if (traitMap !== null) {\n        const trait = traitMap[key];\n        if (trait !== void 0 && (traitClass === void 0 || trait instanceof traitClass)) {\n          return trait;\n        }\n      }\n    } else {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        if (trait instanceof key) {\n          return trait;\n        }\n        trait = (trait as Trait).nextTrait;\n      }\n    }\n    return null;\n  }\n\n  setTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(key: string, newChildFactory: F): Trait | null;\n  setTrait(key: string, newTrait: Trait | LikeType<Trait> | null): Trait | null;\n  setTrait(key: string, newTrait: Trait | LikeType<Trait> | null): Trait | null {\n    if (newTrait !== null) {\n      newTrait = Trait.fromLike(newTrait);\n    }\n    const oldTrait = this.getTrait(key);\n    let target: Trait | null;\n\n    if (oldTrait !== null && newTrait !== null && oldTrait !== newTrait) { // replace\n      newTrait.remove();\n      target = oldTrait.nextTrait;\n\n      this.willRemoveTrait(oldTrait);\n      oldTrait.detachModel(this);\n      this.removeTraitMap(oldTrait);\n      this.onRemoveTrait(oldTrait);\n      this.didRemoveTrait(oldTrait);\n      oldTrait.setKey(void 0);\n\n      newTrait.setFlags(newTrait.flags | Trait.InsertingFlag);\n      newTrait.setKey(oldTrait.key);\n      this.willInsertTrait(newTrait, target);\n      this.insertTraitMap(newTrait);\n      newTrait.attachModel(this, target);\n      this.onInsertTrait(newTrait, target);\n      this.didInsertTrait(newTrait, target);\n      newTrait.setFlags(newTrait.flags & ~Trait.InsertingFlag);\n    } else if (oldTrait !== newTrait || newTrait !== null && newTrait.key !== key) {\n      if (oldTrait !== null) { // remove\n        target = oldTrait.nextTrait;\n        this.willRemoveTrait(oldTrait);\n        oldTrait.detachModel(this);\n        this.removeTraitMap(oldTrait);\n        this.onRemoveTrait(oldTrait);\n        this.didRemoveTrait(oldTrait);\n        oldTrait.setKey(void 0);\n      } else {\n        target = null;\n      }\n\n      if (newTrait !== null) { // insert\n        newTrait.remove();\n\n        newTrait.setFlags(newTrait.flags | Trait.InsertingFlag);\n        newTrait.setKey(key);\n        this.willInsertTrait(newTrait, target);\n        this.insertTraitMap(newTrait);\n        newTrait.attachModel(this, target);\n        this.onInsertTrait(newTrait, target);\n        this.didInsertTrait(newTrait, target);\n        newTrait.setFlags(newTrait.flags & ~Trait.InsertingFlag);\n      }\n    }\n\n    return oldTrait;\n  }\n\n  appendTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, key?: string): InstanceType<F>;\n  appendTrait<T extends Trait>(trait: T | LikeType<T>, key?: string): T;\n  appendTrait(trait: Trait | LikeType<Trait>, key?: string): Trait;\n  appendTrait(trait: Trait | LikeType<Trait>, key?: string): Trait {\n    trait = Trait.fromLike(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    trait.setFlags(trait.flags | Trait.InsertingFlag);\n    trait.setKey(key);\n    this.willInsertTrait(trait, null);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, null);\n    this.onInsertTrait(trait, null);\n    this.didInsertTrait(trait, null);\n    trait.setFlags(trait.flags & ~Trait.InsertingFlag);\n\n    return trait;\n  }\n\n  prependTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, key?: string): InstanceType<F>;\n  prependTrait<T extends Trait>(trait: T | LikeType<T>, key?: string): T;\n  prependTrait(trait: Trait | LikeType<Trait>, key?: string): Trait;\n  prependTrait(trait: Trait | LikeType<Trait>, key?: string): Trait {\n    trait = Trait.fromLike(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n    const target = this.firstTrait;\n\n    trait.setFlags(trait.flags | Trait.InsertingFlag);\n    trait.setKey(key);\n    this.willInsertTrait(trait, target);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, target);\n    this.onInsertTrait(trait, target);\n    this.didInsertTrait(trait, target);\n    trait.setFlags(trait.flags & ~Trait.InsertingFlag);\n\n    return trait;\n  }\n\n  insertTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, target: Trait | null, key?: string): InstanceType<F>;\n  insertTrait<T extends Trait>(trait: T | LikeType<T>, target: Trait | null, key?: string): T;\n  insertTrait(trait: Trait | LikeType<Trait>, target: Trait | null, key?: string): Trait;\n  insertTrait(trait: Trait | LikeType<Trait>, target: Trait | null, key?: string): Trait {\n    if (target !== null && target.model !== this) {\n      throw new Error(\"insert target is not a member trait\");\n    }\n    trait = Trait.fromLike(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    trait.setFlags(trait.flags | Trait.InsertingFlag);\n    trait.setKey(key);\n    this.willInsertTrait(trait, target);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, target);\n    this.onInsertTrait(trait, target);\n    this.didInsertTrait(trait, target);\n    trait.setFlags(trait.flags & ~Trait.InsertingFlag);\n\n    return trait;\n  }\n\n  replaceTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(newChildFactory: F, oldTrait: Trait): Trait;\n  replaceTrait<T extends Trait>(newTrait: Trait | LikeType<Trait>, oldTrait: T): T;\n  replaceTrait(newTrait: Trait | LikeType<Trait>, oldTrait: Trait): Trait;\n  replaceTrait(newTrait: Trait | LikeType<Trait>, oldTrait: Trait): Trait {\n    if (oldTrait.model !== this) {\n      throw new Error(\"replacement target is not a member trait\");\n    }\n    newTrait = Trait.fromLike(newTrait);\n\n    if (oldTrait !== newTrait) {\n      newTrait.remove();\n      const target = oldTrait.nextTrait;\n\n      this.willRemoveTrait(oldTrait);\n      oldTrait.detachModel(this);\n      this.removeTraitMap(oldTrait);\n      this.onRemoveTrait(oldTrait);\n      this.didRemoveTrait(oldTrait);\n      oldTrait.setKey(void 0);\n\n      newTrait.setFlags(newTrait.flags | Trait.InsertingFlag);\n      newTrait.setKey(oldTrait.key);\n      this.willInsertTrait(newTrait, target);\n      this.insertTraitMap(newTrait);\n      newTrait.attachModel(this, target);\n      this.onInsertTrait(newTrait, target);\n      this.didInsertTrait(newTrait, target);\n      newTrait.setFlags(newTrait.flags & ~Trait.InsertingFlag);\n    }\n\n    return oldTrait;\n  }\n\n  get insertTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Model).InsertTraitFlags;\n  }\n\n  protected willInsertTrait(trait: Trait, target: Trait | null): void {\n    this.callObservers(\"modelWillInsertTrait\", trait, target, this);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.willInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onInsertTrait(trait: Trait, target: Trait | null): void {\n    this.requireUpdate(this.insertTraitFlags);\n    this.bindTraitFasteners(trait, target);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.onInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didInsertTrait(trait: Trait, target: Trait | null): void {\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.didInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidInsertTrait\", trait, target, this);\n  }\n\n  removeTrait<T extends Trait>(trait: T): T;\n  removeTrait(key: string | Trait): Trait | null;\n  removeTrait(key: string | Trait): Trait | null {\n    let trait: Trait | null;\n    if (typeof key === \"string\") {\n      trait = this.getTrait(key);\n      if (trait === null) {\n        return null;\n      }\n    } else {\n      trait = key;\n      if (trait.model !== this) {\n        throw new Error(\"not a member trait\");\n      }\n    }\n\n    this.willRemoveTrait(trait);\n    trait.detachModel(this);\n    this.removeTraitMap(trait);\n    this.onRemoveTrait(trait);\n    this.didRemoveTrait(trait);\n    trait.setKey(void 0);\n\n    return trait;\n  }\n\n  get removeTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Model).RemoveTraitFlags;\n  }\n\n  protected willRemoveTrait(trait: Trait): void {\n    this.callObservers(\"modelWillRemoveTrait\", trait, this);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.willRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onRemoveTrait(trait: Trait): void {\n    this.requireUpdate(this.removeTraitFlags);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.onRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    this.unbindTraitFasteners(trait);\n  }\n\n  protected didRemoveTrait(trait: Trait): void {\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.didRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    this.callObservers(\"modelDidRemoveTrait\", trait, this);\n  }\n\n  sortTraits(comparator: Comparator<Trait>): void {\n    let trait = this.firstTrait;\n    if (trait === null) {\n      return;\n    }\n\n    const traits: Trait[] = [];\n    do {\n      traits.push(trait);\n      trait = trait.nextTrait;\n    } while (trait !== null);\n    traits.sort(comparator);\n\n    trait = traits[0]!;\n    this.setFirstTrait(trait);\n    trait.setPreviousTrait(null);\n    for (let i = 1; i < traits.length; i += 1) {\n      const next = traits[i]!;\n      trait.setNextTrait(next);\n      next.setPreviousTrait(trait);\n      trait = next;\n    }\n    trait.setNextTrait(null);\n    this.setLastTrait(trait);\n  }\n\n  /** @internal */\n  protected mountTraits(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.mountTrait();\n      if (next !== null && next.model !== this) {\n        throw new Error(\"inconsistent mount\");\n      }\n      trait = next;\n    }\n  }\n\n  /** @internal */\n  protected unmountTraits(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.unmountTrait();\n      if (next !== null && next.model !== this) {\n        throw new Error(\"inconsistent unmount\");\n      }\n      trait = next;\n    }\n  }\n\n  getAncestorTrait<F extends Class<Trait>>(ancestorType: F): InstanceType<F> | null {\n    let ancestor = this.parent;\n    while (ancestor !== null) {\n      const ancestorTrait = ancestor.getTrait(ancestorType);\n      if (ancestorTrait !== null) {\n        return ancestorTrait;\n      }\n      ancestor = ancestor.parent;\n    }\n    return null;\n  }\n\n  getRootTrait<F extends Class<Trait>>(rootType: F): InstanceType<F> | null {\n    let rootTrait: InstanceType<F> | null = null;\n    let ancestor = this.parent;\n    while (ancestor !== null) {\n      const ancestorTrait = ancestor.getTrait(rootType);\n      if (ancestorTrait !== null) {\n        rootTrait = ancestorTrait;\n      }\n      ancestor = ancestor.parent;\n    }\n    return rootTrait;\n  }\n\n  protected override bindFastener(fastener: Fastener): void {\n    super.bindFastener(fastener);\n    if (fastener instanceof TraitRelation && fastener.binds) {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        const next = trait.nextTrait;\n        fastener.bindTrait(trait, next);\n        trait = next !== null && next.model === this ? next : null;\n      }\n    }\n    if (this.consuming) {\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: Model, target: Model | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.bindModel(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: Model): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.unbindModel(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal */\n  protected bindTraitFasteners(trait: Trait, target: Trait | null): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.bindTraitFastener(fastener, trait, target);\n      }\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFastener(fastener: Fastener, trait: Trait, target: Trait | null): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.bindTrait(trait, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFasteners(trait: Trait): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.unbindTraitFastener(fastener, trait);\n      }\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFastener(fastener: Fastener, trait: Trait): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.unbindTrait(trait);\n    }\n  }\n\n  /** @internal */\n  protected override enqueueFastener(fastener: Fastener): void {\n    super.enqueueFastener(fastener);\n    if (fastener instanceof WarpDownlink) {\n      this.requireUpdate(Model.NeedsReconcile);\n    } else {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n  }\n\n  /** @internal */\n  override recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    } else if (t === void 0) {\n      t = performance.now();\n    }\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (!(fastener instanceof WarpDownlink)) {\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  recohereDownlinks(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    }\n    let coherentDownlinkProps = false;\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (fastener instanceof WarpDownlink) {\n          if (!coherentDownlinkProps) {\n            coherentDownlinkProps = true;\n            this.hostUri.recohere(t);\n            this.nodeUri.recohere(t);\n            this.laneUri.recohere(t);\n          }\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  }\n\n  protected willConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  /** @override */\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  }\n\n  protected willUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  get consuming(): boolean {\n    return (this.flags & Model.ConsumingFlag) !== 0;\n  }\n\n  get startConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Model).StartConsumingFlags;\n  }\n\n  protected startConsuming(): void {\n    if ((this.flags & Model.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | Model.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  }\n\n  protected willStartConsuming(): void {\n    this.callObservers(\"modelWillStartConsuming\", this);\n  }\n\n  protected onStartConsuming(): void {\n    this.requireUpdate(this.startConsumingFlags);\n    this.startConsumingFasteners();\n  }\n\n  protected didStartConsuming(): void {\n    this.callObservers(\"modelDidStartConsuming\", this);\n  }\n\n  get stopConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Model).StopConsumingFlags;\n  }\n\n  protected stopConsuming(): void {\n    if ((this.flags & Model.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~Model.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  }\n\n  protected willStopConsuming(): void {\n    this.callObservers(\"modelWillStopConsuming\", this);\n  }\n\n  protected onStopConsuming(): void {\n    this.requireUpdate(this.stopConsumingFlags);\n    this.stopConsumingFasteners();\n  }\n\n  protected didStopConsuming(): void {\n    this.callObservers(\"modelDidStopConsuming\", this);\n  }\n\n  /** @internal */\n  protected startConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      }\n    }\n  }\n\n  get updateTime(): number {\n    return this.updater.getService().updateTime;\n  }\n\n  @Provider({\n    get serviceType(): typeof RefresherService { // avoid static forward reference\n      return RefresherService;\n    },\n    mountRootService(service: RefresherService): void {\n      super.mountRootService(service);\n      service.roots.addModel(this.owner);\n    },\n    unmountRootService(service: RefresherService): void {\n      super.unmountRootService(service);\n      service.roots.removeModel(this.owner);\n    },\n  })\n  readonly updater!: Provider<this, RefresherService>;\n\n  @Provider({\n    get serviceType(): typeof SelectionService { // avoid static forward reference\n      return SelectionService;\n    },\n  })\n  get selection(): Provider<this, SelectionService> {\n    return Provider.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ModelFlags {\n      return Model.NeedsReconcile;\n    },\n  })\n  get hostUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ModelFlags {\n      return Model.NeedsReconcile;\n    },\n  })\n  get nodeUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ModelFlags {\n      return Model.NeedsReconcile;\n    },\n  })\n  get laneUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  downlink(template?: FastenerTemplate<EventDownlink<WarpRef>>): EventDownlink<WarpRef> {\n    let downlinkClass = EventDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlink\", template) as typeof EventDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkValue<V = Value>(template?: FastenerTemplate<ValueDownlink<WarpRef, V>>): ValueDownlink<WarpRef, V> {\n    let downlinkClass = ValueDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkValue\", template) as typeof ValueDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkList<V = Value>(template?: FastenerTemplate<ListDownlink<WarpRef, V>>): ListDownlink<WarpRef, V> {\n    let downlinkClass = ListDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkList\", template) as typeof ListDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkMap<K = Value, V = Value>(template?: FastenerTemplate<MapDownlink<WarpRef, K, V>>): MapDownlink<WarpRef, K, V> {\n    let downlinkClass = MapDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkMap\", template) as typeof MapDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  command(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(body: ValueLike): void;\n  command(hostUri: UriLike | ValueLike, nodeUri?: UriLike | ValueLike, laneUri?: UriLike | ValueLike, body?: ValueLike): void {\n    if (nodeUri === void 0) {\n      body = Value.fromLike(hostUri as ValueLike);\n      laneUri = this.laneUri.getValue();\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (laneUri === void 0) {\n      body = Value.fromLike(nodeUri as ValueLike);\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (body === void 0) {\n      body = Value.fromLike(laneUri as ValueLike);\n      laneUri = Uri.fromLike(nodeUri as UriLike);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = this.hostUri.value;\n    } else {\n      body = Value.fromLike(body);\n      laneUri = Uri.fromLike(laneUri as UriLike);\n      nodeUri = Uri.fromLike(nodeUri as UriLike);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    if (hostUri === null) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.command(hostUri, nodeUri, laneUri, body);\n  }\n\n  /** @override */\n  authenticate(hostUri: UriLike, credentials: ValueLike): void;\n  /** @override */\n  authenticate(credentials: ValueLike): void;\n  authenticate(hostUri: UriLike | ValueLike, credentials?: ValueLike): void {\n    if (credentials === void 0) {\n      credentials = Value.fromLike(hostUri as ValueLike);\n      hostUri = this.hostUri.getValue();\n    } else {\n      credentials = Value.fromLike(credentials);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.authenticate(hostUri, credentials);\n  }\n\n  /** @override */\n  hostRef(hostUri: UriLike): WarpRef {\n    hostUri = Uri.fromLike(hostUri);\n    const childRef = new Model();\n    childRef.hostUri.set(hostUri);\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  nodeRef(hostUri: UriLike, nodeUri: UriLike): WarpRef;\n  /** @override */\n  nodeRef(nodeUri: UriLike): WarpRef;\n  nodeRef(hostUri: UriLike | undefined, nodeUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Model();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  laneRef(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(laneUri: UriLike): WarpRef;\n  laneRef(hostUri: UriLike | undefined, nodeUri?: UriLike, laneUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = void 0;\n      hostUri = void 0;\n    } else if (laneUri === void 0) {\n      laneUri = Uri.fromLike(nodeUri);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      laneUri = Uri.fromLike(laneUri);\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Model();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    if (laneUri !== void 0) {\n      childRef.laneUri.set(laneUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @internal @override */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): WarpDownlinkModel | null {\n    const warpRef = this.warpRef.value;\n    return warpRef.getDownlink(hostUri, nodeUri, laneUri);\n  }\n\n  /** @internal @override */\n  openDownlink(downlink: WarpDownlinkModel): void {\n    const warpRef = this.warpRef.value;\n    warpRef.openDownlink(downlink);\n  }\n\n  @Property({\n    valueType: WarpRef,\n    inherits: true,\n    get updateFlags(): ModelFlags {\n      return Model.NeedsReconcile;\n    },\n    initValue(): WarpRef {\n      return WarpClient.global();\n    },\n    equalValues(newValue: WarpRef, oldValue: WarpRef): boolean {\n      return newValue === oldValue;\n    },\n  })\n  get warpRef(): Property<this, WarpRef> {\n    return Property.getter();\n  }\n\n  /** @internal */\n  static override uid: () => string = (function () {\n    let nextId = 1;\n    return function uid(): string {\n      const id = ~~nextId;\n      nextId += 1;\n      return \"model\" + id;\n    };\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ModelFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly InsertingFlag: ModelFlags = Component.InsertingFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ModelFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly AnalyzingFlag: ModelFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly RefreshingFlag: ModelFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly ConsumingFlag: ModelFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly UpdatingMask: ModelFlags = this.AnalyzingFlag\n                                           | this.RefreshingFlag;\n  /** @internal */\n  static readonly StatusMask: ModelFlags = this.MountedFlag\n                                         | this.InsertingFlag\n                                         | this.RemovingFlag\n                                         | this.AnalyzingFlag\n                                         | this.RefreshingFlag\n                                         | this.ConsumingFlag;\n\n  static readonly NeedsAnalyze: ModelFlags = 1 << (Component.FlagShift + 3);\n  static readonly NeedsMutate: ModelFlags = 1 << (Component.FlagShift + 4);\n  static readonly NeedsAggregate: ModelFlags = 1 << (Component.FlagShift + 5);\n  static readonly NeedsCorrelate: ModelFlags = 1 << (Component.FlagShift + 6);\n  /** @internal */\n  static readonly AnalyzeMask: ModelFlags = this.NeedsAnalyze\n                                          | this.NeedsMutate\n                                          | this.NeedsAggregate\n                                          | this.NeedsCorrelate;\n\n  static readonly NeedsRefresh: ModelFlags = 1 << (Component.FlagShift + 7);\n  static readonly NeedsValidate: ModelFlags = 1 << (Component.FlagShift + 8);\n  static readonly NeedsReconcile: ModelFlags = 1 << (Component.FlagShift + 9);\n  /** @internal */\n  static readonly RefreshMask: ModelFlags = this.NeedsRefresh\n                                          | this.NeedsValidate\n                                          | this.NeedsReconcile;\n\n  /** @internal */\n  static readonly UpdateMask: ModelFlags = this.AnalyzeMask\n                                         | this.RefreshMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 10;\n  /** @internal */\n  static override readonly FlagMask: ModelFlags = (1 << this.FlagShift) - 1;\n\n  static override readonly MountFlags: ModelFlags = 0;\n  static override readonly InsertChildFlags: ModelFlags = 0;\n  static override readonly RemoveChildFlags: ModelFlags = 0;\n  static override readonly ReinsertChildFlags: ModelFlags = 0;\n  static readonly InsertTraitFlags: ModelFlags = 0;\n  static readonly RemoveTraitFlags: ModelFlags = 0;\n  static readonly StartConsumingFlags: ModelFlags = 0;\n  static readonly StopConsumingFlags: ModelFlags = 0;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {ModelFactory} from \"./Model\";\nimport {Model} from \"./Model\";\nimport {Trait} from \"./\"; // forward import\n\n/** @public */\nexport interface ModelRelationDescriptor<R, M extends Model> extends FastenerDescriptor<R> {\n  extends?: Proto<ModelRelation<any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface ModelRelationClass<F extends ModelRelation<any, any, any> = ModelRelation<any, any, any>> extends FastenerClass<F> {\n  /** @internal */\n  readonly ConsumingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ModelRelation<R = any, M extends Model = Model, I extends any[] = [M | null]> extends Fastener<R, M | null, I>, Consumable {\n  /** @override */\n  get descriptorType(): Proto<ModelRelationDescriptor<R, M>>;\n\n  /** @override */\n  get fastenerType(): Proto<ModelRelation<any, any, any>>;\n\n  get consumed(): boolean;\n\n  get modelType(): ModelFactory<M> | null;\n\n  get observes(): boolean;\n\n  /** @override */\n  get parent(): ModelRelation<any, M, any> | null;\n\n  /** @internal */\n  readonly outlets: ReadonlySet<Fastener<any, any, any>> | null;\n\n  /** @internal @override */\n  attachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @override */\n  detachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @protected */\n  decohereOutlets(): void;\n\n  /** @protected */\n  initModel(model: M): void;\n\n  /** @protected */\n  willAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  onAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  didAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  deinitModel(model: M): void;\n\n  /** @protected */\n  willDetachModel(model: M): void;\n\n  /** @protected */\n  onDetachModel(model: M): void;\n\n  /** @protected */\n  didDetachModel(model: M): void;\n\n  get parentModel(): Model | null;\n\n  /** @protected */\n  insertChild(parent: Model, child: M, target: Model | null, key: string | undefined): void;\n\n  /** @internal */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal */\n  unbindModel(model: Model): void;\n\n  detectModel(model: Model): M | null;\n\n  createModel(): M;\n\n  /** @protected */\n  fromLike(value: M | LikeType<M>): M;\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void\n\n  /** @protected */\n  willConsume(consumer: Consumer): void;\n\n  /** @protected */\n  onConsume(consumer: Consumer): void;\n\n  /** @protected */\n  didConsume(consumer: Consumer): void;\n\n  /** @override */\n  unconsume(consumer: Consumer): void\n\n  /** @protected */\n  willUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  onUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  didUnconsume(consumer: Consumer): void;\n\n  get consuming(): boolean;\n\n  /** @internal */\n  startConsuming(): void;\n\n  /** @protected */\n  willStartConsuming(): void;\n\n  /** @protected */\n  onStartConsuming(): void;\n\n  /** @protected */\n  didStartConsuming(): void;\n\n  /** @internal */\n  stopConsuming(): void;\n\n  /** @protected */\n  willStopConsuming(): void;\n\n  /** @protected */\n  onStopConsuming(): void;\n\n  /** @protected */\n  didStopConsuming(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const ModelRelation = (<R, M extends Model, I extends any[], F extends ModelRelation<any, any, any>>() => Fastener.extend<ModelRelation<R, M, I>, ModelRelationClass<F>>(\"ModelRelation\", {\n  get fastenerType(): Proto<ModelRelation<any, any, any>> {\n    return ModelRelation;\n  },\n\n  consumed: false,\n\n  modelType: null,\n\n  observes: false,\n\n  attachOutlet(outlet: Fastener<any, any, any>): void {\n    let outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      outlets = new Set<Fastener<any, any, any>>();\n      (this as Mutable<typeof this>).outlets = outlets;\n    }\n    outlets.add(outlet);\n  },\n\n  detachOutlet(outlet: Fastener<any, any, any>): void {\n    const outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      return;\n    }\n    outlets.delete(outlet);\n  },\n\n  decohereOutlets(): void {\n    const outlets = this.outlets;\n    if (outlets !== null) {\n      for (const outlet of outlets) {\n        outlet.decohere(this);\n      }\n    }\n  },\n\n  initModel(model: M): void {\n    // hook\n  },\n\n  willAttachModel(model: M, target: Model | null): void {\n    // hook\n  },\n\n  onAttachModel(model: M, target: Model | null): void {\n    if (this.observes) {\n      model.observe(this as Observes<M>);\n    }\n    if ((this.flags & ModelRelation.ConsumingFlag) !== 0) {\n      model.consume(this);\n    }\n  },\n\n  didAttachModel(model: M, target: Model | null): void {\n    // hook\n  },\n\n  deinitModel(model: M): void {\n    // hook\n  },\n\n  willDetachModel(model: M): void {\n    // hook\n  },\n\n  onDetachModel(model: M): void {\n    if ((this.flags & ModelRelation.ConsumingFlag) !== 0) {\n      model.unconsume(this);\n    }\n    if (this.observes) {\n      model.unobserve(this as Observes<M>);\n    }\n  },\n\n  didDetachModel(model: M): void {\n    // hook\n  },\n\n  get parentModel(): Model | null {\n    const owner = this.owner;\n    if (owner instanceof Model) {\n      return owner;\n    } else if (owner instanceof Trait) {\n      return owner.model;\n    }\n    return null;\n  },\n\n  insertChild(parent: Model, child: M, target: Model | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  },\n\n  bindModel(model: Model, target: Model | null): void {\n    // hook\n  },\n\n  unbindModel(model: Model): void {\n    // hook\n  },\n\n  detectModel(model: Model): M | null {\n    return null;\n  },\n\n  createModel(): M {\n    let model: M | undefined;\n    const modelType = this.modelType;\n    if (modelType !== null) {\n      model = modelType.create();\n    }\n    if (model === void 0 || model === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"model\";\n      throw new Error(message);\n    }\n    return model;\n  },\n\n  fromLike(value: M | LikeType<M>): M {\n    const modelType = this.modelType;\n    if (modelType !== null) {\n      return modelType.fromLike(value);\n    }\n    return Model.fromLike(value) as M;\n  },\n\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<typeof this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  },\n\n  willConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  },\n\n  willUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  get consuming(): boolean {\n    return (this.flags & ModelRelation.ConsumingFlag) !== 0;\n  },\n\n  startConsuming(): void {\n    if ((this.flags & ModelRelation.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | ModelRelation.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  },\n\n  willStartConsuming(): void {\n    // hook\n  },\n\n  onStartConsuming(): void {\n    // hook\n  },\n\n  didStartConsuming(): void {\n    // hook\n  },\n\n  stopConsuming(): void {\n    if ((this.flags & ModelRelation.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~ModelRelation.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  },\n\n  willStopConsuming(): void {\n    // hook\n  },\n\n  onStopConsuming(): void {\n    // hook\n  },\n\n  didStopConsuming(): void {\n    // hook\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n  },\n\n  onUnmount(): void {\n    super.onUnmount();\n    this.stopConsuming();\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).outlets = null;\n    (fastener as Mutable<typeof fastener>).consumers = null;\n    return fastener;\n  },\n\n  ConsumingFlag: 1 << (Fastener.FlagShift + 0),\n\n  FlagShift: Fastener.FlagShift + 1,\n  FlagMask: (1 << (Fastener.FlagShift + 1)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {ModelRelationDescriptor} from \"./ModelRelation\";\nimport type {ModelRelationClass} from \"./ModelRelation\";\nimport {ModelRelation} from \"./ModelRelation\";\n\n/** @public */\nexport interface ModelRefDescriptor<R, M extends Model> extends ModelRelationDescriptor<R, M> {\n  extends?: Proto<ModelRef<any, any, any>> | boolean | null;\n  modelKey?: string | boolean;\n}\n\n/** @public */\nexport interface ModelRefClass<F extends ModelRef<any, any, any> = ModelRef<any, any, any>> extends ModelRelationClass<F> {\n  tryModel<R, K extends keyof R, F extends R[K] = R[K]>(owner: R, fastenerName: K): (F extends {readonly model: infer M | null} ? M | null : never) | null;\n}\n\n/** @public */\nexport interface ModelRef<R = any, M extends Model = Model, I extends any[] = [M | null]> extends ModelRelation<R, M, I> {\n  /** @override */\n  get descriptorType(): Proto<ModelRefDescriptor<R, M>>;\n\n  /** @override */\n  get fastenerType(): Proto<ModelRef<any, any, any>>;\n\n  /** @override */\n  get parent(): ModelRef<any, M, any> | null;\n\n  get inletModel(): M | null;\n\n  getInletModel(): M;\n\n  get(): M | null;\n\n  set(model: M | LikeType<M> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(model: M | LikeType<M> | Fastener<any, I[0], any> | null): R;\n\n  get modelKey(): string | undefined;\n\n  readonly model: M | null;\n\n  getModel(): M;\n\n  setModel(model: M | LikeType<M> | null, target?: Model | null, key?: string): M | null;\n\n  attachModel(model?: M | LikeType<M> | null, target?: Model | null): M;\n\n  detachModel(): M | null;\n\n  insertModel(parent?: Model | null, model?: M | LikeType<M>, target?: Model | null, key?: string): M;\n\n  removeModel(): M | null;\n\n  deleteModel(): M | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): M | null;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n}\n\n/** @public */\nexport const ModelRef = (<R, M extends Model, I extends any[], F extends ModelRef<any, any, any>>() => ModelRelation.extend<ModelRef<R, M, I>, ModelRefClass<F>>(\"ModelRef\", {\n  get fastenerType(): Proto<ModelRef<any, any, any>> {\n    return ModelRef;\n  },\n\n  get inletModel(): M | null {\n    const inlet = this.inlet;\n    return inlet instanceof ModelRef ? inlet.model : null;\n  },\n\n  getInletModel(): M {\n    const inletModel = this.inletModel;\n    if (inletModel === void 0 || inletModel === null) {\n      let message = inletModel + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"inlet model\";\n      throw new TypeError(message);\n    }\n    return inletModel;\n  },\n\n  get(): M | null {\n    return this.model;\n  },\n\n  set(model: M | LikeType<M> | Fastener<any, I[0], any> | null): R {\n    if (model instanceof Fastener) {\n      this.bindInlet(model);\n    } else {\n      this.setModel(model);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(model: M | LikeType<M> | Fastener<any, I[0], any> | null): R {\n    if (model instanceof Fastener) {\n      this.bindInlet(model);\n    } else {\n      this.setModel(model);\n    }\n    return this.owner;\n  },\n\n  modelKey: void 0,\n\n  getModel(): M {\n    const model = this.model;\n    if (model === null) {\n      let message = model + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"model\";\n      throw new TypeError(message);\n    }\n    return model;\n  },\n\n  setModel(newModel: M | LikeType<M> | null, target?: Model | null, key?: string): M | null {\n    if (newModel !== null) {\n      newModel = this.fromLike(newModel);\n    }\n    let oldModel = this.model;\n    if (oldModel === newModel) {\n      this.setCoherent(true);\n      return oldModel;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let parent: Model | null;\n    if (this.binds && (parent = this.parentModel, parent !== null)) {\n      if (oldModel !== null && oldModel.parent === parent) {\n        if (target === null) {\n          target = oldModel.nextSibling;\n        }\n        oldModel.remove();\n      }\n      if (newModel !== null) {\n        if (key === void 0) {\n          key = this.modelKey;\n        }\n        this.insertChild(parent, newModel, target, key);\n      }\n      oldModel = this.model;\n      if (oldModel === newModel) {\n        return oldModel;\n      }\n    }\n    if (oldModel !== null) {\n      (this as Mutable<typeof this>).model = null;\n      this.willDetachModel(oldModel);\n      this.onDetachModel(oldModel);\n      this.deinitModel(oldModel);\n      this.didDetachModel(oldModel);\n    }\n    if (newModel !== null) {\n      (this as Mutable<typeof this>).model = newModel;\n      this.willAttachModel(newModel, target);\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldModel;\n  },\n\n  attachModel(newModel?: M | LikeType<M> | null, target?: Model | null): M {\n    const oldModel = this.model;\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromLike(newModel);\n    } else if (oldModel === null) {\n      newModel = this.createModel();\n    } else {\n      newModel = oldModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldModel === newModel) {\n      return newModel;\n    } else if (oldModel !== null) {\n      (this as Mutable<typeof this>).model = null;\n      this.willDetachModel(oldModel);\n      this.onDetachModel(oldModel);\n      this.deinitModel(oldModel);\n      this.didDetachModel(oldModel);\n    }\n    (this as Mutable<typeof this>).model = newModel;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newModel;\n  },\n\n  detachModel(): M | null {\n    const oldModel = this.model;\n    if (oldModel === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).model = null;\n    this.willDetachModel(oldModel);\n    this.onDetachModel(oldModel);\n    this.deinitModel(oldModel);\n    this.didDetachModel(oldModel);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldModel;\n  },\n\n  insertModel(parent?: Model | null, newModel?: M | LikeType<M>, target?: Model | null, key?: string): M {\n    let oldModel = this.model;\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromLike(newModel);\n    } else if (oldModel === null) {\n      newModel = this.createModel();\n    } else {\n      newModel = oldModel;\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && oldModel === newModel && newModel.parent !== null && parent === null && key === void 0) {\n      return newModel;\n    }\n    if (parent === null) {\n      parent = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.modelKey;\n    }\n    if (parent !== null && (newModel.parent !== parent || newModel.key !== key)) {\n      this.insertChild(parent, newModel, target, key);\n    }\n    oldModel = this.model;\n    if (oldModel === newModel) {\n      return newModel;\n    } else if (oldModel !== null) {\n      (this as Mutable<typeof this>).model = null;\n      this.willDetachModel(oldModel);\n      this.onDetachModel(oldModel);\n      this.deinitModel(oldModel);\n      this.didDetachModel(oldModel);\n      if (this.binds && parent !== null && oldModel.parent === parent) {\n        oldModel.remove();\n      }\n    }\n    (this as Mutable<typeof this>).model = newModel;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newModel;\n  },\n\n  removeModel(): M | null {\n    const model = this.model;\n    if (model === null) {\n      return null;\n    }\n    model.remove();\n    return model;\n  },\n\n  deleteModel(): M | null {\n    const model = this.detachModel();\n    if (model === null) {\n      return null;\n    }\n    model.remove();\n    return model;\n  },\n\n  bindModel(model: Model, target: Model | null): void {\n    if (!this.binds || this.model !== null) {\n      return;\n    }\n    const newModel = this.detectModel(model);\n    if (newModel === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).model = newModel;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindModel(model: Model): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldModel = this.detectModel(model);\n    if (oldModel === null || this.model !== oldModel) {\n      return;\n    }\n    (this as Mutable<typeof this>).model = null;\n    this.willDetachModel(oldModel);\n    this.onDetachModel(oldModel);\n    this.deinitModel(oldModel);\n    this.didDetachModel(oldModel);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectModel(model: Model): M | null {\n    const key = this.modelKey;\n    if (key !== void 0 && key === model.key) {\n      return model as M;\n    }\n    return null;\n  },\n\n  onStartConsuming(): void {\n    const model = this.model;\n    if (model !== null) {\n      model.consume(this);\n    }\n  },\n\n  onStopConsuming(): void {\n    const model = this.model;\n    if (model !== null) {\n      model.unconsume(this);\n    }\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ModelRef) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setModel(inlet.model);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n},\n{\n  tryModel<R, K extends keyof R, F extends R[K]>(owner: R, fastenerName: K): (F extends {readonly model: infer M | null} ? M | null : never) | null {\n    const metaclass = FastenerContextMetaclass.get(owner);\n    const modelRef = metaclass !== null ? metaclass.tryFastener(owner, fastenerName) : null;\n    return modelRef instanceof ModelRef ? modelRef.model : null;\n  },\n\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).model = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ModelRef<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const modelKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"modelKey\");\n    if (modelKeyDescriptor !== void 0 && \"value\" in modelKeyDescriptor) {\n      if (modelKeyDescriptor.value === true) {\n        modelKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"modelKey\", modelKeyDescriptor);\n      } else if (modelKeyDescriptor.value === false) {\n        modelKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"modelKey\", modelKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {ModelRelationDescriptor} from \"./ModelRelation\";\nimport type {ModelRelationClass} from \"./ModelRelation\";\nimport {ModelRelation} from \"./ModelRelation\";\n\n/** @public */\nexport interface ModelSetDescriptor<R, M extends Model> extends ModelRelationDescriptor<R, M> {\n  extends?: Proto<ModelSet<any, any, any>> | boolean | null;\n  ordered?: boolean;\n  sorted?: boolean;\n}\n\n/** @public */\nexport interface ModelSetClass<F extends ModelSet<any, any, any> = ModelSet<any, any, any>> extends ModelRelationClass<F> {\n  /** @internal */\n  readonly OrderedFlag: FastenerFlags;\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ModelSet<R = any, M extends Model = Model, I extends any[] = [M | null]> extends ModelRelation<R, M, I> {\n  /** @override */\n  get descriptorType(): Proto<ModelSetDescriptor<R, M>>;\n\n  /** @override */\n  get fastenerType(): Proto<ModelSet<any, any, any>>;\n\n  /** @override */\n  get parent(): ModelSet<any, M, any> | null;\n\n  /** @protected */\n  modelKey(model: M): string | undefined;\n\n  /** @internal */\n  readonly models: {readonly [modelId: string]: M | undefined};\n\n  readonly modelCount: number;\n\n  /** @internal */\n  insertModelMap(newModel: M, target: Model | null): void;\n\n  /** @internal */\n  removeModelMap(oldModel: M): void;\n\n  hasModel(model: Model): boolean;\n\n  addModel(model?: M | LikeType<M>, target?: Model | null, key?: string): M;\n\n  addModels(models: {readonly [modelId: string]: M | undefined}, target?: Model | null): void;\n\n  setModels(models: {readonly [modelId: string]: M | undefined}, target?: Model | null): void;\n\n  attachModel(model?: M | LikeType<M> | null, target?: Model | null): M;\n\n  attachModels(models: {readonly [modelId: string]: M | undefined}, target?: Model | null): void;\n\n  detachModel(model: M): M | null;\n\n  detachModels(models?: {readonly [modelId: string]: M | undefined}): void;\n\n  insertModel(parent?: Model | null, model?: M | LikeType<M>, target?: Model | null, key?: string): M;\n\n  insertModels(parent: Model | null, models: {readonly [modelId: string]: M | undefined}, target?: Model | null): void;\n\n  removeModel(model: M): M | null;\n\n  removeModels(models?: {readonly [modelId: string]: M | undefined}): void;\n\n  deleteModel(model: M): M | null;\n\n  deleteModels(models?: {readonly [modelId: string]: M | undefined}): void;\n\n  reinsertModel(model: M, target?: Model | null): void;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): M | null;\n\n  consumeModels(consumer: Consumer): void;\n\n  unconsumeModels(consumer: Consumer): void;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n\n  get ordered(): boolean;\n\n  order(ordered?: boolean): this;\n\n  get sorted(): boolean;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Model | null): void;\n\n  /** @protected */\n  onSort(parent: Model | null): void;\n\n  /** @protected */\n  didSort(parent: Model | null): void;\n\n  /** @internal */\n  sortChildren(parent: Model, comparator?: Comparator<M>): void;\n\n  /** @internal */\n  getTargetChild(parent: Model, child: M): Model | null;\n\n  /** @internal */\n  compareChildren(a: Model, b: Model): number;\n\n  /** @internal */\n  compareTargetChild(a: Model, b: Model): number;\n\n  /** @protected */\n  compare(a: M, b: M): number;\n}\n\n/** @public */\nexport const ModelSet = (<R, M extends Model, I extends any[], F extends ModelSet<any, any, any>>() => ModelRelation.extend<ModelSet<R, M, I>, ModelSetClass<F>>(\"ModelSet\", {\n  get fastenerType(): Proto<ModelSet<any, any, any>> {\n    return ModelSet;\n  },\n\n  modelKey(model: M): string | undefined {\n    return void 0;\n  },\n\n  insertModelMap(newModel: M, target: Model | null): void {\n    const models = this.models as {[modelId: string]: M | undefined};\n    if (target !== null && (this.flags & ModelSet.OrderedFlag) !== 0) {\n      (this as Mutable<typeof this>).models = Objects.inserted(models, newModel.uid, newModel, target);\n    } else {\n      models[newModel.uid] = newModel;\n    }\n  },\n\n  removeModelMap(oldModel: M): void {\n    const models = this.models as {[modelId: string]: M | undefined};\n    delete models[oldModel.uid];\n  },\n\n  hasModel(model: Model): boolean {\n    return this.models[model.uid] !== void 0;\n  },\n\n  addModel(newModel?: M | LikeType<M>, target?: Model | null, key?: string): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromLike(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: Model | null;\n    if (this.binds && (parent = this.parentModel, parent !== null)) {\n      if (target === null) {\n        if (newModel.parent === parent) {\n          target = newModel.nextSibling;\n        } else {\n          target = this.getTargetChild(parent, newModel);\n        }\n      }\n      if (key === void 0) {\n        key = this.modelKey(newModel);\n      }\n      if (newModel.parent !== parent || newModel.nextSibling !== target || newModel.key !== key) {\n        this.insertChild(parent, newModel, target, key);\n      }\n    }\n    if (this.models[newModel.uid] !== void 0) {\n      return newModel;\n    }\n    this.insertModelMap(newModel, target);\n    (this as Mutable<typeof this>).modelCount += 1;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newModel;\n  },\n\n  addModels(newModels: {readonly [modelId: string]: M | undefined}, target?: Model | null): void {\n    for (const modelId in newModels) {\n      this.addModel(newModels[modelId]!, target);\n    }\n  },\n\n  setModels(newModels: {readonly [modelId: string]: M | undefined}, target?: Model | null): void {\n    const binds = this.binds;\n    const parent = binds ? this.parentModel : null;\n    const models = this.models;\n    for (const modelId in models) {\n      if (newModels[modelId] === void 0) {\n        const oldModel = this.detachModel(models[modelId]!);\n        if (oldModel !== null && binds && parent !== null && oldModel.parent === parent) {\n          oldModel.remove();\n        }\n      }\n    }\n    if ((this.flags & ModelSet.OrderedFlag) !== 0) {\n      const orderedModels = new Array<M>();\n      for (const modeld in newModels) {\n        orderedModels.push(newModels[modeld]!);\n      }\n      for (let i = 0, n = orderedModels.length; i < n; i += 1) {\n        const newModel = orderedModels[i]!;\n        if (models[newModel.uid] === void 0) {\n          const targetModel = i < n + 1 ? orderedModels[i + 1] : target;\n          this.addModel(newModel, targetModel);\n        }\n      }\n    } else {\n      for (const modelId in newModels) {\n        if (models[modelId] === void 0) {\n          this.addModel(newModels[modelId]!, target);\n        }\n      }\n    }\n  },\n\n  attachModel(newModel?: M | LikeType<M> | null, target?: Model | null): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromLike(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    if (this.models[newModel.uid] !== void 0) {\n      return newModel;\n    } else if (target === void 0) {\n      target = null;\n    }\n    this.insertModelMap(newModel, target);\n    (this as Mutable<typeof this>).modelCount += 1;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newModel;\n  },\n\n  attachModels(newModels: {readonly [modelId: string]: M | undefined}, target?: Model | null): void {\n    for (const modelId in newModels) {\n      this.attachModel(newModels[modelId]!, target);\n    }\n  },\n\n  detachModel(oldModel: M): M | null {\n    if (this.models[oldModel.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).modelCount -= 1;\n    this.removeModelMap(oldModel);\n    this.willDetachModel(oldModel);\n    this.onDetachModel(oldModel);\n    this.deinitModel(oldModel);\n    this.didDetachModel(oldModel);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldModel;\n  },\n\n  detachModels(models?: {readonly [modelId: string]: M | undefined}): void {\n    if (models === void 0) {\n      models = this.models;\n    }\n    for (const modelId in models) {\n      this.detachModel(models[modelId]!);\n    }\n  },\n\n  insertModel(parent?: Model | null, newModel?: M | LikeType<M>, target?: Model | null, key?: string): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromLike(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && this.models[newModel.uid] !== void 0 && newModel.parent !== null && parent === null && key === void 0) {\n      return newModel;\n    }\n    if (parent === null) {\n      parent = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.modelKey(newModel);\n    }\n    if (parent !== null && (newModel.parent !== parent || newModel.key !== key)) {\n      if (target === null) {\n        target = this.getTargetChild(parent, newModel);\n      }\n      this.insertChild(parent, newModel, target, key);\n    }\n    if (this.models[newModel.uid] !== void 0) {\n      return newModel;\n    }\n    this.insertModelMap(newModel, target);\n    (this as Mutable<typeof this>).modelCount += 1;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newModel;\n  },\n\n  insertModels(parent: Model | null, newModels: {readonly [modelId: string]: M | undefined}, target?: Model | null): void {\n    for (const modelId in newModels) {\n      this.insertModel(parent, newModels[modelId]!, target);\n    }\n  },\n\n  removeModel(model: M): M | null {\n    if (!this.hasModel(model)) {\n      return model;\n    }\n    model.remove();\n    return model;\n  },\n\n  removeModels(models?: {readonly [modelId: string]: M | undefined}): void {\n    if (models === void 0) {\n      models = this.models;\n    }\n    for (const modelId in models) {\n      this.removeModel(models[modelId]!);\n    }\n  },\n\n  deleteModel(model: M): M | null {\n    const oldModel = this.detachModel(model);\n    if (oldModel === null) {\n      return null;\n    }\n    oldModel.remove();\n    return oldModel;\n  },\n\n  deleteModels(models?: {readonly [modelId: string]: M | undefined}): void {\n    if (models === void 0) {\n      models = this.models;\n    }\n    for (const modelId in models) {\n      this.deleteModel(models[modelId]!);\n    }\n  },\n\n  reinsertModel(model: M, target?: Model | null): void {\n    if (this.models[model.uid] === void 0 || (target === void 0 && (this.flags & ModelSet.SortedFlag) === 0)) {\n      return;\n    }\n    const parent = model.parent;\n    if (parent === null) {\n      return;\n    } else if (target === void 0) {\n      target = this.getTargetChild(parent, model);\n    }\n    parent.reinsertChild(model, target);\n  },\n\n  bindModel(model: Model, target: Model | null): void {\n    if (!this.binds) {\n      return;\n    }\n    const newModel = this.detectModel(model);\n    if (newModel === null || this.models[newModel.uid] !== void 0) {\n      return;\n    }\n    this.insertModelMap(newModel, target);\n    (this as Mutable<typeof this>).modelCount += 1;\n    this.willAttachModel(newModel, target);\n    this.onAttachModel(newModel, target);\n    this.initModel(newModel);\n    this.didAttachModel(newModel, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindModel(model: Model): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldModel = this.detectModel(model);\n    if (oldModel === null || this.models[oldModel.uid] === void 0) {\n      return;\n    }\n    (this as Mutable<typeof this>).modelCount -= 1;\n    this.removeModelMap(oldModel);\n    this.willDetachModel(oldModel);\n    this.onDetachModel(oldModel);\n    this.deinitModel(oldModel);\n    this.didDetachModel(oldModel);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectModel(model: Model): M | null {\n    if (typeof this.modelType === \"function\" && model instanceof this.modelType) {\n      return model as M;\n    }\n    return null;\n  },\n\n  consumeModels(consumer: Consumer): void {\n    const models = this.models;\n    for (const modelId in models) {\n      const model = models[modelId]!;\n      model.consume(consumer);\n    }\n  },\n\n  unconsumeModels(consumer: Consumer): void {\n    const models = this.models;\n    for (const modelId in models) {\n      const model = models[modelId]!;\n      model.unconsume(consumer);\n    }\n  },\n\n  onStartConsuming(): void {\n    this.consumeModels(this);\n  },\n\n  onStopConsuming(): void {\n    this.unconsumeModels(this);\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ModelSet) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setModels(inlet.models);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  get ordered(): boolean {\n    return (this.flags & ModelSet.OrderedFlag) !== 0;\n  },\n\n  order(ordered?: boolean): typeof this {\n    if (ordered === void 0) {\n      ordered = true;\n    }\n    if (ordered) {\n      this.setFlags(this.flags | ModelSet.OrderedFlag);\n    } else {\n      this.setFlags(this.flags & ~ModelSet.OrderedFlag);\n    }\n    return this;\n  },\n\n  get sorted(): boolean {\n    return (this.flags & ModelSet.SortedFlag) !== 0;\n  },\n\n  sort(sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    if (sorted) {\n      const parent = this.parentModel;\n      this.willSort(parent);\n      this.setFlags(this.flags | ModelSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else {\n      this.setFlags(this.flags & ~ModelSet.SortedFlag);\n    }\n    return this;\n  },\n\n  willSort(parent: Model | null): void {\n    // hook\n  },\n\n  onSort(parent: Model | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  },\n\n  didSort(parent: Model | null): void {\n    // hook\n  },\n\n  sortChildren(parent: Model, comparator?: Comparator<M>): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  },\n\n  getTargetChild(parent: Model, child: M): Model | null {\n    if ((this.flags & ModelSet.SortedFlag) !== 0) {\n      return parent.getTargetChild(child, this.compareTargetChild.bind(this));\n    }\n    return null;\n  },\n\n  compareChildren(a: Model, b: Model): number {\n    const models = this.models;\n    const x = models[a.uid];\n    const y = models[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    }\n    return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n  },\n\n  compareTargetChild(a: M, b: Model): number {\n    const models = this.models;\n    const y = models[b.uid];\n    if (y !== void 0) {\n      return this.compare(a, y);\n    }\n    return y !== void 0 ? -1 : 0;\n  },\n\n  compare(a: M, b: M): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).models = {};\n    (fastener as Mutable<typeof fastener>).modelCount = 0;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ModelSet<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    let flagsInit = fastenerPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"ordered\")) {\n      if (fastenerPrototype.ordered) {\n        flagsInit |= ModelSet.OrderedFlag;\n      } else {\n        flagsInit &= ~ModelSet.OrderedFlag;\n      }\n      delete (fastenerPrototype as ModelSetDescriptor<any, any>).ordered;\n    }\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"sorted\")) {\n      if (fastenerPrototype.sorted) {\n        flagsInit |= ModelSet.SortedFlag;\n      } else {\n        flagsInit &= ~ModelSet.SortedFlag;\n      }\n      delete (fastenerPrototype as ModelSetDescriptor<any, any>).sorted;\n    }\n    Object.defineProperty(fastenerPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n  },\n\n  OrderedFlag: 1 << (ModelRelation.FlagShift + 0),\n  SortedFlag: 1 << (ModelRelation.FlagShift + 1),\n\n  FlagShift: ModelRelation.FlagShift + 2,\n  FlagMask: (1 << (ModelRelation.FlagShift + 2)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FromLike} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Observable} from \"@swim/util\";\nimport type {ObserverMethods} from \"@swim/util\";\nimport type {ObserverParameters} from \"@swim/util\";\nimport type {Observer} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport type {FastenerContext} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerTemplate} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport type {ValueLike} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport type {UriLike} from \"@swim/uri\";\nimport {Uri} from \"@swim/uri\";\nimport type {WarpDownlinkModel} from \"@swim/client\";\nimport {WarpDownlink} from \"@swim/client\";\nimport {EventDownlink} from \"@swim/client\";\nimport {ValueDownlink} from \"@swim/client\";\nimport {ListDownlink} from \"@swim/client\";\nimport {MapDownlink} from \"@swim/client\";\nimport {WarpRef} from \"@swim/client\";\nimport {WarpClient} from \"@swim/client\";\nimport type {ModelFlags} from \"./Model\";\nimport {Model} from \"./Model\";\nimport {ModelRelation} from \"./ModelRelation\";\nimport {TraitRelation} from \"./\"; // forward import\n\n/** @public */\nexport type TraitFlags = number;\n\n/** @public */\nexport interface TraitFactory<T extends Trait = Trait> extends Creatable<T>, FromLike<T> {\n}\n\n/** @public */\nexport interface TraitClass<T extends Trait = Trait> extends Function, TraitFactory<T> {\n  readonly prototype: T;\n}\n\n/** @public */\nexport interface TraitConstructor<T extends Trait = Trait> extends TraitClass<T> {\n  new(): T;\n}\n\n/** @public */\nexport interface TraitObserver<T extends Trait = Trait> extends Observer<T> {\n  traitWillAttachModel?(model: Model, trait: T): void;\n\n  traitDidAttachModel?(model: Model, trait: T): void;\n\n  traitWillDetachModel?(model: Model, trait: T): void;\n\n  traitDidDetachModel?(model: Model, trait: T): void;\n\n  traitWillAttachParent?(parent: Model, trait: T): void;\n\n  traitDidAttachParent?(parent: Model, trait: T): void;\n\n  traitWillDetachParent?(parent: Model, trait: T): void;\n\n  traitDidDetachParent?(parent: Model, trait: T): void;\n\n  traitWillInsertChild?(child: Model, target: Model | null, trait: T): void;\n\n  traitDidInsertChild?(child: Model, target: Model | null, trait: T): void;\n\n  traitWillRemoveChild?(child: Model, trait: T): void;\n\n  traitDidRemoveChild?(child: Model, trait: T): void;\n\n  traitWillReinsertChild?(child: Model, target: Model | null, trait: T): void;\n\n  traitDidReinsertChild?(child: Model, target: Model | null, trait: T): void;\n\n  traitWillInsertTrait?(member: Trait, target: Trait | null, trait: T): void;\n\n  traitDidInsertTrait?(member: Trait, target: Trait | null, trait: T): void;\n\n  traitWillRemoveTrait?(member: Trait, trait: T): void;\n\n  traitDidRemoveTrait?(member: Trait, trait: T): void;\n\n  traitWillMount?(trait: T): void;\n\n  traitDidMount?(trait: T): void;\n\n  traitWillUnmount?(trait: T): void;\n\n  traitDidUnmount?(trait: T): void;\n\n  traitWillMutate?(trait: T): void;\n\n  traitDidMutate?(trait: T): void;\n\n  traitWillAggregate?(trait: T): void;\n\n  traitDidAggregate?(trait: T): void;\n\n  traitWillCorrelate?(trait: T): void;\n\n  traitDidCorrelate?(trait: T): void;\n\n  traitWillValidate?(trait: T): void;\n\n  traitDidValidate?(trait: T): void;\n\n  traitWillReconcile?(trait: T): void;\n\n  traitDidReconcile?(trait: T): void;\n\n  traitWillStartConsuming?(trait: T): void;\n\n  traitDidStartConsuming?(trait: T): void;\n\n  traitWillStopConsuming?(trait: T): void;\n\n  traitDidStopConsuming?(trait: T): void;\n}\n\n/** @public */\nexport abstract class Trait implements HashCode, Observable, Consumable, FastenerContext, WarpRef {\n  constructor() {\n    this.uid = (this.constructor as typeof Trait).uid();\n    this.key = void 0;\n    this.flags = 0;\n    this.model = null;\n    this.nextTrait = null;\n    this.previousTrait = null;\n    this.coherentTime = 0;\n    this.decoherent = null;\n    this.recohering = null;\n    this.observers = null;\n    this.consumers = null;\n  }\n\n  declare readonly observerType?: Class<TraitObserver>;\n\n  likeType?(like: {create?(): Trait}): void;\n\n  /** @internal */\n  readonly uid: string;\n\n  readonly key: string | undefined;\n\n  /** @internal */\n  setKey(key: string | undefined): void {\n    (this as Mutable<this>).key = key;\n  }\n\n  /** @internal */\n  readonly flags: TraitFlags;\n\n  setFlags(flags: TraitFlags): void {\n    (this as Mutable<this>).flags = flags;\n  }\n\n  readonly model: Model | null;\n\n  getModel(): Model {\n    const model = this.model;\n    if (model === null) {\n      throw new TypeError(\"no model\");\n    }\n    return model;\n  }\n\n  /** @internal */\n  attachModel(model: Model, nextTrait: Trait | null): void {\n    // assert(this.model === null);\n    this.willAttachModel(model);\n    (this as Mutable<this>).model = model;\n    let previousTrait: Trait | null;\n    if (nextTrait !== null) {\n      previousTrait = nextTrait.previousTrait;\n      this.setNextTrait(nextTrait);\n      nextTrait.setPreviousTrait(this);\n    } else {\n      previousTrait = model.lastTrait;\n      model.setLastTrait(this);\n    }\n    if (previousTrait !== null) {\n      previousTrait.setNextTrait(this);\n      this.setPreviousTrait(previousTrait);\n    } else {\n      model.setFirstTrait(this);\n    }\n    if (model.mounted) {\n      this.mountTrait();\n    }\n    this.onAttachModel(model);\n    this.didAttachModel(model);\n  }\n\n  protected willAttachModel(model: Model): void {\n    this.callObservers(\"traitWillAttachModel\", model, this);\n  }\n\n  protected onAttachModel(model: Model): void {\n    this.bindModelFasteners(model);\n  }\n\n  protected didAttachModel(model: Model): void {\n    this.callObservers(\"traitDidAttachModel\", model, this);\n  }\n\n  /** @internal */\n  detachModel(model: Model): void {\n    // assert(this.model === model);\n    this.willDetachModel(model);\n    if (this.mounted) {\n      this.unmountTrait();\n    }\n    this.onDetachModel(model);\n    const nextTrait = this.nextTrait;\n    const previousTrait = this.previousTrait;\n    if (nextTrait !== null) {\n      this.setNextTrait(null);\n      nextTrait.setPreviousTrait(previousTrait);\n    } else {\n      model.setLastTrait(previousTrait);\n    }\n    if (previousTrait !== null) {\n      previousTrait.setNextTrait(nextTrait);\n      this.setPreviousTrait(null);\n    } else {\n      model.setFirstTrait(nextTrait);\n    }\n    (this as Mutable<this>).model = null;\n    this.didDetachModel(model);\n  }\n\n  protected willDetachModel(model: Model): void {\n    this.callObservers(\"traitWillDetachModel\", model, this);\n  }\n\n  protected onDetachModel(model: Model): void {\n    this.unbindModelFasteners(model);\n  }\n\n  protected didDetachModel(model: Model): void {\n    this.callObservers(\"traitDidDetachModel\", model, this);\n  }\n\n  get modelFlags(): ModelFlags {\n    const model = this.model;\n    return model !== null ? model.flags : 0;\n  }\n\n  setModelFlags(modelFlags: ModelFlags): void {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    model.setFlags(modelFlags);\n  }\n\n  remove(): void {\n    const model = this.model;\n    if (model !== null) {\n      model.removeTrait(this);\n    }\n  }\n\n  get parent(): Model | null {\n    const model = this.model;\n    return model !== null ? model.parent : null;\n  }\n\n  /** @protected */\n  willAttachParent(parent: Model): void {\n    this.callObservers(\"traitWillAttachParent\", parent, this);\n  }\n\n  /** @protected */\n  onAttachParent(parent: Model): void {\n    // hook\n  }\n\n  /** @protected */\n  didAttachParent(parent: Model): void {\n    this.callObservers(\"traitDidAttachParent\", parent, this);\n  }\n\n  /** @protected */\n  willDetachParent(parent: Model): void {\n    this.callObservers(\"traitWillDetachParent\", parent, this);\n  }\n\n  /** @protected */\n  onDetachParent(parent: Model): void {\n    // hook\n  }\n\n  /** @protected */\n  didDetachParent(parent: Model): void {\n    this.callObservers(\"traitDidDetachParent\", parent, this);\n  }\n\n  get nextSibling(): Model | null {\n    const model = this.model;\n    return model !== null ? model.nextSibling : null;\n  }\n\n  get previousSibling(): Model | null {\n    const model = this.model;\n    return model !== null ? model.previousSibling : null;\n  }\n\n  get firstChild(): Model | null {\n    const model = this.model;\n    return model !== null ? model.firstChild : null;\n  }\n\n  get lastChild(): Model | null {\n    const model = this.model;\n    return model !== null ? model.lastChild : null;\n  }\n\n  forEachChild<T>(callback: (child: Model) => T | void): T | undefined;\n  forEachChild<T, S>(callback: (this: S, child: Model) => T | void, thisArg: S): T | undefined;\n  forEachChild<T, S>(callback: (this: S | undefined, child: Model) => T | void, thisArg?: S): T | undefined {\n    const model = this.model;\n    return model !== null ? model.forEachChild(callback, thisArg) : void 0;\n  }\n\n  getChild<F extends Class<Model>>(key: string, childType: F): InstanceType<F> | null;\n  getChild(key: string, childType?: Class<Model>): Model | null;\n  getChild(key: string, childType?: Class<Model>): Model | null {\n    const model = this.model;\n    return model !== null ? model.getChild(key, childType) : null;\n  }\n\n  setChild<F extends Class<Instance<F, Model>> & Creatable<Instance<F, Model>>>(key: string, newChildFactory: F): Model | null;\n  setChild(key: string, newChild: Model | LikeType<Model> | null): Model | null;\n  setChild(key: string, newChild: Model | LikeType<Model> | null): Model | null {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.setChild(key, newChild);\n  }\n\n  appendChild<F extends Class<Instance<F, Model>> & Creatable<Instance<F, Model>>>(childFactory: F, key?: string): InstanceType<F>;\n  appendChild<M extends Model>(child: M | LikeType<M>, key?: string): M;\n  appendChild(child: Model | LikeType<Model>, key?: string): Model;\n  appendChild(child: Model | LikeType<Model>, key?: string): Model {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.appendChild(child, key);\n  }\n\n  prependChild<F extends Class<Instance<F, Model>> & Creatable<Instance<F, Model>>>(childFactory: F, key?: string): InstanceType<F>;\n  prependChild<M extends Model>(child: M | LikeType<M>, key?: string): M;\n  prependChild(child: Model | LikeType<Model>, key?: string): Model;\n  prependChild(child: Model | LikeType<Model>, key?: string): Model {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.prependChild(child, key);\n  }\n\n  insertChild<F extends Class<Instance<F, Model>> & Creatable<Instance<F, Model>>>(childFactory: F, target: Model | null, key?: string): InstanceType<F>;\n  insertChild<M extends Model>(child: M | LikeType<M>, target: Model | null, key?: string): M;\n  insertChild(child: Model | LikeType<Model>, target: Model | null, key?: string): Model;\n  insertChild(child: Model | LikeType<Model>, target: Model | null, key?: string): Model {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.insertChild(child, target, key);\n  }\n\n  reinsertChild(child: Model, target: Model | null): void {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    model.reinsertChild(child, target);\n  }\n\n  replaceChild<M extends Model>(newChild: Model, oldChild: M): M;\n  replaceChild<M extends Model>(newChild: Model | LikeType<Model>, oldChild: M): M;\n  replaceChild(newChild: Model | LikeType<Model>, oldChild: Model): Model;\n  replaceChild(newChild: Model | LikeType<Model>, oldChild: Model): Model {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.replaceChild(newChild, oldChild);\n  }\n\n  get insertChildFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).InsertChildFlags;\n  }\n\n  /** @protected */\n  willInsertChild(child: Model, target: Model | null): void {\n    this.callObservers(\"traitWillInsertChild\", child, target, this);\n  }\n\n  /** @protected */\n  onInsertChild(child: Model, target: Model | null): void {\n    this.requireUpdate(this.insertChildFlags);\n    this.bindChildFasteners(child, target);\n  }\n\n  /** @protected */\n  didInsertChild(child: Model, target: Model | null): void {\n    this.callObservers(\"traitDidInsertChild\", child, target, this);\n  }\n\n  removeChild<M extends Model>(child: M): M | null;\n  removeChild(key: string | Model): Model | null;\n  removeChild(key: string | Model): Model | null {\n    const model = this.model;\n    return model !== null ? model.removeChild(key) : null;\n  }\n\n  get removeChildFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).RemoveChildFlags;\n  }\n\n  /** @protected */\n  willRemoveChild(child: Model): void {\n    this.callObservers(\"traitWillRemoveChild\", child, this);\n    this.requireUpdate(this.removeChildFlags);\n  }\n\n  /** @protected */\n  onRemoveChild(child: Model): void {\n    this.unbindChildFasteners(child);\n  }\n\n  /** @protected */\n  didRemoveChild(child: Model): void {\n    this.callObservers(\"traitDidRemoveChild\", child, this);\n  }\n\n  get reinsertChildFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).ReinsertChildFlags;\n  }\n\n  /** @protected */\n  willReinsertChild(child: Model, target: Model | null): void {\n    this.callObservers(\"traitWillReinsertChild\", child, target, this);\n  }\n\n  /** @protected */\n  onReinsertChild(child: Model, target: Model | null): void {\n    this.requireUpdate(this.reinsertChildFlags);\n  }\n\n  /** @protected */\n  didReinsertChild(child: Model, target: Model | null): void {\n    this.callObservers(\"traitDidReinsertChild\", child, target, this);\n  }\n\n  removeChildren(): void {\n    const model = this.model;\n    if (model !== null) {\n      return model.removeChildren();\n    }\n  }\n\n  sortChildren(comparator: Comparator<Model>): void {\n    const model = this.model;\n    if (model !== null) {\n      return model.sortChildren(comparator);\n    }\n  }\n\n  getTargetChild(child: Model, comparator: Comparator<Model>): Model | null {\n    const model = this.model;\n    return model !== null ? model.getTargetChild(child, comparator) : null;\n  }\n\n  getAncestor<F extends Class<Model>>(ancestorType: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getAncestor(ancestorType) : null;\n  }\n\n  getRoot<F extends Class<Model>>(rootType: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getRoot(rootType) : null;\n  }\n\n  readonly nextTrait: Trait | null;\n\n  /** @internal */\n  setNextTrait(nextTrait: Trait | null): void {\n    (this as Mutable<this>).nextTrait = nextTrait;\n  }\n\n  readonly previousTrait: Trait | null;\n\n  /** @internal */\n  setPreviousTrait(previousTrait: Trait | null): void {\n    (this as Mutable<this>).previousTrait = previousTrait;\n  }\n\n  get firstTrait(): Trait | null {\n    const model = this.model;\n    return model !== null ? model.firstTrait : null;\n  }\n\n  get lastTrait(): Trait | null {\n    const model = this.model;\n    return model !== null ? model.lastTrait : null;\n  }\n\n  forEachTrait<T>(callback: (trait: Trait) => T | void): T | undefined;\n  forEachTrait<T, S>(callback: (this: S, trait: Trait) => T | void, thisArg: S): T | undefined;\n  forEachTrait<T, S>(callback: (this: S | undefined, trait: Trait) => T | void, thisArg?: S): T | undefined {\n    const model = this.model;\n    return model !== null ? model.forEachTrait(callback, thisArg) : void 0;\n  }\n\n  findTrait<F extends Class<Trait>>(key: string | undefined, traitClass: F | null | undefined): InstanceType<F> | null;\n  findTrait(key: string | undefined, traitClass: Class<Trait> | null | undefined): Trait | null;\n  findTrait(key: string | undefined, traitClass: Class<Trait> | null | undefined): Trait | null {\n    const model = this.model;\n    return model !== null ? model.findTrait(key, traitClass) : null;\n  }\n\n  getTrait<F extends Class<Trait>>(key: string, traitClass: F): InstanceType<F> | null;\n  getTrait(key: string, traitClass?: Class<Trait>): Trait | null;\n  getTrait<F extends Class<Trait>>(traitClass: F): InstanceType<F> | null;\n  getTrait(key: string | Class<Trait>, traitClass?: Class<Trait>): Trait | null {\n    const model = this.model;\n    return model !== null ? model.getTrait(key as string, traitClass) : null;\n  }\n\n  setTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(key: string, newChildFactory: F): Trait | null;\n  setTrait(key: string, newTrait: Trait | LikeType<Trait> | null): Trait | null;\n  setTrait(key: string, newTrait: Trait | LikeType<Trait> | null): Trait | null {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.setTrait(key, newTrait);\n  }\n\n  appendTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, key?: string): InstanceType<F>;\n  appendTrait<T extends Trait>(trait: T | LikeType<T>, key?: string): T;\n  appendTrait(trait: Trait | LikeType<Trait>, key?: string): Trait;\n  appendTrait(trait: Trait | LikeType<Trait>, key?: string): Trait {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.appendTrait(trait, key);\n  }\n\n  prependTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, key?: string): InstanceType<F>;\n  prependTrait<T extends Trait>(trait: T | LikeType<T>, key?: string): T;\n  prependTrait(trait: Trait | LikeType<Trait>, key?: string): Trait;\n  prependTrait(trait: Trait | LikeType<Trait>, key?: string): Trait {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.prependTrait(trait, key);\n  }\n\n  insertTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(childFactory: F, target: Trait | null, key?: string): InstanceType<F>;\n  insertTrait<T extends Trait>(trait: T | LikeType<T>, target: Trait | null, key?: string): T;\n  insertTrait(trait: Trait | LikeType<Trait>, target: Trait | null, key?: string): Trait;\n  insertTrait(trait: Trait | LikeType<Trait>, target: Trait | null, key?: string): Trait {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.insertTrait(trait, target, key);\n  }\n\n  replaceTrait<F extends Class<Instance<F, Trait>> & Creatable<Instance<F, Trait>>>(newChildFactory: F, oldTrait: Trait): Trait;\n  replaceTrait<T extends Trait>(newTrait: Trait | LikeType<Trait>, oldTrait: T): T;\n  replaceTrait(newTrait: Trait | LikeType<Trait>, oldTrait: Trait): Trait;\n  replaceTrait(newTrait: Trait | LikeType<Trait>, oldTrait: Trait): Trait {\n    const model = this.model;\n    if (model === null) {\n      throw new Error(\"no model\");\n    }\n    return model.replaceTrait(newTrait, oldTrait);\n  }\n\n  get insertTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).InsertTraitFlags;\n  }\n\n  get inserting(): boolean {\n    return (this.flags & Trait.InsertingFlag) !== 0;\n  }\n\n  /** @protected */\n  willInsertTrait(trait: Trait, target: Trait | null): void {\n    this.callObservers(\"traitWillInsertTrait\", trait, target, this);\n  }\n\n  /** @protected */\n  onInsertTrait(trait: Trait, target: Trait | null): void {\n    this.requireUpdate(this.insertTraitFlags);\n    this.bindTraitFasteners(trait, target);\n  }\n\n  /** @protected */\n  didInsertTrait(trait: Trait, target: Trait | null): void {\n    this.callObservers(\"traitDidInsertTrait\", trait, target, this);\n  }\n\n  removeTrait<T extends Trait>(trait: T): T | null;\n  removeTrait(key: string | Trait): Trait | null;\n  removeTrait(key: string | Trait): Trait | null {\n    const model = this.model;\n    return model !== null ? model.removeTrait(key) : null;\n  }\n\n  get removeTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).RemoveTraitFlags;\n  }\n\n  get removing(): boolean {\n    return (this.flags & Trait.RemovingFlag) !== 0;\n  }\n\n  /** @protected */\n  willRemoveTrait(trait: Trait): void {\n    this.callObservers(\"traitWillRemoveTrait\", trait, this);\n  }\n\n  /** @protected */\n  onRemoveTrait(trait: Trait): void {\n    this.requireUpdate(this.removeTraitFlags);\n    this.unbindTraitFasteners(trait);\n  }\n\n  /** @protected */\n  didRemoveTrait(trait: Trait): void {\n    this.callObservers(\"traitDidRemoveTrait\", trait, this);\n  }\n\n  sortTraits(comparator: Comparator<Trait>): void {\n    const model = this.model;\n    if (model !== null) {\n      model.sortTraits(comparator);\n    }\n  }\n\n  getAncestorTrait<F extends Class<Trait>>(ancestorType: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getAncestorTrait(ancestorType) : null;\n  }\n\n  getRootTrait<F extends Class<Trait>>(rootType: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getRootTrait(rootType) : null;\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get parentType(): typeof Trait {\n      return Trait;\n    },\n    updateFlags: Model.NeedsReconcile,\n  })\n  get hostUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get parentType(): typeof Trait {\n      return Trait;\n    },\n    updateFlags: Model.NeedsReconcile,\n  })\n  get nodeUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get parentType(): typeof Trait {\n      return Trait;\n    },\n    updateFlags: Model.NeedsReconcile,\n  })\n  get laneUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  downlink(template?: FastenerTemplate<EventDownlink<WarpRef>>): EventDownlink<WarpRef> {\n    let downlinkClass = EventDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlink\", template) as typeof EventDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkValue<V = Value>(template?: FastenerTemplate<ValueDownlink<WarpRef, V>>): ValueDownlink<WarpRef, V> {\n    let downlinkClass = ValueDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkValue\", template) as typeof ValueDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkList<V = Value>(template?: FastenerTemplate<ListDownlink<WarpRef, V>>): ListDownlink<WarpRef, V> {\n    let downlinkClass = ListDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkList\", template) as typeof ListDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkMap<K = Value, V = Value>(template?: FastenerTemplate<MapDownlink<WarpRef, K, V>>): MapDownlink<WarpRef, K, V> {\n    let downlinkClass = MapDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkMap\", template) as typeof MapDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  command(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(body: ValueLike): void;\n  command(hostUri: UriLike | ValueLike, nodeUri?: UriLike | ValueLike, laneUri?: UriLike | ValueLike, body?: ValueLike): void {\n    if (nodeUri === void 0) {\n      body = Value.fromLike(hostUri as ValueLike);\n      laneUri = this.laneUri.getValue();\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (laneUri === void 0) {\n      body = Value.fromLike(nodeUri as ValueLike);\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (body === void 0) {\n      body = Value.fromLike(laneUri as ValueLike);\n      laneUri = Uri.fromLike(nodeUri as UriLike);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = this.hostUri.value;\n    } else {\n      body = Value.fromLike(body);\n      laneUri = Uri.fromLike(laneUri as UriLike);\n      nodeUri = Uri.fromLike(nodeUri as UriLike);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    if (hostUri === null) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.command(hostUri, nodeUri, laneUri, body);\n  }\n\n  /** @override */\n  authenticate(hostUri: UriLike, credentials: ValueLike): void;\n  /** @override */\n  authenticate(credentials: ValueLike): void;\n  authenticate(hostUri: UriLike | ValueLike, credentials?: ValueLike): void {\n    if (credentials === void 0) {\n      credentials = Value.fromLike(hostUri as ValueLike);\n      hostUri = this.hostUri.getValue();\n    } else {\n      credentials = Value.fromLike(credentials);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.authenticate(hostUri, credentials);\n  }\n\n  /** @override */\n  hostRef(hostUri: UriLike): WarpRef {\n    hostUri = Uri.fromLike(hostUri);\n    const childRef = new Model();\n    childRef.hostUri.set(hostUri);\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  nodeRef(hostUri: UriLike, nodeUri: UriLike): WarpRef;\n  /** @override */\n  nodeRef(nodeUri: UriLike): WarpRef;\n  nodeRef(hostUri: UriLike | undefined, nodeUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Model();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  laneRef(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(laneUri: UriLike): WarpRef;\n  laneRef(hostUri: UriLike | undefined, nodeUri?: UriLike, laneUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = void 0;\n      hostUri = void 0;\n    } else if (laneUri === void 0) {\n      laneUri = Uri.fromLike(nodeUri);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      laneUri = Uri.fromLike(laneUri);\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Model();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    if (laneUri !== void 0) {\n      childRef.laneUri.set(laneUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @internal @override */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): WarpDownlinkModel | null {\n    const warpRef = this.warpRef.value;\n    return warpRef.getDownlink(hostUri, nodeUri, laneUri);\n  }\n\n  /** @internal @override */\n  openDownlink(downlink: WarpDownlinkModel): void {\n    const warpRef = this.warpRef.value;\n    warpRef.openDownlink(downlink);\n  }\n\n  @Property({\n    valueType: WarpRef,\n    inherits: true,\n    updateFlags: Model.NeedsReconcile,\n    initValue(): WarpRef {\n      return WarpClient.global();\n    },\n    equalValues(newValue: WarpRef, oldValue: WarpRef): boolean {\n      return newValue === oldValue;\n    },\n  })\n  get warpRef(): Property<this, WarpRef> {\n    return Property.getter();\n  }\n\n  get mounted(): boolean {\n    return (this.flags & Trait.MountedFlag) !== 0;\n  }\n\n  get mountFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).MountFlags;\n  }\n\n  /** @internal */\n  mountTrait(): void {\n    if ((this.flags & Trait.MountedFlag) !== 0) {\n      throw new Error(\"already mounted\");\n    }\n    this.setFlags(this.flags | Trait.MountedFlag);\n    this.willMount();\n    this.onMount();\n    this.didMount();\n  }\n\n  protected willMount(): void {\n    this.callObservers(\"traitWillMount\", this);\n  }\n\n  protected onMount(): void {\n    // hook\n  }\n\n  protected didMount(): void {\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n\n    this.mountFasteners();\n\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n\n    this.callObservers(\"traitDidMount\", this);\n  }\n\n  /** @internal */\n  unmountTrait(): void {\n    if ((this.flags & Trait.MountedFlag) === 0) {\n      throw new Error(\"already unmounted\");\n    }\n    this.setFlags(this.flags & ~Trait.MountedFlag);\n    this.willUnmount();\n    this.onUnmount();\n    this.didUnmount();\n  }\n\n  protected willUnmount(): void {\n    this.callObservers(\"traitWillUnmount\", this);\n\n    this.stopConsuming();\n    this.unmountFasteners();\n  }\n\n  protected onUnmount(): void {\n    // hook\n  }\n\n  protected didUnmount(): void {\n    this.callObservers(\"traitDidUnmount\", this);\n  }\n\n  requireUpdate(updateFlags: ModelFlags, immediate: boolean = false): void {\n    const model = this.model;\n    if (model !== null) {\n      model.requireUpdate(updateFlags, immediate);\n    }\n  }\n\n  /** @protected */\n  needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    const model = this.model;\n    if (model === null) {\n      throw new TypeError(\"no model\");\n    }\n    model.requestUpdate(target, updateFlags, immediate);\n  }\n\n  get updating(): boolean {\n    const model = this.model;\n    return model !== null && model.updating;\n  }\n\n  get analyzing(): boolean {\n    const model = this.model;\n    return model !== null && model.analyzing;\n  }\n\n  /** @protected */\n  needsAnalyze(analyzeFlags: ModelFlags): ModelFlags {\n    return analyzeFlags;\n  }\n\n  /** @protected */\n  willAnalyze(analyzeFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  onAnalyze(analyzeFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  didAnalyze(analyzeFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  willMutate(): void {\n    this.callObservers(\"traitWillMutate\", this);\n  }\n\n  /** @protected */\n  onMutate(): void {\n    this.recohereFasteners(this.updateTime);\n  }\n\n  /** @protected */\n  didMutate(): void {\n    this.callObservers(\"traitDidMutate\", this);\n  }\n\n  /** @protected */\n  willAggregate(): void {\n    this.callObservers(\"traitWillAggregate\", this);\n  }\n\n  /** @protected */\n  onAggregate(): void {\n    // hook\n  }\n\n  /** @protected */\n  didAggregate(): void {\n    this.callObservers(\"traitDidAggregate\", this);\n  }\n\n  /** @protected */\n  willCorrelate(): void {\n    this.callObservers(\"traitWillCorrelate\", this);\n  }\n\n  /** @protected */\n  onCorrelate(): void {\n    // hook\n  }\n\n  /** @protected */\n  didCorrelate(): void {\n    this.callObservers(\"traitDidCorrelate\", this);\n  }\n\n  /** @protected */\n  analyzeChildren(analyzeFlags: ModelFlags, analyzeChild: (this: Model, child: Model, analyzeFlags: ModelFlags) => void,\n                  analyzeChildren: (this: Model, analyzeFlags: ModelFlags, analyzeChild: (this: Model, child: Model, analyzeFlags: ModelFlags) => void) => void): void {\n    analyzeChildren.call(this.model!, analyzeFlags, analyzeChild);\n  }\n\n  get refreshing(): boolean {\n    const model = this.model;\n    return model !== null && model.refreshing;\n  }\n\n  /** @protected */\n  needsRefresh(refreshFlags: ModelFlags): ModelFlags {\n    return refreshFlags;\n  }\n\n  /** @protected */\n  willRefresh(refreshFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  onRefresh(refreshFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  didRefresh(refreshFlags: ModelFlags): void {\n    // hook\n  }\n\n  /** @protected */\n  willValidate(): void {\n    this.callObservers(\"traitWillValidate\", this);\n  }\n\n  /** @protected */\n  onValidate(): void {\n    // hook\n  }\n\n  /** @protected */\n  didValidate(): void {\n    this.callObservers(\"traitDidValidate\", this);\n  }\n\n  /** @protected */\n  willReconcile(): void {\n    this.callObservers(\"traitWillReconcile\", this);\n  }\n\n  /** @protected */\n  onReconcile(): void {\n    this.recohereDownlinks(this.updateTime);\n  }\n\n  /** @protected */\n  didReconcile(): void {\n    this.callObservers(\"traitDidReconcile\", this);\n  }\n\n  /** @protected */\n  refreshChildren(refreshFlags: ModelFlags, refreshChild: (this: Model, child: Model, refreshFlags: ModelFlags) => void,\n                  refreshChildren: (this: Model, refreshFlags: ModelFlags, refreshChild: (this: Model, child: Model, refreshFlags: ModelFlags) => void) => void): void {\n    refreshChildren.call(this.model!, refreshFlags, refreshChild);\n  }\n\n  tryFastener<K extends keyof this, F extends this[K] = this[K]>(fastenerName: K): (F extends Fastener<any, any, any> ? F | null : never) | null {\n    const metaclass = FastenerContextMetaclass.get(this);\n    return metaclass !== null ? metaclass.tryFastener(this, fastenerName) : null;\n  }\n\n  getFastener<F extends Fastener>(fastenerName: PropertyKey, fastenerType?: Proto<F>, contextType?: Proto<any> | null): F | null {\n    if (contextType !== void 0 && contextType !== null && !(this instanceof contextType)) {\n      return null;\n    }\n    const fastener = (this as any)[fastenerName] as F | null | undefined;\n    if (fastener === void 0 || (fastenerType !== void 0 && fastenerType !== null && !(fastener instanceof fastenerType))) {\n      return null;\n    }\n    return fastener;\n  }\n\n  /** @override */\n  getParentFastener<F extends Fastener>(fastenerName: string, fastenerType?: Proto<F>, contextType?: Proto<any> | null): F | null {\n    let parent = this.model;\n    if (parent === null) {\n      return null;\n    }\n\n    let fastener: F | null;\n    if (contextType !== void 0 && contextType !== null && (contextType === Trait || contextType.prototype instanceof Trait)) {\n      // Traverse traits attached to ancestor models,\n      // starting with the parent of the model to which this trait is attached.\n      parent = parent.parent;\n      while (parent !== null) {\n        fastener = parent.getTraitFastener(fastenerName, fastenerType, contextType);\n        if (fastener !== null) {\n          return fastener;\n        }\n        parent = parent.parent;\n      }\n      return null;\n    }\n\n    // Traverse ancestor models, starting with the model to which this trait is attached.\n    do {\n      fastener = parent.getFastener(fastenerName, fastenerType, contextType);\n      if (fastener !== null) {\n        return fastener;\n      }\n      parent = parent.parent;\n    } while (parent !== null);\n    return null;\n  }\n\n  /** @override */\n  attachFastener(fastener: Fastener): void {\n    if (this.mounted) {\n      fastener.mount();\n    }\n    this.bindFastener(fastener);\n  }\n\n  /** @internal */\n  protected mountFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        fastener.mount();\n      }\n    }\n  }\n\n  /** @internal */\n  protected unmountFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        fastener.unmount();\n      }\n    }\n  }\n\n  protected bindFastener(fastener: Fastener): void {\n    if ((fastener instanceof ModelRelation || fastener instanceof TraitRelation) && fastener.binds) {\n      this.forEachChild(function (child: Model): void {\n        fastener.bindModel(child, null);\n      }, this);\n    }\n    if (fastener instanceof TraitRelation && fastener.binds) {\n      this.forEachTrait(function (trait: Trait): void {\n        fastener.bindTrait(trait, null);\n      }, this);\n    }\n    if (this.consuming) {\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected bindModelFasteners(model: Model): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    model.forEachChild(function (child: Model): void {\n      for (let i = 0; i < fastenerSlots.length; i += 1) {\n        const fastener = this[fastenerSlots[i]!];\n        if (fastener instanceof Fastener) {\n          this.bindChildFastener(fastener, child, null);\n        }\n      }\n    }, this);\n    model.forEachTrait(function (trait: Trait): void {\n      for (let i = 0; i < fastenerSlots.length; i += 1) {\n        const fastener = this[fastenerSlots[i]!];\n        if (fastener instanceof Fastener) {\n          this.bindTraitFastener(fastener, trait, null);\n        }\n      }\n    }, this);\n  }\n\n  /** @internal */\n  protected unbindModelFasteners(model: Model): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    model.forEachTrait(function (trait: Trait): void {\n      for (let i = 0; i < fastenerSlots.length; i += 1) {\n        const fastener = this[fastenerSlots[i]!];\n        if (fastener instanceof Fastener) {\n          this.unbindTraitFastener(fastener, trait);\n        }\n      }\n    }, this);\n    model.forEachChild(function (child: Model): void {\n      for (let i = 0; i < fastenerSlots.length; i += 1) {\n        const fastener = this[fastenerSlots[i]!];\n        if (fastener instanceof Fastener) {\n          this.unbindChildFastener(fastener, child);\n        }\n      }\n    }, this);\n  }\n\n  /** @internal */\n  protected bindChildFasteners(child: Model, target: Model | null): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.bindChildFastener(fastener, child, target);\n      }\n    }\n  }\n\n  /** @internal */\n  protected bindChildFastener(fastener: Fastener, child: Model, target: Model | null): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.bindModel(child, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindChildFasteners(child: Model): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.unbindChildFastener(fastener, child);\n      }\n    }\n  }\n\n  /** @internal */\n  protected unbindChildFastener(fastener: Fastener, child: Model): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.unbindModel(child);\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFasteners(trait: Trait, target: Trait | null): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.bindTraitFastener(fastener, trait, target);\n      }\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFastener(fastener: Fastener, trait: Trait, target: Trait | null): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.bindTrait(trait, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFasteners(trait: Trait): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof Fastener) {\n        this.unbindTraitFastener(fastener, trait);\n      }\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFastener(fastener: Fastener, trait: Trait): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.unbindTrait(trait);\n    }\n  }\n\n  set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this;\n  set(properties: {[K in keyof this as this[K] extends {set(value: any): any} ? K : never]?: this[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this {\n    for (const key in properties) {\n      const value = properties[key];\n      const property = (this as any)[key] as {set?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.set === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.set(value, timing);\n      } else {\n        property.set(value);\n      }\n    }\n    return this;\n  }\n\n  setIntrinsic<S>(this: S, properties: {[K in keyof S as S[K] extends {setIntrinsic(value: any): any} ? K : never]?: S[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this;\n  setIntrinsic(properties: {[K in keyof this as this[K] extends {setIntrinsic(value: any): any} ? K : never]?: this[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this {\n    for (const key in properties) {\n      const value = properties[key];\n      const property = (this as any)[key] as {setIntrinsic?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.setIntrinsic === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.setIntrinsic(value, timing);\n      } else {\n        property.setIntrinsic(value);\n      }\n    }\n    return this;\n  }\n\n  /** @internal */\n  readonly coherentTime: number;\n\n  /** @internal */\n  readonly decoherent: readonly Fastener[] | null;\n\n  /** @internal */\n  readonly recohering: readonly Fastener[] | null;\n\n  /** @override */\n  decohereFastener(fastener: Fastener): void {\n    const recohering = this.recohering as Fastener[] | null;\n    if (recohering !== null && fastener.coherentTime !== this.coherentTime) {\n      recohering.push(fastener);\n      return;\n    }\n    this.enqueueFastener(fastener);\n  }\n\n  protected enqueueFastener(fastener: Fastener): void {\n    let decoherent = this.decoherent as Fastener[] | null;\n    if (decoherent === null) {\n      decoherent = [];\n      (this as Mutable<this>).decoherent = decoherent;\n    }\n    decoherent.push(fastener);\n    if (fastener instanceof WarpDownlink) {\n      this.requireUpdate(Model.NeedsReconcile);\n    } else {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n  }\n\n  /** @internal */\n  recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    } else if (t === void 0) {\n      t = performance.now();\n    }\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (!(fastener instanceof WarpDownlink)) {\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  recohereDownlinks(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    }\n    let coherentDownlinkProps = false;\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (fastener instanceof WarpDownlink) {\n          if (!coherentDownlinkProps) {\n            coherentDownlinkProps = true;\n            this.hostUri.recohere(t);\n            this.nodeUri.recohere(t);\n            this.laneUri.recohere(t);\n          }\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  readonly observers: ReadonlySet<Observes<this>> | null;\n\n  /** @override */\n  observe(observer: Observes<this>): void {\n    let observers = this.observers as Set<Observes<this>> | null;\n    if (observers === null) {\n      observers = new Set<Observes<this>>();\n      (this as Mutable<this>).observers = observers;\n    } else if (observers.has(observer)) {\n      return;\n    }\n    this.willObserve(observer);\n    observers.add(observer);\n    this.onObserve(observer);\n    this.didObserve(observer);\n  }\n\n  protected willObserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  protected onObserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  protected didObserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  /** @override */\n  unobserve(observer: Observes<this>): void {\n    const observers = this.observers as Set<Observes<this>> | null;\n    if (observers === null || !observers.has(observer)) {\n      return;\n    }\n    this.willUnobserve(observer);\n    observers.delete(observer);\n    this.onUnobserve(observer);\n    this.didUnobserve(observer);\n  }\n\n  protected willUnobserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  protected onUnobserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  protected didUnobserve(observer: Observes<this>): void {\n    // hook\n  }\n\n  callObservers<O, K extends keyof ObserverMethods<O>>(this: {readonly observerType?: Class<O>}, key: K, ...args: ObserverParameters<O, K>): void {\n    const observers = (this as Trait).observers as ReadonlySet<ObserverMethods<O>> | null;\n    if (observers === null) {\n      return;\n    }\n    for (const observer of observers) {\n      const method = observer[key];\n      if (typeof method === \"function\") {\n        method.call(observer, ...args);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  }\n\n  protected willConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  /** @override */\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  }\n\n  protected willUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  get consuming(): boolean {\n    return (this.flags & Trait.ConsumingFlag) !== 0;\n  }\n\n  get startConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).StartConsumingFlags;\n  }\n\n  protected startConsuming(): void {\n    if ((this.flags & Trait.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | Trait.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  }\n\n  protected willStartConsuming(): void {\n    this.callObservers(\"traitWillStartConsuming\", this);\n  }\n\n  protected onStartConsuming(): void {\n    this.requireUpdate(this.startConsumingFlags);\n    this.startConsumingFasteners();\n  }\n\n  protected didStartConsuming(): void {\n    this.callObservers(\"traitDidStartConsuming\", this);\n  }\n\n  get stopConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).StopConsumingFlags;\n  }\n\n  protected stopConsuming(): void {\n    if ((this.flags & Trait.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~Trait.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  }\n\n  protected willStopConsuming(): void {\n    this.callObservers(\"traitWillStopConsuming\", this);\n  }\n\n  protected onStopConsuming(): void {\n    this.requireUpdate(this.stopConsumingFlags);\n    this.stopConsumingFasteners();\n  }\n\n  protected didStopConsuming(): void {\n    this.callObservers(\"traitDidStopConsuming\", this);\n  }\n\n  /** @internal */\n  protected startConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      }\n    }\n  }\n\n  get updateTime(): number {\n    return this.getModel().updateTime;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mixString(0, this.uid));\n  }\n\n  static create<S extends new () => InstanceType<S>>(this: S): InstanceType<S> {\n    return new this();\n  }\n\n  static fromLike<S extends Class<Instance<S, Trait>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof Trait) {\n      if (!((value as Trait) instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    }\n    throw new TypeError(\"\" + this);\n  }\n\n  /** @internal */\n  static uid: () => string = (function () {\n    let nextId = 1;\n    return function uid(): string {\n      const id = ~~nextId;\n      nextId += 1;\n      return \"trait\" + id;\n    };\n  })();\n\n  /** @internal */\n  static readonly MountedFlag: TraitFlags = 1 << 0;\n  /** @internal */\n  static readonly InsertingFlag: TraitFlags = 1 << 1;\n  /** @internal */\n  static readonly RemovingFlag: TraitFlags = 1 << 2;\n  /** @internal */\n  static readonly ConsumingFlag: TraitFlags = 1 << 3;\n\n  /** @internal */\n  static readonly FlagShift: number = 4;\n  /** @internal */\n  static readonly FlagMask: ModelFlags = (1 << this.FlagShift) - 1;\n\n  static readonly MountFlags: ModelFlags = 0;\n  static readonly InsertChildFlags: ModelFlags = 0;\n  static readonly RemoveChildFlags: ModelFlags = 0;\n  static readonly ReinsertChildFlags: ModelFlags = 0;\n  static readonly InsertTraitFlags: ModelFlags = 0;\n  static readonly RemoveTraitFlags: ModelFlags = 0;\n  static readonly StartConsumingFlags: TraitFlags = 0;\n  static readonly StopConsumingFlags: TraitFlags = 0;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Model} from \"./Model\";\nimport type {TraitFactory} from \"./Trait\";\nimport {Trait} from \"./Trait\";\n\n/** @public */\nexport interface TraitRelationDescriptor<R, T extends Trait> extends FastenerDescriptor<R> {\n  extends?: Proto<TraitRelation<any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface TraitRelationClass<F extends TraitRelation<any, any, any> = TraitRelation<any, any, any>> extends FastenerClass<F> {\n  /** @internal */\n  readonly ConsumingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface TraitRelation<R = any, T extends Trait = Trait, I extends any[] = [T | null]> extends Fastener<R, T | null, I>, Consumable {\n  /** @override */\n  get descriptorType(): Proto<TraitRelationDescriptor<R, T>>;\n\n  /** @override */\n  get fastenerType(): Proto<TraitRelation<any, any, any>>;\n\n  get consumed(): boolean;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get observes(): boolean;\n\n  /** @override */\n  get parent(): TraitRelation<any, T, any> | null;\n\n  /** @internal */\n  readonly outlets: ReadonlySet<Fastener<any, any, any>> | null;\n\n  /** @internal @override */\n  attachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @override */\n  detachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @protected */\n  decohereOutlets(): void;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  get parentModel(): Model | null;\n\n  /** @protected */\n  insertChild(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n\n  /** @internal */\n  bindModel(model: Model, targetModel: Model | null): void;\n\n  /** @internal */\n  unbindModel(model: Model): void;\n\n  detectModel(model: Model): T | null;\n\n  /** @internal */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal */\n  unbindTrait(trait: Trait): void;\n\n  detectTrait(trait: Trait): T | null;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromLike(value: T | LikeType<T>): T;\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void\n\n  /** @protected */\n  willConsume(consumer: Consumer): void;\n\n  /** @protected */\n  onConsume(consumer: Consumer): void;\n\n  /** @protected */\n  didConsume(consumer: Consumer): void;\n\n  /** @override */\n  unconsume(consumer: Consumer): void\n\n  /** @protected */\n  willUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  onUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  didUnconsume(consumer: Consumer): void;\n\n  get consuming(): boolean;\n\n  /** @internal */\n  startConsuming(): void;\n\n  /** @protected */\n  willStartConsuming(): void;\n\n  /** @protected */\n  onStartConsuming(): void;\n\n  /** @protected */\n  didStartConsuming(): void;\n\n  /** @internal */\n  stopConsuming(): void;\n\n  /** @protected */\n  willStopConsuming(): void;\n\n  /** @protected */\n  onStopConsuming(): void;\n\n  /** @protected */\n  didStopConsuming(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const TraitRelation = (<R, T extends Trait, I extends any[], F extends TraitRelation<any, any, any>>() => Fastener.extend<TraitRelation<R, T, I>, TraitRelationClass<F>>(\"TraitRelation\", {\n  get fastenerType(): Proto<TraitRelation<any, any, any>> {\n    return TraitRelation;\n  },\n\n  consumed: false,\n\n  traitType: null,\n\n  observes: false,\n\n  attachOutlet(outlet: Fastener<any, any, any>): void {\n    let outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      outlets = new Set<Fastener<any, any, any>>();\n      (this as Mutable<typeof this>).outlets = outlets;\n    }\n    outlets.add(outlet);\n  },\n\n  detachOutlet(outlet: Fastener<any, any, any>): void {\n    const outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      return;\n    }\n    outlets.delete(outlet);\n  },\n\n  decohereOutlets(): void {\n    const outlets = this.outlets;\n    if (outlets !== null) {\n      for (const outlet of outlets) {\n        outlet.decohere(this);\n      }\n    }\n  },\n\n  initTrait(trait: T): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, target: Trait | null): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, target: Trait | null): void {\n    if (this.observes) {\n      trait.observe(this as Observes<T>);\n    }\n    if ((this.flags & TraitRelation.ConsumingFlag) !== 0) {\n      trait.consume(this);\n    }\n  },\n\n  didAttachTrait(trait: T, target: Trait | null): void {\n    // hook\n  },\n\n  deinitTrait(trait: T): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T): void {\n    if ((this.flags & TraitRelation.ConsumingFlag) !== 0) {\n      trait.unconsume(this);\n    }\n    if (this.observes) {\n      trait.unobserve(this as Observes<T>);\n    }\n  },\n\n  didDetachTrait(trait: T): void {\n    // hook\n  },\n\n  get parentModel(): Model | null {\n    const owner = this.owner;\n    if (owner instanceof Model) {\n      return owner;\n    } else if (owner instanceof Trait) {\n      return owner.model;\n    }\n    return null;\n  },\n\n  insertChild(model: Model, trait: T, target: Trait | null, key: string | undefined): void {\n    model.insertTrait(trait, target, key);\n  },\n\n  bindModel(model: Model, targetModel: Model | null): void {\n    // hook\n  },\n\n  unbindModel(model: Model): void {\n    // hook\n  },\n\n  detectModel(model: Model): T | null {\n    return null;\n  },\n\n  bindTrait(trait: Trait, target: Trait | null): void {\n    // hook\n  },\n\n  unbindTrait(trait: Trait): void {\n    // hook\n  },\n\n  detectTrait(trait: Trait): T | null {\n    return null;\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<typeof this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  },\n\n  willConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  },\n\n  willUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  get consuming(): boolean {\n    return (this.flags & TraitRelation.ConsumingFlag) !== 0;\n  },\n\n  startConsuming(): void {\n    if ((this.flags & TraitRelation.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | TraitRelation.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  },\n\n  willStartConsuming(): void {\n    // hook\n  },\n\n  onStartConsuming(): void {\n    // hook\n  },\n\n  didStartConsuming(): void {\n    // hook\n  },\n\n  stopConsuming(): void {\n    if ((this.flags & TraitRelation.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~TraitRelation.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  },\n\n  willStopConsuming(): void {\n    // hook\n  },\n\n  onStopConsuming(): void {\n    // hook\n  },\n\n  didStopConsuming(): void {\n    // hook\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n  },\n\n  onUnmount(): void {\n    super.onUnmount();\n    this.stopConsuming();\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).outlets = null;\n    (fastener as Mutable<typeof fastener>).consumers = null;\n    return fastener;\n  },\n\n  ConsumingFlag: 1 << (Fastener.FlagShift + 0),\n\n  FlagShift: Fastener.FlagShift + 1,\n  FlagMask: (1 << (Fastener.FlagShift + 1)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {Trait} from \"./Trait\";\nimport type {TraitRelationDescriptor} from \"./TraitRelation\";\nimport type {TraitRelationClass} from \"./TraitRelation\";\nimport {TraitRelation} from \"./TraitRelation\";\n\n/** @public */\nexport interface TraitRefDescriptor<R, T extends Trait> extends TraitRelationDescriptor<R, T> {\n  extends?: Proto<TraitRef<any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitRefClass<F extends TraitRef<any, any, any> = TraitRef<any, any, any>> extends TraitRelationClass<F> {\n  tryTrait<R, K extends keyof R, F extends R[K] = R[K]>(owner: R, fastenerName: K): (F extends {readonly trait: infer T | null} ? T | null : never) | null;\n}\n\n/** @public */\nexport interface TraitRef<R = any, T extends Trait = Trait, I extends any[] = [T | null]> extends TraitRelation<R, T, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitRefDescriptor<R, T>>;\n\n  /** @override */\n  get fastenerType(): Proto<TraitRef<any, any, any>>;\n\n  /** @override */\n  get parent(): TraitRef<any, T, any> | null;\n\n  get inletTrait(): T | null;\n\n  getInletTrait(): T;\n\n  get(): T | null;\n\n  set(trait: T | LikeType<T> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(trait: T | LikeType<T> | Fastener<any, I[0], any> | null): R;\n\n  get traitKey(): string | undefined;\n\n  readonly trait: T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: T | LikeType<T> | null, target?: Trait | null, key?: string): T | null;\n\n  attachTrait(trait?: T | LikeType<T> | null, target?: Trait | null): T;\n\n  detachTrait(): T | null;\n\n  insertTrait(model?: Model | null, trait?: T | LikeType<T>, target?: Trait | null, key?: string): T;\n\n  removeTrait(): T | null;\n\n  deleteTrait(): T | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal @override */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal @override */\n  unbindTrait(trait: Trait): void;\n\n  /** @override */\n  detectTrait(trait: Trait): T | null;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n}\n\n/** @public */\nexport const TraitRef = (<R, T extends Trait, I extends any[], F extends TraitRef<any, any, any>>() => TraitRelation.extend<TraitRef<R, T, I>, TraitRefClass<F>>(\"TraitRef\", {\n  get fastenerType(): Proto<TraitRef<any, any, any>> {\n    return TraitRef;\n  },\n\n  get inletTrait(): T | null {\n    const inlet = this.inlet;\n    return inlet instanceof TraitRef ? inlet.trait : null;\n  },\n\n  getInletTrait(): T {\n    const inletTrait = this.inletTrait;\n    if (inletTrait === void 0 || inletTrait === null) {\n      let message = inletTrait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"inlet trait\";\n      throw new TypeError(message);\n    }\n    return inletTrait;\n  },\n\n  get(): T | null {\n    return this.trait;\n  },\n\n  set(trait: T | LikeType<T> | Fastener<any, I[0], any> | null): R {\n    if (trait instanceof Fastener) {\n      this.bindInlet(trait);\n    } else {\n      this.setTrait(trait);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(trait: T | LikeType<T> | Fastener<any, I[0], any> | null): R {\n    if (trait instanceof Fastener) {\n      this.bindInlet(trait);\n    } else {\n      this.setTrait(trait);\n    }\n    return this.owner;\n  },\n\n  traitKey: void 0,\n\n  getTrait(): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  },\n\n  setTrait(newTrait: T | LikeType<T> | null, target?: Trait | null, key?: string): T | null {\n    if (newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    }\n    let oldTrait = this.trait;\n    if (oldTrait === newTrait) {\n      this.setCoherent(true);\n      return oldTrait;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let model: Model | null;\n    if (this.binds && (model = this.parentModel, model !== null)) {\n      if (oldTrait !== null && oldTrait.model === model) {\n        if (target === null) {\n          target = oldTrait.nextTrait;\n        }\n        oldTrait.remove();\n      }\n      if (newTrait !== null) {\n        if (key === void 0) {\n          key = this.traitKey;\n        }\n        this.insertChild(model, newTrait, target, key);\n      }\n      oldTrait = this.trait;\n      if (oldTrait === newTrait) {\n        return oldTrait;\n      }\n    }\n    if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    if (newTrait !== null) {\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.willAttachTrait(newTrait, target);\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldTrait;\n  },\n\n  attachTrait(newTrait?: T | LikeType<T> | null, target?: Trait | null): T {\n    const oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newTrait;\n  },\n\n  detachTrait(): T | null {\n    const oldTrait = this.trait;\n    if (oldTrait === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldTrait;\n  },\n\n  insertTrait(model?: Model | null, newTrait?: T | LikeType<T>, target?: Trait | null, key?: string): T {\n    let oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (model === void 0) {\n      model = null;\n    }\n    if (!this.binds && oldTrait === newTrait && newTrait.model !== null && model === null && key === void 0) {\n      return newTrait;\n    }\n    if (model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.traitKey;\n    }\n    if (model !== null && (newTrait.model !== model || newTrait.key !== key)) {\n      this.insertChild(model, newTrait, target, key);\n    }\n    oldTrait = this.trait;\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n      if (this.binds && model !== null && oldTrait.model === model) {\n        oldTrait.remove();\n      }\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newTrait;\n  },\n\n  removeTrait(): T | null {\n    const trait = this.trait;\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  deleteTrait(): T | null {\n    const trait = this.detachTrait();\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  bindModel(model: Model, target: Model | null): void {\n    if (!this.binds || this.trait !== null) {\n      return;\n    }\n    const newTrait = this.detectModel(model);\n    if (newTrait === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, null);\n    this.onAttachTrait(newTrait, null);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, null);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindModel(model: Model): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldTrait = this.detectModel(model);\n    if (oldTrait === null || this.trait !== oldTrait) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectModel(model: Model): T | null {\n    return null;\n  },\n\n  bindTrait(trait: Trait, target: Trait | null): void {\n    if (!this.binds || this.trait !== null) {\n      return;\n    }\n    const newTrait = this.detectTrait(trait);\n    if (newTrait === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindTrait(trait: Trait): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldTrait = this.detectTrait(trait);\n    if (oldTrait === null || this.trait !== oldTrait) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectTrait(trait: Trait): T | null {\n    const key = this.traitKey;\n    if (key !== void 0 && key === trait.key) {\n      return trait as T;\n    }\n    return null;\n  },\n\n  onStartConsuming(): void {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.consume(this);\n    }\n  },\n\n  onStopConsuming(): void {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.unconsume(this);\n    }\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof TraitRef) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setTrait(inlet.trait);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n},\n{\n  tryTrait<R, K extends keyof R, F extends R[K]>(owner: R, fastenerName: K): (F extends {readonly trait: infer T | null} ? T | null : never) | null {\n    const metaclass = FastenerContextMetaclass.get(owner);\n    const traitRef = metaclass !== null ? metaclass.tryFastener(owner, fastenerName) : null;\n    return traitRef instanceof TraitRef ? traitRef.trait : null;\n  },\n\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).trait = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitRef<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {Trait} from \"./Trait\";\nimport type {TraitRelationDescriptor} from \"./TraitRelation\";\nimport type {TraitRelationClass} from \"./TraitRelation\";\nimport {TraitRelation} from \"./TraitRelation\";\n\n/** @public */\nexport interface TraitSetDescriptor<R, T extends Trait> extends TraitRelationDescriptor<R, T> {\n  extends?: Proto<TraitSet<any, any, any>> | boolean | null;\n  ordered?: boolean;\n  sorted?: boolean;\n}\n\n/** @public */\nexport interface TraitSetClass<F extends TraitSet<any, any, any> = TraitSet<any, any, any>> extends TraitRelationClass<F> {\n  /** @internal */\n  readonly OrderedFlag: FastenerFlags;\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface TraitSet<R = any, T extends Trait = Trait, I extends any[] = [T | null]> extends TraitRelation<R, T, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitSetDescriptor<R, T>>;\n\n  /** @override */\n  get fastenerType(): Proto<TraitSet<any, any, any>>;\n\n  /** @override */\n  get parent(): TraitSet<any, T, any> | null;\n\n  /** @internal */\n  readonly traits: {readonly [traitId: string]: T | undefined};\n\n  readonly traitCount: number;\n\n  /** @internal */\n  insertTraitMap(newTrait: T, target: Trait | null): void;\n\n  /** @internal */\n  removeTraitMap(oldTrait: T): void;\n\n  hasTrait(trait: Trait): boolean;\n\n  addTrait(trait?: T | LikeType<T>, target?: Trait | null, key?: string): T;\n\n  addTraits(traits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void;\n\n  setTraits(traits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void;\n\n  attachTrait(trait?: T | LikeType<T> | null, target?: Trait | null): T;\n\n  attachTraits(traits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void;\n\n  detachTrait(trait: T): T | null;\n\n  detachTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  insertTrait(model?: Model | null, trait?: T | LikeType<T>, target?: Trait | null, key?: string): T;\n\n  insertTraits(model: Model | null, traits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void;\n\n  removeTrait(trait: T): T | null;\n\n  removeTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  deleteTrait(trait: T): T | null;\n\n  deleteTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  reinsertTrait(trait: T, target?: Trait | null): void;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal @override */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal @override */\n  unbindTrait(trait: Trait): void;\n\n  /** @override */\n  detectTrait(trait: Trait): T | null;\n\n  consumeTraits(consumer: Consumer): void;\n\n  unconsumeTraits(consumer: Consumer): void;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n\n  /** @protected */\n  traitKey(trait: T): string | undefined;\n\n  get ordered(): boolean;\n\n  order(ordered?: boolean): this;\n\n  get sorted(): boolean;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Model | null): void;\n\n  /** @protected */\n  onSort(parent: Model | null): void;\n\n  /** @protected */\n  didSort(parent: Model | null): void;\n\n  /** @internal */\n  sortChildren(parent: Model, comparator?: Comparator<T>): void;\n\n  /** @internal */\n  getTargetChild(parent: Model, child: T): Trait | null;\n\n  /** @internal */\n  compareChildren(a: Model, b: Model): number;\n\n  /** @internal */\n  compareTargetChild(a: Model, b: Model): number;\n\n  /** @protected */\n  compare(a: T, b: T): number;\n}\n\n/** @public */\nexport const TraitSet = (<R, T extends Trait, I extends any[], F extends TraitSet<any, any, any>>() => TraitRelation.extend<TraitSet<R, T, I>, TraitSetClass<F>>(\"TraitSet\", {\n  get fastenerType(): Proto<TraitSet<any, any, any>> {\n    return TraitSet;\n  },\n\n  traitKey(trait: T): string | undefined {\n    return void 0;\n  },\n\n  insertTraitMap(newTrait: T, target: Trait | null): void {\n    const traits = this.traits as {[traitId: string]: T | undefined};\n    if (target !== null && (this.flags & TraitSet.OrderedFlag) !== 0) {\n      (this as Mutable<typeof this>).traits = Objects.inserted(traits, newTrait.uid, newTrait, target);\n    } else {\n      traits[newTrait.uid] = newTrait;\n    }\n  },\n\n  removeTraitMap(oldTrait: T): void {\n    const traits = this.traits as {[traitId: string]: T | undefined};\n    delete traits[oldTrait.uid];\n  },\n\n  hasTrait(trait: Trait): boolean {\n    return this.traits[trait.uid] !== void 0;\n  },\n\n  addTrait(newTrait?: T | LikeType<T>, target?: Trait | null, key?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let model: Model | null;\n    if (this.binds && (model = this.parentModel, model !== null)) {\n      if (target === null) {\n        if (newTrait.model === model) {\n          target = newTrait.nextTrait;\n        } else {\n          target = this.getTargetChild(model, newTrait);\n        }\n      }\n      if (key === void 0) {\n        key = this.traitKey(newTrait);\n      }\n      if (newTrait.model !== model || newTrait.nextTrait !== target || newTrait.key !== key) {\n        this.insertChild(model, newTrait, target, key);\n      }\n    }\n    if (this.traits[newTrait.uid] !== void 0) {\n      return newTrait;\n    }\n    this.insertTraitMap(newTrait, target);\n    (this as Mutable<typeof this>).traitCount += 1;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newTrait;\n  },\n\n  addTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.addTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  setTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    const binds = this.binds;\n    const model = binds ? this.parentModel : null;\n    const traits = this.traits;\n    for (const traitId in traits) {\n      if (newTraits[traitId] === void 0) {\n        const oldTrait = this.detachTrait(traits[traitId]!);\n        if (oldTrait !== null && binds && model !== null && oldTrait.model === model) {\n          oldTrait.remove();\n        }\n      }\n    }\n    if ((this.flags & TraitSet.OrderedFlag) !== 0) {\n      const orderedTraits = new Array<T>();\n      for (const traitId in newTraits) {\n        orderedTraits.push(newTraits[traitId]!);\n      }\n      for (let i = 0, n = orderedTraits.length; i < n; i += 1) {\n        const newTrait = orderedTraits[i]!;\n        if (traits[newTrait.uid] === void 0) {\n          const targetTrait = i < n + 1 ? orderedTraits[i + 1] : target;\n          this.addTrait(newTrait, targetTrait);\n        }\n      }\n    } else {\n      for (const traitId in newTraits) {\n        if (traits[traitId] === void 0) {\n          this.addTrait(newTraits[traitId]!, target);\n        }\n      }\n    }\n  },\n\n  attachTrait(newTrait?: T | LikeType<T> | null, target?: Trait | null): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    if (this.traits[newTrait.uid] !== void 0) {\n      return newTrait;\n    } else if (target === void 0) {\n      target = null;\n    }\n    this.insertTraitMap(newTrait, target);\n    (this as Mutable<typeof this>).traitCount += 1;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newTrait;\n  },\n\n  attachTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.attachTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  detachTrait(oldTrait: T): T | null {\n    if (this.traits[oldTrait.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).traitCount -= 1;\n    this.removeTraitMap(oldTrait);\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldTrait;\n  },\n\n  detachTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.detachTrait(traits[traitId]!);\n    }\n  },\n\n  insertTrait(model?: Model | null, newTrait?: T | LikeType<T>, target?: Trait | null, key?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    if (model === void 0) {\n      model = null;\n    }\n    if (!this.binds && this.traits[newTrait.uid] !== void 0 && newTrait.model !== null && model === null && key === void 0) {\n      return newTrait;\n    }\n    if (model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.traitKey(newTrait);\n    }\n    if (model !== null && (newTrait.model !== model || newTrait.key !== key)) {\n      if (target === null) {\n        target = this.getTargetChild(model, newTrait);\n      }\n      this.insertChild(model, newTrait, target, key);\n    }\n    if (this.traits[newTrait.uid] !== void 0) {\n      return newTrait;\n    }\n    this.insertTraitMap(newTrait, target);\n    (this as Mutable<typeof this>).traitCount += 1;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newTrait;\n  },\n\n  insertTraits(model: Model | null, newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.insertTrait(model, newTraits[traitId]!, target);\n    }\n  },\n\n  removeTrait(trait: T): T | null {\n    if (!this.hasTrait(trait)) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  removeTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.removeTrait(traits[traitId]!);\n    }\n  },\n\n  deleteTrait(trait: T): T | null {\n    const oldTrait = this.detachTrait(trait);\n    if (oldTrait === null) {\n      return null;\n    }\n    oldTrait.remove();\n    return oldTrait;\n  },\n\n  deleteTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.deleteTrait(traits[traitId]!);\n    }\n  },\n\n  reinsertTrait(trait: T, target?: Trait | null): void {\n    if (this.traits[trait.uid] === void 0 || (target === void 0 && (this.flags & TraitSet.SortedFlag) === 0)) {\n      return;\n    }\n    const model = trait.model;\n    if (model === null) {\n      return;\n    }\n    const parent = trait.parent;\n    if (parent === null) {\n      return;\n    } else if (target === void 0) {\n      target = this.getTargetChild(parent, trait);\n    }\n    parent.reinsertChild(model, target !== null ? target.model : null);\n  },\n\n  bindModel(model: Model, target: Model | null): void {\n    if (!this.binds) {\n      return;\n    }\n    const newTrait = this.detectModel(model);\n    if (newTrait === null || this.traits[newTrait.uid] !== void 0) {\n      return;\n    }\n    this.insertTraitMap(newTrait, null);\n    (this as Mutable<typeof this>).traitCount += 1;\n    this.willAttachTrait(newTrait, null);\n    this.onAttachTrait(newTrait, null);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, null);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindModel(model: Model): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldTrait = this.detectModel(model);\n    if (oldTrait === null || this.traits[oldTrait.uid] === void 0) {\n      return;\n    }\n    (this as Mutable<typeof this>).traitCount -= 1;\n    this.removeTraitMap(oldTrait);\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectModel(model: Model): T | null {\n    return null;\n  },\n\n  bindTrait(trait: Trait, target: Trait | null): void {\n    if (!this.binds) {\n      return;\n    }\n    const newTrait = this.detectTrait(trait);\n    if (newTrait === null || this.traits[newTrait.uid] !== void 0) {\n      return;\n    }\n    this.insertTraitMap(newTrait, target);\n    (this as Mutable<typeof this>).traitCount += 1;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindTrait(trait: Trait): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldTrait = this.detectTrait(trait);\n    if (oldTrait === null || this.traits[oldTrait.uid] === void 0) {\n      return;\n    }\n    (this as Mutable<typeof this>).traitCount -= 1;\n    this.removeTraitMap(oldTrait);\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectTrait(trait: Trait): T | null {\n    if (typeof this.traitType === \"function\" && trait instanceof this.traitType) {\n      return trait as T;\n    }\n    return null;\n  },\n\n  consumeTraits(consumer: Consumer): void {\n    const traits = this.traits;\n    for (const traitId in traits) {\n      const trait = traits[traitId]!;\n      trait.consume(consumer);\n    }\n  },\n\n  unconsumeTraits(consumer: Consumer): void {\n    const traits = this.traits;\n    for (const traitId in traits) {\n      const trait = traits[traitId]!;\n      trait.unconsume(consumer);\n    }\n  },\n\n  onStartConsuming(): void {\n    this.consumeTraits(this);\n  },\n\n  onStopConsuming(): void {\n    this.unconsumeTraits(this);\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof TraitSet) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setTraits(inlet.traits);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  get ordered(): boolean {\n    return (this.flags & TraitSet.OrderedFlag) !== 0;\n  },\n\n  order(ordered?: boolean): typeof this {\n    if (ordered === void 0) {\n      ordered = true;\n    }\n    if (ordered) {\n      this.setFlags(this.flags | TraitSet.OrderedFlag);\n    } else {\n      this.setFlags(this.flags & ~TraitSet.OrderedFlag);\n    }\n    return this;\n  },\n\n  get sorted(): boolean {\n    return (this.flags & TraitSet.SortedFlag) !== 0;\n  },\n\n  sort(sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    if (sorted) {\n      const parent = this.parentModel;\n      this.willSort(parent);\n      this.setFlags(this.flags | TraitSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else {\n      this.setFlags(this.flags & ~TraitSet.SortedFlag);\n    }\n    return this;\n  },\n\n  willSort(parent: Model | null): void {\n    // hook\n  },\n\n  onSort(parent: Model | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  },\n\n  didSort(parent: Model | null): void {\n    // hook\n  },\n\n  sortChildren(parent: Model, comparator?: Comparator<T>): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  },\n\n  getTargetChild(parent: Model, child: T): Trait | null {\n    if ((this.flags & TraitSet.SortedFlag) !== 0 && child.model !== null) {\n      const targetModel = parent.getTargetChild(child.model, this.compareTargetChild.bind(this));\n      if (targetModel !== null) {\n        return this.detectModel(targetModel);\n      }\n    }\n    return null;\n  },\n\n  compareChildren(a: Model, b: Model): number {\n    const traits = this.traits;\n    const p = this.detectModel(a);\n    const q = this.detectModel(b);\n    const x = p !== null ? traits[p.uid] : void 0;\n    const y = q !== null ? traits[q.uid] : void 0;\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    }\n    return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n  },\n\n  compareTargetChild(a: Model, b: Model): number {\n    const traits = this.traits;\n    const p = this.detectModel(a);\n    const q = this.detectModel(b);\n    const x = p !== null ? p : void 0;\n    const y = q !== null ? traits[q.uid] : void 0;\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    }\n    return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n  },\n\n  compare(a: T, b: T): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traits = {};\n    (fastener as Mutable<typeof fastener>).traitCount = 0;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitSet<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    let flagsInit = fastenerPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"ordered\")) {\n      if (fastenerPrototype.ordered) {\n        flagsInit |= TraitSet.OrderedFlag;\n      } else {\n        flagsInit &= ~TraitSet.OrderedFlag;\n      }\n      delete (fastenerPrototype as TraitSetDescriptor<any, any>).ordered;\n    }\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"sorted\")) {\n      if (fastenerPrototype.sorted) {\n        flagsInit |= TraitSet.SortedFlag;\n      } else {\n        flagsInit &= ~TraitSet.SortedFlag;\n      }\n      delete (fastenerPrototype as TraitSetDescriptor<any, any>).sorted;\n    }\n    Object.defineProperty(fastenerPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n  },\n\n  OrderedFlag: 1 << (TraitRelation.FlagShift + 0),\n  SortedFlag: 1 << (TraitRelation.FlagShift + 1),\n\n  FlagShift: TraitRelation.FlagShift + 2,\n  FlagMask: (1 << (TraitRelation.FlagShift + 2)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Fastener} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {ModelRefDescriptor} from \"./ModelRef\";\nimport type {ModelRefClass} from \"./ModelRef\";\nimport {ModelRef} from \"./ModelRef\";\nimport type {TraitFactory} from \"./Trait\";\nimport {Trait} from \"./Trait\";\n\n/** @public */\nexport interface TraitModelRefDescriptor<R, T extends Trait, M extends Model> extends ModelRefDescriptor<R, M> {\n  extends?: Proto<TraitModelRef<any, any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitModelRefClass<F extends TraitModelRef<any, any, any, any> = TraitModelRef<any, any, any, any>> extends ModelRefClass<F> {\n}\n\n/** @public */\nexport interface TraitModelRef<R = any, T extends Trait = Trait, M extends Model = Model, I extends any[] = [M | null]> extends ModelRef<R, M, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitModelRefDescriptor<R, T, M>>;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get traitKey(): string | undefined;\n\n  get observesTrait(): boolean;\n\n  /** @override */\n  set(traitOrModel: T | M | LikeType<M> | Fastener<any, I[0], any> | null): R;\n\n  /** @override */\n  setIntrinsic(traitOrModel: T | M | LikeType<M> | Fastener<any, I[0], any> | null): R;\n\n  readonly trait: T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: T | LikeType<T> | null, targetTrait?: Trait | null, modelKey?: string): T | null;\n\n  attachTrait(trait?: T | LikeType<T> | null, targetTrait?: Trait | null): T;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetTrait: Trait | null): void;\n\n  detachTrait(): T | null;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  insertTrait(model?: M | null, trait?: T | LikeType<T>, targetTrait?: Trait | null, modelKey?: string): T;\n\n  removeTrait(): T | null;\n\n  deleteTrait(): T | null;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  /** @protected */\n  detectModelTrait(model: Model): T | null;\n\n  /** @protected */\n  insertModelTrait(model: M, trait: T | null, targetTrait: Trait | null, traitKey: string | undefined): void;\n\n  /** @protected @override */\n  onAttachModel(model: M, targetModel: Model | null): void;\n\n  /** @protected @override */\n  onDetachModel(model: M): void;\n\n  /** @override */\n  createModel(trait?: T): M;\n}\n\n/** @public */\nexport const TraitModelRef = (<R, T extends Trait, M extends Model, I extends any[], F extends TraitModelRef<any, any, any, any>>() => ModelRef.extend<TraitModelRef<R, T, M, I>, TraitModelRefClass<F>>(\"TraitModelRef\", {\n  set(traitOrModel: T | M | LikeType<M> | Fastener<any, I[0], any> | null): R {\n    if (traitOrModel instanceof Fastener) {\n      this.bindInlet(traitOrModel);\n    } else if (traitOrModel instanceof Trait) {\n      this.setTrait(traitOrModel);\n    } else {\n      this.setModel(traitOrModel);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(traitOrModel: T | M | LikeType<M> | Fastener<any, I[0], any> | null): R {\n    if (traitOrModel instanceof Fastener) {\n      this.bindInlet(traitOrModel);\n    } else if (traitOrModel instanceof Trait) {\n      this.setTrait(traitOrModel);\n    } else {\n      this.setModel(traitOrModel);\n    }\n    return this.owner;\n  },\n\n  traitType: null,\n\n  traitKey: void 0,\n\n  observesTrait: false,\n\n  getTrait(): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  },\n\n  setTrait(newTrait: T | LikeType<T> | null, targetTrait?: Trait | null, modelKey?: string): T | null {\n    if (newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    }\n    let oldTrait = this.trait;\n    if (oldTrait === newTrait) {\n      return oldTrait;\n    } else if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    let model = this.model;\n    if (model === null && newTrait !== null) {\n      model = this.createModel(newTrait);\n      const targetModel = targetTrait !== null ? targetTrait.model : null;\n      this.setModel(model, targetModel, modelKey);\n    }\n    if (model !== null) {\n      if (oldTrait !== null && oldTrait.model === model) {\n        if (targetTrait === null) {\n          targetTrait = oldTrait.nextTrait;\n        }\n        oldTrait.remove();\n      }\n      if (newTrait !== null) {\n        this.insertModelTrait(model, newTrait, targetTrait, this.traitKey);\n      }\n      oldTrait = this.trait;\n      if (oldTrait === newTrait) {\n        return oldTrait;\n      }\n    }\n    if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    if (newTrait !== null) {\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.willAttachTrait(newTrait, targetTrait);\n      this.onAttachTrait(newTrait, targetTrait);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, targetTrait);\n    }\n    return oldTrait;\n  },\n\n  attachTrait(newTrait?: T | LikeType<T> | null, targetTrait?: Trait | null): T {\n    let oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    let model = this.model;\n    if (model === null) {\n      model = this.createModel(newTrait);\n      const targetModel = targetTrait !== null ? targetTrait.model : null;\n      this.attachModel(model, targetModel);\n      oldTrait = this.trait;\n    }\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, targetTrait);\n    this.onAttachTrait(newTrait, targetTrait);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, targetTrait);\n    return newTrait;\n  },\n\n  initTrait(trait: T): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetTrait: Trait | null): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetTrait: Trait | null): void {\n    if (this.observesTrait) {\n      trait.observe(this as Observes<T>);\n    }\n  },\n\n  didAttachTrait(trait: T, targetTrait: Trait | null): void {\n    // hook\n  },\n\n  detachTrait(): T | null {\n    const oldTrait = this.trait;\n    if (oldTrait === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    return oldTrait;\n  },\n\n  deinitTrait(trait: T): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T): void {\n    if (this.observesTrait) {\n      trait.unobserve(this as Observes<T>);\n    }\n  },\n\n  didDetachTrait(trait: T): void {\n    // hook\n  },\n\n  insertTrait(model?: M | null, newTrait?: T | LikeType<T>, targetTrait?: Trait | null, modelKey?: string): T {\n    let oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (model === void 0) {\n      model = null;\n    }\n    if (oldTrait === newTrait && newTrait.model !== null && model === null) {\n      return newTrait;\n    }\n    if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    if (model === null) {\n      model = this.createModel(newTrait);\n      const targetModel = targetTrait !== null ? targetTrait.model : null;\n      this.insertModel(null, model, targetModel, modelKey);\n    }\n    if (model !== null && newTrait.model !== model) {\n      this.insertModelTrait(model, newTrait, targetTrait, this.traitKey);\n    }\n    oldTrait = this.trait;\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n      oldTrait.remove();\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, targetTrait);\n    this.onAttachTrait(newTrait, targetTrait);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, targetTrait);\n    return newTrait;\n  },\n\n  removeTrait(): T | null {\n    const trait = this.trait;\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  deleteTrait(): T | null {\n    const trait = this.detachTrait();\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  detectModelTrait(model: Model): T | null {\n    return model.findTrait(this.traitKey, this.traitType as unknown as Class<T>);\n  },\n\n  insertModelTrait(model: M, trait: T, targetTrait: Trait | null, traitKey: string | undefined): void {\n    model.insertTrait(trait, targetTrait, traitKey);\n  },\n\n  onAttachModel(model: M, targetModel: Model | null): void {\n    const trait = this.detectModelTrait(model);\n    if (trait !== null) {\n      const targetTrait = targetModel !== null ? this.detectModelTrait(targetModel) : null;\n      this.attachTrait(trait, targetTrait);\n    }\n    super.onAttachModel(model, targetModel);\n  },\n\n  onDetachModel(model: M): void {\n    super.onDetachModel(model);\n    this.detachTrait();\n  },\n\n  createModel(trait?: T): M {\n    const model = super.createModel() as M;\n    if (trait === void 0) {\n      trait = this.createTrait();\n    }\n    this.insertModelTrait(model, trait, null, this.traitKey);\n    return model;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).trait = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitModelRef<any, any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport type {ModelSetDescriptor} from \"./ModelSet\";\nimport type {ModelSetClass} from \"./ModelSet\";\nimport {ModelSet} from \"./ModelSet\";\nimport type {TraitFactory} from \"./Trait\";\nimport {Trait} from \"./Trait\";\n\n/** @public */\nexport interface TraitModelSetDescriptor<R, T extends Trait, M extends Model> extends ModelSetDescriptor<R, M> {\n  extends?: Proto<TraitModelSet<any, any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitModelSetClass<F extends TraitModelSet<any, any, any, any> = TraitModelSet<any, any, any, any>> extends ModelSetClass<F> {\n}\n\n/** @public */\nexport interface TraitModelSet<R = any, T extends Trait = Trait, M extends Model = Model, I extends any[] = [M | null]> extends ModelSet<R, M, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitModelSetDescriptor<R, T, M>>;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get traitKey(): string | undefined;\n\n  get observesTrait(): boolean;\n\n  /** @internal */\n  readonly traits: {readonly [traitId: string]: T | undefined};\n\n  readonly traitCount: number;\n\n  hasTrait(trait: Trait): boolean;\n\n  addTrait(trait?: T | LikeType<T>, targetModel?: Model | null, modelKey?: string): T;\n\n  addTraits(traits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void;\n\n  setTraits(traits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void;\n\n  attachTrait(trait?: T | LikeType<T> | null, targetModel?: Model | null): T;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetModel: Model | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetModel: Model | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetModel: Model | null): void;\n\n  attachTraits(traits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void;\n\n  detachTrait(trait: T): T | null;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  detachTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  insertTrait(parent?: Model | null, trait?: T | LikeType<T>, targetModel?: Model | null, modelKey?: string): T;\n\n  insertTraits(parent: Model | null, traits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void;\n\n  removeTrait(trait: T): T | null;\n\n  removeTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  deleteTrait(trait: T): T | null;\n\n  deleteTraits(traits?: {readonly [traitId: string]: T | undefined}): void;\n\n  reinsertTrait(trait: T, targetTrait?: T | null): void;\n\n  consumeTraits(consumer: Consumer): void;\n\n  unconsumeTraits(consumer: Consumer): void;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  /** @protected */\n  detectModelTrait(model: Model): T | null;\n\n  /** @protected */\n  insertModelTrait(model: M, trait: T | null, targetTrait: Trait | null, traitKey: string | undefined): void;\n\n  /** @override */\n  detectModel(model: Model): M | null;\n\n  /** @protected @override */\n  onAttachModel(model: M, targetModel: Model | null): void;\n\n  /** @protected @override */\n  onDetachModel(model: M): void;\n\n  /** @override */\n  createModel(trait?: T): M;\n\n  /** @protected @override */\n  compare(a: M, b: M): number;\n\n  /** @protected */\n  compareTraits(a: T, b: T): number;\n}\n\n/** @public */\nexport const TraitModelSet = (<R, T extends Trait, M extends Model, I extends any[], F extends TraitModelSet<any, any, any, any>>() => ModelSet.extend<TraitModelSet<R, T, M, I>, TraitModelSetClass<F>>(\"TraitModelSet\", {\n  traitType: null,\n\n  traitKey: void 0,\n\n  observesTrait: false,\n\n  hasTrait(trait: Trait): boolean {\n    return this.traits[trait.uid] !== void 0;\n  },\n\n  addTrait(newTrait?: T | LikeType<T>, targetModel?: Model | null, modelKey?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    let model = newTrait.model as M | null;\n    if (model === null) {\n      model = this.createModel(newTrait);\n    }\n    this.addModel(model, targetModel, modelKey);\n    return newTrait;\n  },\n\n  addTraits(newTraits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void {\n    for (const traitId in newTraits) {\n      this.addTrait(newTraits[traitId]!, targetModel);\n    }\n  },\n\n  setTraits(newTraits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void {\n    const traits = this.traits;\n    for (const traitId in traits) {\n      if (newTraits[traitId] === void 0) {\n        this.detachTrait(traits[traitId]!);\n      }\n    }\n    for (const traitId in newTraits) {\n      if (traits[traitId] === void 0) {\n        this.attachTrait(newTraits[traitId]!, targetModel);\n      }\n    }\n  },\n\n  attachTrait(newTrait?: T | LikeType<T> | null, targetModel?: Model | null): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    const traits = this.traits as {[traitId: string]: T | undefined};\n    if (traits[newTrait.uid] !== void 0) {\n      return newTrait;\n    } else if (targetModel === void 0) {\n      targetModel = null;\n    }\n    traits[newTrait.uid] = newTrait;\n    (this as Mutable<typeof this>).traitCount += 1;\n    let model = newTrait.model as M | null;\n    if (model === null) {\n      model = this.createModel(newTrait);\n    }\n    this.attachModel(model, targetModel);\n    this.willAttachTrait(newTrait, targetModel);\n    this.onAttachTrait(newTrait, targetModel);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, targetModel);\n    return newTrait;\n  },\n\n  initTrait(trait: T): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetModel: Model | null): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetModel: Model | null): void {\n    if (this.observesTrait) {\n      trait.observe(this as Observes<T>);\n    }\n  },\n\n  didAttachTrait(trait: T, targetModel: Model | null): void {\n    // hook\n  },\n\n  attachTraits(newTraits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void {\n    for (const traitId in newTraits) {\n      this.attachTrait(newTraits[traitId]!, targetModel);\n    }\n  },\n\n  detachTrait(oldTrait: T): T | null {\n    const traits = this.traits as {[traitId: string]: T | undefined};\n    if (traits[oldTrait.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).traitCount -= 1;\n    delete traits[oldTrait.uid];\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    const model = oldTrait.model as M | null;\n    if (model !== null) {\n      this.detachModel(model);\n    }\n    return oldTrait;\n  },\n\n  deinitTrait(trait: T): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T): void {\n    if (this.observesTrait) {\n      trait.unobserve(this as Observes<T>);\n    }\n  },\n\n  didDetachTrait(trait: T): void {\n    // hook\n  },\n\n  detachTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.detachTrait(traits[traitId]!);\n    }\n  },\n\n  insertTrait(parent?: Model | null, newTrait?: T | LikeType<T>, targetModel?: Model | null, modelKey?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    let model = newTrait.model as M | null;\n    if (model === null) {\n      model = this.createModel(newTrait);\n    }\n    this.insertModel(parent, model, targetModel, modelKey);\n    return newTrait;\n  },\n\n  insertTraits(parent: Model | null, newTraits: {readonly [traitId: string]: T | undefined}, targetModel?: Model | null): void {\n    for (const traitId in newTraits) {\n      this.insertTrait(parent, newTraits[traitId]!, targetModel);\n    }\n  },\n\n  removeTrait(trait: T): T | null {\n    if (!this.hasTrait(trait)) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  removeTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.removeTrait(traits[traitId]!);\n    }\n  },\n\n  deleteTrait(trait: T): T | null {\n    const oldTrait = this.detachTrait(trait);\n    if (oldTrait === null) {\n      return null;\n    }\n    oldTrait.remove();\n    return oldTrait;\n  },\n\n  deleteTraits(traits?: {readonly [traitId: string]: T | undefined}): void {\n    if (traits === void 0) {\n      traits = this.traits;\n    }\n    for (const traitId in traits) {\n      this.deleteTrait(traits[traitId]!);\n    }\n  },\n\n  reinsertTrait(trait: T, targetTrait: T | null): void {\n    const model = trait.model as M | null;\n    if (model === null) {\n      return;\n    }\n    const targetModel = targetTrait !== null ? targetTrait.model : null;\n    this.reinsertModel(model, targetModel);\n  },\n\n  consumeTraits(consumer: Consumer): void {\n    const traits = this.traits;\n    for (const traitId in traits) {\n      const trait = traits[traitId]!;\n      trait.consume(consumer);\n    }\n  },\n\n  unconsumeTraits(consumer: Consumer): void {\n    const traits = this.traits;\n    for (const traitId in traits) {\n      const trait = traits[traitId]!;\n      trait.unconsume(consumer);\n    }\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  detectModelTrait(model: Model): T | null {\n    return model.findTrait(this.traitKey, this.traitType as unknown as Class<T> | null);\n  },\n\n  insertModelTrait(model: M, trait: T, targetTrait: Trait | null, traitKey: string | undefined): void {\n    model.insertTrait(trait, targetTrait, traitKey);\n  },\n\n  detectModel(model: Model): M | null {\n    if (this.detectModelTrait(model) !== null) {\n      return model as M;\n    }\n    return null;\n  },\n\n  onAttachModel(model: M, targetModel: Model | null): void {\n    const trait = this.detectModelTrait(model);\n    if (trait !== null) {\n      this.attachTrait(trait, targetModel);\n    }\n    super.onAttachModel(model, targetModel);\n  },\n\n  onDetachModel(model: M): void {\n    super.onDetachModel(model);\n    const trait = this.detectModelTrait(model);\n    if (trait !== null) {\n      this.detachTrait(trait);\n    }\n  },\n\n  createModel(trait?: T): M {\n    const model = super.createModel() as M;\n    if (trait === void 0) {\n      trait = this.createTrait();\n    }\n    this.insertModelTrait(model, trait, null, this.traitKey);\n    return model;\n  },\n\n  compare(a: M, b: M): number {\n    const x = this.detectModelTrait(a);\n    const y = this.detectModelTrait(b);\n    if (x !== null && y !== null) {\n      return this.compareTraits(x, y);\n    }\n    return x !== null ? 1 : y !== null ? -1 : 0;\n  },\n\n  compareTraits(a: T, b: T): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traits = {};\n    (fastener as Mutable<typeof fastener>).traitCount = 0;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitModelSet<any, any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {EventHandler} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {ModelFlags} from \"./Model\";\nimport {Model} from \"./Model\";\nimport {ModelSet} from \"./ModelSet\";\n\n/** @public */\nexport interface RefresherServiceObserver<S extends RefresherService = RefresherService> extends ServiceObserver<S> {\n  serviceWillAttachRoot?(rootModel: Model, service: S): void;\n\n  serviceDidAttachRoot?(rootModel: Model, service: S): void;\n\n  serviceWillDetachRoot?(rootModel: Model, service: S): void;\n\n  serviceDidDetachRoot?(rootModel: Model, service: S): void;\n}\n\n/** @public */\nexport class RefresherService extends Service {\n  constructor() {\n    super();\n    this.updateFlags = 0;\n    this.updateTime = performance.now();\n    this.updateDelay = RefresherService.MinUpdateDelay;\n    this.analyzeTimer = 0;\n    this.refreshTimer = 0;\n\n    this.runAnalyzePass = this.runAnalyzePass.bind(this);\n    this.runRefreshPass = this.runRefreshPass.bind(this);\n  }\n\n  declare readonly observerType?: Class<RefresherServiceObserver>;\n\n  @ModelSet({\n    initModel(rootModel: Model): void {\n      this.owner.requestUpdate(rootModel, rootModel.flags & Model.UpdateMask, false);\n    },\n    willAttachModel(rootModel: Model): void {\n      this.owner.callObservers(\"serviceWillAttachRoot\", rootModel, this.owner);\n    },\n    didAttachModel(rootModel: Model): void {\n      this.owner.callObservers(\"serviceDidAttachRoot\", rootModel, this.owner);\n    },\n    willDetachModel(rootModel: Model): void {\n      this.owner.callObservers(\"serviceWillDetachRoot\", rootModel, this.owner);\n    },\n    didDetachModel(rootModel: Model): void {\n      this.owner.callObservers(\"serviceDidDetachRoot\", rootModel, this.owner);\n    },\n  })\n  readonly roots!: ModelSet<this, Model>;\n\n  /** @internal */\n  readonly updateFlags: ModelFlags;\n\n  /** @internal */\n  setUpdateFlags(updateFlags: ModelFlags): void {\n    (this as Mutable<this>).updateFlags = updateFlags;\n  }\n\n  readonly updateTime: number;\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.updateFlags & ~updateFlags & Model.UpdateMask;\n    if ((updateFlags & Model.AnalyzeMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsAnalyze;\n    }\n    if ((updateFlags & Model.RefreshMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsRefresh;\n    }\n    this.setUpdateFlags(this.updateFlags | deltaUpdateFlags);\n    if (immediate && (this.updateFlags & (Model.AnalyzingFlag | Model.RefreshingFlag)) === 0 && this.updateDelay <= RefresherService.MaxAnalyzeInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const updateFlags = this.updateFlags;\n    if ((updateFlags & Model.AnalyzingFlag) === 0 && (updateFlags & Model.AnalyzeMask) !== 0) {\n      this.scheduleAnalyzePass(this.updateDelay);\n    } else if ((updateFlags & Model.RefreshingFlag) === 0 && (updateFlags & Model.RefreshMask) !== 0) {\n      this.scheduleRefreshPass(RefresherService.MinAnalyzeInterval);\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelAnalyzePass();\n    this.cancelRefreshPass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.updateFlags & Model.AnalyzeMask) !== 0) {\n      this.cancelUpdate();\n      this.runAnalyzePass(true);\n    }\n    if ((this.updateFlags & Model.RefreshMask) !== 0 && this.updateDelay <= RefresherService.MaxAnalyzeInterval) {\n      this.cancelUpdate();\n      this.runRefreshPass(true);\n    }\n  }\n\n  /** @internal */\n  analyzeTimer: number;\n\n  protected scheduleAnalyzePass(updateDelay: number): void {\n    if (this.analyzeTimer === 0) {\n      this.analyzeTimer = setTimeout(this.runAnalyzePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelAnalyzePass(): void {\n    if (this.analyzeTimer !== 0) {\n      clearTimeout(this.analyzeTimer);\n      this.analyzeTimer = 0;\n    }\n  }\n\n  protected runAnalyzePass(immediate: boolean = false): void {\n    if (!immediate) {\n      this.analyzeTimer = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~Model.AnalyzeMask | Model.AnalyzingFlag);\n    try {\n      const t0 = performance.now();\n      (this as Mutable<this>).updateTime = t0;\n\n      const rootModels = this.roots.models;\n      for (const modelId in rootModels) {\n        const rootModel = rootModels[modelId]!;\n        if ((rootModel.flags & Model.AnalyzeMask) !== 0) {\n          rootModel.cascadeAnalyze(0);\n        }\n      }\n\n      const t1 = performance.now();\n      let analyzeDelay = Math.max(RefresherService.MinAnalyzeInterval, this.updateDelay);\n      if (t1 - t0 > analyzeDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), RefresherService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(RefresherService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelAnalyzePass();\n      if ((this.updateFlags & Model.RefreshMask) !== 0) {\n        this.scheduleRefreshPass(RefresherService.MinRefreshInterval);\n      } else if ((this.updateFlags & Model.AnalyzeMask) !== 0) {\n        if (immediate) {\n          analyzeDelay = Math.max(RefresherService.MaxAnalyzeInterval, analyzeDelay);\n        }\n        this.cancelRefreshPass();\n        this.scheduleAnalyzePass(analyzeDelay);\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~Model.AnalyzingFlag);\n    }\n  }\n\n  /** @internal */\n  refreshTimer: number;\n\n  protected scheduleRefreshPass(updateDelay: number): void {\n    if (this.refreshTimer === 0) {\n      this.refreshTimer = setTimeout(this.runRefreshPass, updateDelay) as any;\n    }\n  }\n\n  protected cancelRefreshPass(): void {\n    if (this.refreshTimer !== 0) {\n      clearTimeout(this.refreshTimer);\n      this.refreshTimer = 0;\n    }\n  }\n\n  protected runRefreshPass(immediate: boolean = false): void {\n    if (!immediate) {\n      this.refreshTimer = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~Model.RefreshMask | Model.RefreshingFlag);\n    try {\n      const time = performance.now();\n      (this as Mutable<this>).updateTime = time;\n\n      const rootModels = this.roots.models;\n      for (const modelId in rootModels) {\n        const rootModel = rootModels[modelId]!;\n        if ((rootModel.flags & Model.RefreshMask) !== 0) {\n          rootModel.cascadeRefresh(0);\n        }\n      }\n\n      this.cancelRefreshPass();\n      if ((this.updateFlags & Model.AnalyzeMask) !== 0) {\n        let analyzeDelay = this.updateDelay;\n        if (immediate) {\n          analyzeDelay = Math.max(RefresherService.MaxAnalyzeInterval, analyzeDelay);\n        }\n        this.scheduleAnalyzePass(analyzeDelay);\n      } else if ((this.updateFlags & Model.RefreshMask) !== 0) {\n        this.cancelAnalyzePass();\n        this.scheduleRefreshPass(RefresherService.MaxRefreshInterval);\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~Model.RefreshingFlag);\n    }\n  }\n\n  get powerFlags(): ModelFlags {\n    return 0;\n  }\n\n  power(): void {\n    const rootModels = this.roots.models;\n    for (const modelId in rootModels) {\n      const rootModel = rootModels[modelId]!;\n      rootModel.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = RefresherService.MinUpdateDelay;\n  }\n\n  @EventHandler({\n    eventType: \"visibilitychange\",\n    target: typeof document !== \"undefined\" ? document : null,\n    handle(event: Event): void {\n      if (document.visibilityState === \"visible\") {\n        this.owner.power();\n      } else {\n        this.owner.unpower();\n      }\n    },\n  })\n  readonly visibilityChange!: EventHandler<this>;\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinAnalyzeInterval: number = 12;\n  /** @internal */\n  static MaxAnalyzeInterval: number = 33;\n  /** @internal */\n  static MinRefreshInterval: number = 4;\n  /** @internal */\n  static MaxRefreshInterval: number = 16;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Dictionary} from \"@swim/util\";\nimport type {MutableDictionary} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {EventHandler} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\n\n/** @public */\nexport interface StorageServiceObserver<S extends StorageService = StorageService> extends ServiceObserver<S> {\n  serviceWillStore?(key: string, newValue: string | undefined, oldValue: string | undefined, service: S): void;\n\n  serviceDidStore?(key: string, newValue: string | undefined, oldValue: string | undefined, service: S): void;\n\n  serviceWillClear?(service: S): void;\n\n  serviceDidClear?(service: S): void;\n}\n\n/** @public */\nexport abstract class StorageService extends Service {\n  declare readonly observerType?: Class<StorageServiceObserver>;\n\n  abstract get(key: string): string | undefined;\n\n  abstract override set(key: string, newValue: string | undefined): string | undefined;\n  abstract override set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this;\n\n  protected willSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    this.callObservers(\"serviceWillStore\", key, newValue, oldValue, this);\n  }\n\n  protected onSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    // hook\n  }\n\n  protected didSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    this.callObservers(\"serviceDidStore\", key, newValue, oldValue, this);\n  }\n\n  abstract clear(): void;\n\n  protected willClear(): void {\n    this.callObservers(\"serviceWillClear\", this);\n  }\n\n  protected onClear(): void {\n    // hook\n  }\n\n  protected didClear(): void {\n    this.callObservers(\"serviceDidClear\", this);\n  }\n\n  static override create(): StorageService;\n  static override create(): StorageService;\n  static override create(): StorageService {\n    let service: StorageService | null = WebStorageService.local();\n    if (service === null) {\n      service = new EphemeralStorageService();\n    }\n    return service;\n  }\n}\n\n/** @public */\nexport class WebStorageService extends StorageService {\n  constructor(storageArea: Storage) {\n    super();\n    this.storageArea = storageArea;\n  }\n\n  readonly storageArea: Storage;\n\n  override get(key: string): string | undefined {\n    const value = this.storageArea.getItem(key);\n    return value !== null ? value : void 0;\n  }\n\n  override set(key: string, newValue: string | undefined): string | undefined;\n  override set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this;\n  override set(key: string | {[K in keyof WebStorageService as WebStorageService[K] extends {set(value: any): any} ? K : never]?: WebStorageService[K] extends {set(value: infer T): any} ? T : never}, newValue?: string | TimingLike | boolean | null): string | undefined | this {\n    if (typeof key !== \"string\") {\n      Service.prototype.set.call(this, key, newValue as TimingLike | boolean | null | undefined);\n      return this;\n    }\n    let oldValue: string | null | undefined = this.storageArea.getItem(key);\n    if (oldValue === null) {\n      oldValue = void 0;\n    }\n    if (newValue === oldValue) {\n      return oldValue;\n    }\n    this.willSet(key, newValue as string | undefined, oldValue);\n    if (newValue !== void 0) {\n      this.storageArea.setItem(key, newValue as string);\n    } else {\n      this.storageArea.removeItem(key);\n    }\n    this.onSet(key, newValue as string | undefined, oldValue);\n    this.didSet(key, newValue as string | undefined, oldValue);\n    return oldValue;\n  }\n\n  override clear(): void {\n    this.willClear();\n    this.storageArea.clear();\n    this.onClear();\n    this.didClear();\n  }\n\n  @EventHandler({\n    eventType: \"storage\",\n    target: typeof window !== \"undefined\" ? window : null,\n    handle(event: StorageEvent): void {\n      if (event.storageArea !== this.owner.storageArea) {\n        return;\n      }\n      const key = event.key;\n      if (key === null) {\n        this.owner.willClear();\n        this.owner.onClear();\n        this.owner.didClear();\n        return;\n      }\n      let newValue: string | null | undefined = event.newValue;\n      if (newValue === null) {\n        newValue = void 0;\n      }\n      let oldValue: string | null | undefined = event.oldValue;\n      if (oldValue === null) {\n        oldValue = void 0;\n      }\n      if (newValue !== oldValue) {\n        this.owner.willSet(key, newValue, oldValue);\n        this.owner.onSet(key, newValue, oldValue);\n        this.owner.didSet(key, newValue, oldValue);\n      }\n    },\n  })\n  readonly storageEvent!: EventHandler<this>;\n\n  /** @internal */\n  static Local: WebStorageService | null | undefined = void 0;\n\n  static local(): WebStorageService | null {\n    if (this.Local === void 0) {\n      try {\n        this.Local = new WebStorageService(window.localStorage);\n      } catch (e) {\n        this.Local = null;\n      }\n    }\n    return this.Local;\n  }\n\n  /** @internal */\n  static Session: WebStorageService | null | undefined = void 0;\n\n  static session(): WebStorageService | null {\n    if (this.Session === void 0) {\n      try {\n        this.Session = new WebStorageService(window.sessionStorage);\n      } catch (e) {\n        this.Session = null;\n      }\n    }\n    return this.Session;\n  }\n}\n\n/** @public */\nexport class EphemeralStorageService extends StorageService {\n  constructor(storageArea?: Dictionary<string>) {\n    super();\n    if (storageArea === void 0) {\n      storageArea = {};\n    }\n    this.storageArea = storageArea;\n  }\n\n  readonly storageArea: Dictionary<string>;\n\n  override get(key: string): string | undefined {\n    return this.storageArea[key];\n  }\n\n  override set(key: string, newValue: string | undefined): string | undefined;\n  override set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): this;\n  override set(key: string | {[K in keyof EphemeralStorageService as EphemeralStorageService[K] extends {set(value: any): any} ? K : never]?: EphemeralStorageService[K] extends {set(value: infer T): any} ? T : never}, newValue?: string | TimingLike | boolean | null): string | undefined | this {\n    if (typeof key !== \"string\") {\n      Service.prototype.set.call(this, key, newValue as TimingLike | boolean | null | undefined);\n      return this;\n    }\n    const storageArea = this.storageArea as MutableDictionary<string>;\n    const oldValue = storageArea[key];\n    if (newValue === oldValue) {\n      return oldValue;\n    }\n    this.willSet(key, newValue as string | undefined, oldValue);\n    if (newValue !== void 0) {\n      storageArea[key] = newValue as string;\n    } else {\n      delete storageArea[key];\n    }\n    this.onSet(key, newValue as string | undefined, oldValue);\n    this.didSet(key, newValue as string | undefined, oldValue);\n    return oldValue;\n  }\n\n  override clear(): void {\n    this.willClear();\n    (this as Mutable<this>).storageArea = {};\n    this.onClear();\n    this.didClear();\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {Model} from \"./Model\";\nimport {SelectableTrait} from \"./\"; // forward import\n\n/** @public */\nexport interface SelectionOptions {\n  multi?: boolean;\n}\n\n/** @public */\nexport interface SelectionServiceObserver<S extends SelectionService = SelectionService> extends ServiceObserver<S> {\n  serviceWillSelect?(model: Model, index: number, options: SelectionOptions | null, service: S): void;\n\n  serviceDidSelect?(model: Model, index: number, options: SelectionOptions | null, service: S): void;\n\n  serviceWillUnselect?(model: Model, service: S): void;\n\n  serviceDidUnselect?(model: Model, service: S): void;\n\n  serviceDidUnselectAll?(service: S): void;\n}\n\n/** @public */\nexport class SelectionService extends Service {\n  constructor() {\n    super();\n    this.selections = [];\n  }\n\n  declare readonly observerType?: Class<SelectionServiceObserver>;\n\n  readonly selections: readonly Model[];\n\n  isSelected(model: Model): boolean {\n    return this.selections.indexOf(model) >= 0;\n  }\n\n  select(model: Model, options?: SelectionOptions | null, index?: number): void {\n    const selections = this.selections as Model[];\n    if (selections.indexOf(model) >= 0) {\n      return;\n    } else if (options === void 0) {\n      options = null;\n    }\n    if (options === null || !options.multi) {\n      this.unselectAll(true);\n    }\n    if (index === void 0) {\n      index = selections.length;\n    } else {\n      if (index < 0) {\n        index = selections.length + 1 + index;\n      }\n      index = Math.min(Math.max(0, index, selections.length));\n    }\n    const selectableTrait = model.getTrait(SelectableTrait);\n    this.willSelect(model, index, options);\n    if (selectableTrait !== null) {\n      selectableTrait.willSelect(options);\n    }\n    selections.splice(index, 0, model);\n    this.onSelect(model, index, options);\n    if (selectableTrait !== null) {\n      selectableTrait.onSelect(options);\n      selectableTrait.didSelect(options);\n    }\n    this.didSelect(model, index, options);\n  }\n\n  protected willSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    this.callObservers(\"serviceWillSelect\", model, index, options, this);\n  }\n\n  protected onSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    // hook\n  }\n\n  protected didSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    this.callObservers(\"serviceDidSelect\", model, index, options, this);\n  }\n\n  unselect(model: Model): void;\n  /** @internal */\n  unselect(model: Model, internal?: boolean): void;\n  unselect(model: Model, internal?: boolean): void {\n    const selections = this.selections as Model[];\n    const index = selections.indexOf(model);\n    if (index < 0) {\n      return;\n    }\n    const selectableTrait = model.getTrait(SelectableTrait);\n    this.willUnselect(model);\n    if (selectableTrait !== null) {\n      selectableTrait.willUnselect();\n    }\n    selections.splice(index, 1);\n    this.onUnselect(model);\n    if (selectableTrait !== null) {\n      selectableTrait.onUnselect();\n      selectableTrait.didUnselect();\n    }\n    this.didUnselect(model);\n    if (internal !== true && selections.length === 0) {\n      this.didUnselectAll();\n    }\n  }\n\n  protected willUnselect(model: Model): void {\n    this.callObservers(\"serviceWillUnselect\", model, this);\n  }\n\n  protected onUnselect(model: Model): void {\n    // hook\n  }\n\n  protected didUnselect(model: Model): void {\n    this.callObservers(\"serviceDidUnselect\", model, this);\n  }\n\n  unselectAll(): void;\n  /** @internal */\n  unselectAll(internal?: boolean): void;\n  unselectAll(internal?: boolean): void {\n    const selections = this.selections;\n    if (selections.length === 0) {\n      return;\n    }\n    while (selections.length !== 0) {\n      this.unselect(selections[0]!, true);\n    }\n    if (internal !== true) {\n      this.didUnselectAll();\n    }\n  }\n\n  protected didUnselectAll(): void {\n    this.callObservers(\"serviceDidUnselectAll\", this);\n  }\n\n  toggle(model: Model, options?: SelectionOptions | null, index?: number): void {\n    const selections = this.selections as Model[];\n    const selectedIndex = selections.indexOf(model);\n    if (selectedIndex < 0) {\n      if (options === void 0) {\n        options = null;\n      }\n      if (options === null || !options.multi) {\n        this.unselectAll(true);\n      }\n      if (index === void 0) {\n        index = selections.length;\n      } else {\n        if (index < 0) {\n          index = selections.length + 1 + index;\n        }\n        index = Math.min(Math.max(0, index, selections.length));\n      }\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.willSelect(options);\n      }\n      selections.splice(index, 0, model);\n      this.onSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.onSelect(options);\n        selectableTrait.didSelect(options);\n      }\n      this.didSelect(model, index, options);\n    } else {\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.willUnselect();\n      }\n      selections.splice(selectedIndex, 1);\n      this.onUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.onUnselect();\n        selectableTrait.didUnselect();\n      }\n      this.didUnselect(model);\n      if (selections.length === 0) {\n        this.didUnselectAll();\n      }\n    }\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Provider} from \"@swim/component\";\nimport type {TraitObserver} from \"./Trait\";\nimport {Trait} from \"./Trait\";\nimport type {SelectionOptions} from \"./SelectionService\";\nimport {SelectionService} from \"./SelectionService\";\n\n/** @public */\nexport interface SelectableTraitObserver<T extends SelectableTrait = SelectableTrait> extends TraitObserver<T> {\n  traitWillSelect?(options: SelectionOptions | null, trait: T): void;\n\n  traitDidSelect?(options: SelectionOptions | null, trait: T): void;\n\n  traitWillUnselect?(trait: T): void;\n\n  traitDidUnselect?(trait: T): void;\n}\n\n/** @public */\nexport class SelectableTrait extends Trait {\n  constructor() {\n    super();\n    this.selected = false;\n  }\n\n  declare readonly observerType?: Class<SelectableTraitObserver>;\n\n  readonly selected: boolean;\n\n  select(options?: SelectionOptions | null): void {\n    if (this.selected) {\n      return;\n    }\n    (this as Mutable<this>).selected = true;\n    if (!this.mounted) {\n      return;\n    }\n    this.selection.getService().select(this.model!, options);\n  }\n\n  /** @protected */\n  willSelect(options: SelectionOptions | null): void {\n    this.callObservers(\"traitWillSelect\", options, this);\n  }\n\n  /** @protected */\n  onSelect(options: SelectionOptions | null): void {\n    (this as Mutable<this>).selected = true;\n  }\n\n  /** @protected */\n  didSelect(options: SelectionOptions | null): void {\n    this.callObservers(\"traitDidSelect\", options, this);\n  }\n\n  unselect(): void {\n    if (!this.selected) {\n      return;\n    }\n    (this as Mutable<this>).selected = false;\n    if (!this.mounted) {\n      return;\n    }\n    this.selection.getService().unselect(this.model!);\n  }\n\n  /** @protected */\n  willUnselect(): void {\n    this.callObservers(\"traitWillUnselect\", this);\n  }\n\n  /** @protected */\n  onUnselect(): void {\n    (this as Mutable<this>).selected = false;\n  }\n\n  /** @protected */\n  didUnselect(): void {\n    this.callObservers(\"traitDidUnselect\", this);\n  }\n\n  unselectAll(): void {\n    this.selection.getService().unselectAll();\n  }\n\n  toggle(options?: SelectionOptions): void {\n    if (!this.selected) {\n      this.select(options);\n    } else {\n      this.unselect();\n    }\n  }\n\n  @Provider({serviceType: SelectionService})\n  readonly selection!: Provider<this, SelectionService>;\n\n  protected override didMount(): void {\n    if (this.selected) {\n      this.selection.getService().select(this.model!);\n    }\n    super.didMount();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    this.selection.getService().unselect(this.model!);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Strings} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Base16} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport type {Item} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport {Attr} from \"@swim/structure\";\nimport {Record} from \"@swim/structure\";\nimport {Form} from \"@swim/structure\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {LengthParser} from \"@swim/math\";\n\n/** @public */\nexport type FontStyle = \"normal\"\n                      | \"italic\"\n                      | \"oblique\";\n\n/** @public */\nexport type FontVariant = \"normal\" | \"small-caps\";\n\n/** @public */\nexport type FontWeight = \"normal\"\n                       | \"100\"\n                       | \"200\"\n                       | \"300\"\n                       | \"400\"\n                       | \"500\"\n                       | \"600\"\n                       | \"700\"\n                       | \"800\"\n                       | \"900\"\n                       | \"bold\"\n                       | \"bolder\"\n                       | \"lighter\";\n\n/** @public */\nexport type FontStretch = \"normal\"\n                        | \"ultra-condensed\"\n                        | \"extra-condensed\"\n                        | \"semi-condensed\"\n                        | \"condensed\"\n                        | \"expanded\"\n                        | \"semi-expanded\"\n                        | \"extra-expanded\"\n                        | \"ultra-expanded\";\n\n/** @public */\nexport type FontSizeLike = LengthLike | FontSize;\n\n/** @public */\nexport type FontSize = Length\n                     | \"large\"\n                     | \"larger\"\n                     | \"medium\"\n                     | \"small\"\n                     | \"smaller\"\n                     | \"x-large\"\n                     | \"x-small\"\n                     | \"xx-large\"\n                     | \"xx-small\";\n\n/** @public */\nexport const FontSize = {\n  fromLike<T extends FontSizeLike | null | undefined>(value: T): FontSize | Uninitable<T> {\n    if (value === void 0 || value === null) {\n      return value as FontSize | Uninitable<T>;\n    } else if (typeof value === \"string\"\n        && (value === \"large\" || value === \"larger\" || value === \"medium\"\n         || value === \"small\" || value === \"smaller\"  || value === \"x-large\" || value === \"x-small\"\n         || value === \"xx-large\" || value === \"xx-small\")) {\n      return value as FontSize;\n    }\n    return Length.fromLike(value);\n  },\n\n  fromValue(value: Value): FontSize | null {\n    const string = value.stringValue(null);\n    if (string !== null) {\n      return FontSize.fromLike(string);\n    }\n    const size = Length.form().cast(value);\n    return size !== void 0 ? size : null;\n  },\n};\n\n/** @public */\nexport type LineHeightLike = LengthLike | LineHeight;\n\n/** @public */\nexport type LineHeight = Length | \"normal\";\n\n/** @public */\nexport const LineHeight = {\n  fromLike<T extends LineHeightLike | null | undefined>(value: T): LineHeight | Uninitable<T> {\n    if (value === void 0 || value === null) {\n      return value as LineHeight | Uninitable<T>;\n    } else if (typeof value === \"string\" && value === \"normal\") {\n      return value as LineHeight;\n    }\n    return Length.fromLike(value);\n  },\n\n  fromValue(value: Value): LineHeight | null {\n    const string = value.stringValue(null);\n    if (string !== null) {\n      return LineHeight.fromLike(string);\n    }\n    const height = Length.form().cast(value);\n    return height !== void 0 ? height : null;\n  },\n};\n\n/** @public */\nexport type GenericFamily = \"serif\"\n                          | \"sans-serif\"\n                          | \"cursive\"\n                          | \"fantasy\"\n                          | \"monospace\"\n                          | \"system-ui\"\n                          | \"emoji\"\n                          | \"math\"\n                          | \"fangsong\";\n\n/** @public */\nexport type FontFamily = string | GenericFamily;\n\n/** @public */\nexport const FontFamily = {\n  fromValue(value: Value): FontFamily | FontFamily[] | null {\n    let family: FontFamily | FontFamily[] | null = null;\n    value.forEach(function (item: Item): void {\n      let string: string | undefined;\n      if (!(item instanceof Value) || (string = item.stringValue(void 0)) === void 0) {\n        return;\n      }\n      if (family === null) {\n        family = string;\n      } else if (typeof family === \"string\") {\n        family = [family, string];\n      } else {\n        family.push(string);\n      }\n    });\n    return family;\n  },\n\n  format(family: FontFamily): string {\n    let isIdent = false;\n    if (family.length !== 0) {\n      isIdent = Unicode.isAlpha(family.charCodeAt(0));\n      for (let i = Strings.offsetByCodePoints(family, 0, 1); isIdent && i < family.length; i = Strings.offsetByCodePoints(family, i, 1)) {\n        const c = family.charCodeAt(i);\n        isIdent = Unicode.isAlpha(c) || c === 45/*'-'*/;\n      }\n    }\n    if (isIdent) {\n      return family;\n    }\n    let output = Unicode.stringOutput();\n    output = output.write(34/*'\"'*/);\n    for (let i = 0; i < family.length; i = Strings.offsetByCodePoints(family, i, 1)) {\n      const c = family.charCodeAt(i);\n      if (c === 10/*'\\n'*/ || c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n        output = output.write(92/*'\\\\'*/).write(c);\n      } else if (c >= 0x20) {\n        output = output.write(c);\n      } else {\n        const base16 = Base16.uppercase;\n        output = output.write(92/*'\\\\'*/).write(base16.encodeDigit(c >>> 20 & 0xf))\n                                         .write(base16.encodeDigit(c >>> 16 & 0xf))\n                                         .write(base16.encodeDigit(c >>> 12 & 0xf))\n                                         .write(base16.encodeDigit(c >>>  8 & 0xf))\n                                         .write(base16.encodeDigit(c >>>  4 & 0xf))\n                                         .write(base16.encodeDigit(c        & 0xf));\n      }\n    }\n    output = output.write(34/*'\"'*/);\n    return output.toString();\n  },\n};\n\n/** @public */\nexport type FontLike = Font | FontInit | string;\n\n/** @public */\nexport const FontLike = {\n  [Symbol.hasInstance](instance: unknown): instance is FontLike {\n    return instance instanceof Font\n        || FontInit[Symbol.hasInstance](instance);\n  },\n};\n\n/** @public */\nexport interface FontInit {\n  style?: FontStyle;\n  variant?: FontVariant;\n  weight?: FontWeight;\n  stretch?: FontStretch;\n  size?: FontSizeLike | null;\n  height?: LineHeightLike | null;\n  family: FontFamily | FontFamily[];\n}\n\n/** @public */\nexport const FontInit = {\n  [Symbol.hasInstance](instance: unknown): instance is FontInit {\n    return Objects.hasAllKeys<FontInit>(instance, \"family\");\n  },\n};\n\n/** @public */\nexport class Font implements Interpolate<Font>, Equals, Equivalent, Debug {\n  constructor(style: FontStyle | undefined, variant: FontVariant | undefined,\n              weight: FontWeight | undefined, stretch: FontStretch | undefined,\n              size: FontSize | null, height: LineHeight | null,\n              family: FontFamily | readonly FontFamily[]) {\n    this.style = style;\n    this.variant = variant;\n    this.weight = weight;\n    this.stretch = stretch;\n    this.size = size;\n    this.height = height;\n    this.family = family;\n    this.stringValue = void 0;\n  }\n\n  likeType?(like: FontInit | string): void;\n\n  readonly style: FontStyle | undefined;\n\n  withStyle(style: FontStyle | undefined): Font {\n    if (style === this.style) {\n      return this;\n    }\n    return new Font(style, this.variant, this.weight, this.stretch,\n                    this.size, this.height, this.family);\n  }\n\n  readonly variant: FontVariant | undefined;\n\n  withVariant(variant: FontVariant | undefined): Font {\n    if (variant === this.variant) {\n      return this;\n    }\n    return new Font(this.style, variant, this.weight, this.stretch,\n                    this.size, this.height, this.family);\n  }\n\n  readonly weight: FontWeight | undefined;\n\n  withWeight(weight: FontWeight | undefined): Font {\n    if (weight === this.weight) {\n      return this;\n    }\n    return new Font(this.style, this.variant, weight, this.stretch,\n                    this.size, this.height, this.family);\n  }\n\n  readonly stretch: FontStretch | undefined;\n\n  withStretch(stretch: FontStretch | undefined): Font {\n    if (stretch === this.stretch) {\n      return this;\n    }\n    return new Font(this.style, this.variant, this.weight, stretch,\n                    this.size, this.height, this.family);\n  }\n\n  readonly size: FontSize | null;\n\n  withSize(size: FontSizeLike | null): Font{\n    size = FontSize.fromLike(size);\n    if (Values.equal(size, this.size)) {\n      return this;\n    }\n    return new Font(this.style, this.variant, this.weight, this.stretch,\n                    size as FontSize | null, this.height, this.family);\n  }\n\n  readonly height: LineHeight | null;\n\n  withHeight(height: LineHeightLike | null): Font {\n    height = LineHeight.fromLike(height);\n    if (Values.equal(height, this.height)) {\n      return this;\n    }\n    return new Font(this.style, this.variant, this.weight, this.stretch,\n                    this.size, height as LineHeight | null, this.family);\n  }\n\n  readonly family: FontFamily | readonly FontFamily[];\n\n  withFamily(family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    if (Values.equal(family, this.family)) {\n      return this;\n    }\n    return new Font(this.style, this.variant, this.weight, this.stretch,\n                    this.size, this.height, family);\n  }\n\n  toLike(): FontInit {\n    return {\n      style: this.style,\n      variant: this.variant,\n      weight: this.weight,\n      stretch: this.stretch,\n      size: this.size,\n      height: this.height,\n      family: (Array.isArray(this.family) ? this.family.slice(0) : this.family) as FontFamily | FontFamily[],\n    };\n  }\n\n  /** @override */\n  interpolateTo(that: Font): Interpolator<Font>;\n  interpolateTo(that: unknown): Interpolator<Font> | null;\n  interpolateTo(that: unknown): Interpolator<Font> | null {\n    if (that instanceof Font) {\n      return FontInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Font) {\n      return this.style === that.style && this.variant === that.variant\n          && this.weight === that.weight && this.stretch === that.stretch\n          && Values.equivalent(this.size, that.size, epsilon)\n          && Values.equivalent(this.height, that.height, epsilon)\n          && Values.equivalent(this.family, that.family, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Font) {\n      return this.style === that.style && this.variant === that.variant\n          && this.weight === that.weight && this.stretch === that.stretch\n          && Values.equal(this.size, that.size)\n          && Values.equal(this.height, that.height)\n          && Values.equal(this.family, that.family);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Font\").write(46/*'.'*/).write(\"family\").write(40/*'('*/);\n    if (typeof this.family === \"string\") {\n      output = output.debug(this.family);\n    } else if (Array.isArray(this.family) && this.family.length !== 0) {\n      output = output.debug(this.family[0]);\n      for (let i = 1; i < this.family.length; i += 1) {\n        output = output.write(\", \").debug(this.family[i]);\n      }\n    }\n    output = output.write(41/*')'*/);\n    if (this.style !== void 0) {\n      output = output.write(46/*'.'*/).write(\"style\").write(40/*'('*/).debug(this.style).write(41/*')'*/);\n    }\n    if (this.variant !== void 0) {\n      output = output.write(46/*'.'*/).write(\"variant\").write(40/*'('*/).debug(this.variant).write(41/*')'*/);\n    }\n    if (this.weight !== void 0) {\n      output = output.write(46/*'.'*/).write(\"weight\").write(40/*'('*/).debug(this.weight).write(41/*')'*/);\n    }\n    if (this.stretch !== void 0) {\n      output = output.write(46/*'.'*/).write(\"stretch\").write(40/*'('*/).debug(this.stretch).write(41/*')'*/);\n    }\n    if (this.size !== void 0) {\n      output = output.write(46/*'.'*/).write(\"size\").write(40/*'('*/).debug(this.size).write(41/*')'*/);\n    }\n    if (this.height !== void 0) {\n      output = output.write(46/*'.'*/).write(\"height\").write(40/*'('*/).debug(this.height).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  /* @internal */\n  readonly stringValue: string | undefined;\n\n  /** @override */\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"\";\n      if (this.style !== void 0 || this.variant === \"normal\" || this.weight === \"normal\" || this.stretch === \"normal\") {\n        s += this.style ?? \"normal\";\n      }\n      if (this.variant !== void 0 || this.weight === \"normal\" || this.stretch === \"normal\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.variant ?? \"normal\";\n      }\n      if (this.weight !== void 0 || this.stretch === \"normal\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.weight ?? \"normal\";\n      }\n      if (this.stretch !== void 0) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.stretch;\n      }\n      if (this.size !== null) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.size.toString();\n        if (this.height !== null) {\n          s += \"/\";\n          s += this.height.toString();\n        }\n      }\n      if (typeof this.family === \"string\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += FontFamily.format(this.family);\n      } else if (Array.isArray(this.family) && this.family.length !== 0) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += FontFamily.format(this.family[0]);\n        for (let i = 1; i < this.family.length; i += 1) {\n          s += \", \";\n          s += FontFamily.format(this.family[i]);\n        }\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static style(style: FontStyle | undefined, family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(style, void 0, void 0, void 0, null, null, family);\n  }\n\n  static variant(variant: FontVariant | undefined, family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, variant, void 0, void 0, null, null, family);\n  }\n\n  static weight(weight: FontWeight | undefined, family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, weight, void 0, null, null, family);\n  }\n\n  static stretch(stretch: FontStretch | undefined, family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, stretch, null, null, family);\n  }\n\n  static size(size: FontSizeLike | null, family: FontFamily | readonly FontFamily[]): Font {\n    size = size !== null ? FontSize.fromLike(size) : null;\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, void 0, size as FontSize | null, null, family);\n  }\n\n  static family(family: FontFamily | readonly FontFamily[]): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, void 0, null, null, family);\n  }\n\n  static create(style: FontStyle | undefined, variant: FontVariant | undefined,\n                weight: FontWeight | undefined, stretch: FontStretch | undefined,\n                size: FontSizeLike | null | undefined, height: LineHeightLike | null | undefined,\n                family: FontFamily | readonly FontFamily[]): Font {\n    size = size !== void 0 && size !== null ? FontSize.fromLike(size) : null;\n    height = height !== void 0 && height !== null ? LineHeight.fromLike(height) : null;\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(style, variant, weight, stretch, size as FontSize | null,\n                    height as LineHeight | null, family);\n  }\n\n  static fromLike<T extends FontLike | null | undefined>(value: T): Font | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Font) {\n      return value as Font | Uninitable<T>;\n    } else if (typeof value === \"object\" && value !== null) {\n      return Font.fromInit(value);\n    } else if (typeof value === \"string\") {\n      return Font.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: FontInit): Font {\n    return Font.create(init.style, init.variant, init.weight, init.stretch,\n                       init.size, init.height, init.family);\n  }\n\n  static fromValue(value: Value): Font | null {\n    const header = value.header(\"font\");\n    if (!header.isDefined()) {\n      return null;\n    }\n    const style = header.get(\"style\").stringValue(void 0) as FontStyle | undefined;\n    const variant = header.get(\"variant\").stringValue(void 0) as FontVariant | undefined;\n    const weight = header.get(\"weight\").stringValue(void 0) as FontWeight | undefined;\n    const stretch = header.get(\"stretch\").stringValue(void 0) as FontStretch | undefined;\n    const size = FontSize.fromValue(header.get(\"size\"));\n    const height = LineHeight.fromValue(header.get(\"height\"));\n    const family = FontFamily.fromValue(header.get(\"family\"));\n    if (family === null) {\n      return null;\n    }\n    return Font.create(style, variant, weight, stretch, size, height, family);\n  }\n\n  static parse(string: string): Font {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = FontParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<Font, FontLike> {\n    return new FontForm(void 0);\n  }\n}\n\n/** @internal */\nexport interface FontInterpolator extends Interpolator<Font> {\n  /** @internal */\n  readonly styleInterpolator: Interpolator<FontStyle | undefined>;\n  /** @internal */\n  readonly variantInterpolator: Interpolator<FontVariant | undefined>;\n  /** @internal */\n  readonly weightInterpolator: Interpolator<FontWeight | undefined>;\n  /** @internal */\n  readonly stretchInterpolator: Interpolator<FontStretch | undefined>;\n  /** @internal */\n  readonly sizeInterpolator: Interpolator<FontSize | null>;\n  /** @internal */\n  readonly heightInterpolator: Interpolator<LineHeight | null>;\n  /** @internal */\n  readonly familyInterpolator: Interpolator<FontFamily | readonly FontFamily[]>;\n\n  get 0(): Font;\n\n  get 1(): Font;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const FontInterpolator = (function (_super: typeof Interpolator) {\n  const FontInterpolator = function (f0: Font, f1: Font): FontInterpolator {\n    const interpolator = function (u: number): Font {\n      const style = interpolator.styleInterpolator(u);\n      const variant = interpolator.variantInterpolator(u);\n      const weight = interpolator.weightInterpolator(u);\n      const stretch = interpolator.stretchInterpolator(u);\n      const size = interpolator.sizeInterpolator(u);\n      const height = interpolator.heightInterpolator(u);\n      const family = interpolator.familyInterpolator(u);\n      return new Font(style, variant, weight, stretch, size, height, family);\n    } as FontInterpolator;\n    Object.setPrototypeOf(interpolator, FontInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).styleInterpolator = Interpolator(f0.style, f1.style);\n    (interpolator as Mutable<typeof interpolator>).variantInterpolator = Interpolator(f0.variant, f1.variant);\n    (interpolator as Mutable<typeof interpolator>).weightInterpolator = Interpolator(f0.weight, f1.weight);\n    (interpolator as Mutable<typeof interpolator>).stretchInterpolator = Interpolator(f0.stretch, f1.stretch);\n    (interpolator as Mutable<typeof interpolator>).sizeInterpolator = Interpolator(f0.size, f1.size);\n    (interpolator as Mutable<typeof interpolator>).heightInterpolator = Interpolator(f0.height, f1.height);\n    (interpolator as Mutable<typeof interpolator>).familyInterpolator = Interpolator(f0.family, f1.family);\n    return interpolator;\n  } as {\n    (f0: Font, f1: Font): FontInterpolator;\n\n    /** @internal */\n    prototype: FontInterpolator;\n  };\n\n  FontInterpolator.prototype = Object.create(_super.prototype);\n  FontInterpolator.prototype.constructor = FontInterpolator;\n\n  Object.defineProperty(FontInterpolator.prototype, 0, {\n    get(this: FontInterpolator): Font {\n      const style = this.styleInterpolator[0];\n      const variant = this.variantInterpolator[0];\n      const weight = this.weightInterpolator[0];\n      const stretch = this.stretchInterpolator[0];\n      const size = this.sizeInterpolator[0];\n      const height = this.heightInterpolator[0];\n      const family = this.familyInterpolator[0];\n      return new Font(style, variant, weight, stretch, size, height, family);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FontInterpolator.prototype, 1, {\n    get(this: FontInterpolator): Font {\n      const style = this.styleInterpolator[1];\n      const variant = this.variantInterpolator[1];\n      const weight = this.weightInterpolator[1];\n      const stretch = this.stretchInterpolator[1];\n      const size = this.sizeInterpolator[1];\n      const height = this.heightInterpolator[1];\n      const family = this.familyInterpolator[1];\n      return new Font(style, variant, weight, stretch, size, height, family);\n    },\n    configurable: true,\n  });\n\n  FontInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FontInterpolator) {\n      return this.styleInterpolator.equals(that.styleInterpolator)\n          && this.variantInterpolator.equals(that.variantInterpolator)\n          && this.weightInterpolator.equals(that.weightInterpolator)\n          && this.stretchInterpolator.equals(that.stretchInterpolator)\n          && this.sizeInterpolator.equals(that.sizeInterpolator)\n          && this.heightInterpolator.equals(that.heightInterpolator)\n          && this.familyInterpolator.equals(that.familyInterpolator);\n    }\n    return false;\n  };\n\n  return FontInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class FontForm extends Form<Font, FontLike> {\n  constructor(unit: Font | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly unit: Font | undefined;\n\n  override withUnit(unit: Font | undefined): Form<Font, FontLike> {\n    if (unit === this.unit) {\n      return this;\n    }\n    return new FontForm(unit);\n  }\n\n  override mold(font: FontLike): Item {\n    font = Font.fromLike(font);\n    const header = Record.create(7);\n    if (font.style !== void 0) {\n      header.slot(\"style\", font.style);\n    }\n    if (font.variant !== void 0) {\n      header.slot(\"variant\", font.variant);\n    }\n    if (font.weight !== void 0) {\n      header.slot(\"weight\", font.weight);\n    }\n    if (font.stretch !== void 0) {\n      header.slot(\"stretch\", font.stretch);\n    }\n    if (font.size instanceof Length) {\n      header.slot(\"size\", Length.form().mold(font.size));\n    } else if (font.size !== void 0) {\n      header.slot(\"size\", font.size);\n    }\n    if (font.height instanceof Length) {\n      header.slot(\"height\", Length.form().mold(font.height));\n    } else if (font.height !== void 0) {\n      header.slot(\"height\", font.height);\n    }\n    if (Array.isArray(font.family)) {\n      const family = Record.create(font.family.length);\n      for (let i = 0; i < font.family.length; i += 1) {\n        family.push(font.family[i]);\n      }\n      header.slot(\"family\", family);\n    } else {\n      header.slot(\"family\", font.family);\n    }\n    return Record.of(Attr.of(\"font\", header));\n  }\n\n  override cast(item: Item): Font | undefined {\n    const value = item.toValue();\n    let font: Font | null = null;\n    try {\n      font = Font.fromValue(value);\n      if (font === null) {\n        const string = value.stringValue();\n        if (string !== void 0) {\n          font = Font.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return font !== null ? font : void 0;\n  }\n}\n\n/** @internal */\nexport class FontFamilyParser extends Parser<FontFamily> {\n  private readonly output: Output<string> | undefined;\n  private readonly quote: number | undefined;\n  private readonly code: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(output?: Output<string>, quote?: number, code?: number, step?: number) {\n    super();\n    this.output = output;\n    this.quote = quote;\n    this.code = code;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<FontFamily> {\n    return FontFamilyParser.parse(input, this.output, this.quote, this.code, this.step);\n  }\n\n  static parse<I, V>(input: Input, output?: Output<string>, quote: number = 0,\n                     code: number = 0, step: number = 1): Parser<FontFamily> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (Unicode.isAlpha(c) || c === 45/*'-'*/) {\n          output = output || Unicode.stringOutput();\n          step = 2;\n        } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/ && (quote === c || quote === 0)) {\n          input = input.step();\n          output = output || Unicode.stringOutput();\n          quote = c;\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"font family\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"font family\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        output!.write(c);\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(output!.bind());\n      }\n    }\n    string: do {\n      if (step === 3) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c >= 0x20 && c !== quote && c !== 92/*'\\\\'*/) {\n            input = input.step();\n            output!.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === quote) {\n            input = input.step();\n            return Parser.done(output!.bind());\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(quote, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(quote, input));\n        }\n      }\n      if (step === 4) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Base16.isDigit(c)) {\n            step = 5;\n          } else if (c === 10/*'\\n'*/) {\n            input.step();\n            step = 3;\n            continue;\n          } else {\n            input.step();\n            output!.write(c);\n            step = 3;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      if (step >= 5) {\n        do {\n          if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n            input = input.step();\n            code = 16 * code + Base16.decodeDigit(c);\n            if (step <= 11) {\n              step += 1;\n              continue;\n            } else {\n              if (code === 0) {\n                return Parser.error(Diagnostic.message(\"zero escape\", input));\n              }\n              output!.write(code);\n              code = 0;\n              step = 3;\n              continue string;\n            }\n          } else if (!input.isEmpty()) {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n          break;\n        } while (true);\n      }\n      break;\n    } while (true);\n    return new FontFamilyParser(output, quote, code, step);\n  }\n}\n\n/** @internal */\nexport class FontParser extends Parser<Font> {\n  private readonly style: FontStyle | undefined;\n  private readonly variant: FontVariant | undefined;\n  private readonly weight: FontWeight | undefined;\n  private readonly stretch: FontStretch | undefined;\n  private readonly size: FontSize | undefined;\n  private readonly height: LineHeight | undefined;\n  private readonly family: FontFamily | FontFamily[] | undefined;\n  private readonly identOutput: Output<string> | undefined;\n  private readonly lengthParser: Parser<Length> | undefined;\n  private readonly familyParser: Parser<FontFamily> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(style?: FontStyle, variant?: FontVariant, weight?: FontWeight,\n              stretch?: FontStretch, size?: FontSize, height?: LineHeight,\n              family?: FontFamily | FontFamily[], identOutput?: Output<string>,\n              lengthParser?: Parser<Length>, familyParser?: Parser<FontFamily>,\n              step?: number) {\n    super();\n    this.style = style;\n    this.variant = variant;\n    this.weight = weight;\n    this.stretch = stretch;\n    this.size = size;\n    this.height = height;\n    this.family = family;\n    this.identOutput = identOutput;\n    this.lengthParser = lengthParser;\n    this.familyParser = familyParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Font> {\n    return FontParser.parse(input, this.style, this.variant, this.weight,\n                            this.stretch, this.size, this.height, this.family,\n                            this.identOutput, this.lengthParser,\n                            this.familyParser, this.step);\n  }\n\n  static parse(input: Input, style?: FontStyle, variant?: FontVariant,\n               weight?: FontWeight, stretch?: FontStretch, size?: FontSize,\n               height?: LineHeight, family?: FontFamily | FontFamily[],\n               identOutput?: Output<string>, lengthParser?: Parser<Length>,\n               familyParser?: Parser<FontFamily>, step: number = 1): Parser<Font> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 2;\n          } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            step = 11;\n          } else {\n            step = 4;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 2) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"italic\":\n            case \"oblique\":\n              if (style === void 0) {\n                style = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font style: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"small-caps\":\n              if (variant === void 0) {\n                variant = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font variant: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"bold\":\n            case \"bolder\":\n            case \"lighter\":\n              if (weight === void 0) {\n                weight = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font weight: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"ultra-condensed\":\n            case \"extra-condensed\":\n            case \"semi-condensed\":\n            case \"condensed\":\n            case \"expanded\":\n            case \"semi-expanded\":\n            case \"extra-expanded\":\n            case \"ultra-expanded\":\n              if (stretch === void 0) {\n                stretch = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font stretch: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"normal\":\n              if (style === void 0) {\n                style = ident;\n              } else if (variant === void 0) {\n                variant = ident;\n              } else if (weight === void 0) {\n                weight = ident;\n              } else if (stretch === void 0) {\n                stretch = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font property: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"large\":\n            case \"larger\":\n            case \"medium\":\n            case \"small\":\n            case \"smaller\":\n            case \"x-large\":\n            case \"x-small\":\n            case \"xx-large\":\n            case \"xx-small\":\n              size = ident;\n              step = 5;\n              break;\n            default:\n              family = ident;\n              step = 12;\n          }\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 1;\n            continue;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font property, size, or family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (lengthParser === void 0) {\n          lengthParser = LengthParser.parse(input);\n        } else {\n          lengthParser = lengthParser.feed(input);\n        }\n        if (lengthParser.isDone()) {\n          const length = lengthParser.bind();\n          if (length.units === \"\") {\n            const value = length.value;\n            switch (value) {\n              case 100:\n              case 200:\n              case 300:\n              case 400:\n              case 500:\n              case 600:\n              case 700:\n              case 800:\n              case 900:\n                if (weight === void 0) {\n                  weight = String(value) as FontWeight;\n                } else {\n                  return Parser.error(Diagnostic.message(\"reapeated font weight: \" + value, input));\n                }\n                break;\n              default:\n                return Parser.error(Diagnostic.message(\"unknown font property: \" + value, input));\n            }\n            step = 3;\n            continue;\n          } else {\n            size = length;\n            lengthParser = void 0;\n            step = 5;\n          }\n        } else if (lengthParser.isError()) {\n          return lengthParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 6;\n          } else if (c === 47/*'/'*/) {\n            input.step();\n            step = 7;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (c === 47/*'/'*/) {\n            input.step();\n            step = 7;\n          } else {\n            step = 11;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 7) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 8;\n          } else {\n            step = 9;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 8) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"normal\":\n              height = ident;\n              step = 10;\n              break;\n            default:\n              return Parser.error(Diagnostic.message(\"unknown line height: \" + ident, input));\n          }\n        }\n      }\n      if (step === 9) {\n        if (lengthParser === void 0) {\n          lengthParser = LengthParser.parse(input);\n        } else {\n          lengthParser = lengthParser.feed(input);\n        }\n        if (lengthParser.isDone()) {\n          height = lengthParser.bind();\n          lengthParser = void 0;\n          step = 10;\n        } else if (lengthParser.isError()) {\n          return lengthParser.asError();\n        }\n      }\n      if (step === 10) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 11;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 11) {\n        if (familyParser === void 0) {\n          familyParser = FontFamilyParser.parse(input);\n        } else {\n          familyParser = familyParser.feed(input);\n        }\n        if (familyParser.isDone()) {\n          if (Array.isArray(family)) {\n            family.push(familyParser.bind());\n          } else if (family !== void 0) {\n            family = [family!, familyParser.bind()];\n          } else {\n            family = familyParser.bind();\n          }\n          familyParser = void 0;\n          step = 12;\n        } else if (familyParser.isError()) {\n          return familyParser.asError();\n        }\n      }\n      if (step === 12) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input.step();\n          step = 11;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.done(Font.create(style, variant, weight, stretch, size, height, family!));\n        }\n      }\n      break;\n    } while (true);\n    return new FontParser(style, variant, weight, stretch, size, height, family,\n                          identOutput, lengthParser, familyParser, step);\n  }\n\n  static parseRest(input: Input, style?: FontStyle, variant?: FontVariant,\n                   weight?: FontWeight, stretch?: FontStretch, size?: FontSize,\n                   height?: LineHeight, family?: FontFamily | FontFamily[]): Parser<Font> {\n    const step = family !== void 0 ? 12 : size !== void 0 ? 5 : 3;\n    return FontParser.parse(input, style, variant, weight, stretch, size, height,\n                            family, void 0, void 0, void 0, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport type {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Base10} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport type {Item} from \"@swim/structure\";\nimport type {Value} from \"@swim/structure\";\nimport {Text} from \"@swim/structure\";\nimport {Form} from \"@swim/structure\";\nimport type {AngleLike} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {RgbColorInit} from \"./\"; // forward import\nimport {RgbColor} from \"./\"; // forward import\nimport {RgbColorInterpolator} from \"./\"; // forward import\nimport {RgbColorParser} from \"./\"; // forward import\nimport {HexColorParser} from \"./\"; // forward import\nimport {HslColorInit} from \"./\"; // forward import\nimport {HslColor} from \"./\"; // forward import\nimport {HslColorParser} from \"./\"; // forward import\n\n/** @public */\nexport type ColorLike = Color | ColorInit | string;\n\n/** @public */\nexport const ColorLike = {\n  [Symbol.hasInstance](instance: unknown): instance is ColorLike {\n    return instance instanceof Color\n        || ColorInit[Symbol.hasInstance](instance)\n        || typeof instance === \"string\";\n  },\n};\n\n/** @public */\nexport type ColorInit = RgbColorInit | HslColorInit;\n\n/** @public */\nexport const ColorInit = {\n  [Symbol.hasInstance](instance: unknown): instance is ColorInit {\n    return RgbColorInit[Symbol.hasInstance](instance)\n        || HslColorInit[Symbol.hasInstance](instance);\n  },\n};\n\n/** @public */\nexport abstract class Color implements Interpolate<Color>, HashCode, Equivalent, Debug {\n  likeType?(like: ColorInit | string): void;\n\n  abstract isDefined(): boolean;\n\n  abstract alpha(): number;\n  abstract alpha(a: number): Color;\n\n  abstract plus(that: ColorLike): Color;\n\n  abstract times(scalar: number): Color;\n\n  abstract combine(that: ColorLike, scalar?: number): Color;\n\n  abstract readonly lightness: number;\n\n  abstract lighter(k?: number): Color;\n\n  abstract darker(k?: number): Color;\n\n  contrast(k?: number): Color {\n    return this.lightness < 0.67 ? this.lighter(k) : this.darker(k);\n  }\n\n  abstract rgb(): RgbColor;\n\n  abstract hsl(): HslColor;\n\n  /** @override */\n  interpolateTo(that: Color): Interpolator<Color>;\n  interpolateTo(that: unknown): Interpolator<Color> | null;\n  interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof Color) {\n      return RgbColorInterpolator(this.rgb(), that.rgb());\n    }\n    return null;\n  }\n\n  /** @override */\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  /** @override */\n  abstract equals(other: unknown): boolean;\n\n  /** @override */\n  abstract hashCode(): number;\n\n  /** @override */\n  abstract debug<T>(output: Output<T>): Output<T>;\n\n  abstract toHexString(): string;\n\n  abstract toRgbString(): string;\n\n  abstract toHslString(): string;\n\n  /** @override */\n  abstract toString(): string;\n\n  static transparent(): Color {\n    return RgbColor.transparent();\n  }\n\n  static black(alpha?: number): Color {\n    return RgbColor.black(alpha);\n  }\n\n  static white(alpha?: number): Color {\n    return RgbColor.white(alpha);\n  }\n\n  static rgb(r: number, g: number, b: number, a?: number): RgbColor {\n    return new RgbColor(r, g, b, a);\n  }\n\n  static hsl(h: AngleLike, s: number, l: number, a?: number): HslColor {\n    if (typeof h !== \"number\") {\n      h = Angle.fromLike(h).degValue();\n    }\n    return new HslColor(h, s, l, a);\n  }\n\n  static forName(name: string): Color | null {\n    switch (name) {\n      case \"transparent\": return Color.transparent();\n      case \"black\": return Color.black();\n      case \"white\": return Color.white();\n      default: return null;\n    }\n  }\n\n  static fromLike<T extends ColorLike | null | undefined>(value: T): Color | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Color) {\n      return value as Color | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return Color.parse(value);\n    }\n    return Color.fromInit(value);\n  }\n\n  static fromInit(value: ColorInit): Color {\n    if (RgbColorInit[Symbol.hasInstance](value)) {\n      return RgbColor.fromInit(value);\n    } else if (HslColorInit[Symbol.hasInstance](value)) {\n      return HslColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): Color | null {\n    let color: Color | null;\n    color = RgbColor.fromValue(value);\n    if (color === void 0) {\n      color = HslColor.fromValue(value);\n    }\n    return color;\n  }\n\n  static parse(string: string): Color {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<Color, ColorLike> {\n    return new ColorForm(Color.transparent());\n  }\n\n  /** @internal */\n  static Darker: number = 0.7;\n  /** @internal */\n  static Brighter: number = 1 / this.Darker;\n}\n\n/** @internal */\nexport class ColorForm extends Form<Color, ColorLike> {\n  constructor(unit: Color | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly unit: Color | undefined;\n\n  override withUnit(unit: Color | undefined): Form<Color, ColorLike> {\n    if (unit === this.unit) {\n      return this;\n    }\n    return new ColorForm(unit);\n  }\n\n  override mold(color: ColorLike): Item {\n    color = Color.fromLike(color);\n    return Text.from(color.toString());\n  }\n\n  override cast(item: Item): Color | undefined {\n    const value = item.toValue();\n    let color: Color | null = null;\n    try {\n      color = Color.fromValue(value);\n      if (color === void 0) {\n        const string = value.stringValue(void 0);\n        if (string !== void 0) {\n          color = Color.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return color !== null ? color : void 0;\n  }\n}\n\n/** @internal */\nexport class ColorParser extends Parser<Color> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Color> {\n    return ColorParser.parse(input, this.identOutput, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, step: number = 1): Parser<Color> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        if (input.head() === 35/*'#'*/) {\n          return HexColorParser.parse(input);\n        } else {\n          step = 2;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"rgb\":\n          case \"rgba\": return RgbColorParser.parseRest(input);\n          case \"hsl\":\n          case \"hsla\": return HslColorParser.parseRest(input);\n          default: {\n            const color = Color.forName(ident);\n            if (color !== null) {\n              return Parser.done(color);\n            } else {\n              return Parser.error(Diagnostic.message(\"unknown color: \" + ident, input));\n            }\n          }\n        }\n      }\n    }\n    return new ColorParser(identOutput, step);\n  }\n}\n\n/** @internal */\nexport class ColorChannel {\n  constructor(value: number, units?: string) {\n    this.value = value;\n    this.units = units !== void 0 ? units : \"\";\n  }\n\n  readonly value: number;\n\n  readonly units: string;\n\n  scale(k: number): number {\n    if (this.units === \"%\") {\n      return this.value * k / 100;\n    } else {\n      return this.value;\n    }\n  }\n}\n\n/** @internal */\nexport class ColorChannelParser extends Parser<ColorChannel> {\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(valueParser?: Parser<number>, step?: number) {\n    super();\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorChannel> {\n    return ColorChannelParser.parse(input, this.valueParser, this.step);\n  }\n\n  static parse(input: Input, valueParser?: Parser<number>, step: number = 1): Parser<ColorChannel> {\n    if (step === 1) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseNumber(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 2;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 37/*'%'*/) {\n        input = input.step();\n        return Parser.done(new ColorChannel(valueParser!.bind(), \"%\"));\n      } else if (!input.isEmpty()) {\n        return Parser.done(new ColorChannel(valueParser!.bind()));\n      }\n    }\n    return new ColorChannelParser(valueParser, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Base16} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport type {Item} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport type {ColorLike} from \"./Color\";\nimport {Color} from \"./Color\";\nimport type {ColorChannel} from \"./Color\";\nimport {ColorChannelParser} from \"./Color\";\nimport {HslColor} from \"./\"; // forward import\n\n/** @public */\nexport type RgbColorLike = RgbColor | RgbColorInit | string;\n\n/** @public */\nexport const RgbColorLike = {\n  [Symbol.hasInstance](instance: unknown): instance is RgbColorLike {\n    return instance instanceof RgbColor\n        || RgbColorInit[Symbol.hasInstance](instance)\n        || typeof instance === \"string\";\n  },\n};\n\n/** @public */\nexport interface RgbColorInit {\n  readonly r: number;\n  readonly g: number;\n  readonly b: number;\n  readonly a?: number;\n}\n\n/** @public */\nexport const RgbColorInit = {\n  [Symbol.hasInstance](instance: unknown): instance is RgbColorInit {\n    return Objects.hasAllKeys(instance, \"r\", \"g\", \"b\");\n  },\n};\n\n/** @public */\nexport class RgbColor extends Color {\n  constructor(r: number, g: number, b: number, a: number = 1) {\n    super();\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n    this.stringValue = void 0;\n  }\n\n  override likeType?(like: RgbColorInit | string): void;\n\n  override isDefined(): boolean {\n    return isFinite(this.r) && isFinite(this.g)\n        && isFinite(this.b) && isFinite(this.a);\n  }\n\n  readonly r: number;\n\n  readonly g: number;\n\n  readonly b: number;\n\n  readonly a: number;\n\n  override alpha(): number;\n  override alpha(a: number): RgbColor;\n  override alpha(a?: number): number | RgbColor {\n    if (a === void 0) {\n      return this.a;\n    } else if (this.a === a) {\n      return this;\n    }\n    return new RgbColor(this.r, this.g, this.b, a);\n  }\n\n  override get lightness(): number {\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    return (max + min) / 2;\n  }\n\n  override plus(that: ColorLike): RgbColor {\n    that = Color.fromLike(that).rgb();\n    return new RgbColor(this.r + (that as RgbColor).r, this.g + (that as RgbColor).g,\n                        this.b + (that as RgbColor).b, this.a + (that as RgbColor).a);\n  }\n\n  override times(scalar: number): RgbColor {\n    return new RgbColor(this.r * scalar, this.g * scalar, this.b * scalar, this.a * scalar);\n  }\n\n  override combine(that: ColorLike, scalar: number = 1): Color {\n    that = Color.fromLike(that).rgb();\n    return new RgbColor(this.r + (that as RgbColor).r * scalar, this.g + (that as RgbColor).g * scalar,\n                        this.b + (that as RgbColor).b * scalar, this.a + (that as RgbColor).a * scalar);\n  }\n\n  override lighter(k?: number): RgbColor {\n    k = k === void 0 ? Color.Brighter : Math.pow(Color.Brighter, k);\n    return k !== 1 ? new RgbColor(this.r * k, this.g * k, this.b * k, this.a) : this;\n  }\n\n  override darker(k?: number): RgbColor {\n    k = k === void 0 ? Color.Darker : Math.pow(Color.Darker, k);\n    return k !== 1 ? new RgbColor(this.r * k, this.g * k, this.b * k, this.a) : this;\n  }\n\n  override rgb(): RgbColor {\n    return this;\n  }\n\n  override hsl(): HslColor {\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    let h = NaN;\n    let s = max - min;\n    const l = (max + min) / 2;\n    if (s !== 0) {\n      if (r === max) {\n        h = (g - b) / s + +(g < b) * 6;\n      } else if (g === max) {\n        h = (b - r) / s + 2;\n      } else {\n        h = (r - g) / s + 4;\n      }\n      s /= l < 0.5 ? max + min : 2 - (max + min);\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new HslColor(h, s, l, this.a);\n  }\n\n  override interpolateTo(that: RgbColor): Interpolator<RgbColor>;\n  override interpolateTo(that: Color): Interpolator<Color>;\n  override interpolateTo(that: unknown): Interpolator<Color> | null;\n  override interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof RgbColor) {\n      return RgbColorInterpolator(this, that);\n    }\n    return super.interpolateTo(that);\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Color) {\n      that = that.rgb();\n      return Numbers.equivalent(this.r, (that as RgbColor).r, epsilon)\n          && Numbers.equivalent(this.g, (that as RgbColor).g, epsilon)\n          && Numbers.equivalent(this.b, (that as RgbColor).b, epsilon)\n          && Numbers.equivalent(this.a, (that as RgbColor).a, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof RgbColor) {\n      return this.r === that.r && this.g === that.g && this.b === that.b && this.a === that.a;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(RgbColor),\n        Numbers.hash(this.r)), Numbers.hash(this.g)), Numbers.hash(this.b)), Numbers.hash(this.a)));\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Color\").write(46/*'.'*/).write(\"rgb\").write(40/*'('*/)\n                   .debug(this.r).write(\", \").debug(this.g).write(\", \").debug(this.b);\n    if (this.a !== 1) {\n      output = output.write(\", \").debug(this.a);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  override toHexString(): string {\n    const r = Math.min(Math.max(0, Math.round(this.r || 0)), 255);\n    const g = Math.min(Math.max(0, Math.round(this.g || 0)), 255);\n    const b = Math.min(Math.max(0, Math.round(this.b || 0)), 255);\n    let s = \"#\";\n    const base16Alphabet = Base16.lowercase.alphabet;\n    s += base16Alphabet.charAt(r >>> 4 & 0xf);\n    s += base16Alphabet.charAt(r & 0xf);\n    s += base16Alphabet.charAt(g >>> 4 & 0xf);\n    s += base16Alphabet.charAt(g & 0xf);\n    s += base16Alphabet.charAt(b >>> 4 & 0xf);\n    s += base16Alphabet.charAt(b & 0xf);\n    return s;\n  }\n\n  toRgbString(): string {\n    let a = this.a;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n    let s = a === 1 ? \"rgb\" : \"rgba\";\n    s += \"(\";\n    s += Math.max(0, Math.min(Math.round(this.r) || 0, 255));\n    s += \",\";\n    s += Math.max(0, Math.min(Math.round(this.g) || 0, 255));\n    s += \",\";\n    s += Math.max(0, Math.min(Math.round(this.b) || 0, 255));\n    if (a !== 1) {\n      s += \",\";\n      s += a;\n    }\n    s += \")\";\n    return s;\n  }\n\n  override toHslString(): string {\n    return this.hsl().toHslString();\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  override toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      let a = this.a;\n      a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n      if (a === 1) {\n        s = this.toHexString();\n      } else {\n        s = this.toRgbString();\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  @Lazy\n  static override transparent(): RgbColor {\n    return new RgbColor(0, 0, 0, 0);\n  }\n\n  static override black(alpha: number = 1): RgbColor {\n    return new RgbColor(0, 0, 0, alpha);\n  }\n\n  static override white(alpha: number = 1): RgbColor {\n    return new RgbColor(255, 255, 255, alpha);\n  }\n\n  static override fromLike<T extends RgbColorLike | null | undefined>(value: T): RgbColor | Uninitable<T>;\n  static override fromLike<T extends ColorLike | null | undefined>(value: T): never;\n  static override fromLike<T extends RgbColorLike | null | undefined>(value: T): RgbColor | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof RgbColor) {\n      return value as RgbColor | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return RgbColor.parse(value);\n    } else if (RgbColorInit[Symbol.hasInstance](value)) {\n      return RgbColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromInit(value: RgbColorInit): RgbColor {\n    return new RgbColor(value.r, value.g, value.b, value.a);\n  }\n\n  static override fromValue(value: Value): RgbColor | null {\n    const tag = value.tag;\n    let positional: boolean;\n    if (tag === \"rgb\" || tag === \"rgba\") {\n      value = value.header(tag);\n      positional = true;\n    } else {\n      positional = false;\n    }\n    let r: number | undefined;\n    let g: number | undefined;\n    let b: number | undefined;\n    let a: number | undefined;\n    value.forEach(function (member: Item, index: number): void {\n      const key = member.key.stringValue();\n      if (key !== void 0) {\n        if (key === \"r\") {\n          r = member.toValue().numberValue(r);\n        } else if (key === \"g\") {\n          g = member.toValue().numberValue(g);\n        } else if (key === \"b\") {\n          b = member.toValue().numberValue(b);\n        } else if (key === \"a\") {\n          a = member.toValue().numberValue(a);\n        }\n      } else if (member instanceof Value && positional) {\n        if (index === 0) {\n          r = member.numberValue(r);\n        } else if (index === 1) {\n          g = member.numberValue(g);\n        } else if (index === 2) {\n          b = member.numberValue(b);\n        } else if (index === 3) {\n          a = member.numberValue(a);\n        }\n      }\n    });\n    if (r !== void 0 && g !== void 0 && b !== void 0) {\n      return new RgbColor(r, g, b, a);\n    }\n    return null;\n  }\n\n  static override parse(str: string): RgbColor {\n    return Color.parse(str).rgb();\n  }\n}\n\n/** @internal */\nexport const RgbColorInterpolator = (function (_super: typeof Interpolator) {\n  const RgbColorInterpolator = function (c0: RgbColor, c1: RgbColor): Interpolator<RgbColor> {\n    const interpolator = function (u: number): RgbColor {\n      const c0 = interpolator[0];\n      const c1 = interpolator[1];\n      const r = c0.r + u * (c1.r - c0.r);\n      const g = c0.g + u * (c1.g - c0.g);\n      const b = c0.b + u * (c1.b - c0.b);\n      const a = c0.a + u * (c1.a - c0.a);\n      return new RgbColor(r, g, b, a);\n    } as Interpolator<RgbColor>;\n    Object.setPrototypeOf(interpolator, RgbColorInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = c0;\n    (interpolator as Mutable<typeof interpolator>)[1] = c1;\n    return interpolator;\n  } as {\n    (c0: RgbColor, c1: RgbColor): Interpolator<RgbColor>;\n\n    /** @internal */\n    prototype: Interpolator<RgbColor>;\n  };\n\n  RgbColorInterpolator.prototype = Object.create(_super.prototype);\n  RgbColorInterpolator.prototype.constructor = RgbColorInterpolator;\n\n  return RgbColorInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class RgbColorParser extends Parser<RgbColor> {\n  private readonly rParser: Parser<ColorChannel> | undefined;\n  private readonly gParser: Parser<ColorChannel> | undefined;\n  private readonly bParser: Parser<ColorChannel> | undefined;\n  private readonly aParser: Parser<ColorChannel> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(rParser?: Parser<ColorChannel>, gParser?: Parser<ColorChannel>,\n              bParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n              step?: number) {\n    super();\n    this.rParser = rParser;\n    this.gParser = gParser;\n    this.bParser = bParser;\n    this.aParser = aParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<RgbColor> {\n    return RgbColorParser.parse(input, this.rParser, this.gParser,\n                                this.bParser, this.aParser, this.step);\n  }\n\n  static parse(input: Input, rParser?: Parser<ColorChannel>, gParser?: Parser<ColorChannel>,\n               bParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n               step?: number): Parser<RgbColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 114/*'r'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"r\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 103/*'g'*/) {\n        input = input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"g\", input));\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 98/*'b'*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"b\", input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 97/*'a'*/) {\n        input = input.step();\n        step = 5;\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input = input.step();\n        step = 6;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 6) {\n      if (rParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          rParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        rParser = rParser.feed(input);\n      }\n      if (rParser !== void 0) {\n        if (rParser.isDone()) {\n          step = 7;\n        } else if (rParser.isError()) {\n          return rParser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 8) {\n      if (gParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          gParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        gParser = gParser.feed(input);\n      }\n      if (gParser !== void 0) {\n        if (gParser.isDone()) {\n          step = 9;\n        } else if (gParser.isError()) {\n          return gParser.asError();\n        }\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 10) {\n      if (bParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          bParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        bParser = bParser.feed(input);\n      }\n      if (bParser !== void 0) {\n        if (bParser.isDone()) {\n          step = 11;\n        } else if (bParser.isError()) {\n          return bParser.asError();\n        }\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(new RgbColor(rParser!.bind().scale(255),\n                                          gParser!.bind().scale(255),\n                                          bParser!.bind().scale(255)));\n        } else if (c === 44/*','*/ || c === 47/*'/'*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 12) {\n      if (aParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          aParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        aParser = aParser.feed(input);\n      }\n      if (aParser !== void 0) {\n        if (aParser.isDone()) {\n          step = 13;\n        } else if (aParser.isError()) {\n          return aParser.asError();\n        }\n      }\n    }\n    if (step === 13) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 41/*')'*/) {\n        input = input.step();\n        return Parser.done(new RgbColor(rParser!.bind().scale(255),\n                                        gParser!.bind().scale(255),\n                                        bParser!.bind().scale(255),\n                                        aParser!.bind().scale(1)));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new RgbColorParser(rParser, gParser, bParser, aParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input): Parser<RgbColor> {\n    return RgbColorParser.parse(input, void 0, void 0, void 0, void 0, 5);\n  }\n}\n\n/** @internal */\nexport class HexColorParser extends Parser<RgbColor> {\n  private readonly value: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(value?: number, step?: number) {\n    super();\n    this.value = value;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<RgbColor> {\n    return HexColorParser.parse(input, this.value, this.step);\n  }\n\n  static parse(input: Input, value: number = 0, step: number = 1): Parser<RgbColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 35/*'#'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"#\", input));\n      }\n    }\n    if (step >= 2) {\n      while (step <= 9 && input.isCont()) {\n        c = input.head();\n        if (Base16.isDigit(c)) {\n          input = input.step();\n          value = (value << 4) | Base16.decodeDigit(c);\n          step += 1;\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        if (step === 5) { // #xxx\n          return Parser.done(new RgbColor(value >> 8 & 0x0f | value >> 4 & 0xf0,\n                                          value >> 4 & 0x0f | value & 0xf0,\n                                          value << 4 & 0xf0 | value & 0x0f));\n        } else if (step === 6) { // #xxxx\n          return Parser.done(new RgbColor(value >> 12 & 0x0f | value >> 8 & 0xf0,\n                                          value >> 8 & 0x0f | value >> 4 & 0xf0,\n                                          value >> 4 & 0x0f | value & 0xf0,\n                                          (value << 4 & 0xf0 | value & 0x0f) / 255));\n        } else if (step === 8) { // #xxxxxx\n          return Parser.done(new RgbColor(value >> 16 & 0xff,\n                                          value >> 8 & 0xff,\n                                          value & 0xff));\n        } else if (step === 10) { // #xxxxxxxx\n          return Parser.done(new RgbColor(value >> 24 & 0xff,\n                                          value >> 16 & 0xff,\n                                          value >> 8 & 0xff,\n                                          (value & 0xff) / 255));\n        } else {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n    }\n    return new HexColorParser(value, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport type {Item} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport type {AngleLike} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {AngleParser} from \"@swim/math\";\nimport type {ColorLike} from \"./Color\";\nimport {Color} from \"./Color\";\nimport type {ColorChannel} from \"./Color\";\nimport {ColorChannelParser} from \"./Color\";\nimport {RgbColor} from \"./RgbColor\";\n\n/** @public */\nexport type HslColorLike = HslColor | HslColorInit | string;\n\n/** @public */\nexport const HslColorLike = {\n  [Symbol.hasInstance](instance: unknown): instance is HslColorLike {\n    return instance instanceof HslColor\n        || HslColorInit[Symbol.hasInstance](instance)\n        || typeof instance === \"string\";\n  },\n};\n\n/** @public */\nexport interface HslColorInit {\n  readonly h: AngleLike;\n  readonly s: number;\n  readonly l: number;\n  readonly a?: number;\n}\n\n/** @public */\nexport const HslColorInit = {\n  [Symbol.hasInstance](instance: unknown): instance is HslColorInit {\n    return Objects.hasAllKeys(instance, \"h\", \"s\", \"l\");\n  },\n};\n\n/** @public */\nexport class HslColor extends Color {\n  constructor(h: number, s: number, l: number, a: number = 1) {\n    super();\n    this.h = h;\n    this.s = s;\n    this.l = l;\n    this.a = a;\n    this.stringValue = void 0;\n  }\n\n  override likeType?(like: HslColorInit | string): void;\n\n  override isDefined(): boolean {\n    return isFinite(this.h) && isFinite(this.s)\n        && isFinite(this.l) && isFinite(this.a);\n  }\n\n  readonly h: number;\n\n  readonly s: number;\n\n  readonly l: number;\n\n  readonly a: number;\n\n  override alpha(): number;\n  override alpha(a: number): HslColor;\n  override alpha(a?: number): number | HslColor {\n    if (a === void 0) {\n      return this.a;\n    } else if (this.a === a) {\n      return this;\n    }\n    return new HslColor(this.h, this.s, this.l, a);\n  }\n\n  override get lightness(): number {\n    return this.l;\n  }\n\n  override plus(that: ColorLike): HslColor {\n    that = Color.fromLike(that).hsl();\n    return new HslColor(this.h + (that as HslColor).h, this.s + (that as HslColor).s,\n                        this.l + (that as HslColor).l, this.a + (that as HslColor).a);\n  }\n\n  override times(scalar: number): HslColor {\n    return new HslColor(this.h * scalar, this.s * scalar, this.l * scalar, this.a * scalar);\n  }\n\n  override combine(that: ColorLike, scalar: number = 1): HslColor {\n    that = Color.fromLike(that).hsl();\n    return new HslColor(this.h + (that as HslColor).h * scalar, this.s + (that as HslColor).s * scalar,\n                        this.l + (that as HslColor).l * scalar, this.a + (that as HslColor).a * scalar);\n  }\n\n  override lighter(k?: number): HslColor {\n    k = k === void 0 ? Color.Brighter : Math.pow(Color.Brighter, k);\n    return k !== 1 ? new HslColor(this.h, this.s, this.l * k, this.a) : this;\n  }\n\n  override darker(k?: number): HslColor {\n    k = k === void 0 ? Color.Darker : Math.pow(Color.Darker, k);\n    return k !== 1 ? new HslColor(this.h, this.s, this.l * k, this.a) : this;\n  }\n\n  private static toRgb(h: number, m1: number, m2: number): number {\n    return 255 * (h < 60 ? m1 + (m2 - m1) * h / 60\n                         : h < 180 ? m2\n                                   : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n                                             : m1);\n  }\n\n  override rgb(): RgbColor {\n    const h = this.h % 360 + +(this.h < 0) * 360;\n    const s = isNaN(h) || isNaN(this.s) ? 0 : this.s;\n    const l = this.l;\n    const m2 = l + (l < 0.5 ? l : 1 - l) * s;\n    const m1 = 2 * l - m2;\n    return new RgbColor(HslColor.toRgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n                        HslColor.toRgb(h, m1, m2),\n                        HslColor.toRgb(h < 120 ? h + 240 : h - 120, m1, m2),\n                        this.a);\n  }\n\n  override hsl(): HslColor {\n    return this;\n  }\n\n  override interpolateTo(that: HslColor): Interpolator<HslColor>;\n  override interpolateTo(that: Color): Interpolator<Color>;\n  override interpolateTo(that: unknown): Interpolator<Color> | null;\n  override interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof HslColor) {\n      return HslColorInterpolator(this, that);\n    }\n    return super.interpolateTo(that);\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Color) {\n      that = that.hsl();\n      return Numbers.equivalent(this.h, (that as HslColor).h, epsilon)\n          && Numbers.equivalent(this.s, (that as HslColor).s, epsilon)\n          && Numbers.equivalent(this.l, (that as HslColor).l, epsilon)\n          && Numbers.equivalent(this.a, (that as HslColor).a, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof HslColor) {\n      return this.h === that.h && this.s === that.s && this.l === that.l && this.a === that.a;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(HslColor),\n        Numbers.hash(this.h)), Numbers.hash(this.s)), Numbers.hash(this.l)), Numbers.hash(this.a)));\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Color\").write(46/*'.'*/).write(\"hsl\").write(40/*'('*/)\n                   .debug(this.h).write(\", \").debug(this.s).write(\", \").debug(this.l);\n    if (this.a !== 1) {\n      output = output.write(\", \").debug(this.a);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  override toHexString(): string {\n    return this.rgb().toHexString();\n  }\n\n  override toRgbString(): string {\n    return this.rgb().toRgbString();\n  }\n\n  override toHslString(): string {\n    let a = this.a;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n    let s = a === 1 ? \"hsl\" : \"hsla\";\n    s += \"(\";\n    s += Math.max(0, Math.min(Math.round(this.h) || 0, 360));\n    s += \",\";\n    s += Math.max(0, Math.min(100 * Math.round(this.s) || 0, 100)) + \"%\";\n    s += \",\";\n    s += Math.max(0, Math.min(100 * Math.round(this.l) || 0, 100)) + \"%\";\n    if (a !== 1) {\n      s += \",\";\n      s += a;\n    }\n    s += \")\";\n    return s;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  override toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = this.toHslString();\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  @Lazy\n  static override transparent(): HslColor {\n    return new HslColor(0, 0, 0, 0);\n  }\n\n  static override black(alpha: number = 1): HslColor {\n    return new HslColor(0, 0, 0, alpha);\n  }\n\n  static override white(alpha: number = 1): HslColor {\n    return new HslColor(0, 1, 1, alpha);\n  }\n\n  static override fromLike<T extends HslColorLike | null | undefined>(value: T): HslColor | Uninitable<T>;\n  static override fromLike<T extends ColorLike | null | undefined>(value: T): never;\n  static override fromLike<T extends HslColorLike | null | undefined>(value: T): HslColor | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof HslColor) {\n      return value as HslColor | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return HslColor.parse(value);\n    } else if (HslColorInit[Symbol.hasInstance](value)) {\n      return HslColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromInit(value: HslColorInit): HslColor {\n    const h = typeof value.h === \"number\" ? value.h : Angle.fromLike(value.h).degValue();\n    return new HslColor(h, value.s, value.l, value.a);\n  }\n\n  static override fromValue(value: Value): HslColor | null {\n    const tag = value.tag;\n    let positional: boolean;\n    if (tag === \"hsl\" || tag === \"hsla\") {\n      value = value.header(tag);\n      positional = true;\n    } else {\n      positional = false;\n    }\n    let h: Angle | undefined;\n    let s: number | undefined;\n    let l: number | undefined;\n    let a: number | undefined;\n    value.forEach(function (member: Item, index: number): void {\n      const key = member.key.stringValue();\n      if (key !== void 0) {\n        if (key === \"h\") {\n          h = member.toValue().cast(Angle.form(), h);\n        } else if (key === \"s\") {\n          s = member.toValue().numberValue(s);\n        } else if (key === \"l\") {\n          l = member.toValue().numberValue(l);\n        } else if (key === \"a\") {\n          a = member.toValue().numberValue(a);\n        }\n      } else if (member instanceof Value && positional) {\n        if (index === 0) {\n          h = member.cast(Angle.form(), h);\n        } else if (index === 1) {\n          s = member.numberValue(s);\n        } else if (index === 2) {\n          l = member.numberValue(l);\n        } else if (index === 3) {\n          a = member.numberValue(a);\n        }\n      }\n    });\n    if (h !== void 0 && s !== void 0 && l !== void 0) {\n      return new HslColor(h.degValue(), s, l, a);\n    }\n    return null;\n  }\n\n  static override parse(str: string): HslColor {\n    return Color.parse(str).hsl();\n  }\n}\n\n/** @internal */\nexport const HslColorInterpolator = (function (_super: typeof Interpolator) {\n  const HslColorInterpolator = function (c0: HslColor, c1: HslColor): Interpolator<HslColor> {\n    const interpolator = function (u: number): HslColor {\n      const c0 = interpolator[0];\n      const c1 = interpolator[1];\n      const h = c0.h + u * (c1.h - c0.h);\n      const s = c0.s + u * (c1.s - c0.s);\n      const l = c0.l + u * (c1.l - c0.l);\n      const a = c0.a + u * (c1.a - c0.a);\n      return new HslColor(h, s, l, a);\n    } as Interpolator<HslColor>;\n    Object.setPrototypeOf(interpolator, HslColorInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = c0;\n    (interpolator as Mutable<typeof interpolator>)[1] = c1;\n    return interpolator;\n  } as {\n    (c0: HslColor, c1: HslColor): Interpolator<HslColor>;\n\n    /** @internal */\n    prototype: Interpolator<HslColor>;\n  };\n\n  HslColorInterpolator.prototype = Object.create(_super.prototype);\n  HslColorInterpolator.prototype.constructor = HslColorInterpolator;\n\n  return HslColorInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class HslColorParser extends Parser<HslColor> {\n  private readonly hParser: Parser<Angle> | undefined;\n  private readonly sParser: Parser<ColorChannel> | undefined;\n  private readonly lParser: Parser<ColorChannel> | undefined;\n  private readonly aParser: Parser<ColorChannel> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(hParser?: Parser<Angle>, sParser?: Parser<ColorChannel>,\n              lParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n              step?: number) {\n    super();\n    this.hParser = hParser;\n    this.sParser = sParser;\n    this.lParser = lParser;\n    this.aParser = aParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<HslColor> {\n    return HslColorParser.parse(input, this.hParser, this.sParser,\n                                this.lParser, this.aParser, this.step);\n  }\n\n  static parse(input: Input, hParser?: Parser<Angle>, sParser?: Parser<ColorChannel>,\n               lParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n               step?: number): Parser<HslColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 104/*'h'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"h\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 115/*'s'*/) {\n        input = input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"s\", input));\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 108/*'l'*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"l\", input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 97/*'a'*/) {\n        input = input.step();\n        step = 5;\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input = input.step();\n        step = 6;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 6) {\n      if (hParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          hParser = AngleParser.parse(input, \"deg\");\n        }\n      } else {\n        hParser = hParser.feed(input);\n      }\n      if (hParser !== void 0) {\n        if (hParser.isDone()) {\n          step = 7;\n        } else if (hParser.isError()) {\n          return hParser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 8) {\n      if (sParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          sParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        sParser = sParser.feed(input);\n      }\n      if (sParser !== void 0) {\n        if (sParser.isDone()) {\n          if (sParser.bind().units === \"%\") {\n            step = 9;\n          } else {\n            return Parser.error(Diagnostic.expected(\"%\", input));\n          }\n        } else if (sParser.isError()) {\n          return sParser.asError();\n        }\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 10) {\n      if (lParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          lParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        lParser = lParser.feed(input);\n      }\n      if (lParser !== void 0) {\n        if (lParser.isDone()) {\n          if (lParser.bind().units === \"%\") {\n            step = 11;\n          } else {\n            return Parser.error(Diagnostic.expected(\"%\", input));\n          }\n        } else if (lParser.isError()) {\n          return lParser.asError();\n        }\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(new HslColor(hParser!.bind().degValue(),\n                                          sParser!.bind().scale(1),\n                                          lParser!.bind().scale(1)));\n        } else if (c === 44/*','*/ || c === 47/*'/'*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 12) {\n      if (aParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          aParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        aParser = aParser.feed(input);\n      }\n      if (aParser !== void 0) {\n        if (aParser.isDone()) {\n          step = 13;\n        } else if (aParser.isError()) {\n          return aParser.asError();\n        }\n      }\n    }\n    if (step === 13) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 41/*')'*/) {\n        input = input.step();\n        return Parser.done(new HslColor(hParser!.bind().degValue(),\n                                        sParser!.bind().scale(1),\n                                        lParser!.bind().scale(1),\n                                        aParser!.bind().scale(1)));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new HslColorParser(hParser, sParser, lParser, aParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input): Parser<HslColor> {\n    return HslColorParser.parse(input, void 0, void 0, void 0, void 0, 5);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {LengthParser} from \"@swim/math\";\nimport {ColorLike} from \"./Color\";\nimport {Color} from \"./Color\";\nimport {ColorParser} from \"./Color\";\n\n/** @public */\nexport type ColorStopLike = ColorStop | ColorStopInit | ColorStopTuple | string;\n\n/** @public */\nexport const ColorStopLike = {\n  [Symbol.hasInstance](instance: unknown): instance is ColorStopLike {\n    return instance instanceof ColorStop\n        || ColorStopInit[Symbol.hasInstance](instance)\n        || ColorStopTuple[Symbol.hasInstance](instance)\n        || typeof instance === \"string\";\n  },\n};\n\n/** @public */\nexport interface ColorStopInit {\n  color: ColorLike;\n  stop?: LengthLike;\n  hint?: LengthLike;\n}\n\n/** @public */\nexport const ColorStopInit = {\n  [Symbol.hasInstance](instance: unknown): instance is ColorStopInit {\n    return Objects.hasAllKeys(instance, \"color\");\n  },\n};\n\n/** @public */\nexport type ColorStopTuple = [ColorLike, LengthLike | null];\n\n/** @public */\nexport const ColorStopTuple = {\n  [Symbol.hasInstance](instance: unknown): instance is ColorStopTuple {\n    return Array.isArray(instance) && instance.length === 2\n        && ColorLike[Symbol.hasInstance](instance[0])\n        && (instance[1] === null || LengthLike[Symbol.hasInstance](instance[1]));\n  },\n};\n\n/** @public */\nexport class ColorStop implements Interpolate<ColorStop>, Equals, Equivalent {\n  constructor(color: Color, stop: Length | null, hint: Length | null) {\n    this.color = color;\n    this.stop = stop;\n    this.hint = hint;\n  }\n\n  likeType?(like: ColorStopInit | ColorStopTuple | string): void;\n\n  readonly color: Color;\n\n  withColor(color: ColorLike): ColorStop {\n    color = Color.fromLike(color);\n    return new ColorStop(color, this.stop, this.hint);\n  }\n\n  readonly stop: Length | null;\n\n  withStop(stop: LengthLike | null): ColorStop {\n    stop = Length.fromLike(stop, \"%\");\n    return new ColorStop(this.color, stop, this.hint);\n  }\n\n  readonly hint: Length | null;\n\n  withHint(hint: LengthLike | null): ColorStop {\n    hint = Length.fromLike(hint, \"%\");\n    return new ColorStop(this.color, this.stop, hint);\n  }\n\n  /** @override */\n  interpolateTo(that: ColorStop): Interpolator<ColorStop>;\n  interpolateTo(that: unknown): Interpolator<ColorStop> | null;\n  interpolateTo(that: unknown): Interpolator<ColorStop> | null {\n    if (that instanceof ColorStop) {\n      return ColorStopInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStop) {\n      return Equivalent(this.color, that.color, epsilon)\n          && Equivalent(this.stop, that.stop, epsilon)\n          && Equivalent(this.hint, that.hint, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStop) {\n      return this.color.equals(that.color)\n          && Equals(this.stop, that.stop)\n          && Equals(this.hint, that.hint);\n    }\n    return false;\n  }\n\n  /** @override */\n  toString(): string {\n    let s = \"\";\n    if (this.hint !== null) {\n      s += this.hint.toString();\n      s += \", \";\n    }\n    s += this.color.toString();\n    if (this.stop !== null) {\n      s += \" \";\n      s += this.stop.toString();\n    }\n    return s;\n  }\n\n  static create(color: ColorLike, stop: LengthLike | null = null,\n                hint: LengthLike | null = null): ColorStop {\n    color = Color.fromLike(color);\n    stop = Length.fromLike(stop, \"%\");\n    hint = Length.fromLike(hint, \"%\");\n    return new ColorStop(color, stop, hint);\n  }\n\n  static fromLike<T extends ColorStopLike | null | undefined>(value: T): ColorStop | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof ColorStop) {\n      return value as ColorStop | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return ColorStop.parse(value);\n    } else if (ColorStopInit[Symbol.hasInstance](value)) {\n      return ColorStop.fromInit(value);\n    } else if (ColorStopTuple[Symbol.hasInstance](value)) {\n      return ColorStop.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: ColorStopInit): ColorStop {\n    const color = Color.fromLike(init.color);\n    const stop = init.stop !== void 0 ? Length.fromLike(init.stop, \"%\") : null;\n    const hint = init.hint !== void 0 ? Length.fromLike(init.hint, \"%\") : null;\n    return new ColorStop(color, stop, hint);\n  }\n\n  static fromTuple(value: ColorStopTuple): ColorStop {\n    const color = Color.fromLike(value[0]);\n    const stop = Length.fromLike(value[1], \"%\");\n    return new ColorStop(color, stop, null);\n  }\n\n  static parse(string: string): ColorStop {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseHint(string: string): ColorStop {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopParser.parseHint(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseList(string: string): ColorStop[] {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopListParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n\n/** @internal */\nexport interface ColorStopInterpolator extends Interpolator<ColorStop> {\n  /** @internal */\n  readonly colorInterpolator: Interpolator<Color>;\n  /** @internal */\n  readonly stopInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly hintInterpolator: Interpolator<Length | null>;\n\n  readonly 0: ColorStop;\n\n  readonly 1: ColorStop;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const ColorStopInterpolator = (function (_super: typeof Interpolator) {\n  const ColorStopInterpolator = function (y0: ColorStop, y1: ColorStop): ColorStopInterpolator {\n    const interpolator = function (u: number): ColorStop {\n      const color = interpolator.colorInterpolator(u);\n      const stop = interpolator.stopInterpolator(u);\n      const hint = interpolator.hintInterpolator(u);\n      return new ColorStop(color, stop, hint);\n    } as ColorStopInterpolator;\n    Object.setPrototypeOf(interpolator, ColorStopInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).colorInterpolator = y0.color.interpolateTo(y1.color);\n    (interpolator as Mutable<typeof interpolator>).stopInterpolator = Interpolator(y0.stop, y1.stop);\n    (interpolator as Mutable<typeof interpolator>).hintInterpolator = Interpolator(y0.hint, y1.hint);\n    return interpolator;\n  } as {\n    (y0: ColorStop, y1: ColorStop): ColorStopInterpolator;\n\n    /** @internal */\n    prototype: ColorStopInterpolator;\n  };\n\n  ColorStopInterpolator.prototype = Object.create(_super.prototype);\n  ColorStopInterpolator.prototype.constructor = ColorStopInterpolator;\n\n  Object.defineProperty(ColorStopInterpolator.prototype, 0, {\n    get(this: ColorStopInterpolator): ColorStop {\n      const color = this.colorInterpolator[0];\n      const stop = this.stopInterpolator[0];\n      const hint = this.hintInterpolator[0];\n      return new ColorStop(color, stop, hint);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ColorStopInterpolator.prototype, 1, {\n    get(this: ColorStopInterpolator): ColorStop {\n      const color = this.colorInterpolator[1];\n      const stop = this.stopInterpolator[1];\n      const hint = this.hintInterpolator[1];\n      return new ColorStop(color, stop, hint);\n    },\n    configurable: true,\n  });\n\n  ColorStopInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStopInterpolator) {\n      return this.colorInterpolator.equals(that.colorInterpolator)\n          && this.stopInterpolator.equals(that.stopInterpolator)\n          && this.hintInterpolator.equals(that.hintInterpolator);\n    }\n    return false;\n  };\n\n  return ColorStopInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class ColorStopParser extends Parser<ColorStop> {\n  private readonly colorParser: Parser<Color> | undefined;\n  private readonly stopParser: Parser<Length> | undefined;\n  private readonly hintParser: Parser<Length> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(colorParser?: Parser<Color>, stopParser?: Parser<Length>,\n              hintParser?: Parser<Length>, step?: number) {\n    super();\n    this.colorParser = colorParser;\n    this.stopParser = stopParser;\n    this.hintParser = hintParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorStop> {\n    return ColorStopParser.parse(input, this.colorParser, this.stopParser,\n                                 this.hintParser, this.step);\n  }\n\n  static parse(input: Input, colorParser?: Parser<Color>, stopParser?: Parser<Length>,\n               hintParser?: Parser<Length>, step: number = 4): Parser<ColorStop> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 2;\n        } else {\n          step = 7;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (hintParser === void 0) {\n        hintParser = LengthParser.parse(input);\n      } else {\n        hintParser = hintParser.feed(input);\n      }\n      if (hintParser !== void 0) {\n        if (hintParser.isDone()) {\n          step = 3;\n        } else if (hintParser.isError()) {\n          return hintParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input.step();\n          step = 4;\n        } else {\n          stopParser = hintParser;\n          hintParser = void 0;\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 5;\n        } else {\n          step = 7;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (stopParser === void 0) {\n        stopParser = LengthParser.parse(input);\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          step = 6;\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        if (Unicode.isSpace(input.head())) {\n          input.step();\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"color\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 7) {\n      if (colorParser === void 0) {\n        colorParser = ColorParser.parse(input);\n      } else {\n        colorParser = colorParser.feed(input);\n      }\n      if (colorParser !== void 0) {\n        if (colorParser.isDone()) {\n          if (stopParser !== void 0) {\n            const hint = hintParser !== void 0 ? hintParser.bind() : null;\n            return Parser.done(new ColorStop(colorParser.bind(), stopParser.bind(), hint));\n          } else {\n            step = 8;\n          }\n        } else if (colorParser.isError()) {\n          return colorParser.asError();\n        }\n      }\n    }\n    if (step === 8) {\n      if (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n        step = 9;\n      } else if (!input.isEmpty()) {\n        const hint = hintParser !== void 0 ? hintParser.bind() : null;\n        return Parser.done(new ColorStop(colorParser!.bind(), null, hint));\n      }\n    }\n    if (step === 9) {\n      if (stopParser === void 0) {\n        stopParser = LengthParser.parse(input);\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          const hint = hintParser !== void 0 ? hintParser.bind() : null;\n          return Parser.done(new ColorStop(colorParser!.bind(), stopParser.bind(), hint));\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    return new ColorStopParser(colorParser, stopParser, hintParser, step);\n  }\n\n  static parseHint(input: Input): Parser<ColorStop> {\n    return ColorStopParser.parse(input, void 0, void 0, void 0, 1);\n  }\n}\n\n/** @internal */\nexport class ColorStopListParser extends Parser<ColorStop[]> {\n  private readonly stops: readonly ColorStop[] | undefined;\n  private readonly stopParser: Parser<ColorStop> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(stops?: readonly ColorStop[], stopParser?: Parser<ColorStop>, step?: number) {\n    super();\n    this.stops = stops;\n    this.stopParser = stopParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorStop[]> {\n    return ColorStopListParser.parse(input, this.stops !== void 0 ? this.stops.slice(0) : void 0,\n                                     this.stopParser, this.step);\n  }\n\n  static parse(input: Input, stops?: ColorStop[], stopParser?: Parser<ColorStop>,\n               step: number = 1): Parser<ColorStop[]> {\n    let c = 0;\n    if (step === 1) {\n      if (stopParser === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          stopParser = ColorStopParser.parse(input);\n        }\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          if (stops === void 0) {\n            stops = [];\n          }\n          stops.push(stopParser.bind());\n          stopParser = void 0;\n          step = 2;\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          return Parser.done(stops!);\n        }\n      }\n      if (step === 3) {\n        if (stopParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            stopParser = ColorStopParser.parseHint(input);\n          }\n        } else {\n          stopParser = stopParser.feed(input);\n        }\n        if (stopParser !== void 0) {\n          if (stopParser.isDone()) {\n            stops!.push(stopParser.bind());\n            stopParser = void 0;\n            step = 2;\n            continue;\n          } else if (stopParser.isError()) {\n            return stopParser.asError();\n          }\n        }\n      }\n      break;\n    } while (true);\n    return new ColorStopListParser(stops, stopParser, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport {Angle} from \"@swim/math\";\nimport {AngleParser} from \"@swim/math\";\nimport type {ColorStopLike} from \"./ColorStop\";\nimport {ColorStop} from \"./ColorStop\";\nimport {ColorStopListParser} from \"./ColorStop\";\n\n/** @public */\nexport type LinearGradientAngleLike = LinearGradientAngle | number;\n\n/** @public */\nexport type LinearGradientAngle = Angle | LinearGradientSide | LinearGradientCorner;\n\n/** @public */\nexport type LinearGradientCorner = [LinearGradientSide, LinearGradientSide];\n\n/** @public */\nexport type LinearGradientSide = \"left\" | \"right\" | \"top\" | \"bottom\";\n\n/** @public */\nexport type LinearGradientLike = LinearGradient | LinearGradientInit | string;\n\n/** @public */\nexport const LinearGradientLike = {\n  [Symbol.hasInstance](instance: unknown): instance is LinearGradientLike {\n    return instance instanceof LinearGradient\n        || LinearGradientInit[Symbol.hasInstance](instance)\n        || typeof instance === \"string\";\n  },\n};\n\n/** @public */\nexport interface LinearGradientInit {\n  angle: LinearGradientAngleLike;\n  stops: ColorStopLike[];\n}\n\n/** @public */\nexport const LinearGradientInit = {\n  [Symbol.hasInstance](instance: unknown): instance is LinearGradientInit {\n    return Objects.hasAllKeys(instance, \"angle\", \"stops\");\n  },\n};\n\n/** @public */\nexport class LinearGradient implements Interpolate<LinearGradient>, Equals, Equivalent {\n  constructor(angle: LinearGradientAngle, stops: readonly ColorStop[]) {\n    this.angle = angle;\n    this.stops = stops;\n    this.stringValue = void 0;\n  }\n\n  readonly angle: LinearGradientAngle;\n\n  withAngle(angle: LinearGradientAngleLike): LinearGradient {\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromLike(angle, \"deg\");\n    }\n    return new LinearGradient(angle, this.stops);\n  }\n\n  readonly stops: readonly ColorStop[];\n\n  withStops(stops: readonly ColorStopLike[]): LinearGradient {\n    const n = stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      array[i] = ColorStop.fromLike(stops[i]!);\n    }\n    return new LinearGradient(this.angle, array);\n  }\n\n  /** @override */\n  interpolateTo(that: LinearGradient): Interpolator<LinearGradient>;\n  interpolateTo(that: unknown): Interpolator<LinearGradient> | null;\n  interpolateTo(that: unknown): Interpolator<LinearGradient> | null {\n    if (that instanceof LinearGradient) {\n      return LinearGradientInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradient) {\n      return Values.equivalent(this.angle, that.angle, epsilon)\n          && Arrays.equivalent(this.stops, that.stops, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradient) {\n      return Values.equal(this.angle, that.angle)\n          && Arrays.equal(this.stops, that.stops);\n    }\n    return false;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  /** @override */\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"linear-gradient(\";\n      if (this.angle instanceof Angle) {\n        s += this.angle.toString();\n      } else {\n        s += \"to\";\n        if (typeof this.angle === \"string\") {\n          s += \" \";\n          s += this.angle;\n        } else {\n          for (let i = 0; i < this.angle.length; i += 1) {\n            s += \" \";\n            s += this.angle[i];\n          }\n        }\n      }\n      for (let i = 0; i < this.stops.length; i += 1) {\n        s += \", \";\n        s += this.stops[i]!.toString();\n      }\n      s += \")\";\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static create(angle: LinearGradientAngleLike, ...stops: ColorStopLike[]): LinearGradient {\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromLike(angle, \"deg\");\n    }\n    const n = stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      const stop = stops[i];\n      if (typeof stop === \"string\") {\n        if (i === 0) {\n          array[i] = ColorStop.parse(stop);\n        } else {\n          array[i] = ColorStop.parseHint(stop);\n        }\n      } else {\n        array[i] = ColorStop.fromLike(stops[i]!);\n      }\n    }\n    return new LinearGradient(angle, array);\n  }\n\n  static fromLike<T extends LinearGradientLike | null | undefined>(value: T): LinearGradient | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof LinearGradient) {\n      return value as LinearGradient | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return LinearGradient.parse(value);\n    } else if (typeof value === \"object\") {\n      return LinearGradient.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: LinearGradientInit): LinearGradient {\n    let angle: LinearGradientAngleLike = init.angle;\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromLike(angle, \"deg\");\n    }\n    const n = init.stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      array[i] = ColorStop.fromLike(init.stops[i]!);\n    }\n    return new LinearGradient(angle, array);\n  }\n\n  static parse(string: string): LinearGradient {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = LinearGradientParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseAngle(string: string): LinearGradientAngle {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = LinearGradientAngleParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n\n/** @internal */\nexport interface LinearGradientInterpolator extends Interpolator<LinearGradient> {\n  /** @internal */\n  readonly angleInterpolator: Interpolator<LinearGradientAngle>;\n  /** @internal */\n  readonly stopInterpolators: readonly Interpolator<ColorStop>[];\n\n  readonly 0: LinearGradient;\n\n  readonly 1: LinearGradient;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const LinearGradientInterpolator = (function (_super: typeof Interpolator) {\n  const LinearGradientInterpolator = function (g0: LinearGradient, g1: LinearGradient): LinearGradientInterpolator {\n    const interpolator = function (u: number): LinearGradient {\n      const angle = interpolator.angleInterpolator(u);\n      const stopInterpolators = interpolator.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]!(u);\n      }\n      return new LinearGradient(angle, stops);\n    } as LinearGradientInterpolator;\n    Object.setPrototypeOf(interpolator, LinearGradientInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).angleInterpolator = Interpolator(g0.angle, g1.angle);\n    const stops0 = g0.stops;\n    const stops1 = g1.stops;\n    const stopCount = Math.min(stops0.length, stops1.length);\n    const stopInterpolators = new Array<Interpolator<ColorStop>>(stopCount);\n    for (let i = 0; i < stopCount; i += 1) {\n      stopInterpolators[i] = stops0[i]!.interpolateTo(stops1[i]!);\n    }\n    (interpolator as Mutable<typeof interpolator>).stopInterpolators = stopInterpolators;\n    return interpolator;\n  } as {\n    (g0: LinearGradient, g1: LinearGradient): LinearGradientInterpolator;\n\n    /** @internal */\n    prototype: LinearGradientInterpolator;\n  };\n\n  LinearGradientInterpolator.prototype = Object.create(_super.prototype);\n  LinearGradientInterpolator.prototype.constructor = LinearGradientInterpolator;\n\n  Object.defineProperty(LinearGradientInterpolator.prototype, 0, {\n    get(this: LinearGradientInterpolator): LinearGradient {\n      const angle = this.angleInterpolator[0];\n      const stopInterpolators = this.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]![0];\n      }\n      return new LinearGradient(angle, stops);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(LinearGradientInterpolator.prototype, 1, {\n    get(this: LinearGradientInterpolator): LinearGradient {\n      const angle = this.angleInterpolator[1];\n      const stopInterpolators = this.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]![1];\n      }\n      return new LinearGradient(angle, stops);\n    },\n    configurable: true,\n  });\n\n  LinearGradientInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradientInterpolator) {\n      if (this.angleInterpolator.equals(that.angleInterpolator)) {\n        const n = this.stopInterpolators.length;\n        if (n !== that.stopInterpolators.length) {\n          return false;\n        }\n        for (let i = 0; i < n; i += 1) {\n          if (!this.stopInterpolators[i]!.equals(that.stopInterpolators[i]!)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return LinearGradientInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class LinearGradientAngleParser extends Parser<LinearGradientAngle> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly angleParser: Parser<Angle> | undefined;\n  private readonly side: LinearGradientSide | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, angleParser?: Parser<Angle>,\n              side?: LinearGradientSide, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.angleParser = angleParser;\n    this.side = side;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<LinearGradientAngle> {\n    return LinearGradientAngleParser.parse(input, this.identOutput, this.angleParser,\n                                           this.side, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, angleParser?: Parser<Angle>,\n               side?: LinearGradientSide, step: number = 1): Parser<LinearGradientAngle> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (angleParser === void 0) {\n        angleParser = AngleParser.parse(input, \"deg\");\n      } else {\n        angleParser = angleParser.feed(input);\n      }\n      if (angleParser !== void 0) {\n        if (angleParser.isDone()) {\n          return angleParser;\n        } else if (angleParser.isError()) {\n          return angleParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        if (ident === \"to\") {\n          identOutput = void 0;\n          step = 4;\n        } else {\n          return Parser.error(Diagnostic.message(\"unexpected \" + ident, input));\n        }\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        if (Unicode.isSpace(input.head())) {\n          input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"side or corner\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        identOutput = void 0;\n        switch (ident) {\n          case \"left\":\n          case \"right\":\n            side = ident;\n            step = 6;\n            break;\n          case \"top\":\n          case \"bottom\":\n            side = ident;\n            step = 7;\n            break;\n          default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n        }\n      }\n    }\n    if (step === 6) {\n      if (identOutput === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && Unicode.isAlpha(c)) {\n          identOutput = Unicode.stringOutput();\n        } else if (!input.isEmpty()) {\n          return Parser.done(side!);\n        }\n      }\n      if (identOutput !== void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"top\":\n            case \"bottom\": return Parser.done([side as \"left\" | \"right\", ident]);\n            default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n          }\n        }\n      }\n    }\n    if (step === 7) {\n      if (identOutput === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && Unicode.isAlpha(c)) {\n          identOutput = Unicode.stringOutput();\n        } else if (!input.isEmpty()) {\n          return Parser.done(side!);\n        }\n      }\n      if (identOutput !== void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"left\":\n            case \"right\": return Parser.done([side as \"top\" | \"bottom\", ident]);\n            default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n          }\n        }\n      }\n    }\n    return new LinearGradientAngleParser(identOutput, angleParser, side, step);\n  }\n}\n\n/** @internal */\nexport class LinearGradientParser extends Parser<LinearGradient> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly angleParser: Parser<LinearGradientAngle> | undefined;\n  private readonly stopsParser: Parser<ColorStop[]> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, angleParser?: Parser<LinearGradientAngle>,\n              stopsParser?: Parser<ColorStop[]>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.angleParser = angleParser;\n    this.stopsParser = stopsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<LinearGradient> {\n    return LinearGradientParser.parse(input, this.identOutput, this.angleParser,\n                                      this.stopsParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, angleParser?: Parser<LinearGradientAngle>,\n               stopsParser?: Parser<ColorStop[]>, step: number = 1): Parser<LinearGradient> {\n    let c = 0;\n    if (step === 1) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        if (ident === \"linear-gradient\") {\n          identOutput = void 0;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.message(\"unexpected \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (angleParser === void 0) {\n        angleParser = LinearGradientAngleParser.parse(input);\n      } else {\n        angleParser = angleParser.feed(input);\n      }\n      if (angleParser !== void 0) {\n        if (angleParser.isDone()) {\n          step = 4;\n        } else if (angleParser.isError()) {\n          return angleParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 44/*','*/) {\n        input = input.step();\n        step = 5;\n      } else {\n        return Parser.error(Diagnostic.expected(\"color stops\", input));\n      }\n    }\n    if (step === 5) {\n      if (stopsParser === void 0) {\n        stopsParser = ColorStopListParser.parse(input);\n      } else {\n        stopsParser = stopsParser.feed(input);\n      }\n      if (stopsParser !== void 0) {\n        if (stopsParser.isDone()) {\n          step = 6;\n        } else if (stopsParser.isError()) {\n          return stopsParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        return Parser.done(new LinearGradient(angleParser!.bind(), stopsParser!.bind()));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new LinearGradientParser(identOutput, angleParser, stopsParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<LinearGradient> {\n    return LinearGradientParser.parse(input, identOutput, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport type {Item} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport {Record} from \"@swim/structure\";\nimport {Text} from \"@swim/structure\";\nimport {Form} from \"@swim/structure\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {LengthParser} from \"@swim/math\";\nimport type {ColorLike} from \"./Color\";\nimport {Color} from \"./Color\";\nimport {ColorParser} from \"./Color\";\n\n/** @public */\nexport type BoxShadowLike = BoxShadow | BoxShadowInit | string | readonly BoxShadowLike[];\n\n/** @public */\nexport const BoxShadowLike = {\n  [Symbol.hasInstance](instance: unknown): instance is BoxShadowLike {\n    return instance instanceof BoxShadow\n        || BoxShadowInit[Symbol.hasInstance](instance)\n        || typeof instance === \"string\"\n        || BoxShadowLike.isArray(instance);\n  },\n  /** @internal */\n  isArray(value: unknown): value is readonly BoxShadowLike[] {\n    if (!Array.isArray(value) || value.length === 0) {\n      return false;\n    }\n    for (let i = 0; i < value.length; i += 1) {\n      if (!BoxShadowLike[Symbol.hasInstance](value)) {\n        return false;\n      }\n    }\n    return true;\n  },\n};\n\n/** @public */\nexport interface BoxShadowInit {\n  inset?: boolean;\n  offsetX?: LengthLike;\n  offsetY?: LengthLike;\n  blurRadius?: LengthLike;\n  spreadRadius?: LengthLike;\n  color?: ColorLike;\n}\n\n/** @public */\nexport const BoxShadowInit = {\n  [Symbol.hasInstance](instance: unknown): instance is BoxShadowInit {\n    return Objects.hasAnyKey(instance, \"inset\", \"offsetX\", \"offsetY\", \"blurRadius\", \"spreadRadius\", \"color\");\n  },\n};\n\n/** @public */\nexport class BoxShadow implements Interpolate<BoxShadow>, Equals, Equivalent {\n  constructor(inset: boolean, offsetX: Length, offsetY: Length, blurRadius: Length,\n              spreadRadius: Length, color: Color, next: BoxShadow | null) {\n    this.inset = inset;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.blurRadius = blurRadius;\n    this.spreadRadius = spreadRadius;\n    this.color = color;\n    this.next = next;\n    this.stringValue = void 0;\n  }\n\n  likeType?(like: BoxShadowInit | string | readonly BoxShadowLike[]): void;\n\n  readonly inset: boolean;\n\n  withInset(inset: boolean): BoxShadow {\n    if (inset === this.inset) {\n      return this;\n    }\n    return new BoxShadow(inset, this.offsetX, this.offsetY, this.blurRadius,\n                         this.spreadRadius, this.color, this.next);\n  }\n\n  readonly offsetX: Length;\n\n  withOffsetX(offsetX: LengthLike): BoxShadow {\n    offsetX = Length.fromLike(offsetX);\n    if (offsetX.equals(this.offsetX)) {\n      return this;\n    }\n    return new BoxShadow(this.inset, offsetX, this.offsetY, this.blurRadius,\n                         this.spreadRadius, this.color, this.next);\n  }\n\n  readonly offsetY: Length;\n\n  withOffsetY(offsetY: LengthLike): BoxShadow {\n    offsetY = Length.fromLike(offsetY);\n    if (offsetY.equals(this.offsetY)) {\n      return this;\n    }\n    return new BoxShadow(this.inset, this.offsetX, offsetY, this.blurRadius,\n                         this.spreadRadius, this.color, this.next);\n  }\n\n  readonly blurRadius: Length;\n\n  withBlurRadius(blurRadius: LengthLike): BoxShadow {\n    blurRadius = Length.fromLike(blurRadius);\n    if (blurRadius.equals(this.blurRadius)) {\n      return this;\n    }\n    return new BoxShadow(this.inset, this.offsetX, this.offsetY, blurRadius,\n                         this.spreadRadius, this.color, this.next);\n  }\n\n  readonly spreadRadius: Length;\n\n  withSpreadRadius(spreadRadius: LengthLike): BoxShadow {\n    spreadRadius = Length.fromLike(spreadRadius);\n    if (spreadRadius.equals(this.spreadRadius)) {\n      return this;\n    }\n    return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                         spreadRadius, this.color, this.next);\n  }\n\n  readonly color: Color;\n\n  withColor(color: ColorLike): BoxShadow {\n    color = Color.fromLike(color);\n    if (color.equals(this.color)) {\n      return this;\n    }\n    return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                         this.spreadRadius, color, this.next);\n  }\n\n  readonly next: BoxShadow | null;\n\n  and(value: BoxShadowLike): BoxShadow;\n  and(offsetX: LengthLike, offsetY: LengthLike, color: ColorLike): BoxShadow;\n  and(offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, color: ColorLike): BoxShadow;\n  and(offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, spreadRadius: LengthLike, color: ColorLike): BoxShadow;\n  and(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, color: ColorLike): BoxShadow;\n  and(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, color: ColorLike): BoxShadow;\n  and(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, spreadRadius: LengthLike, color: ColorLike): BoxShadow;\n  and(inset: BoxShadowLike | LengthLike | boolean, offsetX?: LengthLike, offsetY?: ColorLike | LengthLike, blurRadius?: ColorLike | LengthLike, spreadRadius?: ColorLike | LengthLike, color?: ColorLike): BoxShadow {\n    let next: BoxShadow | null;\n    if (this.next !== null) {\n      // eslint-disable-next-line prefer-rest-params, prefer-spread\n      next = this.next.and.apply(this.next, arguments as any);\n    } else {\n      // eslint-disable-next-line prefer-rest-params, prefer-spread\n      next = BoxShadow.create.apply(BoxShadow, arguments as any);\n    }\n    return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                         this.spreadRadius, this.color, next);\n  }\n\n  /** @override */\n  interpolateTo(that: BoxShadow): Interpolator<BoxShadow>;\n  interpolateTo(that: unknown): Interpolator<BoxShadow> | null;\n  interpolateTo(that: unknown): Interpolator<BoxShadow> | null {\n    if (that instanceof BoxShadow) {\n      return BoxShadowInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadow) {\n      return this.inset === that.inset\n          && this.offsetX.equivalentTo(that.offsetX, epsilon)\n          && this.offsetY.equivalentTo(that.offsetY, epsilon)\n          && this.blurRadius.equivalentTo(that.blurRadius, epsilon)\n          && this.spreadRadius.equivalentTo(that.spreadRadius, epsilon)\n          && this.color.equivalentTo(that.color, epsilon)\n          && Equivalent(this.next, that.next, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadow) {\n      return this.inset === that.inset && this.offsetX.equals(that.offsetX)\n          && this.offsetY.equals(that.offsetY) && this.blurRadius.equals(that.blurRadius)\n          && this.spreadRadius.equals(that.spreadRadius) && this.color.equals(that.color)\n          && Equals(this.next, that.next);\n    }\n    return false;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  /** @override */\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"\";\n      if (this.inset) {\n        s += \"inset\";\n        s += \" \";\n      }\n      s += this.offsetX.toString();\n      s += \" \";\n      s += this.offsetY.toString();\n      s += \" \";\n      s += this.blurRadius.toString();\n      s += \" \";\n      s += this.spreadRadius.toString();\n      s += \" \";\n      s += this.color.toString();\n      if (this.next !== null) {\n        s += \", \";\n        s += this.next.toString();\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static create(value: BoxShadowLike): BoxShadow;\n  static create(offsetX: LengthLike, offsetY: LengthLike, color: ColorLike): BoxShadow;\n  static create(offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, color: ColorLike): BoxShadow;\n  static create(offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, spreadRadius: LengthLike, color: ColorLike): BoxShadow;\n  static create(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, color: ColorLike): BoxShadow;\n  static create(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, color: ColorLike): BoxShadow;\n  static create(inset: boolean, offsetX: LengthLike, offsetY: LengthLike, blurRadius: LengthLike, spreadRadius: LengthLike, color: ColorLike): BoxShadow;\n  static create(inset: BoxShadowLike | LengthLike | boolean, offsetX?: LengthLike, offsetY?: ColorLike | LengthLike, blurRadius?: ColorLike | LengthLike, spreadRadius?: ColorLike | LengthLike, color?: ColorLike): BoxShadow {\n    if (arguments.length === 1) {\n      return BoxShadow.fromLike(inset as BoxShadowLike)!;\n    } else if (typeof inset !== \"boolean\") {\n      if (arguments.length === 3) {\n        color = Color.fromLike(offsetY as ColorLike);\n        spreadRadius = Length.zero();\n        blurRadius = Length.zero();\n        offsetY = Length.fromLike(offsetX!);\n        offsetX = Length.fromLike(inset as LengthLike);\n      } else if (arguments.length === 4) {\n        color = Color.fromLike(blurRadius as ColorLike);\n        spreadRadius = Length.zero();\n        blurRadius = Length.fromLike(offsetY as LengthLike);\n        offsetY = Length.fromLike(offsetX!);\n        offsetX = Length.fromLike(inset as LengthLike);\n      } else if (arguments.length === 5) {\n        color = Color.fromLike(spreadRadius as ColorLike);\n        spreadRadius = Length.fromLike(blurRadius as LengthLike);\n        blurRadius = Length.fromLike(offsetY as LengthLike);\n        offsetY = Length.fromLike(offsetX!);\n        offsetX = Length.fromLike(inset as LengthLike);\n      } else {\n        throw new Error(inset + \", \" + offsetX + \", \" + offsetY + \", \" + blurRadius + \", \" + spreadRadius + \", \" + color);\n      }\n      inset = false;\n    } else {\n      if (arguments.length === 4) {\n        color = Color.fromLike(blurRadius as ColorLike);\n        spreadRadius = Length.zero();\n        blurRadius = Length.zero();\n        offsetY = Length.fromLike(offsetY as LengthLike);\n        offsetX = Length.fromLike(offsetX!);\n      } else if (arguments.length === 5) {\n        color = Color.fromLike(spreadRadius as ColorLike);\n        spreadRadius = Length.zero();\n        blurRadius = Length.fromLike(blurRadius as LengthLike);\n        offsetY = Length.fromLike(offsetY as LengthLike);\n        offsetX = Length.fromLike(offsetX!);\n      } else if (arguments.length === 6) {\n        color = Color.fromLike(color!);\n        spreadRadius = Length.fromLike(spreadRadius as LengthLike);\n        blurRadius = Length.fromLike(blurRadius as LengthLike);\n        offsetY = Length.fromLike(offsetY as LengthLike);\n        offsetX = Length.fromLike(offsetX!);\n      } else {\n        throw new Error(inset + \", \" + offsetX + \", \" + offsetY + \", \" + blurRadius + \", \" + spreadRadius + \", \" + color);\n      }\n    }\n    return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n  }\n\n  static fromLike<T extends BoxShadowLike | null | undefined>(values: T): BoxShadow | Uninitable<T>;\n  static fromLike(...values: BoxShadowLike[]): BoxShadow;\n  static fromLike(...values: BoxShadowLike[]): BoxShadow | null {\n    let value: BoxShadowLike;\n    if (arguments.length === 0) {\n      return null;\n    } else if (arguments.length === 1) {\n      value = values[0]!;\n    } else {\n      value = values;\n    }\n    if (value === void 0 || value === null || value instanceof BoxShadow) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return BoxShadow.parse(value);\n    } else if (typeof value === \"object\" && (value as any).length === void 0) {\n      return BoxShadow.fromInit(value as BoxShadowInit);\n    } else if (typeof value === \"object\" && (value as any).length !== 0) {\n      return BoxShadow.fromArray(value as readonly BoxShadowLike[]);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: BoxShadowInit): BoxShadow {\n    const inset = init.inset || false;\n    const offsetX = init.offsetX !== void 0 ? Length.fromLike(init.offsetX) : Length.zero();\n    const offsetY = init.offsetY !== void 0 ? Length.fromLike(init.offsetY) : Length.zero();\n    const blurRadius = init.blurRadius !== void 0 ? Length.fromLike(init.blurRadius) : Length.zero();\n    const spreadRadius = init.spreadRadius !== void 0 ? Length.fromLike(init.spreadRadius) : Length.zero();\n    const color = init.color !== void 0 ? Color.fromLike(init.color) : Color.black();\n    return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n  }\n\n  static fromArray(array: readonly BoxShadowLike[]): BoxShadow {\n    let boxShadow = BoxShadow.fromLike(array[0]!)!;\n    for (let i = 1; i < array.length; i += 1) {\n      boxShadow = boxShadow.and(array[i]!);\n    }\n    return boxShadow;\n  }\n\n  static fromValue(value: Value): BoxShadow | null {\n    let boxShadow: BoxShadow | null = null;\n    value.forEach(function (item: Item, index: number): void {\n      const header = item.header(\"boxShadow\");\n      if (!header.isDefined()) {\n        return;\n      }\n      let inset: boolean | undefined;\n      let offsetX: Length | undefined;\n      let offsetY: Length | undefined;\n      let blurRadius: Length | undefined;\n      let spreadRadius: Length | undefined;\n      let color: Color | undefined;\n      header.forEach(function (item: Item, index: number): void {\n        const key = item.key.stringValue();\n        if (key !== void 0) {\n          if (key === \"inset\") {\n            inset = item.toValue().booleanValue(inset);\n          } else if (key === \"offsetX\") {\n            offsetX = item.toValue().cast(Length.form(), offsetX);\n          } else if (key === \"offsetY\") {\n            offsetY = item.toValue().cast(Length.form(), offsetY);\n          } else if (key === \"blurRadius\") {\n            blurRadius = item.toValue().cast(Length.form(), blurRadius);\n          } else if (key === \"spreadRadius\") {\n            spreadRadius = item.toValue().cast(Length.form(), spreadRadius);\n          } else if (key === \"color\") {\n            color = item.toValue().cast(Color.form(), color);\n          }\n        } else if (item instanceof Value) {\n          if (index === 0 && item instanceof Text && item.value === \"inset\") {\n            inset = true;\n          } else if (index === 0 || index === 1 && inset !== void 0) {\n            offsetX = item.cast(Length.form(), offsetX);\n          } else if (index === 1 || index === 2 && inset !== void 0) {\n            offsetY = item.cast(Length.form(), offsetY);\n          } else if (index === 2 || index === 3 && inset !== void 0) {\n            blurRadius = item.cast(Length.form(), blurRadius);\n            if (blurRadius === void 0) {\n              color = item.cast(Color.form(), color);\n            }\n          } else if ((index === 3 || index === 4 && inset === void 0) && color === void 0) {\n            spreadRadius = item.cast(Length.form(), spreadRadius);\n            if (spreadRadius === void 0) {\n              color = item.cast(Color.form(), color);\n            }\n          } else if ((index === 4 || index === 5 && inset === void 0) && color === void 0) {\n            color = item.cast(Color.form(), color);\n          }\n        }\n      });\n      inset = inset !== void 0 ? inset : false;\n      offsetX = offsetX !== void 0 ? offsetX : Length.zero();\n      offsetY = offsetY !== void 0 ? offsetY : Length.zero();\n      blurRadius = blurRadius !== void 0 ? blurRadius : Length.zero();\n      spreadRadius = spreadRadius !== void 0 ? spreadRadius : Length.zero();\n      color = color !== void 0 ? color : Color.black();\n      const next = new BoxShadow(inset || false, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n      if (boxShadow !== null) {\n        boxShadow = boxShadow.and(next);\n      } else {\n        boxShadow = next;\n      }\n    });\n    return boxShadow;\n  }\n\n  static parse(string: string): BoxShadow | null {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = BoxShadowParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<BoxShadow | null, BoxShadowLike> {\n    return new BoxShadowForm(null);\n  }\n}\n\n/** @internal */\nexport interface BoxShadowInterpolator extends Interpolator<BoxShadow> {\n  /** @internal */\n  readonly insetInterpolator: Interpolator<boolean>;\n  /** @internal */\n  readonly offsetXInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly offsetYInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly blurRadiusInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly spreadRadiusInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly colorInterpolator: Interpolator<Color>;\n  /** @internal */\n  readonly nextInterpolator: Interpolator<BoxShadow | null>;\n\n  get 0(): BoxShadow;\n\n  get 1(): BoxShadow;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const BoxShadowInterpolator = (function (_super: typeof Interpolator) {\n  const BoxShadowInterpolator = function (b0: BoxShadow, b1: BoxShadow): BoxShadowInterpolator {\n    const interpolator = function (u: number): BoxShadow {\n      const inset = interpolator.insetInterpolator(u);\n      const offsetX = interpolator.offsetXInterpolator(u);\n      const offsetY = interpolator.offsetYInterpolator(u);\n      const blurRadius = interpolator.blurRadiusInterpolator(u);\n      const spreadRadius = interpolator.spreadRadiusInterpolator(u);\n      const color = interpolator.colorInterpolator(u);\n      const next = interpolator.nextInterpolator(u);\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    } as BoxShadowInterpolator;\n    Object.setPrototypeOf(interpolator, BoxShadowInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).insetInterpolator = Interpolator(b0.inset, b1.inset);\n    (interpolator as Mutable<typeof interpolator>).offsetXInterpolator = b0.offsetX.interpolateTo(b1.offsetX);\n    (interpolator as Mutable<typeof interpolator>).offsetYInterpolator = b0.offsetY.interpolateTo(b1.offsetY);\n    (interpolator as Mutable<typeof interpolator>).blurRadiusInterpolator = b0.blurRadius.interpolateTo(b1.blurRadius);\n    (interpolator as Mutable<typeof interpolator>).spreadRadiusInterpolator = b0.spreadRadius.interpolateTo(b1.spreadRadius);\n    (interpolator as Mutable<typeof interpolator>).colorInterpolator = b0.color.interpolateTo(b1.color);\n    (interpolator as Mutable<typeof interpolator>).nextInterpolator = Interpolator(b0.next, b1.next);\n    return interpolator;\n  } as {\n    (b0: BoxShadow, b1: BoxShadow): BoxShadowInterpolator;\n\n    /** @internal */\n    prototype: BoxShadowInterpolator;\n  };\n\n  BoxShadowInterpolator.prototype = Object.create(_super.prototype);\n  BoxShadowInterpolator.prototype.constructor = BoxShadowInterpolator;\n\n  Object.defineProperty(BoxShadowInterpolator.prototype, 0, {\n    get(this: BoxShadowInterpolator): BoxShadow {\n      const inset = this.insetInterpolator[0];\n      const offsetX = this.offsetXInterpolator[0];\n      const offsetY = this.offsetYInterpolator[0];\n      const blurRadius = this.blurRadiusInterpolator[0];\n      const spreadRadius = this.spreadRadiusInterpolator[0];\n      const color = this.colorInterpolator[0];\n      const next = this.nextInterpolator[0];\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(BoxShadowInterpolator.prototype, 1, {\n    get(this: BoxShadowInterpolator): BoxShadow {\n      const inset = this.insetInterpolator[1];\n      const offsetX = this.offsetXInterpolator[1];\n      const offsetY = this.offsetYInterpolator[1];\n      const blurRadius = this.blurRadiusInterpolator[1];\n      const spreadRadius = this.spreadRadiusInterpolator[1];\n      const color = this.colorInterpolator[1];\n      const next = this.nextInterpolator[1];\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    },\n    configurable: true,\n  });\n\n  BoxShadowInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadowInterpolator) {\n      return this.insetInterpolator.equals(that.insetInterpolator)\n          && this.offsetXInterpolator.equals(that.offsetXInterpolator)\n          && this.offsetYInterpolator.equals(that.offsetYInterpolator)\n          && this.blurRadiusInterpolator.equals(that.blurRadiusInterpolator)\n          && this.spreadRadiusInterpolator.equals(that.spreadRadiusInterpolator)\n          && this.colorInterpolator.equals(that.colorInterpolator)\n          && this.nextInterpolator.equals(that.nextInterpolator);\n    }\n    return false;\n  };\n\n  return BoxShadowInterpolator;\n})(Interpolator);\n\n/** @internal */\nexport class BoxShadowForm extends Form<BoxShadow | null, BoxShadowLike> {\n  constructor(unit: BoxShadow | null | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly unit: BoxShadow | null | undefined;\n\n  override withUnit(unit: BoxShadow | null | undefined): Form<BoxShadow | null, BoxShadowLike> {\n    if (unit === this.unit) {\n      return this;\n    }\n    return new BoxShadowForm(unit);\n  }\n\n  override mold(boxShadow: BoxShadowLike): Item {\n    let shadow = BoxShadow.fromLike(boxShadow)!;\n    const record = Record.create();\n    do {\n      const header = Record.create(5);\n      if (shadow.inset) {\n        header.push(\"inset\");\n      }\n      header.push(Length.form().mold(shadow.offsetX));\n      header.push(Length.form().mold(shadow.offsetY));\n      header.push(Length.form().mold(shadow.blurRadius));\n      header.push(Length.form().mold(shadow.spreadRadius));\n      header.push(Color.form().mold(shadow.color));\n      record.attr(\"boxShadow\", header);\n      if (shadow.next !== null) {\n        shadow = shadow.next;\n        continue;\n      }\n      break;\n    } while (true);\n    return record;\n  }\n\n  override cast(item: Item): BoxShadow | null | undefined {\n    const value = item.toValue();\n    let boxShadow: BoxShadow | null | undefined;\n    try {\n      boxShadow = BoxShadow.fromValue(value);\n      if (boxShadow === void 0) {\n        const string = value.stringValue();\n        if (string !== void 0) {\n          boxShadow = BoxShadow.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return boxShadow;\n  }\n}\n\n/** @internal */\nexport class BoxShadowParser extends Parser<BoxShadow | null> {\n  private readonly boxShadow: BoxShadow | undefined;\n  private readonly identOutput: Output<string> | undefined;\n  private readonly offsetXParser: Parser<Length> | undefined;\n  private readonly offsetYParser: Parser<Length> | undefined;\n  private readonly blurRadiusParser: Parser<Length> | undefined;\n  private readonly spreadRadiusParser: Parser<Length> | undefined;\n  private readonly colorParser: Parser<Color> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(boxShadow?: BoxShadow, identOutput?: Output<string>,\n              offsetXParser?: Parser<Length>, offsetYParser?: Parser<Length>,\n              blurRadiusParser?: Parser<Length>, spreadRadiusParser?: Parser<Length>,\n              colorParser?: Parser<Color>, step?: number) {\n    super();\n    this.boxShadow = boxShadow;\n    this.identOutput = identOutput;\n    this.offsetXParser = offsetXParser;\n    this.offsetYParser = offsetYParser;\n    this.blurRadiusParser = blurRadiusParser;\n    this.spreadRadiusParser = spreadRadiusParser;\n    this.colorParser = colorParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<BoxShadow | null> {\n    return BoxShadowParser.parse(input, this.boxShadow, this.identOutput, this.offsetXParser,\n                                 this.offsetYParser, this.blurRadiusParser, this.spreadRadiusParser,\n                                 this.colorParser, this.step);\n  }\n\n  static parse(input: Input, boxShadow?: BoxShadow, identOutput?: Output<string>,\n               offsetXParser?: Parser<Length>, offsetYParser?: Parser<Length>,\n               blurRadiusParser?: Parser<Length>, spreadRadiusParser?: Parser<Length>,\n               colorParser?: Parser<Color>, step: number = 1): Parser<BoxShadow | null> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 2;\n          } else {\n            step = 4;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 2) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          switch (ident) {\n            case \"inset\": step = 3; break;\n            case \"none\": return Parser.done(null);\n            default: return Parser.error(Diagnostic.message(\"unknown box-shadow: \" + ident, input));\n          }\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (offsetXParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            offsetXParser = LengthParser.parse(input);\n          }\n        } else {\n          offsetXParser = offsetXParser.feed(input);\n        }\n        if (offsetXParser !== void 0) {\n          if (offsetXParser.isDone()) {\n            step = 5;\n          } else if (offsetXParser.isError()) {\n            return offsetXParser.asError();\n          }\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 6;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 6) {\n        if (offsetYParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            offsetYParser = LengthParser.parse(input);\n          }\n        } else {\n          offsetYParser = offsetYParser.feed(input);\n        }\n        if (offsetYParser !== void 0) {\n          if (offsetYParser.isDone()) {\n            step = 7;\n          } else if (offsetYParser.isError()) {\n            return offsetYParser.asError();\n          }\n        }\n      }\n      if (step === 7) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 8;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 8) {\n        if (blurRadiusParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input.step();\n          }\n          if (input.isCont() && (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n            blurRadiusParser = LengthParser.parse(input);\n          } else if (!input.isEmpty()) {\n            step = 12;\n          }\n        } else {\n          blurRadiusParser = blurRadiusParser.feed(input);\n        }\n        if (blurRadiusParser !== void 0) {\n          if (blurRadiusParser.isDone()) {\n            step = 9;\n          } else if (blurRadiusParser.isError()) {\n            return blurRadiusParser.asError();\n          }\n        }\n      }\n      if (step === 9) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 10) {\n        if (spreadRadiusParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input.step();\n          }\n          if (input.isCont() && (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n            spreadRadiusParser = LengthParser.parse(input);\n          } else if (!input.isEmpty()) {\n            step = 12;\n          }\n        } else {\n          spreadRadiusParser = spreadRadiusParser.feed(input);\n        }\n        if (spreadRadiusParser !== void 0) {\n          if (spreadRadiusParser.isDone()) {\n            step = 11;\n          } else if (spreadRadiusParser.isError()) {\n            return spreadRadiusParser.asError();\n          }\n        }\n      }\n      if (step === 11) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 12;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 12) {\n        if (colorParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            colorParser = ColorParser.parse(input);\n          }\n        } else {\n          colorParser = colorParser.feed(input);\n        }\n        if (colorParser !== void 0) {\n          if (colorParser.isDone()) {\n            const inset = identOutput !== void 0 ? identOutput.bind() === \"inset\" : false;\n            const offsetX = offsetXParser!.bind();\n            const offsetY = offsetYParser!.bind();\n            const blurRadius = blurRadiusParser !== void 0 ? blurRadiusParser.bind() : Length.zero();\n            const spreadRadius = spreadRadiusParser !== void 0 ? spreadRadiusParser.bind() : Length.zero();\n            const color = colorParser!.bind();\n            const next = new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n            if (boxShadow === void 0) {\n              boxShadow = next;\n            } else {\n              boxShadow = boxShadow.and(next);\n            }\n            identOutput = void 0;\n            offsetXParser = void 0;\n            offsetYParser = void 0;\n            blurRadiusParser = void 0;\n            spreadRadiusParser = void 0;\n            colorParser = void 0;\n            step = 13;\n          } else if (colorParser.isError()) {\n            return colorParser.asError();\n          }\n        }\n      }\n      if (step === 13) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input.step();\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.done(boxShadow!);\n        }\n      }\n      break;\n    } while (true);\n    return new BoxShadowParser(boxShadow, identOutput, offsetXParser, offsetYParser,\n                               blurRadiusParser, spreadRadiusParser, colorParser, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {Diagnostic} from \"@swim/codec\";\nimport type {Input} from \"@swim/codec\";\nimport type {Output} from \"@swim/codec\";\nimport {Parser} from \"@swim/codec\";\nimport {Base10} from \"@swim/codec\";\nimport {Unicode} from \"@swim/codec\";\nimport {Item} from \"@swim/structure\";\nimport {Record} from \"@swim/structure\";\nimport {Num} from \"@swim/structure\";\nimport {Bool} from \"@swim/structure\";\nimport {Form} from \"@swim/structure\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport type {AngleLike} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport type {TransformLike} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {TranslateTransformParser} from \"@swim/math\";\nimport {ScaleTransformParser} from \"@swim/math\";\nimport {RotateTransformParser} from \"@swim/math\";\nimport {SkewTransformParser} from \"@swim/math\";\nimport {AffineTransformParser} from \"@swim/math\";\nimport {DateTimeLike} from \"@swim/time\";\nimport type {DateTimeInit} from \"@swim/time\";\nimport {DateTime} from \"@swim/time\";\nimport {DateTimeFormat} from \"@swim/time\";\nimport type {FontWeight} from \"./Font\";\nimport {FontLike} from \"./Font\";\nimport {Font} from \"./Font\";\nimport {FontParser} from \"./Font\";\nimport {ColorLike} from \"./Color\";\nimport {Color} from \"./Color\";\nimport {RgbColorParser} from \"./RgbColor\";\nimport {HexColorParser} from \"./RgbColor\";\nimport {HslColorParser} from \"./HslColor\";\nimport {LinearGradientLike} from \"./LinearGradient\";\nimport {LinearGradient} from \"./LinearGradient\";\nimport {LinearGradientParser} from \"./LinearGradient\";\nimport {BoxShadowLike} from \"./BoxShadow\";\nimport {BoxShadow} from \"./BoxShadow\";\n\n/** @public */\nexport type StyleValueLike = DateTimeLike\n                           | AngleLike\n                           | LengthLike\n                           | FontLike\n                           | ColorLike\n                           | LinearGradientLike\n                           | BoxShadowLike\n                           | TransformLike\n                           | Interpolator<any>\n                           | number\n                           | boolean;\n\n/** @public */\nexport type StyleValue = DateTime\n                       | Angle\n                       | Length\n                       | Font\n                       | Color\n                       | LinearGradient\n                       | BoxShadow\n                       | Transform\n                       | Interpolator<any>\n                       | number\n                       | boolean;\n\n/** @public */\nexport const StyleValue = {\n  fromLike<T extends StyleValueLike | null | undefined>(value: T): StyleValue | Uninitable<T> {\n    if (value === void 0 || value === null\n        || value instanceof DateTime\n        || value instanceof Angle\n        || value instanceof Length\n        || value instanceof Color\n        || value instanceof Font\n        || value instanceof BoxShadow\n        || value instanceof LinearGradient\n        || value instanceof Transform\n        || value instanceof Interpolator\n        || typeof value === \"number\"\n        || typeof value === \"boolean\") {\n      return value as StyleValue | Uninitable<T>;\n    } else if (DateTimeLike[Symbol.hasInstance](value)) {\n      return DateTime.fromLike(value);\n    } else if (ColorLike[Symbol.hasInstance](value)) {\n      return Color.fromLike(value);\n    } else if (FontLike[Symbol.hasInstance](value)) {\n      return Font.fromLike(value);\n    } else if (BoxShadowLike[Symbol.hasInstance](value)) {\n      return BoxShadow.fromLike(value)!;\n    } else if (LinearGradientLike[Symbol.hasInstance](value)) {\n      return LinearGradient.fromLike(value)!;\n    } else if (typeof value === \"string\") {\n      return StyleValue.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  },\n\n  parse(input: Input | string): StyleValue {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = StyleValueParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  },\n\n  form: Lazy(function (): Form<StyleValue, StyleValueLike> {\n    return new StyleValueForm(void 0);\n  }),\n};\n\n/** @internal */\nexport class StyleValueForm extends Form<StyleValue, StyleValueLike> {\n  constructor(unit: StyleValue | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly unit: StyleValue | undefined;\n\n  override withUnit(unit: StyleValue | undefined): Form<StyleValue, StyleValueLike> {\n    if (unit === this.unit) {\n      return this;\n    }\n    return new StyleValueForm(unit);\n  }\n\n  override mold(value: StyleValueLike): Item {\n    if (value === void 0) {\n      return Item.extant();\n    }\n    value = StyleValue.fromLike(value);\n    if (value instanceof DateTime) {\n      return DateTime.form().mold(value);\n    } else if (value instanceof Angle) {\n      return Angle.form().mold(value);\n    } else if (value instanceof Length) {\n      return Length.form().mold(value);\n    } else if (value instanceof Font) {\n      return Font.form().mold(value);\n    } else if (value instanceof Color) {\n      return Color.form().mold(value);\n    } else if (value instanceof BoxShadow) {\n      return BoxShadow.form().mold(value);\n    } else if (value instanceof Transform) {\n      return Transform.form().mold(value);\n    } else if (typeof value === \"number\") {\n      return Num.from(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  override cast(item: Item): StyleValue | undefined {\n    const value = item.toValue();\n    if (value instanceof Num) {\n      return value.numberValue();\n    }\n    if (value instanceof Bool) {\n      return value.booleanValue();\n    }\n    const string = value.stringValue(void 0);\n    if (string !== void 0) {\n      try {\n        return StyleValue.parse(string);\n      } catch (e) {\n        // swallow\n      }\n    }\n    if (value instanceof Record) {\n      const date = DateTime.fromValue(value);\n      if (date !== null) {\n        return date;\n      }\n      const angle = Angle.fromValue(value);\n      if (angle !== null) {\n        return angle;\n      }\n      const length = Length.fromValue(value);\n      if (length !== null) {\n        return length;\n      }\n      const font = Font.fromValue(value);\n      if (font !== null) {\n        return font;\n      }\n      const color = Color.fromValue(value);\n      if (color !== null) {\n        return color;\n      }\n      const boxShadow = BoxShadow.fromValue(value);\n      if (boxShadow !== null) {\n        return boxShadow;\n      }\n      const transform = Transform.fromValue(value);\n      if (transform !== null) {\n        return transform;\n      }\n    }\n    return void 0;\n  }\n}\n\n/** @internal */\nexport class StyleValueParser extends Parser<StyleValue> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly unitsOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, valueParser?: Parser<number>,\n              unitsOutput?: Output<string>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.valueParser = valueParser;\n    this.unitsOutput = unitsOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<StyleValue> {\n    return StyleValueParser.parse(input, this.identOutput, this.valueParser,\n                                  this.unitsOutput, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, valueParser?: Parser<number>,\n               unitsOutput?: Output<string>, step: number = 1): Parser<StyleValue> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 35/*'#'*/) {\n          return HexColorParser.parse(input);\n        } else if (Unicode.isAlpha(c)) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || Unicode.isDigit(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"rgb\":\n          case \"rgba\": return RgbColorParser.parseRest(input);\n\n          case \"hsl\":\n          case \"hsla\": return HslColorParser.parseRest(input);\n\n          case \"linear-gradient\": return LinearGradientParser.parseRest(input, identOutput);\n\n          case \"normal\":\n          case \"italic\":\n          case \"oblique\": return FontParser.parseRest(input, ident);\n          case \"small-caps\": return FontParser.parseRest(input, void 0, ident);\n          case \"bold\":\n          case \"bolder\":\n          case \"lighter\": return FontParser.parseRest(input, void 0, void 0, ident);\n          case \"ultra-condensed\":\n          case \"extra-condensed\":\n          case \"semi-condensed\":\n          case \"condensed\":\n          case \"expanded\":\n          case \"semi-expanded\":\n          case \"extra-expanded\":\n          case \"ultra-expanded\": return FontParser.parseRest(input, void 0, void 0, void 0, ident);\n          case \"large\":\n          case \"larger\":\n          case \"medium\":\n          case \"small\":\n          case \"smaller\":\n          case \"x-large\":\n          case \"x-small\":\n          case \"xx-large\":\n          case \"xx-small\": return FontParser.parseRest(input, void 0, void 0, void 0, void 0, ident);\n\n          case \"translate3d\":\n          case \"translateX\":\n          case \"translateY\":\n          case \"translate\": return TranslateTransformParser.parseRest(input, identOutput);\n          case \"scaleX\":\n          case \"scaleY\":\n          case \"scale\": return ScaleTransformParser.parseRest(input, identOutput);\n          case \"rotate\": return RotateTransformParser.parseRest(input, identOutput);\n          case \"skewX\":\n          case \"skewY\":\n          case \"skew\": return SkewTransformParser.parseRest(input, identOutput);\n          case \"matrix\": return AffineTransformParser.parseRest(input, identOutput);\n          case \"none\": return Parser.done(Transform.identity());\n\n          case \"true\": return Parser.done(true);\n          case \"false\": return Parser.done(false);\n          default: {\n            const color = Color.forName(ident);\n            if (color !== null) {\n              return Parser.done(color);\n            }\n            return Parser.error(Diagnostic.message(\"unknown style value: \" + ident, input));\n          }\n        }\n      }\n    }\n    if (step === 3) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseDecimal(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 4;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && (c = input.head(), c === 45/*'-'*/)) {\n        input.step();\n        const date = {} as DateTimeInit;\n        date.year = valueParser!.bind();\n        return DateTimeFormat.pattern('%m-%dT%H:%M:%S.%LZ').parseDate(input, date);\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      unitsOutput = unitsOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 37/*'%'*/)) {\n        input.step();\n        unitsOutput.push(c);\n      }\n      if (!input.isEmpty()) {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      if (!input.isEmpty()) {\n        const value = valueParser!.bind();\n        const units = unitsOutput!.bind();\n        let styleValue: Angle | Length | number;\n        switch (units) {\n          case \"deg\": styleValue = Angle.deg(value); break;\n          case \"rad\": styleValue = Angle.rad(value); break;\n          case \"grad\": styleValue = Angle.grad(value); break;\n          case \"turn\": styleValue = Angle.turn(value); break;\n\n          case \"px\": styleValue = Length.px(value); break;\n          case \"em\": styleValue = Length.em(value); break;\n          case \"rem\": styleValue = Length.rem(value); break;\n          case \"%\": styleValue = Length.pct(value); break;\n\n          case \"\": styleValue = value; break;\n          default: return Parser.error(Diagnostic.message(\"unknown style units: \" + units, input));\n        }\n        if (input.isCont() && (c = input.head(), Unicode.isSpace(c) || c === 47/*'/'*/)) {\n          if (styleValue instanceof Length) {\n            return FontParser.parseRest(input, void 0, void 0, void 0, void 0, styleValue);\n          } else if (typeof styleValue === \"number\") {\n            switch (value) {\n              case 100:\n              case 200:\n              case 300:\n              case 400:\n              case 500:\n              case 600:\n              case 700:\n              case 800:\n              case 900: return FontParser.parseRest(input, void 0, void 0, String(value) as FontWeight);\n            }\n          }\n        }\n        return Parser.done(styleValue);\n      }\n    }\n    return new StyleValueParser(identOutput, valueParser, unitsOutput, step);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ToAttributeString {\n  toAttributeString(): string;\n}\n\n/** @public */\nexport function ToAttributeString(value: unknown): string {\n  if (typeof value === \"object\" && value !== null) {\n    if (typeof (value as ToAttributeString).toAttributeString === \"function\") {\n      return (value as ToAttributeString).toAttributeString();\n    } else {\n      return value.toString();\n    }\n  }\n  return \"\" + value;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ToStyleString {\n  toStyleString(): string;\n}\n\n/** @public */\nexport function ToStyleString(value: unknown): string {\n  if (typeof value === \"object\" && value !== null) {\n    if (typeof (value as ToStyleString).toStyleString === \"function\") {\n      return (value as ToStyleString).toStyleString();\n    } else {\n      return value.toString();\n    }\n  }\n  return \"\" + value;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ToStyleString} from \"./ToStyleString\";\n\n/** @public */\nexport interface ToCssValue {\n  toCssValue(): CSSStyleValue | null;\n}\n\n/** @public */\nexport const ToCssValue = (function () {\n  let ToCssValue: (value: unknown) => CSSStyleValue | null;\n\n  if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n    ToCssValue = function (value: unknown): CSSStyleValue | null {\n      if (typeof value === \"object\" && value !== null &&\n          typeof (value as ToCssValue).toCssValue === \"function\") {\n        return (value as ToCssValue).toCssValue();\n      } else if (typeof value === \"number\") {\n        return new CSSUnitValue(value, \"number\");\n      }\n      return null;\n    };\n  } else {\n    ToCssValue = ToStyleString;\n  }\n\n  return ToCssValue;\n})();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport {Affinity} from \"@swim/component\";\nimport type {AnimatorClass} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\n\n/** @public */\nexport type FocusLike = Focus | FocusInit | boolean;\n\n/** @public */\nexport const FocusLike = {\n  [Symbol.hasInstance](instance: unknown): instance is FocusLike {\n    return instance instanceof Focus\n        || FocusInit[Symbol.hasInstance](instance)\n        || typeof instance === \"boolean\";\n  },\n};\n\n/** @public */\nexport interface FocusInit {\n  /** @internal */\n  readonly typeid?: \"FocusInit\";\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport const FocusInit = {\n  [Symbol.hasInstance](instance: unknown): instance is FocusInit {\n    return Objects.hasAllKeys<FocusInit>(instance, \"phase\", \"direction\");\n  },\n};\n\n/** @public */\nexport class Focus implements Interpolate<Focus>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  /** @internal */\n  declare readonly typeid?: \"Focus\";\n\n  likeType?(like: FocusInit | boolean): void;\n\n  readonly phase: number;\n\n  withPhase(phase: number): Focus {\n    if (phase === this.phase) {\n      return this;\n    }\n    return Focus.create(phase, this.direction);\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Focus {\n    if (direction === this.direction) {\n      return this;\n    }\n    return Focus.create(this.phase, direction);\n  }\n\n  get unfocused(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get focused(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get focusing(): boolean {\n    return this.direction > 0;\n  }\n\n  get unfocusing(): boolean {\n    return this.direction < 0;\n  }\n\n  asFocusing(): Focus {\n    if (this.focusing) {\n      return this;\n    }\n    return Focus.focusing(this.phase);\n  }\n\n  asUnfocusing(): Focus {\n    if (this.unfocusing) {\n      return this;\n    }\n    return Focus.unfocusing(this.phase);\n  }\n\n  asToggling(): Focus {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Focus.unfocusing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Focus.focusing(this.phase);\n    }\n    return this;\n  }\n\n  asToggled(): Focus {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Focus.unfocused();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Focus.focused();\n    }\n    return this;\n  }\n\n  /** @override */\n  interpolateTo(that: Focus): Interpolator<Focus>;\n  interpolateTo(that: unknown): Interpolator<Focus> | null;\n  interpolateTo(that: unknown): Interpolator<Focus> | null {\n    if (that instanceof Focus) {\n      return FocusInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Focus) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Focus) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Focus),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Focus\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"unfocused\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"focused\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"focusing\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"unfocusing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static unfocused(): Focus {\n    return new Focus(0, 0);\n  }\n\n  @Lazy\n  static focused(): Focus {\n    return new Focus(1, 0);\n  }\n\n  static focusing(phase?: number): Focus {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Focus(phase, 1);\n  }\n\n  static unfocusing(phase?: number): Focus {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Focus(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Focus {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Focus.unfocused();\n    } else if (phase === 1 && direction === 0) {\n      return Focus.focused();\n    }\n    return new Focus(phase, direction);\n  }\n\n  static fromLike<T extends FocusLike | null | undefined>(value: T): Focus | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Focus) {\n      return value as Focus | Uninitable<T>;\n    } else if (FocusInit[Symbol.hasInstance](value)) {\n      return Focus.fromInit(value);\n    } else if (value === true) {\n      return Focus.focused();\n    } else if (value === false) {\n      return Focus.unfocused();\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(value: FocusInit): Focus {\n    return new Focus(value.phase, value.direction);\n  }\n}\n\n/** @internal */\nexport const FocusInterpolator = (function (_super: typeof Interpolator) {\n  const FocusInterpolator = function (f0: Focus, f1: Focus): Interpolator<Focus> {\n    const interpolator = function (u: number): Focus {\n      const f0 = interpolator[0];\n      const f1 = interpolator[1];\n      const phase = f0.phase + u * (f1.phase - f0.phase);\n      const direction = u !== 1 ? f0.direction : f1.direction;\n      return Focus.create(phase, direction);\n    } as Interpolator<Focus>;\n    Object.setPrototypeOf(interpolator, FocusInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = f0;\n    (interpolator as Mutable<typeof interpolator>)[1] = f1;\n    return interpolator;\n  } as {\n    (f0: Focus, f1: Focus): Interpolator<Focus>;\n\n    /** @internal */\n    prototype: Interpolator<Focus>;\n  };\n\n  FocusInterpolator.prototype = Object.create(_super.prototype);\n  FocusInterpolator.prototype.constructor = FocusInterpolator;\n\n  return FocusInterpolator;\n})(Interpolator);\n\n/** @public */\nexport interface FocusAnimator<R = any, T extends Focus | null | undefined = Focus | null | undefined, I extends any[] = [T]> extends Animator<R, T, I> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setPhase(newPhase: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setDirection(newDirection: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get unfocused(): boolean;\n\n  get focused(): boolean;\n\n  get focusing(): boolean;\n\n  get unfocusing(): boolean;\n\n  focus(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  focus(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  unfocus(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  unfocus(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  toggle(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  /** @protected @override */\n  willSetState(newState: T, oldState: T): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willFocus(): void;\n\n  /** @protected */\n  didFocus(): void;\n\n  /** @protected */\n  willUnfocus(): void;\n\n  /** @protected */\n  didUnfocus(): void;\n\n  /** @override */\n  equalValues(newState: T, oldState: T | undefined): boolean;\n}\n\n/** @public */\nexport const FocusAnimator = (<R, T extends Focus | null | undefined, I extends any[], A extends FocusAnimator<any, any, any>>() => Animator.extend<FocusAnimator<R, T, I>, AnimatorClass<A>>(\"FocusAnimator\", {\n  valueType: Focus,\n\n  get phase(): number | undefined {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.phase : void 0;\n  },\n\n  getPhase(this: FocusAnimator): number {\n    return this.getValue().phase;\n  },\n\n  getPhaseOr<E>(elsePhase: E): number | E {\n    const value = this.value;\n    if (value === void 0 || value === null) {\n      return elsePhase;\n    }\n    return value.phase;\n  },\n\n  setPhase(newPhase: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const value = this.value;\n    if (value === void 0 || value === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(value.withPhase(newPhase) as T, timing, affinity);\n  },\n\n  get direction(): number {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.direction : 0;\n  },\n\n  setDirection(newDirection: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(oldValue.withDirection(newDirection) as T, timing, affinity);\n  },\n\n  get unfocused(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.unfocused;\n  },\n\n  get focused(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.focused;\n  },\n\n  get focusing(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.focusing;\n  },\n\n  get unfocusing(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.unfocusing;\n  },\n\n  focus(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Focus.focused() as T, timing as any, affinity);\n  },\n\n  unfocus(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Focus.unfocused() as T, timing as any, affinity);\n  },\n\n  toggle(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      this.setState(oldValue.asToggled() as T, timing as any, affinity);\n    }\n  },\n\n  willSetState(newState: T, oldState: T): void {\n    super.willSetState(newState, oldState);\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null && newState !== void 0 && newState !== null) {\n      if (newState.focused) {\n        this.setValue(oldValue.asFocusing() as T, Affinity.Reflexive);\n      } else if (newState.unfocused) {\n        this.setValue(oldValue.asUnfocusing() as T, Affinity.Reflexive);\n      }\n    }\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    super.onSetValue(newValue, oldValue);\n    if (newValue === void 0 || newValue === null || oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (newValue.focusing && !oldValue.focusing) {\n      this.willFocus();\n    } else if (newValue.focused && !oldValue.focused) {\n      this.didFocus();\n    } else if (newValue.unfocusing && !oldValue.unfocusing) {\n      this.willUnfocus();\n    } else if (newValue.unfocused && !oldValue.unfocused) {\n      this.didUnfocus();\n    }\n  },\n\n  willFocus(this: FocusAnimator): void {\n    // hook\n  },\n\n  didFocus(this: FocusAnimator): void {\n    // hook\n  },\n\n  willUnfocus(this: FocusAnimator): void {\n    // hook\n  },\n\n  didUnfocus(this: FocusAnimator): void {\n    // hook\n  },\n\n  equalValues(newState: T | undefined, oldState: T | undefined): boolean {\n    if (newState !== void 0 && newState !== null) {\n      return newState.equals(oldState);\n    }\n    return newState === oldState;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport {Affinity} from \"@swim/component\";\nimport type {AnimatorClass} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\n\n/** @public */\nexport type PresenceLike = Presence | PresenceInit | boolean;\n\n/** @public */\nexport const PresenceLike = {\n  [Symbol.hasInstance](instance: unknown): instance is PresenceLike {\n    return instance instanceof Presence\n        || PresenceInit[Symbol.hasInstance](instance)\n        || typeof instance === \"boolean\";\n  },\n};\n\n/** @public */\nexport interface PresenceInit {\n  /** @internal */\n  readonly typeid?: \"PresenceInit\";\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport const PresenceInit = {\n  [Symbol.hasInstance](instance: unknown): instance is PresenceInit {\n    return Objects.hasAllKeys<PresenceInit>(instance, \"phase\", \"direction\");\n  },\n};\n\n/** @public */\nexport class Presence implements Interpolate<Presence>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  /** @internal */\n  declare readonly typeid?: \"Presence\";\n\n  likeType?(like: PresenceInit | boolean): void;\n\n  readonly phase: number;\n\n  withPhase(phase: number): Presence {\n    if (phase === this.phase) {\n      return this;\n    }\n    return Presence.create(phase, this.direction);\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Presence {\n    if (direction === this.direction) {\n      return this;\n    }\n    return Presence.create(this.phase, direction);\n  }\n\n  get dismissed(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get presented(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get presenting(): boolean {\n    return this.direction > 0;\n  }\n\n  get dismissing(): boolean {\n    return this.direction < 0;\n  }\n\n  asPresenting(): Presence {\n    if (this.presenting) {\n      return this;\n    }\n    return Presence.presenting(this.phase);\n  }\n\n  asDismissing(): Presence {\n    if (this.dismissing) {\n      return this;\n    }\n    return Presence.dismissing(this.phase);\n  }\n\n  asToggling(): Presence {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Presence.dismissing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Presence.presenting(this.phase);\n    }\n    return this;\n  }\n\n  asToggled(): Presence {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Presence.dismissed();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Presence.presented();\n    }\n    return this;\n  }\n\n  /** @override */\n  interpolateTo(that: Presence): Interpolator<Presence>;\n  interpolateTo(that: unknown): Interpolator<Presence> | null;\n  interpolateTo(that: unknown): Interpolator<Presence> | null {\n    if (that instanceof Presence) {\n      return PresenceInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Presence) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Presence) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Presence),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Presence\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"dismissed\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"presented\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"presenting\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"dismissing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static dismissed(): Presence {\n    return new Presence(0, 0);\n  }\n\n  @Lazy\n  static presented(): Presence {\n    return new Presence(1, 0);\n  }\n\n  static presenting(phase?: number): Presence {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Presence(phase, 1);\n  }\n\n  static dismissing(phase?: number): Presence {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Presence(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Presence {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Presence.dismissed();\n    } else if (phase === 1 && direction === 0) {\n      return Presence.presented();\n    }\n    return new Presence(phase, direction);\n  }\n\n  static fromLike<T extends PresenceLike | null | undefined>(value: T): Presence | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Presence) {\n      return value as Presence | Uninitable<T>;\n    } else if (PresenceInit[Symbol.hasInstance](value)) {\n      return Presence.fromInit(value);\n    } else if (value === true) {\n      return Presence.presented();\n    } else if (value === false) {\n      return Presence.dismissed();\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(value: PresenceInit): Presence {\n    return new Presence(value.phase, value.direction);\n  }\n}\n\n/** @internal */\nexport const PresenceInterpolator = (function (_super: typeof Interpolator) {\n  const PresenceInterpolator = function (p0: Presence, p1: Presence): Interpolator<Presence> {\n    const interpolator = function (u: number): Presence {\n      const p0 = interpolator[0];\n      const p1 = interpolator[1];\n      const phase = p0.phase + u * (p1.phase - p0.phase);\n      const direction = u !== 1 ? p0.direction : p1.direction;\n      return Presence.create(phase, direction);\n    } as Interpolator<Presence>;\n    Object.setPrototypeOf(interpolator, PresenceInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = p0;\n    (interpolator as Mutable<typeof interpolator>)[1] = p1;\n    return interpolator;\n  } as {\n    (p0: Presence, p1: Presence): Interpolator<Presence>;\n\n    /** @internal */\n    prototype: Interpolator<Presence>;\n  };\n\n  PresenceInterpolator.prototype = Object.create(_super.prototype);\n  PresenceInterpolator.prototype.constructor = PresenceInterpolator;\n\n  return PresenceInterpolator;\n})(Interpolator);\n\n/** @public */\nexport interface PresenceAnimator<R = any, T extends Presence | null | undefined = Presence | null | undefined, I extends any[] = [T]> extends Animator<R, T, I> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setPhase(newPhase: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setDirection(newDirection: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get dismissed(): boolean;\n\n  get presented(): boolean;\n\n  get presenting(): boolean;\n\n  get dismissing(): boolean;\n\n  present(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  present(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  dismiss(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  dismiss(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  toggle(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  /** @protected @override */\n  willSetState(newState: T, oldState: T): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willPresent(): void;\n\n  /** @protected */\n  didPresent(): void;\n\n  /** @protected */\n  willDismiss(): void;\n\n  /** @protected */\n  didDismiss(): void;\n\n  /** @override */\n  equalValues(newValue: T, oldValue: T | undefined): boolean;\n}\n\n/** @public */\nexport const PresenceAnimator = (<R, T extends Presence | null | undefined, I extends any[], A extends PresenceAnimator<any, any, any>>() => Animator.extend<PresenceAnimator<R, T, I>, AnimatorClass<A>>(\"PresenceAnimator\", {\n  valueType: Presence,\n\n  get phase(): number | undefined {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.phase : void 0;\n  },\n\n  getPhase(): number {\n    return this.getValue().phase;\n  },\n\n  getPhaseOr<E>(elsePhase: E): number | E {\n    const value = this.value;\n    if (value === void 0 || value === null) {\n      return elsePhase;\n    }\n    return value.phase;\n  },\n\n  setPhase(newPhase: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(oldValue.withPhase(newPhase) as T, timing, affinity);\n  },\n\n  get direction(): number {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.direction : 0;\n  },\n\n  setDirection(newDirection: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(oldValue.withDirection(newDirection) as T, timing, affinity);\n  },\n\n  get dismissed(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.dismissed;\n  },\n\n  get presented(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.presented;\n  },\n\n  get presenting(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.presenting;\n  },\n\n  get dismissing(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.dismissing;\n  },\n\n  present(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Presence.presented() as T, timing as any, affinity);\n  },\n\n  dismiss(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Presence.dismissed() as T, timing as any, affinity);\n  },\n\n  toggle(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      this.setState(oldValue.asToggled() as T, timing as any, affinity);\n    }\n  },\n\n  willSetState(newState: T, oldState: T): void {\n    super.willSetState(newState, oldState);\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null && newState !== void 0 && newState !== null) {\n      if (newState.presented) {\n        this.setValue(oldValue.asPresenting() as T, Affinity.Reflexive);\n      } else if (newState.dismissed) {\n        this.setValue(oldValue.asDismissing() as T, Affinity.Reflexive);\n      }\n    }\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    super.onSetValue(newValue, oldValue);\n    if (newValue === void 0 || newValue === null || oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (newValue.presenting && !oldValue.presenting) {\n      this.willPresent();\n    } else if (newValue.presented && !oldValue.presented) {\n      this.didPresent();\n    } else if (newValue.dismissing && !oldValue.dismissing) {\n      this.willDismiss();\n    } else if (newValue.dismissed && !oldValue.dismissed) {\n      this.didDismiss();\n    }\n  },\n\n  willPresent(): void {\n    // hook\n  },\n\n  didPresent(): void {\n    // hook\n  },\n\n  willDismiss(): void {\n    // hook\n  },\n\n  didDismiss(): void {\n    // hook\n  },\n\n  equalValues(newValue: T | undefined, oldState: T | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldState);\n    }\n    return newValue === oldState;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport {Affinity} from \"@swim/component\";\nimport type {AnimatorClass} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\n\n/** @public */\nexport type ExpansionLike = Expansion | ExpansionInit | boolean;\n\n/** @public */\nexport const ExpansionLike = {\n  [Symbol.hasInstance](instance: unknown): instance is ExpansionLike {\n    return instance instanceof Expansion\n        || ExpansionInit[Symbol.hasInstance](instance)\n        || typeof instance === \"boolean\";\n  },\n};\n\n/** @public */\nexport interface ExpansionInit {\n  /** @internal */\n  readonly typeid?: \"ExpansionInit\";\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport const ExpansionInit = {\n  [Symbol.hasInstance](instance: unknown): instance is ExpansionInit {\n    return Objects.hasAllKeys<ExpansionInit>(instance, \"phase\", \"direction\");\n  },\n};\n\n/** @public */\nexport class Expansion implements Interpolate<Expansion>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  /** @internal */\n  declare readonly typeid?: \"Expansion\";\n\n  likeType?(like: ExpansionInit | boolean): void;\n\n  readonly phase: number;\n\n  withPhase(phase: number): Expansion {\n    if (phase === this.phase) {\n      return this;\n    }\n    return Expansion.create(phase, this.direction);\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Expansion {\n    if (direction === this.direction) {\n      return this;\n    }\n    return Expansion.create(this.phase, direction);\n  }\n\n  get collapsed(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get expanded(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get expanding(): boolean {\n    return this.direction > 0;\n  }\n\n  get collapsing(): boolean {\n    return this.direction < 0;\n  }\n\n  asExpanding(): Expansion {\n    if (this.expanding) {\n      return this;\n    }\n    return Expansion.expanding(this.phase);\n  }\n\n  asCollapsing(): Expansion {\n    if (this.collapsing) {\n      return this;\n    }\n    return Expansion.collapsing(this.phase);\n  }\n\n  asToggling(): Expansion {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Expansion.collapsing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Expansion.expanding(this.phase);\n    }\n    return this;\n  }\n\n  asToggled(): Expansion {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Expansion.collapsed();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Expansion.expanded();\n    }\n    return this;\n  }\n\n  /** @override */\n  interpolateTo(that: Expansion): Interpolator<Expansion>;\n  interpolateTo(that: unknown): Interpolator<Expansion> | null;\n  interpolateTo(that: unknown): Interpolator<Expansion> | null {\n    if (that instanceof Expansion) {\n      return ExpansionInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Expansion) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Expansion) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Expansion),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Expansion\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"collapsed\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"expanded\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"expanding\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"collapsing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static collapsed(): Expansion {\n    return new Expansion(0, 0);\n  }\n\n  @Lazy\n  static expanded(): Expansion {\n    return new Expansion(1, 0);\n  }\n\n  static expanding(phase?: number): Expansion {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Expansion(phase, 1);\n  }\n\n  static collapsing(phase?: number): Expansion {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Expansion(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Expansion {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Expansion.collapsed();\n    } else if (phase === 1 && direction === 0) {\n      return Expansion.expanded();\n    }\n    return new Expansion(phase, direction);\n  }\n\n  static fromLike<T extends ExpansionLike | null | undefined>(value: T): Expansion | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Expansion) {\n      return value as Expansion | Uninitable<T>;\n    } else if (ExpansionInit[Symbol.hasInstance](value)) {\n      return Expansion.fromInit(value);\n    } else if (value === true) {\n      return Expansion.expanded();\n    } else if (value === false) {\n      return Expansion.collapsed();\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(value: ExpansionInit): Expansion {\n    return new Expansion(value.phase, value.direction);\n  }\n}\n\n/** @internal */\nexport const ExpansionInterpolator = (function (_super: typeof Interpolator) {\n  const ExpansionInterpolator = function (e0: Expansion, e1: Expansion): Interpolator<Expansion> {\n    const interpolator = function (u: number): Expansion {\n      const e0 = interpolator[0];\n      const e1 = interpolator[1];\n      const phase = e0.phase + u * (e1.phase - e0.phase);\n      const direction = u !== 1 ? e0.direction : e1.direction;\n      return Expansion.create(phase, direction);\n    } as Interpolator<Expansion>;\n    Object.setPrototypeOf(interpolator, ExpansionInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = e0;\n    (interpolator as Mutable<typeof interpolator>)[1] = e1;\n    return interpolator;\n  } as {\n    (e0: Expansion, e1: Expansion): Interpolator<Expansion>;\n\n    /** @internal */\n    prototype: Interpolator<Expansion>;\n  };\n\n  ExpansionInterpolator.prototype = Object.create(_super.prototype);\n  ExpansionInterpolator.prototype.constructor = ExpansionInterpolator;\n\n  return ExpansionInterpolator;\n})(Interpolator);\n\n/** @public */\nexport interface ExpansionAnimator<R = any, T extends Expansion | null | undefined = Expansion | null | undefined, I extends any[] = [T]> extends Animator<R, T, I> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setPhase(newPhase: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setDirection(newDirection: number, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  get collapsed(): boolean;\n\n  get expanded(): boolean;\n\n  get expanding(): boolean;\n\n  get collapsing(): boolean;\n\n  expand(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  expand(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  collapse(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  collapse(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  toggle(timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  /** @protected @override */\n  willSetState(newState: T, oldState: T): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willExpand(): void;\n\n  /** @protected */\n  didExpand(): void;\n\n  /** @protected */\n  willCollapse(): void;\n\n  /** @protected */\n  didCollapse(): void;\n\n  /** @override */\n  equalValues(newValue: T, oldValue: T | undefined): boolean;\n}\n\n/** @public */\nexport const ExpansionAnimator = (<R, T extends Expansion | null | undefined, I extends any[], A extends ExpansionAnimator<any, any, any>>() => Animator.extend<ExpansionAnimator<R, T, I>, AnimatorClass<A>>(\"ExpansionAnimator\", {\n  valueType: Expansion,\n\n  get phase(): number | undefined {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.phase : void 0;\n  },\n\n  getPhase(): number {\n    return this.getValue().phase;\n  },\n\n  getPhaseOr<E>(elsePhase: E): number | E {\n    const value = this.value;\n    if (value === void 0 || value === null) {\n      return elsePhase;\n    }\n    return value.phase;\n  },\n\n  setPhase(newPhase: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(oldValue.withPhase(newPhase) as T, timing, affinity);\n  },\n\n  get direction(): number {\n    const value = this.value;\n    return value !== void 0 && value !== null ? value.direction : 0;\n  },\n\n  setDirection(newDirection: number, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    this.setState(oldValue.withDirection(newDirection) as T, timing, affinity);\n  },\n\n  get collapsed(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.collapsed;\n  },\n\n  get expanded(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.expanded;\n  },\n\n  get expanding(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.expanding;\n  },\n\n  get collapsing(): boolean {\n    const value = this.value;\n    return value !== void 0 && value !== null && value.collapsing;\n  },\n\n  expand(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Expansion.expanded() as T, timing as any, affinity);\n  },\n\n  collapse(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    this.setState(Expansion.collapsed() as T, timing as any, affinity);\n  },\n\n  toggle(timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      this.setState(oldValue.asToggled() as T, timing as any, affinity);\n    }\n  },\n\n  willSetState(newState: T, oldState: T): void {\n    super.willSetState(newState, oldState);\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null && newState !== void 0 && newState !== null) {\n      if (newState.expanded) {\n        this.setValue(oldValue.asExpanding() as T, Affinity.Reflexive);\n      } else if (newState.collapsed) {\n        this.setValue(oldValue.asCollapsing() as T, Affinity.Reflexive);\n      }\n    }\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    super.onSetValue(newValue, oldValue);\n    if (newValue === void 0 || newValue === null || oldValue === void 0 || oldValue === null) {\n      return;\n    } else if (newValue.expanding && !oldValue.expanding) {\n      this.willExpand();\n    } else if (newValue.expanded && !oldValue.expanded) {\n      this.didExpand();\n    } else if (newValue.collapsing && !oldValue.collapsing) {\n      this.willCollapse();\n    } else if (newValue.collapsed && !oldValue.collapsed) {\n      this.didCollapse();\n    }\n  },\n\n  willExpand(): void {\n    // hook\n  },\n\n  didExpand(): void {\n    // hook\n  },\n\n  willCollapse(): void {\n    // hook\n  },\n\n  didCollapse(): void {\n    // hook\n  },\n\n  equalValues(newValue: T, oldValue: T | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {Feel} from \"./Feel\";\n\n/** @public */\nexport type LookVectorInit<T> = LookVector<T> | LookVectorArray<T>;\n\n/** @public */\nexport type LookVectorArray<T> = readonly [Feel, T][];\n\n/** @public */\nexport type LookVectorUpdates<T> = readonly [Feel, T | undefined][];\n\n/** @public */\nexport class LookVector<T> implements Equals, Debug {\n  constructor(array: readonly [Feel, T][],\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  likeType?(like: LookVectorArray<T>): void;\n\n  /** @internal */\n  readonly array: readonly [Feel, T][];\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(feel: Feel): boolean;\n  has(name: string): boolean;\n  has(feel: Feel | string): boolean {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    return this.index[feel] !== void 0;\n  }\n\n  get(feel: Feel): T | undefined;\n  get(name: string): T | undefined;\n  get(index: number): T | undefined;\n  get(feel: Feel | string | number | undefined): T | undefined {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.index[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.array[feel] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<E>(feel: Feel, elseValue: E): T | E;\n  getOr<E>(name: string, elseValue: E): T | E;\n  getOr<E>(index: number, elseValue: E): T | E;\n  getOr<E>(feel: Feel | string | number | undefined, elseValue: E): T | E {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.index[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.array[feel] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated(feel: Feel, value: T | undefined): LookVector<T>;\n  updated(updates: LookVectorUpdates<T>): LookVector<T>;\n  updated(updates: LookVectorUpdates<T> | Feel, value?: T | undefined): LookVector<T> {\n    let feel: Feel;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [Feel, T][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        feel = updates as Feel;\n      } else {\n        [feel, value] = (updates as LookVectorUpdates<T>)[updateIndex]!;\n      }\n      const i = oldIndex[feel.name];\n      if (value !== void 0 && i !== void 0) { // update\n        const newArray = oldArray.slice(0);\n        newArray[i] = [feel, value];\n        newIndex = oldIndex;\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        const newArray = oldArray.slice(0);\n        const newIndex: {[name: string]: number | undefined} = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[feel.name] = newArray.length;\n        newArray.push([feel, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        const newArray = new Array<[Feel, T]>();\n        const newIndex: {[name: string]: number | undefined} = {};\n        let k = 0;\n        for (let j = 0; j < oldArray.length; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== feel) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray === void 0 || newIndex === void 0) {\n      return this;\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  protected copy(array: readonly [Feel, T][],\n                 index?: {readonly [name: string]: number | undefined}): LookVector<T> {\n    return LookVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: (value: T, feel: Feel) => R | void): R | undefined;\n  forEach<R, S>(callback: (this: S, value: T, feel: Feel) => R | void, thisArg: S): R | undefined;\n  forEach<R, S>(callback: (this: S | undefined, value: T, feel: Feel) => R | void, thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LookVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"LookVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(feel).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<T>(): LookVector<T> {\n    return new LookVector(Arrays.empty(), {});\n  }\n\n  static of<T>(...feels: [Feel, T][]): LookVector<T> {\n    return new LookVector(feels, LookVector.index(feels));\n  }\n\n  static fromLike<T, V extends LookVectorInit<T> | null | undefined>(value: V): LookVector<T> | Uninitable<V> {\n    if (value === void 0 || value === null || value instanceof LookVector) {\n      return value as LookVector<T> | Uninitable<V>;\n    } else if (Array.isArray(value)) {\n      return LookVector.fromArray(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromArray<T>(array: readonly [Feel, T][],\n                      index?: {[name: string]: number | undefined}): LookVector<T> {\n    if (index === void 0) {\n      index = LookVector.index(array);\n    }\n    return new LookVector(array, index);\n  }\n\n  /** @internal */\n  static index<T>(array: readonly [Feel, T][]): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {Look} from \"./Look\";\n\n/** @public */\nexport type FeelVectorLike = FeelVector | FeelVectorArray;\n\n/** @public */\nexport type FeelVectorArray = readonly [Look<unknown>, unknown][];\n\n/** @public */\nexport type FeelVectorUpdates = readonly [Look<unknown>, unknown | undefined][];\n\n/** @public */\nexport class FeelVector implements Interpolate<FeelVector>, Equals, Debug {\n  constructor(array: readonly [Look<unknown>, unknown][],\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  likeType?(like: FeelVectorArray): void;\n\n  /** @internal */\n  readonly array: readonly [Look<unknown>, unknown][];\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(look: Look<any>): boolean;\n  has(name: string): boolean;\n  has(look: Look<any> | string): boolean {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    return this.index[look] !== void 0;\n  }\n\n  get<T>(look: Look<T>): T | undefined;\n  get(name: string): unknown | undefined;\n  get(index: number): unknown | undefined;\n  get<T>(look: Look<T> | string | number | undefined): T | unknown | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.index[look];\n    }\n    const entry = typeof look === \"number\" ? this.array[look] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<T, E>(look: Look<T>, elseValue: E): T | E;\n  getOr(name: string, elseValue: unknown): unknown;\n  getOr(index: number, elseValue: unknown): unknown;\n  getOr<T, E>(look: Look<T> | string | number | undefined, elseValue: E): T | unknown | E {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.index[look];\n    }\n    const entry = typeof look === \"number\" ? this.array[look] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated<T>(look: Look<T>, value: T | LikeType<T> | undefined): FeelVector;\n  updated(updates: FeelVectorUpdates): FeelVector;\n  updated(updates: FeelVectorUpdates | Look<unknown>, value?: unknown | undefined): FeelVector {\n    let look: Look<unknown>;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [Look<unknown>, unknown][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        look = updates as Look<unknown>;\n      } else {\n        [look, value] = (updates as FeelVectorUpdates)[updateIndex]!;\n      }\n      const i = oldIndex[look.name];\n      if (value !== void 0 && i !== void 0) { // update\n        const newArray = oldArray.slice(0);\n        newIndex = oldIndex;\n        newArray[i] = [look, value];\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        const newArray = oldArray.slice(0);\n        const newIndex: {[name: string]: number | undefined} = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        const newArray = new Array<[Look<unknown>, unknown]>();\n        const newIndex: {[name: string]: number | undefined} = {};\n        let k = 0;\n        for (let j = 0; j < oldArray.length; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== look) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray === void 0 || newIndex === void 0) {\n      return this;\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  plus(that: FeelVector): FeelVector {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < thisArray.length; i += 1) {\n      const entry = thisArray[i]!;\n      const look = entry[0];\n      const y = that.get(look);\n      newIndex[look.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [look, look.combine(entry[1], y)]);\n    }\n    for (let i = 0; i < thatArray.length; i += 1) {\n      const entry = thatArray[i]!;\n      const look = entry[0];\n      if (newIndex[look.name] === void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  negative(): FeelVector {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Look<unknown>, unknown]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [look, x] = oldArray[i]!;\n      newArray[i] = [look, look.combine(void 0, x, -1)];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  minus(that: FeelVector): FeelVector {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < thisArray.length; i += 1) {\n      const entry = thisArray[i]!;\n      const look = entry[0];\n      const y = that.get(look);\n      newIndex[look.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [look, look.combine(entry[1], y, -1)]);\n    }\n    for (let i = 0; i < thatArray.length; i += 1) {\n      const [look, y] = thatArray[i]!;\n      if (newIndex[look.name] === void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, look.combine(void 0, y, -1)]);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  times(scalar: number): FeelVector {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Look<unknown>, unknown]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [look, x] = oldArray[i]!;\n      newArray[i] = [look, look.combine(void 0, x, scalar)];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  protected copy(array: readonly [Look<unknown>, unknown][],\n                 index?: {readonly [name: string]: number | undefined}): FeelVector {\n    return FeelVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: <T>(value: T, look: Look<T>) => R | void): R | undefined;\n  forEach<R, S>(callback: <T>(this: S, value: T, look: Look<T>) => R | void, thisArg: S): R | undefined;\n  forEach<R, S>(callback: <T>(this: S | undefined, value: T, look: Look<T>) => R | void, thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  /** @override */\n  interpolateTo(that: FeelVector): Interpolator<FeelVector>;\n  interpolateTo(that: unknown): Interpolator<FeelVector> | null;\n  interpolateTo(that: unknown): Interpolator<FeelVector> | null {\n    if (that instanceof FeelVector) {\n      return FeelVectorInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FeelVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"FeelVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [look, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(look).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty(): FeelVector {\n    return new FeelVector(Arrays.empty(), {});\n  }\n\n  static of(...looks: [Look<unknown>, unknown][]): FeelVector {\n    const n = looks.length;\n    const array = new Array<[Look<unknown>, unknown]>(n);\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < n; i += 1) {\n      const [look, value] = looks[i]!;\n      array[i] = [look, look.coerce(value)];\n      index[look.name] = i;\n    }\n    return new FeelVector(array, index);\n  }\n\n  static fromLike<V extends FeelVectorLike | null | undefined>(value: V): FeelVector | Uninitable<V> {\n    if (value === void 0 || value === null || value instanceof FeelVector) {\n      return value as FeelVector | Uninitable<V>;\n    } else if (Array.isArray(value)) {\n      return FeelVector.of(...value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromArray(array: readonly [Look<unknown>, unknown][],\n                   index?: {readonly [name: string]: number | undefined}): FeelVector {\n    if (index === void 0) {\n      index = FeelVector.index(array);\n    }\n    return new FeelVector(array, index);\n  }\n\n  /** @internal */\n  static index<T>(array: readonly [Look<T>, T][]): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index;\n  }\n}\n\n/** @internal */\nexport interface FeelVectorInterpolator extends Interpolator<FeelVector> {\n  /** @internal */\n  readonly interpolators: readonly [Look<unknown>, Interpolator<unknown>][];\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get 0(): FeelVector;\n\n  get 1(): FeelVector;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const FeelVectorInterpolator = (function (_super: typeof Interpolator) {\n  const FeelVectorInterpolator = function (v0: FeelVector, v1: FeelVector): FeelVectorInterpolator {\n    const interpolator = function (u: number): FeelVector {\n      const interpolators = interpolator.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = interpolator.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator(u);\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    } as FeelVectorInterpolator;\n    Object.setPrototypeOf(interpolator, FeelVectorInterpolator.prototype);\n    const interpolators = new Array<[Look<unknown>, Interpolator<unknown>]>();\n    const index: {[name: string]: number | undefined} = {};\n    v0.forEach(function <T>(a: T, look: Look<T>): void {\n      const b = v1.get(look);\n      if (b !== void 0) {\n        const interpolator = look.between(a, b);\n        index[look.name] = interpolators.length;\n        interpolators.push([look, interpolator]);\n      }\n    });\n    (interpolator as Mutable<typeof interpolator>).interpolators = interpolators;\n    (interpolator as Mutable<typeof interpolator>).index = index;\n    return interpolator;\n  } as {\n    (v0: FeelVector, v1: FeelVector): FeelVectorInterpolator;\n\n    /** @internal */\n    prototype: FeelVectorInterpolator;\n  };\n\n  FeelVectorInterpolator.prototype = Object.create(_super.prototype);\n  FeelVectorInterpolator.prototype.constructor = FeelVectorInterpolator;\n\n  Object.defineProperty(FeelVectorInterpolator.prototype, 0, {\n    get(this: FeelVectorInterpolator): FeelVector {\n      const interpolators = this.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = this.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator[0];\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FeelVectorInterpolator.prototype, 1, {\n    get(this: FeelVectorInterpolator): FeelVector {\n      const interpolators = this.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = this.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator[1];\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    },\n    configurable: true,\n  });\n\n  FeelVectorInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FeelVectorInterpolator) {\n      const n = this.interpolators.length;\n      if (n !== that.interpolators.length) {\n        return false;\n      }\n      for (let i = 0; i < n; i += 1) {\n        if (!Arrays.equal(this.interpolators[i]!, that.interpolators[i]!)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n\n  return FeelVectorInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {Feel} from \"./Feel\";\nimport type {Mood} from \"./Mood\";\n\n/** @public */\nexport type MoodVectorLike<M extends Mood = Feel> = MoodVector<M> | MoodVectorArray<M>;\n\n/** @public */\nexport type MoodVectorArray<M extends Mood = Feel> = readonly [M, number][];\n\n/** @public */\nexport type MoodVectorUpdates<M extends Mood = Feel> = readonly [M, number | undefined][];\n\n/** @public */\nexport class MoodVector<M extends Mood = Feel> implements Equals, Debug {\n  constructor(array: readonly [M, number][],\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  likeType?(like: MoodVectorArray<M>): void;\n\n  /** @internal */\n  readonly array: readonly [M, number][];\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(key: M): boolean;\n  has(name: string): boolean;\n  has(key: M | string): boolean {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    return this.index[key] !== void 0;\n  }\n\n  get(key: M): number | undefined;\n  get(name: string): number | undefined;\n  get(index: number): number | undefined;\n  get(key: M | string | number | undefined): number | undefined {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    if (typeof key === \"string\") {\n      key = this.index[key];\n    }\n    const entry = typeof key === \"number\" ? this.array[key] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<E>(key: M, elseValue: E): number | E;\n  getOr<E>(name: string, elseValue: E): number | E;\n  getOr<E>(index: number, elseValue: E): number | E;\n  getOr<E>(key: M | string | number | undefined, elseValue: E): number | E {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    if (typeof key === \"string\") {\n      key = this.index[key];\n    }\n    const entry = typeof key === \"number\" ? this.array[key] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated(key: M, value: number | undefined): MoodVector<M>;\n  updated(updates: MoodVectorUpdates<M>): MoodVector<M>;\n  updated(updates: MoodVectorUpdates<M> | M, value?: number | undefined): MoodVector<M> {\n    let key: M;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [M, number][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        key = updates as M;\n      } else {\n        [key, value] = (updates as MoodVectorUpdates<M>)[updateIndex]!;\n      }\n      const i = oldIndex[key.name];\n      if (value !== void 0 && i !== void 0) { // update\n        newArray = oldArray.slice(0);\n        newIndex = oldIndex;\n        newArray[i] = [key, value];\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        newArray = oldArray.slice(0);\n        newIndex = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[key.name] = newArray.length;\n        newArray.push([key, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        newArray = new Array<[M, number]>();\n        newIndex = {};\n        let k = 0;\n        for (let j = 0; j < oldArray.length; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== key) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray === void 0 || newIndex === void 0) {\n      return this;\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  plus(that: MoodVector<M>): MoodVector<M> {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < thisArray.length; i += 1) {\n      const entry = thisArray[i]!;\n      const key = entry[0];\n      const y = that.get(key);\n      newIndex[key.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [key, entry[1] + y]);\n    }\n    for (let i = 0; i < thatArray.length; i += 1) {\n      const entry = thatArray[i]!;\n      const key = entry[0];\n      if (newIndex[key.name] === void 0) {\n        newIndex[key.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  negative(): MoodVector<M> {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[M, number]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [key, x] = oldArray[i]!;\n      newArray[i] = [key, -x];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  minus(that: MoodVector<M>): MoodVector<M> {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < thisArray.length; i += 1) {\n      const entry = thisArray[i]!;\n      const key = entry[0];\n      const y = that.get(key);\n      newIndex[key.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [key, entry[1] - y]);\n    }\n    for (let i = 0; i < thatArray.length; i += 1) {\n      const [key, y] = thatArray[i]!;\n      if (newIndex[key.name] === void 0) {\n        newIndex[key.name] = newArray.length;\n        newArray.push([key, -y]);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  times(scalar: number): MoodVector<M> {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[M, number]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [key, x] = oldArray[i]!;\n      newArray[i] = [key, x * scalar];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  dot(that: MoodVector<M>): number | undefined {\n    const array = this.array;\n    let combination: number | undefined;\n    for (let i = 0; i < array.length; i += 1) {\n      const [key, x] = array[i]!;\n      const y = that.get(key);\n      if (y === void 0) {\n        continue;\n      } else if (combination === void 0) {\n        combination = x * y;\n      } else {\n        combination += x * y;\n      }\n    }\n    return combination;\n  }\n\n  protected copy(array: readonly [M, number][],\n                 index?: {readonly [name: string]: number | undefined}): MoodVector<M> {\n    return MoodVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: (value: number, key: M) => R | void): R | undefined;\n  forEach<R, S>(callback: (this: S, value: number, key: M) => R | void, thisArg: S): R | undefined;\n  forEach<R, S>(callback: (this: S | undefined, value: number, key: M) => R | void, thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MoodVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"MoodVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [key, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(key).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<M extends Mood>(): MoodVector<M> {\n    return new MoodVector(Arrays.empty(), {});\n  }\n\n  static of<M extends Mood>(...keys: [M, number][]): MoodVector<M> {\n    return new MoodVector(keys, MoodVector.index(keys));\n  }\n\n  static fromLike<M extends Mood, V extends MoodVectorLike<M> | null | undefined>(value: V): MoodVector<M> | Uninitable<V> {\n    if (value === void 0 || value === null || value instanceof MoodVector) {\n      return value as MoodVector<M> | Uninitable<V>;\n    } else if (Array.isArray(value)) {\n      return MoodVector.fromArray(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromArray<M extends Mood>(array: readonly [M, number][],\n                                   index?: {[name: string]: number | undefined}): MoodVector<M> {\n    if (index === void 0) {\n      index = MoodVector.index(array);\n    }\n    return new MoodVector(array, index);\n  }\n\n  /** @internal */\n  static index<M extends Mood>(array: readonly [M, unknown][]): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < array.length; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {MoodVectorLike} from \"./MoodVector\";\nimport type {MoodVectorUpdates} from \"./MoodVector\";\nimport {MoodVector} from \"./MoodVector\";\nimport type {Feel} from \"./Feel\";\nimport type {Mood} from \"./Mood\";\n\n/** @public */\nexport class MoodMatrix<M extends Mood = Feel, N extends Mood = Feel> implements Equals, Debug {\n  constructor(rowArray: readonly [M, MoodVector<N>][],\n              rowIndex: {readonly [name: string]: number | undefined},\n              colArray: readonly [N, MoodVector<M>][],\n              colIndex: {readonly [name: string]: number | undefined}) {\n    this.rowArray = rowArray;\n    this.rowIndex = rowIndex;\n    this.colArray = colArray;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly rowArray: readonly [M, MoodVector<N>][];\n\n  /** @internal */\n  readonly rowIndex: {readonly [name: string]: number | undefined};\n\n  /** @internal */\n  readonly colArray: readonly [N, MoodVector<M>][];\n\n  /** @internal */\n  readonly colIndex: {readonly [name: string]: number | undefined};\n\n  get rowCount(): number {\n    return this.rowArray.length;\n  }\n\n  get colCount(): number {\n    return this.colArray.length;\n  }\n\n  hasRow(rowKey: M): boolean;\n  hasRow(rowKey: string): boolean;\n  hasRow(rowKey: M | string): boolean {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    return this.rowIndex[rowKey] !== void 0;\n  }\n\n  hasCol(colKey: N): boolean;\n  hasCol(colKey: string): boolean;\n  hasCol(colKey: N | string): boolean {\n    if (typeof colKey === \"object\" && colKey !== null || typeof colKey === \"function\") {\n      colKey = colKey.name;\n    }\n    return this.colIndex[colKey] !== void 0;\n  }\n\n  getRow(rowKey: M): MoodVector<N> | undefined;\n  getRow(rowKey: string): MoodVector<N> | undefined;\n  getRow(rowIndex: number): MoodVector<N> | undefined;\n  getRow(rowKey: M | string | number | undefined): MoodVector<N> | undefined {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    if (typeof rowKey === \"string\") {\n      rowKey = this.rowIndex[rowKey];\n    }\n    const entry = typeof rowKey === \"number\" ? this.rowArray[rowKey] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getCol(colKey: N): MoodVector<M> | undefined;\n  getCol(colKey: string): MoodVector<M> | undefined;\n  getCol(colIndex: number): MoodVector<M> | undefined;\n  getCol(colKey: N | string | number | undefined): MoodVector<M> | undefined {\n    if (typeof colKey === \"object\" && colKey !== null || typeof colKey === \"function\") {\n      colKey = colKey.name;\n    }\n    if (typeof colKey === \"string\") {\n      colKey = this.colIndex[colKey];\n    }\n    const entry = typeof colKey === \"number\" ? this.colArray[colKey] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  plus(that: MoodMatrix<M, N>): MoodMatrix<M, N> {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const entry = thisColArray[j]!;\n      const colKey = entry[0];\n      const b = that.getCol(colKey);\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [colKey, entry[1].plus(b)]);\n    }\n    for (let j = 0; j < thatColArray.length; j += 1) {\n      const entry = thatColArray[j]!;\n      const colKey = entry[0];\n      if (newColIndex[colKey.name] === void 0) {\n        newColIndex[colKey.name] = newColArray.length;\n        newColArray.push(entry);\n      }\n    }\n    return MoodMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  negative(): MoodMatrix<M, N> {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[N, MoodVector<M>]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, a] = oldColArray[j]!;\n      newColArray[j] = [colKey, a.negative()];\n    }\n    return MoodMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  minus(that: MoodMatrix<M, N>): MoodMatrix<M, N> {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const entry = thisColArray[j]!;\n      const colKey = entry[0];\n      const b = that.getCol(colKey);\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [colKey, entry[1].minus(b)]);\n    }\n    for (let j = 0; j < thatColArray.length; j += 1) {\n      const [colKey, b] = thatColArray[j]!;\n      if (newColIndex[colKey.name] === void 0) {\n        newColIndex[colKey.name] = newColArray.length;\n        newColArray.push([colKey, b.negative()]);\n      }\n    }\n    return MoodMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  times(scalar: number): MoodMatrix<M, N> {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[N, MoodVector<M>]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, a] = oldColArray[j]!;\n      newColArray[j] = [colKey, a.times(scalar)];\n    }\n    return MoodMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  dot(rowKey: M | string | number, col: MoodVector<N>): number | undefined;\n  dot(rowKey: M | string | number | undefined, col: MoodVector<N>): number | undefined {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    if (typeof rowKey === \"string\") {\n      rowKey = this.rowIndex[rowKey];\n    }\n    const entry = typeof rowKey === \"number\" ? this.rowArray[rowKey] : void 0;\n    if (entry === void 0) {\n      return void 0;\n    }\n    rowKey = entry[0];\n    const row = entry[1];\n    return row.dot(col);\n  }\n\n  timesCol(col: MoodVector<N>): MoodVector<M>;\n  timesCol(col: MoodVector<M & N>, implicitIdentity?: boolean): MoodVector<M | M>;\n  timesCol(col: MoodVector<M & N>, implicitIdentity: boolean = false): MoodVector<M | N> {\n    const rowArray = this.rowArray;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const [rowKey, row] = rowArray[i]!;\n      const value = row.dot(col);\n      if (value !== void 0) {\n        newIndex[rowKey.name] = newArray.length;\n        newArray.push([rowKey, value]);\n      }\n    }\n    if (implicitIdentity) {\n      const thatArray = col.array;\n      for (let i = 0; i < thatArray.length; i += 1) {\n        const rowKey = thatArray[i]![0];\n        if (!this.hasRow(rowKey)) {\n          newIndex[rowKey.name] = newArray.length;\n          newArray.push(thatArray[i]!);\n        }\n      }\n    }\n    return MoodVector.fromArray(newArray, newIndex);\n  }\n\n  timesRow(row: MoodVector<M>): MoodVector<N>;\n  timesRow(row: MoodVector<M & N>, implicitIdentity?: boolean): MoodVector<M | M>;\n  timesRow(row: MoodVector<M & N>, implicitIdentity: boolean = false): MoodVector<M | N> {\n    const colArray = this.colArray;\n    const newArray = new Array<[N, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < colArray.length; i += 1) {\n      const [colKey, col] = colArray[i]!;\n      const value = row.dot(col as MoodVector<M & N>);\n      if (value !== void 0) {\n        newIndex[colKey.name] = newArray.length;\n        newArray.push([colKey, value]);\n      }\n    }\n    if (implicitIdentity) {\n      const thatArray = row.array;\n      for (let i = 0; i < thatArray.length; i += 1) {\n        const colKey = thatArray[i]![0];\n        if (!this.hasCol(colKey)) {\n          newIndex[colKey.name] = newArray.length;\n          newArray.push(thatArray[i]!);\n        }\n      }\n    }\n    return MoodVector.fromArray(newArray, newIndex);\n  }\n\n  transform(that: MoodMatrix<N, N>, implicitIdentity: boolean = true): MoodMatrix<M, N> {\n    const thisRowArray = this.rowArray;\n    const thisColArray = this.colArray;\n    const newRowArray = new Array<[M, MoodVector<N>]>();\n    const newRowIndex: {[name: string]: number | undefined} = {};\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const colKey = thisColArray[j]![0];\n      let col = that.getCol(colKey);\n      if (col === void 0 && implicitIdentity) {\n        col = MoodVector.of([colKey, 1]);\n      }\n      if (col === void 0) {\n        continue;\n      }\n      for (let i = 0; i < thisRowArray.length; i += 1) {\n        const [rowKey, row] = thisRowArray[i]!;\n        const value = row.dot(col);\n        if (value === void 0) {\n          continue;\n        }\n        const i2 = newRowIndex[rowKey.name];\n        if (i2 === void 0) {\n          newRowIndex[rowKey.name] = newRowArray.length;\n          newRowArray.push([rowKey, MoodVector.of([colKey, value])]);\n        } else {\n          const newRow = newRowArray[i2]![1];\n          (newRow.index as {[name: string]: number | undefined})[rowKey.name] = newRow.array.length;\n          (newRow.array as [N, number][]).push([colKey, value]);\n        }\n        const j2 = newColIndex[colKey.name];\n        if (j2 === void 0) {\n          newColIndex[colKey.name] = newColArray.length;\n          newColArray.push([colKey, MoodVector.of([rowKey, value])]);\n        } else {\n          const newCol = newColArray[j2]![1];\n          (newCol.index as {[name: string]: number | undefined})[colKey.name] = newCol.array.length;\n          (newCol.array as [M, number][]).push([rowKey, value]);\n        }\n      }\n    }\n    return new MoodMatrix(newRowArray, newRowIndex, newColArray, newColIndex);\n  }\n\n  /** @internal */\n  identityFor(that: MoodMatrix<N, M & N>): MoodMatrix<M, N> {\n    const thisRowArray = this.rowArray;\n    const thatColArray = that.colArray;\n    let newRowArray: Array<[M, MoodVector<N>]> | undefined;\n    let newRowIndex: {[name: string]: number | undefined} | undefined;\n    for (let j = 0; j < thatColArray.length; j += 1) {\n      const colKey = thatColArray[j]![0];\n      if (this.hasRow(colKey)) {\n        continue;\n      } else if (newRowArray === void 0) {\n        newRowArray = thisRowArray.slice(0);\n      }\n      if (newRowIndex === void 0) {\n        newRowIndex = {};\n        for (const name in this.rowIndex) {\n          newRowIndex[name] = this.rowIndex[name];\n        }\n      }\n      newRowIndex[colKey.name] = newRowArray.length;\n      newRowArray.push([colKey, MoodVector.of([colKey, 1])]);\n    }\n    if (newRowArray === void 0 || newRowIndex === void 0) {\n      return this;\n    }\n    return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n  }\n\n  row(rowKey: M, row: MoodVectorLike<N> | undefined): MoodMatrix<M, N> {\n    if (row !== void 0) {\n      row = MoodVector.fromLike(row);\n    }\n    const oldRowArray = this.rowArray;\n    const oldRowIndex = this.rowIndex;\n    const i = oldRowIndex[rowKey.name];\n    if (row !== void 0 && i !== void 0) { // update\n      const newRowArray = oldRowArray.slice(0);\n      newRowArray[i] = [rowKey, row];\n      return MoodMatrix.fromRowArray(newRowArray, oldRowIndex);\n    } else if (row !== void 0) { // insert\n      const newRowArray = oldRowArray.slice(0);\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldRowIndex) {\n        newRowIndex[name] = oldRowIndex[name];\n      }\n      newRowIndex[rowKey.name] = newRowArray.length;\n      newRowArray.push([rowKey, row]);\n      return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else if (i !== void 0) { // remove\n      const newRowArray = new Array<[M, MoodVector<N>]>();\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0; j < oldRowArray.length; j += 1) {\n        const entry = oldRowArray[j]!;\n        if (entry[0] !== rowKey) {\n          newRowArray[k] = entry;\n          newRowIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n    }\n    return this; // nop\n  }\n\n  col(colKey: N, col: MoodVectorLike<M> | undefined): MoodMatrix<M, N> {\n    if (col !== void 0) {\n      col = MoodVector.fromLike(col);\n    }\n    const oldColArray = this.colArray;\n    const oldColIndex = this.colIndex;\n    const i = oldColIndex[colKey.name];\n    if (col !== void 0 && i !== void 0) { // update\n      const newColArray = oldColArray.slice(0);\n      newColArray[i] = [colKey, col];\n      return MoodMatrix.fromColArray(newColArray, oldColIndex);\n    } else if (col !== void 0) { // insert\n      const newColArray = oldColArray.slice(0);\n      const newColIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldColIndex) {\n        newColIndex[name] = oldColIndex[name];\n      }\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push([colKey, col]);\n      return MoodMatrix.fromColArray(newColArray, newColIndex);\n    } else if (i !== void 0) { // remove\n      const newColArray = new Array<[N, MoodVector<M>]>();\n      const newColIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0; j < oldColArray.length; j += 1) {\n        const entry = oldColArray[j]!;\n        if (entry[0] !== colKey) {\n          newColArray[k] = entry;\n          newColIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return MoodMatrix.fromColArray(newColArray, newColIndex);\n    } else\n    return this; // nop\n  }\n\n  updatedRow(rowKey: M, updates: MoodVectorUpdates<N>,\n             defaultRow?: MoodVectorLike<N>): MoodMatrix<M, N>;\n  updatedRow(rowKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultRow?: MoodVectorLike<N> | boolean): MoodMatrix<M | N, N>\n  updatedRow(rowKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultRow?: MoodVectorLike<N> | boolean): MoodMatrix<M | N, N> {\n    const oldRow = this.getRow(rowKey);\n    let newRow = oldRow;\n    if (newRow === void 0) {\n      if (defaultRow === true) {\n        defaultRow = MoodVector.of([rowKey, 1]);\n      } else if (defaultRow === false) {\n        defaultRow = void 0;\n      }\n      if (defaultRow === void 0) {\n        defaultRow = MoodVector.empty();\n      } else {\n        defaultRow = MoodVector.fromLike(defaultRow);\n      }\n      newRow = defaultRow;\n    }\n    newRow = newRow.updated(updates);\n    if (newRow.equals(oldRow)) {\n      return this;\n    }\n    return this.row(rowKey, newRow);\n  }\n\n  updatedCol(colKey: N, updates: MoodVectorUpdates<M>,\n             defaultCol?: MoodVectorLike<M>): MoodMatrix<M, N>;\n  updatedCol(colKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultCol?: MoodVectorLike<M> | boolean): MoodMatrix<M | N, N>;\n  updatedCol(colKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultCol?: MoodVectorLike<M> | boolean): MoodMatrix<M | N, N> {\n    const oldCol = this.getCol(colKey);\n    let newCol = oldCol;\n    if (newCol === void 0) {\n      if (defaultCol === true) {\n        defaultCol = MoodVector.of([colKey, 1]);\n      } else if (defaultCol === false) {\n        defaultCol = void 0;\n      }\n      if (defaultCol === void 0) {\n        defaultCol = MoodVector.empty();\n      } else {\n        defaultCol = MoodVector.fromLike(defaultCol);\n      }\n      newCol = defaultCol;\n    }\n    newCol = newCol.updated(updates);\n    if (newCol.equals(oldCol)) {\n      return this;\n    }\n    return this.col(colKey, newCol);\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MoodMatrix) {\n      const equal = Arrays.equal(this.colArray, that.colArray);\n      return equal;\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    const cols = this.colArray;\n    const n = cols.length;\n    output = output.write(\"MoodMatrix\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"forCols\" : \"empty\").write(40/*'('*/);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, col] = cols[j]!;\n      if (j !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(colKey).write(\", \").debug(col).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<M extends Mood = Feel, N extends Mood = Feel>(): MoodMatrix<M, N> {\n    return new MoodMatrix(Arrays.empty(), {}, Arrays.empty(), {});\n  }\n\n  static forRows<M extends Mood, N extends Mood>(...rows: [M, MoodVectorLike<N>][]): MoodMatrix<M, N> {\n    const m = rows.length;\n    const rowArray = new Array<[M, MoodVector<N>]>(m);\n    for (let i = 0; i < m; i += 1) {\n      const [rowKey, row] = rows[i]!;\n      rowArray[i] = [rowKey, MoodVector.fromLike(row)];\n    }\n    return this.fromRowArray(rowArray);\n  }\n\n  static forCols<M extends Mood, N extends Mood>(...cols: [N, MoodVectorLike<M>][]): MoodMatrix<M, N> {\n    const m = cols.length;\n    const colArray = new Array<[N, MoodVector<M>]>(m);\n    for (let j = 0; j < m; j += 1) {\n      const [colKey, col] = cols[j]!;\n      colArray[j] = [colKey, MoodVector.fromLike(col)];\n    }\n    return this.fromColArray(colArray);\n  }\n\n  static fromRowArray<M extends Mood, N extends Mood>(\n      rowArray: readonly [M, MoodVector<N>][],\n      rowIndex?: {readonly [name: string]: number | undefined}): MoodMatrix<M, N> {\n    if (rowIndex === void 0) {\n      rowIndex = MoodVector.index(rowArray);\n    }\n    const colArray = new Array<[N, MoodVector<M>]>();\n    const colIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const row = rowArray[i]![1];\n      row.forEach(function (value: number, colKey: N): void {\n        if (colIndex[colKey.name] === void 0) {\n          colIndex[colKey.name] = colArray.length;\n          colArray.push([colKey, void 0 as unknown as MoodVector<M>]);\n        }\n      }, this);\n    }\n    for (let j = 0; j < colArray.length; j += 1) {\n      const entry = colArray[j]!;\n      const colKey = entry[0];\n      const array = new Array<[M, number]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let i = 0; i < rowArray.length; i += 1) {\n        const [rowKey, row] = rowArray[i]!;\n        const value = row.get(colKey);\n        if (value !== void 0) {\n          index[rowKey.name] = array.length;\n          array.push([rowKey, value]);\n        }\n      }\n      const col = MoodVector.fromArray(array, index);\n      entry[1] = col;\n    }\n    return new MoodMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n\n  static fromColArray<M extends Mood, N extends Mood>(\n      colArray: readonly [N, MoodVector<M>][],\n      colIndex?: {readonly [name: string]: number | undefined}): MoodMatrix<M, N> {\n    if (colIndex === void 0) {\n      colIndex = MoodVector.index(colArray);\n    }\n    const rowArray = new Array<[M, MoodVector<N>]>();\n    const rowIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < colArray.length; i += 1) {\n      const col = colArray[i]![1];\n      col.forEach(function (value: number, rowKey: M): void {\n        if (rowIndex[rowKey.name] === void 0) {\n          rowIndex[rowKey.name] = rowArray.length;\n          rowArray.push([rowKey, void 0 as unknown as MoodVector<N>]);\n        }\n      }, this);\n    }\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const entry = rowArray[i]!;\n      const rowKey = entry[0];\n      const array = new Array<[N, number]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let j = 0; j < colArray.length; j += 1) {\n        const [colKey, col] = colArray[j]!;\n        const value = col.get(rowKey);\n        if (value !== void 0) {\n          index[colKey.name] = array.length;\n          array.push([colKey, value]);\n        }\n      }\n      const row = MoodVector.fromArray(array, index);\n      entry[1] = row;\n    }\n    return new MoodMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LookVectorInit} from \"./LookVector\";\nimport type {LookVectorUpdates} from \"./LookVector\";\nimport {LookVector} from \"./LookVector\";\nimport type {FeelVectorLike} from \"./FeelVector\";\nimport type {FeelVectorUpdates} from \"./FeelVector\";\nimport {FeelVector} from \"./FeelVector\";\nimport {MoodVector} from \"./MoodVector\";\nimport type {MoodMatrix} from \"./MoodMatrix\";\nimport type {Look} from \"./Look\";\nimport type {Feel} from \"./Feel\";\n\n/** @public */\nexport class ThemeMatrix implements Equals, Debug {\n  constructor(rowArray: readonly [Look<unknown>, LookVector<unknown>][],\n              rowIndex: {readonly [name: string]: number | undefined},\n              colArray: readonly [Feel, FeelVector][],\n              colIndex: {readonly [name: string]: number | undefined}) {\n    this.rowArray = rowArray;\n    this.rowIndex = rowIndex;\n    this.colArray = colArray;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly rowArray: readonly [Look<unknown>, LookVector<unknown>][];\n\n  /** @internal */\n  readonly rowIndex: {readonly [name: string]: number | undefined};\n\n  /** @internal */\n  readonly colArray: readonly [Feel, FeelVector][];\n\n  /** @internal */\n  readonly colIndex: {readonly [name: string]: number | undefined};\n\n  get rowCount(): number {\n    return this.rowArray.length;\n  }\n\n  get colCount(): number {\n    return this.colArray.length;\n  }\n\n  hasRow(look: Look<unknown>): boolean;\n  hasRow(name: string): boolean;\n  hasRow(look: Look<unknown> | string): boolean {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    return this.rowIndex[look] !== void 0;\n  }\n\n  hasCol(feel: Feel): boolean;\n  hasCol(name: string): boolean;\n  hasCol(feel: Feel | string): boolean {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    return this.colIndex[feel] !== void 0;\n  }\n\n  getRow<T>(look: Look<T>): LookVector<T> | undefined;\n  getRow(name: string): LookVector<unknown> | undefined;\n  getRow(index: number): LookVector<unknown> | undefined;\n  getRow<T>(look: Look<T> | string | number | undefined): LookVector<unknown> | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getCol(feel: Feel): FeelVector | undefined;\n  getCol(name: string): FeelVector | undefined;\n  getCol(index: number): FeelVector | undefined;\n  getCol(feel: Feel | string | number | undefined): FeelVector | undefined {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.colIndex[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.colArray[feel] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  get<T>(look: Look<T>, mood: MoodVector): T | undefined {\n    return this.dot(look, mood);\n  }\n\n  getOr<T, E>(look: Look<T>, mood: MoodVector, elseValue: E): T | E {\n    return this.dotOr(look, mood, elseValue);\n  }\n\n  plus(that: ThemeMatrix): ThemeMatrix {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const entry = thisColArray[j]!;\n      const feel = entry[0];\n      const b = that.getCol(feel);\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [feel, entry[1].plus(b)]);\n    }\n    for (let j = 0; j < thatColArray.length; j += 1) {\n      const entry = thatColArray[j]!;\n      const feel = entry[0];\n      if (newColIndex[feel.name] === void 0) {\n        newColIndex[feel.name] = newColArray.length;\n        newColArray.push(entry);\n      }\n    }\n    return ThemeMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  negative(): ThemeMatrix {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[Feel, FeelVector]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, a] = oldColArray[j]!;\n      newColArray[j] = [feel, a.negative()];\n    }\n    return ThemeMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  minus(that: ThemeMatrix): ThemeMatrix {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const entry = thisColArray[j]!;\n      const feel = entry[0];\n      const b = that.getCol(feel);\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [feel, entry[1].minus(b)]);\n    }\n    for (let j = 0; j < thatColArray.length; j += 1) {\n      const [feel, b] = thatColArray[j]!;\n      if (newColIndex[feel.name] === void 0) {\n        newColIndex[feel.name] = newColArray.length;\n        newColArray.push([feel, b.negative()]);\n      }\n    }\n    return ThemeMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  times(scalar: number): ThemeMatrix {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[Feel, FeelVector]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, a] = oldColArray[j]!;\n      newColArray[j] = [feel, a.times(scalar)];\n    }\n    return ThemeMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  dot<T>(look: Look<T>, col: MoodVector): T | undefined;\n  dot(look: string | number, col: MoodVector): unknown | undefined;\n  dot(look: Look<unknown> | string | number | undefined, col: MoodVector): unknown | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    if (entry === void 0) {\n      return void 0;\n    }\n    look = entry[0];\n    const row = entry[1];\n    return look.dot(row, col);\n  }\n\n  dotOr<T, E>(look: Look<T>, col: MoodVector, elseValue: E): T | E;\n  dotOr(look: string | number, col: MoodVector, elseValue: unknown): unknown;\n  dotOr(look: Look<unknown> | string | number | undefined, col: MoodVector, elseValue: unknown): unknown {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    if (entry === void 0) {\n      return elseValue;\n    }\n    look = entry[0];\n    const row = entry[1];\n    return look.dotOr(row, col, elseValue);\n  }\n\n  timesCol(col: MoodVector): FeelVector {\n    const rowArray = this.rowArray;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const [look, row] = rowArray[i]!;\n      const value = look.dot(row, col);\n      if (value !== void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, value]);\n      }\n    }\n    return FeelVector.fromArray(newArray, newIndex);\n  }\n\n  transform(that: MoodMatrix, implicitIdentity: boolean = true): ThemeMatrix {\n    const thisRowArray = this.rowArray;\n    const thisColArray = this.colArray;\n    const newRowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n    const newRowIndex: {[name: string]: number | undefined} = {};\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0; j < thisColArray.length; j += 1) {\n      const feel = thisColArray[j]![0];\n      let col = that.getCol(feel);\n      if (col === void 0 && implicitIdentity) {\n        col = MoodVector.of([feel, 1]);\n      }\n      if (col === void 0) {\n        continue;\n      }\n      for (let i = 0; i < thisRowArray.length; i += 1) {\n        const [look, row] = thisRowArray[i]!;\n        const value = look.dot(row, col);\n        if (value === void 0) {\n          continue;\n        }\n        const i2 = newRowIndex[look.name];\n        if (i2 === void 0) {\n          newRowIndex[look.name] = newRowArray.length;\n          newRowArray.push([look, LookVector.of([feel, value])]);\n        } else {\n          const newRow = newRowArray[i2]![1];\n          (newRow.index as {[name: string]: number | undefined})[look.name] = newRow.array.length;\n          (newRow.array as [Feel, unknown][]).push([feel, value]);\n        }\n        const j2 = newColIndex[feel.name];\n        if (j2 === void 0) {\n          newColIndex[feel.name] = newColArray.length;\n          newColArray.push([feel, FeelVector.of([look, value])]);\n        } else {\n          const newCol = newColArray[j2]![1];\n          (newCol.index as {[name: string]: number | undefined})[feel.name] = newCol.array.length;\n          (newCol.array as [Look<unknown>, unknown][]).push([look, value]);\n        }\n      }\n    }\n    return new ThemeMatrix(newRowArray, newRowIndex, newColArray, newColIndex);\n  }\n\n  row<T>(look: Look<T>, row: LookVectorInit<T> | undefined): ThemeMatrix {\n    if (row !== void 0) {\n      row = LookVector.fromLike(row);\n    }\n    const oldRowArray = this.rowArray;\n    const oldRowIndex = this.rowIndex;\n    const i = oldRowIndex[look.name];\n    if (row !== void 0 && i !== void 0) { // update\n      const newRowArray = oldRowArray.slice(0);\n      newRowArray[i] = [look, row];\n      return ThemeMatrix.fromRowArray(newRowArray, oldRowIndex);\n    } else if (row !== void 0) { // insert\n      const newRowArray = oldRowArray.slice(0);\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldRowIndex) {\n        newRowIndex[name] = oldRowIndex[name];\n      }\n      newRowIndex[look.name] = newRowArray.length;\n      newRowArray.push([look, row]);\n      return ThemeMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else if (i !== void 0) { // remove\n      const newRowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0; j < oldRowArray.length; j += 1) {\n        const entry = oldRowArray[j]!;\n        if (entry[0] !== look) {\n          newRowArray[k] = entry;\n          newRowIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return ThemeMatrix.fromRowArray(newRowArray, newRowIndex);\n    }\n    return this; // nop\n  }\n\n  col(feel: Feel, col: FeelVectorLike | undefined): ThemeMatrix {\n    if (col !== void 0) {\n      col = FeelVector.fromLike(col);\n    }\n    const oldColArray = this.colArray;\n    const oldColIndex = this.colIndex;\n    const i = oldColIndex[feel.name];\n    if (col !== void 0 && i !== void 0) { // update\n      const newColArray = oldColArray.slice(0);\n      newColArray[i] = [feel, col];\n      return ThemeMatrix.fromColArray(newColArray, oldColIndex);\n    } else if (col !== void 0) { // insert\n      const newColArray = oldColArray.slice(0);\n      const newColIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldColIndex) {\n        newColIndex[name] = oldColIndex[name];\n      }\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push([feel, col]);\n      return ThemeMatrix.fromColArray(newColArray, newColIndex);\n    } else if (i !== void 0) { // remove\n      const newColArray = new Array<[Feel, FeelVector]>();\n      const newColIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0; j < oldColArray.length; j += 1) {\n        const entry = oldColArray[j]!;\n        if (entry[0] !== feel) {\n          newColArray[k] = entry;\n          newColIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return ThemeMatrix.fromColArray(newColArray, newColIndex);\n    }\n    return this; // nop\n  }\n\n  updatedRow<T>(look: Look<T>, updates: LookVectorUpdates<T>,\n                defaultRow?: LookVectorInit<T>): ThemeMatrix {\n    const oldRow = this.getRow(look);\n    let newRow = oldRow;\n    if (newRow === void 0) {\n      if (defaultRow !== void 0) {\n        defaultRow = LookVector.fromLike(defaultRow);\n      } else {\n        defaultRow = LookVector.empty();\n      }\n      newRow = defaultRow;\n    }\n    newRow = newRow.updated(updates);\n    if (newRow.equals(oldRow)) {\n      return this;\n    }\n    return this.row(look, newRow);\n  }\n\n  updatedCol(feel: Feel, updates: FeelVectorUpdates,\n             defaultCol?: FeelVectorLike): ThemeMatrix {\n    const oldCol = this.getCol(feel);\n    let newCol = oldCol;\n    if (newCol === void 0) {\n      if (defaultCol !== void 0) {\n        defaultCol = FeelVector.fromLike(defaultCol);\n      } else {\n        defaultCol = FeelVector.empty();\n      }\n      newCol = defaultCol;\n    }\n    newCol = newCol.updated(updates);\n    if (newCol.equals(oldCol)) {\n      return this;\n    }\n    return this.col(feel, newCol);\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ThemeMatrix) {\n      return Arrays.equal(this.colArray, that.colArray);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    const cols = this.colArray;\n    const n = cols.length;\n    output = output.write(\"ThemeMatrix\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"forCols\" : \"empty\").write(40/*'('*/);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, col] = cols[j]!;\n      if (j !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(feel).write(\", \").debug(col).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty(): ThemeMatrix {\n    return new ThemeMatrix(Arrays.empty(), {}, Arrays.empty(), {});\n  }\n\n  static forRows(...rows: [Look<unknown>, LookVectorInit<unknown>][]): ThemeMatrix {\n    const m = rows.length;\n    const rowArray = new Array<[Look<unknown>, LookVector<unknown>]>(m);\n    for (let i = 0; i < m; i += 1) {\n      const [look, row] = rows[i]!;\n      rowArray[i] = [look, LookVector.fromLike(row)];\n    }\n    return this.fromRowArray(rowArray);\n  }\n\n  static forCols(...cols: [Feel, FeelVectorLike][]): ThemeMatrix {\n    const m = cols.length;\n    const colArray = new Array<[Feel, FeelVector]>(m);\n    for (let j = 0; j < m; j += 1) {\n      const [feel, col] = cols[j]!;\n      colArray[j] = [feel, FeelVector.fromLike(col)];\n    }\n    return this.fromColArray(colArray);\n  }\n\n  static fromRowArray(rowArray: readonly [Look<unknown>, LookVector<unknown>][],\n                      rowIndex?: {readonly [name: string]: number | undefined}): ThemeMatrix {\n    if (rowIndex === void 0) {\n      rowIndex = FeelVector.index(rowArray);\n    }\n    const colArray = new Array<[Feel, FeelVector]>();\n    const colIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const row = rowArray[i]![1];\n      row.forEach(function (value: unknown, feel: Feel): void {\n        if (colIndex[feel.name] === void 0) {\n          colIndex[feel.name] = colArray.length;\n          colArray.push([feel, void 0 as unknown as FeelVector]);\n        }\n      }, this);\n    }\n    for (let j = 0; j < colArray.length; j += 1) {\n      const entry = colArray[j]!;\n      const feel = entry[0];\n      const array = new Array<[Look<unknown>, unknown]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let i = 0; i < rowArray.length; i += 1) {\n        const [look, row] = rowArray[i]!;\n        const value = row.get(feel);\n        if (value !== void 0) {\n          index[look.name] = array.length;\n          array.push([look, value]);\n        }\n      }\n      const col = FeelVector.fromArray(array, index);\n      entry[1] = col;\n    }\n    return new ThemeMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n\n  static fromColArray(colArray: readonly [Feel, FeelVector][],\n                      colIndex?: {readonly [name: string]: number | undefined}): ThemeMatrix {\n    if (colIndex === void 0) {\n      colIndex = LookVector.index(colArray);\n    }\n    const rowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n    const rowIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < colArray.length; i += 1) {\n      const col = colArray[i]![1];\n      col.forEach(function <T>(value: T, look: Look<T>): void {\n        if (rowIndex[look.name] === void 0) {\n          rowIndex[look.name] = rowArray.length;\n          rowArray.push([look, void 0 as unknown as LookVector<T>]);\n        }\n      }, this);\n    }\n    for (let i = 0; i < rowArray.length; i += 1) {\n      const entry = rowArray[i]!;\n      const look = entry[0];\n      const array = new Array<[Feel, unknown]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let j = 0; j < colArray.length; j += 1) {\n        const [feel, col] = colArray[j]!;\n        const value = col.get(look);\n        if (value !== void 0) {\n          index[feel.name] = array.length;\n          array.push([feel, value]);\n        }\n      }\n      const row = LookVector.fromArray(array, index);\n      entry[1] = row;\n    }\n    return new ThemeMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport type {MoodVector} from \"./MoodVector\";\nimport type {Look} from \"./Look\";\nimport type {Feel} from \"./Feel\";\n\n/** @public */\nexport interface ThemeContext {\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  getLookOr<T, E>(look: Look<T>, elseValue: E): T | E;\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n}\n\n/** @public */\nexport const ThemeContext = {\n  [Symbol.hasInstance](instance: unknown): instance is ThemeContext {\n    return Objects.hasAllKeys<ThemeContext>(instance, \"getLook\");\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerContext} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {AnimatorClass} from \"@swim/component\";\nimport type {AnimatorDescriptor} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport type {MoodVector} from \"./MoodVector\";\nimport type {ThemeMatrix} from \"./ThemeMatrix\";\nimport {ThemeContext} from \"./ThemeContext\";\nimport {Look} from \"./\"; // forward import\n\n/** @public */\nexport interface ThemeAnimatorDescriptor<R, T> extends AnimatorDescriptor<R, T> {\n  extends?: Proto<ThemeAnimator<any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface ThemeAnimatorClass<A extends ThemeAnimator<any, any, any> = ThemeAnimator<any, any, any>> extends AnimatorClass<A> {\n}\n\n/** @public */\nexport interface ThemeAnimator<R = any, T = any, I extends any[] = [Look<NonNullable<T>> | T]> extends Animator<R, T, I> {\n  /** @override */\n  get descriptorType(): Proto<ThemeAnimatorDescriptor<R, T>>;\n\n  /** @protected @override */\n  onSetAffinity(newAffinity: Affinity, oldAffinity: Affinity): void;\n\n  /** @override */\n  set(newValue: T | LikeType<T> | Look<NonNullable<T>> | Fastener<any, I[0], any>, timing?: TimingLike | boolean | null): R;\n\n  /** @override */\n  setIntrinsic(newValue: T | LikeType<T> | Look<NonNullable<T>> | Fastener<any, I[0], any>, timing?: TimingLike | boolean | null): R;\n\n  get inletLook(): Look<NonNullable<T>> | null;\n\n  getInletLook(): Look<NonNullable<T>>;\n\n  getInletLookOr<E>(elseLook: E): Look<NonNullable<T>> | E;\n\n  /** @protected */\n  initLook(): Look<NonNullable<T>> | null;\n\n  readonly look: Look<NonNullable<T>> | null;\n\n  getLook(): Look<NonNullable<T>>;\n\n  getLookOr<E>(elseLook: E): Look<NonNullable<T>> | E;\n\n  setLook(newLook: Look<NonNullable<T>> | null, timingOrAffinity: Affinity | TimingLike | boolean | null | undefined): void;\n  setLook(newLook: Look<NonNullable<T>> | null, timing?: TimingLike | boolean | null, affinity?: Affinity): void;\n\n  /** @protected */\n  willSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | boolean | null): void;\n\n  /** @protected */\n  onSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | boolean | null): void;\n\n  /** @protected */\n  didSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | boolean | null): void;\n\n  /** @internal */\n  applyLook(look: Look<NonNullable<T>>, timing: Timing | boolean | null | undefined): void;\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean | null | undefined): void;\n\n  /** @override */\n  recohere(t: number): void;\n\n  /** @protected @override */\n  onMount(): void;\n}\n\n/** @public */\nexport const ThemeAnimator = (<R, T, I extends any[], A extends ThemeAnimator<any, any, any>>() => Animator.extend<ThemeAnimator<R, T, I>, ThemeAnimatorClass<A>>(\"ThemeAnimator\", {\n  onSetAffinity(newAffinity: Affinity, oldAffinity: Affinity): void {\n    if (newAffinity > Affinity.Intrinsic) {\n      this.setLook(null, newAffinity);\n    }\n    super.onSetAffinity(newAffinity, oldAffinity);\n  },\n\n  set(newValue: T | LikeType<T> | Look<NonNullable<T>> | Fastener<any, I[0], any>, timing?: TimingLike | boolean | null): R {\n    if (newValue instanceof Fastener) {\n      this.bindInlet(newValue);\n    } else if (newValue instanceof Look) {\n      this.setLook(newValue, timing, Affinity.Extrinsic);\n    } else {\n      this.setState(newValue, timing, Affinity.Extrinsic);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(newValue: T | LikeType<T> | Look<NonNullable<T>> | Fastener<any, I[0], any>, timing?: TimingLike | boolean | null): R {\n    if (newValue instanceof Fastener) {\n      this.bindInlet(newValue);\n    } else if (newValue instanceof Look) {\n      this.setLook(newValue, timing, Affinity.Intrinsic);\n    } else {\n      this.setState(newValue, timing, Affinity.Intrinsic);\n    }\n    return this.owner;\n  },\n\n  get inletLook(): Look<NonNullable<T>> | null {\n    const inlet = this.inlet;\n    return inlet instanceof ThemeAnimator ? inlet.look : null;\n  },\n\n  getInletLook(): Look<NonNullable<T>> {\n    const inletLook = this.inletLook;\n    if (inletLook === null) {\n      throw new TypeError(inletLook + \" \" + this.name.toString() + \" inlet look\");\n    }\n    return inletLook;\n  },\n\n  getInletLookOr<E>(elseLook: E): Look<NonNullable<T>> | E {\n    const inletLook = this.inletLook;\n    if (inletLook === null) {\n      return elseLook;\n    }\n    return inletLook;\n  },\n\n  look: null,\n\n  initLook(): Look<NonNullable<T>> | null {\n    return (Object.getPrototypeOf(this) as ThemeAnimator<unknown, T>).look;\n  },\n\n  getLook(): Look<NonNullable<T>> {\n    const look = this.look;\n    if (look === null) {\n      throw new TypeError(look + \" \" + this.name.toString() + \" look\");\n    }\n    return look;\n  },\n\n  getLookOr<E>(elseLook: E): Look<NonNullable<T>> | E {\n    const look = this.look;\n    if (look === null) {\n      return elseLook;\n    }\n    return look;\n  },\n\n  setLook(newLook: Look<NonNullable<T>> | null, timing?: Affinity | TimingLike | boolean | null, affinity?: Affinity): void {\n    if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    if (affinity === void 0) {\n      affinity = Affinity.Extrinsic;\n    }\n    if (!this.minAffinity(affinity)) {\n      return;\n    }\n    const oldLook = this.look;\n    if (newLook === oldLook) {\n      return;\n    }\n    if (timing === void 0) {\n      timing = this.transition;\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing === true) {\n      if (Objects.hasAllKeys<FastenerContext>(this.owner, \"getTransition\")) {\n        timing = this.owner.getTransition!(this);\n      } else {\n        timing = this.timing;\n      }\n    } else if (timing === false) {\n      timing = null;\n    }\n    this.willSetLook(newLook, oldLook, timing);\n    this.incrementVersion();\n    (this as Mutable<typeof this>).look = newLook;\n    this.onSetLook(newLook, oldLook, timing);\n    this.didSetLook(newLook, oldLook, timing);\n  },\n\n  willSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | null): void {\n    // hook\n  },\n\n  onSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | null): void {\n    if (newLook !== null) {\n      this.applyLook(newLook, timing);\n    }\n  },\n\n  didSetLook(newLook: Look<NonNullable<T>> | null, oldLook: Look<NonNullable<T>> | null, timing: Timing | null): void {\n    // hook\n  },\n\n  applyLook(look: Look<NonNullable<T>>, timing: Timing | boolean | null | undefined): void {\n    if (!this.mounted || !ThemeContext[Symbol.hasInstance](this.owner)) {\n      return;\n    }\n    const state = this.owner.getLook(look);\n    if (state === void 0) {\n      return;\n    }\n    this.setState(state, timing, Affinity.Reflexive);\n  },\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean | null | undefined): void {\n    const look = this.look;\n    if (look === null) {\n      return;\n    }\n    const state = theme.get(look, mood);\n    if (state === void 0) {\n      return;\n    }\n    if (timing === void 0) {\n      timing = this.transition;\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing === true) {\n      if (Objects.hasAllKeys<FastenerContext>(this.owner, \"getTransition\")) {\n        timing = this.owner.getTransition!(this);\n      } else {\n        timing = this.timing;\n      }\n    } else if (timing === false) {\n      timing = null;\n    }\n    this.setState(state, timing, Affinity.Reflexive);\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof Animator) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        if (inlet instanceof ThemeAnimator) {\n          this.setLook(inlet.look, inlet.timing, Affinity.Reflexive);\n        } else {\n          this.setLook(null, Affinity.Reflexive);\n        }\n        if (this.look === null) {\n          this.tweenInherited(t);\n        } else if ((this.flags & Animator.TweeningFlag) !== 0) {\n          this.tween(t);\n        } else {\n          this.setCoherent(true);\n        }\n      } else if ((this.flags & Animator.TweeningFlag) !== 0) {\n        this.tween(t);\n      } else {\n        this.setCoherent(true);\n      }\n    } else if (inlet instanceof Property) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0 && this.inletVersion !== inlet.version) {\n        (this as Mutable<typeof this>).inletVersion = inlet.version;\n        const inletValue = inlet.getOutletValue(this);\n        if (inletValue instanceof Look) {\n          this.setLook(inletValue, Affinity.Reflexive);\n        } else {\n          this.setLook(null, Affinity.Reflexive);\n          const derivedValue = (this as unknown as Property<R, T, [unknown]>).deriveValue(inlet.getOutletValue(this));\n          this.setState(derivedValue, Affinity.Reflexive);\n        }\n        if ((this.flags & Animator.TweeningFlag) !== 0) {\n          this.tween(t);\n        } else {\n          this.setCoherent(true);\n        }\n      } else if ((this.flags & Animator.TweeningFlag) !== 0) {\n        this.tween(t);\n      } else {\n        this.setCoherent(true);\n      }\n    } else if (Array.isArray(inlet)) {\n      this.setDerived(true);\n      const inletVersions = this.inletVersion as number[];\n      const inletValues = new Array<unknown>(inlet.length);\n      for (let i = 0; i < inlet.length; i += 1) {\n        if (inlet[i] instanceof Property) {\n          inletVersions[i] = (inlet[i] as Property).version;\n          inletValues[i] = (inlet[i] as Property).getOutletValue(this);\n        } else {\n          this.setDerived(false);\n          this.setCoherent(true);\n          return;\n        }\n      }\n      const derivedValue = this.deriveValue(...(inletValues as I));\n      this.setState(derivedValue, Affinity.Reflexive);\n      if ((this.flags & Animator.TweeningFlag) !== 0) {\n        this.tween(t);\n      } else {\n        this.setCoherent(true);\n      }\n    } else {\n      this.setDerived(false);\n      if ((this.flags & Animator.TweeningFlag) !== 0) {\n        this.tween(t);\n      } else {\n        this.setCoherent(true);\n      }\n    }\n  },\n\n  onMount(): void {\n    super.onMount();\n    const look = this.look;\n    if (look !== null) {\n      this.applyLook(look, false);\n    }\n  },\n}, {\n  construct(animator: A | null, owner: A extends Fastener<infer R, any, any> ? R : never): A {\n    animator = super.construct(animator, owner) as A;\n    (animator as Mutable<typeof animator>).look = animator.initLook();\n    return animator;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport {ConstraintExpression} from \"@swim/constraint\";\nimport type {ConstraintTerm} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport {ConstraintStrength} from \"@swim/constraint\";\nimport type {Constraint} from \"@swim/constraint\";\nimport {ConstraintScope} from \"@swim/constraint\";\nimport type {ConstraintSolver} from \"@swim/constraint\";\nimport type {ThemeAnimatorDescriptor} from \"./ThemeAnimator\";\nimport type {ThemeAnimatorClass} from \"./ThemeAnimator\";\nimport {ThemeAnimator} from \"./ThemeAnimator\";\nimport type {Look} from \"./Look\";\n\n/** @public */\nexport interface ThemeConstraintAnimatorDescriptor<R, T> extends ThemeAnimatorDescriptor<R, T> {\n  extends?: Proto<ThemeConstraintAnimator<any, any, any>> | boolean | null;\n  strength?: ConstraintStrengthLike;\n  constrained?: boolean;\n}\n\n/** @public */\nexport interface ThemeConstraintAnimatorClass<A extends ThemeConstraintAnimator<any, any, any> = ThemeConstraintAnimator<any, any, any>> extends ThemeAnimatorClass<A> {\n  /** @internal */\n  readonly ConstrainedFlag: FastenerFlags;\n  /** @internal */\n  readonly ConstrainingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ThemeConstraintAnimator<R = any, T = any, I extends any[] = [Look<NonNullable<T>> | T]> extends ThemeAnimator<R, T, I>, ConstraintVariable {\n  /** @override */\n  get descriptorType(): Proto<ThemeConstraintAnimatorDescriptor<R, T>>;\n\n  /** @internal @override */\n  isExternal(): boolean;\n\n  /** @internal @override */\n  isDummy(): boolean;\n\n  /** @internal @override */\n  isInvalid(): boolean;\n\n  /** @override */\n  isConstant(): boolean;\n\n  /** @internal @override */\n  evaluateConstraintVariable(): void;\n\n  /** @internal @override */\n  updateConstraintSolution(value: number): void;\n\n  /** @internal @protected */\n  initStrength(): ConstraintStrength;\n\n  /** @override */\n  readonly strength: ConstraintStrength;\n\n  setStrength(strength: ConstraintStrengthLike): void;\n\n  /** @override */\n  get coefficient(): number;\n\n  /** @override */\n  get variable(): ConstraintVariable | null;\n\n  /** @override */\n  get terms(): ReadonlyMap<ConstraintVariable, number>;\n\n  /** @override */\n  get constant(): number;\n\n  /** @override */\n  plus(that: ConstraintExpressionLike): ConstraintExpression;\n\n  /** @override */\n  negative(): ConstraintTerm;\n\n  /** @override */\n  minus(that: ConstraintExpressionLike): ConstraintExpression;\n\n  /** @override */\n  times(scalar: number): ConstraintExpression;\n\n  /** @override */\n  divide(scalar: number): ConstraintExpression;\n\n  get constrained(): boolean;\n\n  constrain(constrained?: boolean): this;\n\n  /** @internal */\n  readonly conditionCount: number;\n\n  /** @internal @override */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal @override */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal */\n  get constraining(): boolean;\n\n  /** @internal */\n  startConstraining(): void;\n\n  /** @protected */\n  willStartConstraining(): void;\n\n  /** @protected */\n  onStartConstraining(): void;\n\n  /** @protected */\n  didStartConstraining(): void;\n\n  /** @internal */\n  stopConstraining(): void;\n\n  /** @protected */\n  willStopConstraining(): void;\n\n  /** @protected */\n  onStopConstraining(): void;\n\n  /** @protected */\n  didStopConstraining(): void;\n\n  /** @internal */\n  updateConstraintVariable(): void;\n\n  /** @protected @override */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @internal @protected */\n  toNumber(value: T): number;\n}\n\n/** @public */\nexport const ThemeConstraintAnimator = (<R, T, I extends any[], A extends ThemeConstraintAnimator<any, any, any>>() => ThemeAnimator.extend<ThemeConstraintAnimator<R, T, I>, ThemeConstraintAnimatorClass<A>>(\"ThemeConstraintAnimator\", {\n  isExternal(): boolean {\n    return true;\n  },\n\n  isDummy(): boolean {\n    return false;\n  },\n\n  isInvalid(): boolean {\n    return false;\n  },\n\n  isConstant(): boolean {\n    return false;\n  },\n\n  evaluateConstraintVariable(): void {\n    // hook\n  },\n\n  updateConstraintSolution(state: number): void {\n    if (this.constrained && this.toNumber(this.state) !== state) {\n      this.setState(state as unknown as T, Affinity.Reflexive);\n    }\n  },\n\n  initStrength(): ConstraintStrength {\n    let strength = (Object.getPrototypeOf(this) as ThemeConstraintAnimator).strength as ConstraintStrength | undefined;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Strong;\n    }\n    return strength;\n  },\n\n  setStrength(strength: ConstraintStrengthLike): void {\n    (this as Mutable<typeof this>).strength = ConstraintStrength.fromLike(strength);\n  },\n\n  get coefficient(): number {\n    return 1;\n  },\n\n  get variable(): ConstraintVariable {\n    return this;\n  },\n\n  get terms(): ReadonlyMap<ConstraintVariable, number> {\n    const terms = new Map<ConstraintVariable, number>();\n    terms.set(this, 1);\n    return terms;\n  },\n\n  get constant(): number {\n    return 0;\n  },\n\n  plus(that: ConstraintExpressionLike): ConstraintExpression {\n    that = ConstraintExpression.fromLike(that);\n    if (this === that) {\n      return ConstraintExpression.product(2, this);\n    }\n    return ConstraintExpression.sum(this, that);\n  },\n\n  negative(): ConstraintTerm {\n    return ConstraintExpression.product(-1, this);\n  },\n\n  minus(that: ConstraintExpressionLike): ConstraintExpression {\n    that = ConstraintExpression.fromLike(that);\n    if (this === that) {\n      return ConstraintExpression.zero();\n    }\n    return ConstraintExpression.sum(this, that.negative());\n  },\n\n  times(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(scalar, this);\n  },\n\n  divide(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(1 / scalar, this);\n  },\n\n  get constrained(): boolean {\n    return (this.flags & ThemeConstraintAnimator.ConstrainedFlag) !== 0;\n  },\n\n  constrain(constrained?: boolean): typeof this {\n    if (constrained === void 0) {\n      constrained = true;\n    }\n    const flags = this.flags;\n    if (constrained && (flags & ThemeConstraintAnimator.ConstrainedFlag) === 0) {\n      this.setFlags(flags | ThemeConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.stopConstraining();\n      }\n    } else if (!constrained && (flags & ThemeConstraintAnimator.ConstrainedFlag) !== 0) {\n      this.setFlags(flags & ~ThemeConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.startConstraining();\n        this.updateConstraintVariable();\n      }\n    }\n    return this;\n  },\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount += 1;\n    if (!this.constrained && this.conditionCount === 1 && this.mounted) {\n      this.startConstraining();\n      this.updateConstraintVariable();\n    }\n  },\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount -= 1;\n    if (!this.constrained && this.conditionCount === 0 && this.mounted) {\n      this.stopConstraining();\n    }\n  },\n\n  get constraining(): boolean {\n    return (this.flags & ThemeConstraintAnimator.ConstrainingFlag) !== 0;\n  },\n\n  startConstraining(): void {\n    if ((this.flags & ThemeConstraintAnimator.ConstrainingFlag) !== 0) {\n      return;\n    }\n    this.willStartConstraining();\n    this.setFlags(this.flags | ThemeConstraintAnimator.ConstrainingFlag);\n    this.onStartConstraining();\n    this.didStartConstraining();\n  },\n\n  willStartConstraining(): void {\n    // hook\n  },\n\n  onStartConstraining(): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.addConstraintVariable(this);\n    }\n  },\n\n  didStartConstraining(): void {\n    // hook\n  },\n\n  stopConstraining(): void {\n    if ((this.flags & ThemeConstraintAnimator.ConstrainingFlag) === 0) {\n      return;\n    }\n    this.willStopConstraining();\n    this.setFlags(this.flags & ~ThemeConstraintAnimator.ConstrainingFlag);\n    this.onStopConstraining();\n    this.didStopConstraining();\n  },\n\n  willStopConstraining(): void {\n    // hook\n  },\n\n  onStopConstraining(): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.removeConstraintVariable(this);\n    }\n  },\n\n  didStopConstraining(): void {\n    // hook\n  },\n\n  updateConstraintVariable(): void {\n    const constraintScope = this.owner;\n    const value = this.value;\n    if (value !== void 0 && ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.setConstraintVariable(this, this.toNumber(value));\n    }\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    super.onSetValue(newValue, oldValue);\n    const constraintScope = this.owner;\n    if (this.constraining && ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.setConstraintVariable(this, newValue !== void 0 && newValue !== null ? this.toNumber(newValue) : 0);\n    }\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.startConstraining();\n    }\n  },\n\n  onUnmount(): void {\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.stopConstraining();\n    }\n    super.onUnmount();\n  },\n\n  toNumber(value: T): number {\n    return value !== void 0 && value !== null ? +value : 0;\n  },\n},\n{\n  construct(animator: A | null, owner: A extends Fastener<infer R, any, any> ? R : never): A {\n    animator = super.construct(animator, owner) as A;\n    (animator as Mutable<typeof animator>).strength = animator.initStrength();\n    (animator as Mutable<typeof animator>).conditionCount = 0;\n    return animator;\n  },\n\n  refine(animatorClass: FastenerClass<ThemeConstraintAnimator<any, any, any>>): void {\n    super.refine(animatorClass);\n    const animatorPrototype = animatorClass.prototype;\n\n    let flagsInit = animatorPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(animatorPrototype, \"constrained\")) {\n      if (animatorPrototype.constrained) {\n        flagsInit |= ThemeConstraintAnimator.ConstrainedFlag;\n      } else {\n        flagsInit &= ~ThemeConstraintAnimator.ConstrainedFlag;\n      }\n      delete (animatorPrototype as ThemeConstraintAnimatorDescriptor<any, any>).constrained;\n    }\n    Object.defineProperty(animatorPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n\n    const strengthDescriptor = Object.getOwnPropertyDescriptor(animatorPrototype, \"strength\");\n    if (strengthDescriptor !== void 0 && \"value\" in strengthDescriptor) {\n      strengthDescriptor.value = ConstraintStrength.fromLike(strengthDescriptor.value);\n      Object.defineProperty(animatorPrototype, \"strength\", strengthDescriptor);\n    }\n  },\n\n  ConstrainedFlag: 1 << (ThemeAnimator.FlagShift + 0),\n  ConstrainingFlag: 1 << (ThemeAnimator.FlagShift + 1),\n\n  FlagShift: ThemeAnimator.FlagShift + 2,\n  FlagMask: (1 << (ThemeAnimator.FlagShift + 2)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {NumberInterpolator} from \"@swim/util\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {LengthInterpolator} from \"@swim/math\";\nimport type {FontLike} from \"@swim/style\";\nimport {Font} from \"@swim/style\";\nimport {FontInterpolator} from \"@swim/style\";\nimport type {ColorLike} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport type {BoxShadowLike} from \"@swim/style\";\nimport {BoxShadow} from \"@swim/style\";\nimport {BoxShadowInterpolator} from \"@swim/style\";\nimport {LookVector} from \"./LookVector\";\nimport type {MoodVector} from \"./MoodVector\";\nimport type {Feel} from \"./Feel\";\nimport type {Mood} from \"./Mood\";\n\n/** @public */\nexport abstract class Look<T> implements Mood {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  readonly name: string;\n\n  add(a: LookVector<T>, b: LookVector<T>): LookVector<T> {\n    const aArray = a.array;\n    const bArray = b.array;\n    const newArray = new Array<[Feel, T]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < aArray.length; i += 1) {\n      const entry = aArray[i]!;\n      const feel = entry[0];\n      const y = b.get(feel);\n      newIndex[feel.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [feel, feel.combine(this, entry[1], y)]);\n    }\n    for (let i = 0; i < bArray.length; i += 1) {\n      const entry = bArray[i]!;\n      const feel = entry[0];\n      if (newIndex[feel.name] === void 0) {\n        newIndex[feel.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.fromArray(newArray, newIndex);\n  }\n\n  negate(a: LookVector<T>): LookVector<T> {\n    const oldArray = a.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Feel, T]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, x] = oldArray[i]!;\n      newArray[i] = [feel, feel.combine(this, void 0, x, -1)];\n    }\n    return this.fromArray(newArray, a.index);\n  }\n\n  subtract(a: LookVector<T>, b: LookVector<T>): LookVector<T> {\n    const aArray = a.array;\n    const bArray = b.array;\n    const newArray = new Array<[Feel, T]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < aArray.length; i += 1) {\n      const entry = aArray[i]!;\n      const feel = entry[0];\n      const y = b.get(feel);\n      newIndex[feel.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [feel, feel.combine(this, entry[1], y, -1)]);\n    }\n    for (let i = 0; i < bArray.length; i += 1) {\n      const [feel, y] = bArray[i]!;\n      if (newIndex[feel.name] === void 0) {\n        newIndex[feel.name] = newArray.length;\n        newArray.push([feel, feel.combine(this, void 0, y, -1)]);\n      }\n    }\n    return this.fromArray(newArray, newIndex);\n  }\n\n  multiply(a: LookVector<T>, scalar: number): LookVector<T> {\n    const oldArray = a.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Feel, T]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, x] = oldArray[i]!;\n      newArray[i] = [feel, feel.combine(this, void 0, x, scalar)];\n    }\n    return this.fromArray(newArray, a.index);\n  }\n\n  dot(a: LookVector<T>, b: MoodVector): T | undefined {\n    const array = a.array;\n    let combination: T | undefined;\n    for (let i = 0; i < array.length; i += 1) {\n      const [feel, value] = array[i]!;\n      const weight = b.get(feel);\n      if (weight !== void 0 && weight !== 0) {\n        combination = feel.combine(this, combination, value, weight);\n      }\n    }\n    return combination;\n  }\n\n  dotOr<E>(a: LookVector<T>, b: MoodVector, elseValue: E): T | E {\n    const array = a.array;\n    if (array.length === 0) {\n      return elseValue;\n    }\n    let combination: T | undefined;\n    for (let i = 0; i < array.length; i += 1) {\n      const [feel, value] = array[i]!;\n      const weight = b.get(feel);\n      if (weight !== void 0 && weight !== 0) {\n        combination = feel.combine(this, combination, value, weight);\n      }\n    }\n    return combination!;\n  }\n\n  abstract combine(combination: T | undefined, value: T, weight?: number): T;\n\n  abstract between(a: T, b: T): Interpolator<T>;\n\n  abstract coerce(value: T | LikeType<T>): T;\n\n  empty(): LookVector<T> {\n    return LookVector.empty();\n  }\n\n  of(...feels: [Feel, T | LikeType<T>][]): LookVector<T> {\n    const n = feels.length;\n    const array = new Array<[Feel, T]>(n);\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < n; i += 1) {\n      const [feel, value] = feels[i]!;\n      array[i] = [feel, this.coerce(value)];\n      index[feel.name] = i;\n    }\n    return this.fromArray(array, index);\n  }\n\n  fromArray(array: readonly [Feel, T][],\n            index?: {readonly [name: string]: number | undefined}): LookVector<T> {\n    return LookVector.fromArray(array, index);\n  }\n\n  toString(): string {\n    return \"Look\" + \".\" + this.name;\n  }\n\n  static font: Look<Font>; // defined by looks\n  static smallFont: Look<Font>; // defined by looks\n  static largeFont: Look<Font>; // defined by looks\n\n  static textColor: Look<Color>; // defined by looks\n  static iconColor: Look<Color>; // defined by looks\n  static labelColor: Look<Color>; // defined by looks\n  static legendColor: Look<Color>; // defined by looks\n  static placeholderColor: Look<Color>; // defined by looks\n  static highlightColor: Look<Color>; // defined by looks\n\n  static statusColor: Look<Color>; // defined by looks\n  static accentColor: Look<Color>; // defined by looks\n\n  static backgroundColor: Look<Color>; // defined by looks\n  static selectionColor: Look<Color>; // defined by looks\n  static borderColor: Look<Color>; // defined by looks\n  static focusColor: Look<Color>; // defined by looks\n\n  static etchColor: Look<Color>; // defined by looks\n  static maskColor: Look<Color>; // defined by looks\n  static tickColor: Look<Color>; // defined by looks\n  static gridColor: Look<Color>; // defined by looks\n\n  static opacity: Look<number>; // defined by looks\n  static shadow: Look<BoxShadow>; // defined by looks\n  static spacing: Look<Length>; // defined by looks\n  static timing: Look<Timing>; // defined by looks\n}\n\n/** @public */\nexport type NumberOrLookLike = Look<number> | number | string | boolean;\n\n/** @public */\nexport type NumberOrLook = Like<Look<number> | number, string | boolean>;\n\n/** @public */\nexport class NumberLook extends Look<number> {\n  override combine(combination: number | undefined, value: number, weight: number): number {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return (1.0 - weight) * combination + weight * value;\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value * weight;\n    }\n    return value;\n  }\n\n  override between(a: number, b: number): Interpolator<number> {\n    return NumberInterpolator(a, b);\n  }\n\n  override coerce(value: number): number {\n    return value;\n  }\n\n  static fromLike<T extends Look<number> | number | string | boolean | null | undefined>(value: T): Look<number> | number | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Look) {\n      return value as Look<number> | Uninitable<T>;\n    }\n    return Numbers.fromLike<number | string | boolean>(value);\n  }\n}\n\n/** @public */\nexport type LengthOrLookLike = Look<Length> | LengthLike;\n\n/** @public */\nexport type LengthOrLook = Look<Length> | Length;\n\n/** @public */\nexport class LengthLook extends Look<Length> {\n  override combine(combination: Length | undefined, value: Length, weight?: number): Length {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return LengthInterpolator(combination, value)(weight);\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value.times(weight);\n    }\n    return value;\n  }\n\n  override between(a: Length, b: Length): Interpolator<Length> {\n    return LengthInterpolator(a, b);\n  }\n\n  override coerce(value: LengthLike): Length {\n    return Length.fromLike(value);\n  }\n\n  static fromLike<T extends Look<Length> | LengthLike | null | undefined>(value: T): Look<Length> | Length | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Look || value instanceof Length) {\n      return value as Look<Length> | Length | Uninitable<T>;\n    }\n    return Length.fromLike<LengthLike>(value);\n  }\n}\n\n/** @public */\nexport type ColorOrLookLike = Look<Color> | ColorLike;\n\n/** @public */\nexport type ColorOrLook = Look<Color> | Color;\n\n/** @public */\nexport class ColorLook extends Look<Color> {\n  override combine(combination: Color | undefined, value: Color, weight?: number): Color {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return combination.interpolateTo(value)(weight);\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value.times(weight);\n    }\n    return value;\n  }\n\n  override between(a: Color, b: Color): Interpolator<Color> {\n    return a.interpolateTo(b);\n  }\n\n  override coerce(value: ColorLike): Color {\n    return Color.fromLike(value);\n  }\n\n  static fromLike<T extends Look<Color> | ColorLike | null | undefined>(value: T): Look<Color> | Color | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Look || value instanceof Color) {\n      return value as Look<Color> | Color | Uninitable<T>;\n    }\n    return Color.fromLike<ColorLike>(value);\n  }\n}\n\n/** @public */\nexport type FontOrLookLike = Look<Font> | FontLike;\n\n/** @public */\nexport type FontOrLook = Look<Font> | Font;\n\n/** @public */\nexport class FontLook extends Look<Font> {\n  override combine(combination: Font | undefined, value: Font, weight?: number): Font {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    }\n    return Font.family(value.family);\n  }\n\n  override between(a: Font, b: Font): Interpolator<Font> {\n    return FontInterpolator(a, b);\n  }\n\n  override coerce(value: FontLike): Font {\n    return Font.fromLike(value);\n  }\n\n  static fromLike<T extends Look<Font> | FontLike | null | undefined>(value: T): Look<Font> | Font | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Look || value instanceof Font) {\n      return value as Look<Font> | Font | Uninitable<T>;\n    }\n    return Font.fromLike<Font | FontLike>(value);\n  }\n}\n\n/** @public */\nexport type ShadowOrLookLike = Look<BoxShadow> | BoxShadowLike;\n\n/** @public */\nexport type ShadowOrLook = Look<BoxShadow> | BoxShadow;\n\n/** @public */\nexport class ShadowLook extends Look<BoxShadow> {\n  override combine(combination: BoxShadow | undefined, value: BoxShadow, weight?: number): BoxShadow {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    }\n    return value;\n  }\n\n  override between(a: BoxShadow, b: BoxShadow): Interpolator<BoxShadow> {\n    return BoxShadowInterpolator(a, b);\n  }\n\n  override coerce(value: BoxShadowLike): BoxShadow {\n    return BoxShadow.fromLike(value)!;\n  }\n\n  static fromLike<T extends Look<BoxShadow> | BoxShadowLike | null | undefined>(value: T): Look<BoxShadow> | BoxShadow | Uninitable<T>{\n    if (value === void 0 || value === null || value instanceof Look || value instanceof BoxShadow) {\n      return value as Look<BoxShadow> | BoxShadow | Uninitable<T>;\n    }\n    return BoxShadow.fromLike<BoxShadowLike>(value);\n  }\n}\n\n/** @public */\nexport type TimingOrLookLike = Look<Timing> | TimingLike;\n\n/** @public */\nexport type TimingOrLook = Look<Timing> | Timing;\n\n/** @public */\nexport class TimingLook extends Look<Timing> {\n  override combine(combination: Timing | undefined, value: Timing, weight: number): Timing {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    }\n    return value;\n  }\n\n  override between(a: Timing, b: Timing): Interpolator<Timing> {\n    return Interpolator(a, b);\n  }\n\n  override coerce(value: TimingLike): Timing {\n    return Timing.fromLike(value);\n  }\n\n  static fromLike<T extends Look<Timing> | TimingLike | null | undefined>(value: T): Look<Timing> | Timing | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Look || value instanceof Timing) {\n      return value as Look<Timing> | Timing | Uninitable<T>;\n    }\n    return Timing.fromLike<TimingLike>(value);\n  }\n}\n\nLook.font = new FontLook(\"font\");\nLook.smallFont = new FontLook(\"smallFont\");\nLook.largeFont = new FontLook(\"largeFont\");\n\nLook.textColor = new ColorLook(\"textColor\");\nLook.iconColor = new ColorLook(\"iconColor\");\nLook.labelColor = new ColorLook(\"labelColor\");\nLook.legendColor = new ColorLook(\"legendColor\");\nLook.placeholderColor = new ColorLook(\"placeholderColor\");\nLook.highlightColor = new ColorLook(\"highlightColor\");\n\nLook.statusColor = new ColorLook(\"statusColor\");\nLook.accentColor = new ColorLook(\"accentColor\");\n\nLook.backgroundColor = new ColorLook(\"backgroundColor\");\nLook.selectionColor = new ColorLook(\"selectionColor\");\nLook.borderColor = new ColorLook(\"borderColor\");\nLook.focusColor = new ColorLook(\"focusColor\");\n\nLook.etchColor = new ColorLook(\"etchColor\");\nLook.maskColor = new ColorLook(\"maskColor\");\nLook.tickColor = new ColorLook(\"tickColor\");\nLook.gridColor = new ColorLook(\"gridColor\");\n\nLook.opacity = new NumberLook(\"opacity\");\nLook.shadow = new ShadowLook(\"shadow\");\nLook.spacing = new LengthLook(\"spacing\");\nLook.timing = new TimingLook(\"timing\");\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Color} from \"@swim/style\";\nimport {FeelVector} from \"./FeelVector\";\nimport type {Look} from \"./Look\";\nimport type {Mood} from \"./Mood\";\n\n/** @public */\nexport abstract class Feel implements Mood {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  readonly name: string;\n\n  abstract combine<T>(look: Look<T>, combination: T | undefined,\n                      value: T, weight?: number): T;\n\n  empty(): FeelVector {\n    return FeelVector.empty();\n  }\n\n  of(...looks: [Look<unknown>, any][]): FeelVector {\n    return FeelVector.of(...looks);\n  }\n\n  from(array: readonly [Look<unknown>, unknown][],\n       index?: {readonly [name: string]: number | undefined}): FeelVector {\n    return FeelVector.fromArray(array, index);\n  }\n\n  toString(): string {\n    return \"Feel\" + \".\" + this.name;\n  }\n\n  static ambient: Feel; // defined by feels\n  static default: Feel; // defined by feels\n\n  static primary: Feel; // defined by feels\n  static secondary: Feel; // defined by feels\n  static disabled: Feel; // defined by feels\n  static inactive: Feel; // defined by feels\n  static warning: Feel; // defined by feels\n  static alert: Feel; // defined by feels\n\n  static unselected: Feel; // defined by feels\n  static selected: Feel; // defined by feels\n\n  static darker: Feel; // defined by feels\n  static lighter: Feel; // defined by feels\n  static contrasted: Feel; // defined by feels\n\n  static raised: Feel; // defined by feels\n  static covered: Feel; // defined by feels\n\n  static opaque: Feel; // defined by feels\n  static floating: Feel; // defined by feels\n  static embossed: Feel; // defined by feels\n  static nested: Feel; // defined by feels\n  static hovering: Feel; // defined by feels\n  static translucent: Feel; // defined by feels\n  static transparent: Feel; // defined by feels\n\n  static navigating: Feel; // defined by feels\n}\n\n/** @public */\nexport class InterpolatedFeel extends Feel {\n  override combine<T>(look: Look<T>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    return look.combine(combination, value, weight);\n  }\n}\n\n/** @public */\nexport class BrightnessFeel extends Feel {\n  override combine<T>(look: Look<T>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    if (combination instanceof Color && value instanceof Color) {\n      const amount = weight === void 0 ? value.alpha() : value.alpha() * weight;\n      if (amount >= 0) {\n        return combination.darker(amount) as unknown as T;\n      } else {\n        return combination.lighter(-amount) as unknown as T;\n      }\n    }\n    return look.combine(combination, value, weight);\n  }\n}\n\n/** @public */\nexport class OpacityFeel extends Feel {\n  override combine<T>(look: Look<T>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    if (combination instanceof Color && value instanceof Color) {\n      if (weight === void 0) {\n        weight = 1;\n      }\n      const alpha0 = combination.alpha();\n      const alpha1 = alpha0 * value.alpha();\n      const alpha = (1.0 - weight) * alpha0 + weight * alpha1;\n      const color = combination.alpha(alpha) as unknown as T;\n      return color;\n    }\n    return look.combine(combination, value, weight);\n  }\n}\n\nFeel.ambient = new InterpolatedFeel(\"ambient\");\nFeel.default = new InterpolatedFeel(\"default\");\n\nFeel.primary = new InterpolatedFeel(\"primary\");\nFeel.secondary = new InterpolatedFeel(\"secondary\");\nFeel.disabled = new InterpolatedFeel(\"disabled\");\nFeel.inactive = new InterpolatedFeel(\"inactive\");\nFeel.warning = new InterpolatedFeel(\"warning\");\nFeel.alert = new InterpolatedFeel(\"alert\");\n\nFeel.unselected = new InterpolatedFeel(\"unselected\");\nFeel.selected = new InterpolatedFeel(\"selected\");\n\nFeel.darker = new BrightnessFeel(\"darker\");\nFeel.lighter = new BrightnessFeel(\"lighter\");\nFeel.contrasted = new BrightnessFeel(\"contrasted\");\n\nFeel.raised = new InterpolatedFeel(\"raised\");\nFeel.covered = new InterpolatedFeel(\"covered\");\n\nFeel.opaque = new InterpolatedFeel(\"opaque\");\nFeel.floating = new InterpolatedFeel(\"floating\");\nFeel.embossed = new BrightnessFeel(\"embossed\");\nFeel.nested = new BrightnessFeel(\"nested\");\nFeel.hovering = new BrightnessFeel(\"hovering\");\nFeel.translucent = new OpacityFeel(\"translucent\");\nFeel.transparent = new OpacityFeel(\"transparent\");\n\nFeel.navigating = new InterpolatedFeel(\"navigating\");\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MoodVector} from \"./MoodVector\";\nimport {Feel} from \"./Feel\";\n\n/** @public */\nexport interface Mood {\n  readonly name: string;\n}\n\n/** @public */\nexport const Mood = {} as {\n  ambient: MoodVector; // defined by moods\n  default: MoodVector; // defined by moods\n\n  primary: MoodVector; // defined by moods\n  secondary: MoodVector; // defined by moods\n  disabled: MoodVector; // defined by moods\n  inactive: MoodVector; // defined by moods\n  warning: MoodVector; // defined by moods\n  alert: MoodVector; // defined by moods\n\n  unselected: MoodVector; // defined by moods\n  selected: MoodVector; // defined by moods\n\n  darker: MoodVector; // defined by moods\n  lighter: MoodVector; // defined by moods\n  contrasted: MoodVector; // defined by moods\n\n  raised: MoodVector; // defined by moods\n  covered: MoodVector; // defined by moods\n\n  opaque: MoodVector; // defined by moods\n  floating: MoodVector; // defined by moods\n  transparent: MoodVector; // defined by moods\n  translucent: MoodVector; // defined by moods\n  embossed: MoodVector; // defined by moods\n  nested: MoodVector; // defined by moods\n  hovering: MoodVector; // defined by moods\n\n  navigating: MoodVector; // defined by moods\n};\n\nMood.ambient = MoodVector.of([Feel.ambient, 1]);\nMood.default = MoodVector.of([Feel.default, 1]);\n\nMood.primary = MoodVector.of([Feel.primary, 1]);\nMood.secondary = MoodVector.of([Feel.secondary, 1]);\nMood.disabled = MoodVector.of([Feel.disabled, 1]);\nMood.inactive = MoodVector.of([Feel.inactive, 1]);\nMood.warning = MoodVector.of([Feel.warning, 1]);\nMood.alert = MoodVector.of([Feel.alert, 1]);\n\nMood.unselected = MoodVector.of([Feel.unselected, 1]);\nMood.selected = MoodVector.of([Feel.selected, 1]);\n\nMood.darker = MoodVector.of([Feel.darker, 1]);\nMood.lighter = MoodVector.of([Feel.lighter, 1]);\nMood.contrasted = MoodVector.of([Feel.contrasted, 1]);\n\nMood.raised = MoodVector.of([Feel.raised, 1]);\nMood.covered = MoodVector.of([Feel.covered, 1]);\n\nMood.opaque = MoodVector.of([Feel.opaque, 1]);\nMood.floating = MoodVector.of([Feel.floating, 1]);\nMood.transparent = MoodVector.of([Feel.transparent, 1]);\nMood.translucent = MoodVector.of([Feel.translucent, 1]);\nMood.embossed = MoodVector.of([Feel.embossed, 1]);\nMood.nested = MoodVector.of([Feel.nested, 1]);\nMood.hovering = MoodVector.of([Feel.hovering, 1]);\n\nMood.navigating = MoodVector.of([Feel.navigating, 1]);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Easing} from \"@swim/util\";\nimport {Length} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {BoxShadow} from \"@swim/style\";\nimport {FeelVector} from \"./FeelVector\";\nimport {ThemeMatrix} from \"./ThemeMatrix\";\nimport {Look} from \"./Look\";\nimport {Feel} from \"./Feel\";\n\n/** @public */\nexport const Theme = {} as {\n  dark: ThemeMatrix, // defined by DarkTheme\n  light: ThemeMatrix, // defined by LightTheme\n};\n\nTheme.dark = (function (): ThemeMatrix {\n  const font = Font.parse(\"14px -apple-system, system-ui, sans-serif\");\n  const smallFont = font.withSize(12);\n  const largeFont = font.withSize(16);\n\n  const textColor = Color.parse(\"#ffffff\");\n  const iconColor = Color.parse(\"#ffffff\");\n  const labelColor = Color.parse(\"#ffffff\").alpha(0.85);\n  const legendColor = Color.parse(\"#ffffff\").alpha(0.55);\n  const placeholderColor = Color.parse(\"#ffffff\").alpha(0.25);\n  const highlightColor = Color.white(0.1);\n\n  const accentColor = Color.parse(\"#a1a3a4\");\n  const primaryColor = Color.parse(\"#66ffdd\");\n  const secondaryColor = Color.parse(\"#32c5ff\");\n\n  const disabledColor = Color.parse(\"#7b7c7d\");\n  const inactiveColor = Color.parse(\"#7b7c7d\");\n  const warningColor = Color.parse(\"#f9f070\");\n  const alertColor = Color.parse(\"#f6511d\");\n\n  const selectionColor = Color.parse(\"#5e5f5f\");\n  const primarySelectionColor = Color.parse(\"#2b6458\");\n  const secondarySelectionColor = Color.parse(\"#326578\");\n  const warningSelectionColor = Color.parse(\"#67643b\");\n  const alertSelectionColor = Color.parse(\"#6a3423\");\n\n  const backgroundColor = Color.parse(\"#181818\");\n  const borderColor = Color.parse(\"#ffffff\").alpha(0.25);\n  const focusColor = primaryColor.alpha(0.5);\n\n  const raisedColor = Color.parse(\"#212121\");\n  const coveredColor = Color.parse(\"#363636\");\n\n  const etchColor = Color.parse(\"#262626\");\n  const maskColor = Color.parse(\"#343434\");\n  const tickColor = Color.parse(\"#c0c0c0\");\n  const gridColor = Color.parse(\"#3c3c3c\");\n\n  const spacing = Length.px(10);\n\n  const ambientFeel = FeelVector.of(\n    [Look.font, font],\n    [Look.smallFont, smallFont],\n    [Look.largeFont, largeFont],\n\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.labelColor, labelColor],\n    [Look.legendColor, legendColor],\n    [Look.placeholderColor, placeholderColor],\n    [Look.highlightColor, highlightColor],\n\n    [Look.statusColor, textColor],\n    [Look.accentColor, accentColor],\n\n    [Look.backgroundColor, backgroundColor],\n    [Look.selectionColor, selectionColor],\n    [Look.borderColor, borderColor],\n    [Look.focusColor, focusColor],\n\n    [Look.etchColor, etchColor],\n    [Look.maskColor, maskColor],\n    [Look.tickColor, tickColor],\n    [Look.gridColor, gridColor],\n\n    [Look.spacing, spacing],\n    [Look.timing, Easing.linear.withDuration(250)],\n  );\n\n  const defaultFeel = FeelVector.of(\n    [Look.font, font],\n    [Look.smallFont, smallFont],\n    [Look.largeFont, largeFont],\n\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.labelColor, labelColor],\n    [Look.legendColor, legendColor],\n    [Look.placeholderColor, placeholderColor],\n    [Look.highlightColor, highlightColor],\n\n    [Look.statusColor, textColor],\n    [Look.accentColor, accentColor],\n\n    [Look.backgroundColor, backgroundColor],\n    [Look.selectionColor, selectionColor],\n    [Look.borderColor, borderColor],\n    [Look.focusColor, focusColor],\n\n    [Look.etchColor, etchColor],\n    [Look.maskColor, maskColor],\n    [Look.tickColor, tickColor],\n    [Look.gridColor, gridColor],\n\n    [Look.spacing, spacing],\n    [Look.timing, Easing.cubicOut.withDuration(250)],\n  );\n\n  const primaryFeel = FeelVector.of(\n    [Look.accentColor, primaryColor],\n    [Look.selectionColor, primarySelectionColor],\n  );\n\n  const secondaryFeel = FeelVector.of(\n    [Look.accentColor, secondaryColor],\n    [Look.selectionColor, secondarySelectionColor],\n  );\n\n  const disabledFeel = FeelVector.of(\n    [Look.textColor, disabledColor],\n    [Look.iconColor, disabledColor],\n    [Look.statusColor, disabledColor],\n    [Look.accentColor, disabledColor],\n  );\n\n  const inactiveFeel = FeelVector.of(\n    [Look.statusColor, inactiveColor],\n    [Look.accentColor, inactiveColor],\n  );\n\n  const warningFeel = FeelVector.of(\n    [Look.statusColor, warningColor],\n    [Look.accentColor, warningColor],\n    [Look.selectionColor, warningSelectionColor],\n  );\n\n  const alertFeel = FeelVector.of(\n    [Look.statusColor, alertColor],\n    [Look.accentColor, alertColor],\n    [Look.selectionColor, alertSelectionColor],\n  );\n\n  const unselectedFeel = FeelVector.of(\n    [Look.textColor, labelColor],\n    [Look.iconColor, labelColor],\n    [Look.backgroundColor, backgroundColor.darker(1)],\n  );\n\n  const selectedFeel = FeelVector.of(\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.backgroundColor, selectionColor],\n  );\n\n  const raisedFeel = FeelVector.of(\n    [Look.labelColor, labelColor.darker(1 / 3)],\n    [Look.legendColor, legendColor.darker(1 / 3)],\n    [Look.backgroundColor, raisedColor],\n  );\n\n  const coveredFeel = FeelVector.of(\n    [Look.labelColor, labelColor.darker(1 / 3)],\n    [Look.legendColor, legendColor.darker(1 / 3)],\n    [Look.backgroundColor, coveredColor],\n  );\n\n  const opaqueFeel = FeelVector.of(\n    [Look.backgroundColor, backgroundColor],\n    [Look.borderColor, borderColor],\n  );\n\n  const floatingFeel = FeelVector.of(\n    [Look.shadow, BoxShadow.create(0, 2, 4, 0, Color.black(0.5))],\n  );\n\n  const darkerFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1)],\n    [Look.selectionColor, Color.black(1)],\n    [Look.iconColor, Color.black(1)],\n    [Look.statusColor, Color.black(1)],\n    [Look.accentColor, Color.black(1)],\n    [Look.etchColor, Color.black(1)],\n    [Look.maskColor, Color.black(1)],\n  );\n\n  const lighterFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(-1)],\n    [Look.selectionColor, Color.black(-1)],\n    [Look.iconColor, Color.black(-1)],\n    [Look.statusColor, Color.black(-1)],\n    [Look.accentColor, Color.black(-1)],\n    [Look.etchColor, Color.black(-1)],\n    [Look.maskColor, Color.black(-1)],\n  );\n\n  const contrastedFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(-1)],\n    [Look.selectionColor, Color.black(-1)],\n    [Look.iconColor, Color.black(-1)],\n    [Look.statusColor, Color.black(-1)],\n    [Look.accentColor, Color.black(-1)],\n    [Look.etchColor, Color.black(-1)],\n    [Look.maskColor, Color.black(-1)],\n  );\n\n  const embossedFeel = FeelVector.of(\n    [Look.iconColor, Color.black(2)],\n    [Look.statusColor, Color.black(2)],\n    [Look.accentColor, Color.black(2)],\n  );\n\n  const nestedFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1 / 3)],\n    [Look.borderColor, Color.black(1 / 3)],\n  );\n\n  const hoveringFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(-2)],\n    [Look.etchColor, Color.black(-1)],\n    [Look.maskColor, Color.black(-1)],\n  );\n\n  const translucentFeel = FeelVector.of(\n    [Look.iconColor, Color.black(0.8)],\n    [Look.statusColor, Color.black(0.8)],\n    [Look.accentColor, Color.black(0.8)],\n    [Look.backgroundColor, Color.black(0.8)],\n    [Look.selectionColor, Color.black(0.8)],\n  );\n\n  const transparentFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(0)],\n    [Look.selectionColor, Color.black(0)],\n  );\n\n  const navigatingFeel = FeelVector.of(\n    [Look.timing, Easing.cubicOut.withDuration(350)],\n  );\n\n  const theme = ThemeMatrix.forCols(\n    [Feel.ambient, ambientFeel],\n    [Feel.default, defaultFeel],\n\n    [Feel.primary, primaryFeel],\n    [Feel.secondary, secondaryFeel],\n    [Feel.disabled, disabledFeel],\n    [Feel.inactive, inactiveFeel],\n    [Feel.warning, warningFeel],\n    [Feel.alert, alertFeel],\n\n    [Feel.unselected, unselectedFeel],\n    [Feel.selected, selectedFeel],\n\n    [Feel.darker, darkerFeel],\n    [Feel.lighter, lighterFeel],\n    [Feel.contrasted, contrastedFeel],\n\n    [Feel.raised, raisedFeel],\n    [Feel.covered, coveredFeel],\n\n    [Feel.opaque, opaqueFeel],\n    [Feel.floating, floatingFeel],\n    [Feel.embossed, embossedFeel],\n    [Feel.nested, nestedFeel],\n    [Feel.hovering, hoveringFeel],\n    [Feel.translucent, translucentFeel],\n    [Feel.transparent, transparentFeel],\n\n    [Feel.navigating, navigatingFeel],\n  );\n\n  return theme;\n})();\n\nTheme.light = (function (): ThemeMatrix {\n  const font = Font.parse(\"14px -apple-system, system-ui, sans-serif\");\n  const smallFont = font.withSize(12);\n  const largeFont = font.withSize(16);\n\n  const textColor = Color.parse(\"#000000\");\n  const iconColor = Color.parse(\"#4a4a4a\");\n  const labelColor = Color.parse(\"#000000\").alpha(0.85);\n  const legendColor = Color.parse(\"#000000\").alpha(0.5);\n  const placeholderColor = Color.parse(\"#000000\").alpha(0.25);\n  const highlightColor = Color.black(0.05);\n\n  const accentColor = Color.parse(\"#a1a3a4\");\n  const primaryColor = Color.parse(\"#00b0a7\");\n  const secondaryColor = Color.parse(\"#008ec0\");\n\n  const disabledColor = Color.parse(\"#7b7c7d\");\n  const inactiveColor = Color.parse(\"#7b7c7d\");\n  const warningColor = Color.parse(\"#f0b600\");\n  const alertColor = Color.parse(\"#e24214\");\n\n  const selectionColor = Color.parse(\"#e0e0e1\");\n  const primarySelectionColor = Color.parse(\"#bae8e6\");\n  const secondarySelectionColor = Color.parse(\"#b5e2f1\");\n  const warningSelectionColor = Color.parse(\"#f9ebc0\");\n  const alertSelectionColor = Color.parse(\"#fddad0\");\n\n  const backgroundColor = Color.parse(\"#f9f9f9\");\n  const borderColor = Color.parse(\"#000000\").alpha(0.25);\n  const focusColor = primaryColor.alpha(0.5);\n\n  const raisedColor = Color.parse(\"#f1f1f1\");\n  const coveredColor = Color.parse(\"#ffffff\");\n\n  const etchColor = Color.parse(\"#d8d8d8\");\n  const maskColor = Color.parse(\"#dcdcdc\");\n  const tickColor = Color.parse(\"#262626\");\n  const gridColor = Color.parse(\"#e0e0e0\");\n\n  const spacing = Length.px(10);\n\n  const ambientFeel = FeelVector.of(\n    [Look.font, font],\n    [Look.smallFont, smallFont],\n    [Look.largeFont, largeFont],\n\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.labelColor, labelColor],\n    [Look.legendColor, legendColor],\n    [Look.placeholderColor, placeholderColor],\n    [Look.highlightColor, highlightColor],\n\n    [Look.statusColor, textColor],\n    [Look.accentColor, accentColor],\n\n    [Look.backgroundColor, backgroundColor],\n    [Look.selectionColor, selectionColor],\n    [Look.borderColor, borderColor],\n    [Look.focusColor, focusColor],\n\n    [Look.etchColor, etchColor],\n    [Look.maskColor, maskColor],\n    [Look.tickColor, tickColor],\n    [Look.gridColor, gridColor],\n\n    [Look.spacing, spacing],\n    [Look.timing, Easing.linear.withDuration(250)],\n  );\n\n  const defaultFeel = FeelVector.of(\n    [Look.font, font],\n    [Look.smallFont, smallFont],\n    [Look.largeFont, largeFont],\n\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.labelColor, labelColor],\n    [Look.legendColor, legendColor],\n    [Look.placeholderColor, placeholderColor],\n    [Look.highlightColor, highlightColor],\n\n    [Look.statusColor, textColor],\n    [Look.accentColor, accentColor],\n\n    [Look.backgroundColor, backgroundColor],\n    [Look.selectionColor, selectionColor],\n    [Look.borderColor, borderColor],\n    [Look.focusColor, focusColor],\n\n    [Look.etchColor, etchColor],\n    [Look.maskColor, maskColor],\n    [Look.tickColor, tickColor],\n    [Look.gridColor, gridColor],\n\n    [Look.spacing, spacing],\n    [Look.timing, Easing.cubicOut.withDuration(250)],\n  );\n\n  const primaryFeel = FeelVector.of(\n    [Look.accentColor, primaryColor],\n    [Look.selectionColor, primarySelectionColor],\n  );\n\n  const secondaryFeel = FeelVector.of(\n    [Look.accentColor, secondaryColor],\n    [Look.selectionColor, secondarySelectionColor],\n  );\n\n  const disabledFeel = FeelVector.of(\n    [Look.textColor, disabledColor],\n    [Look.iconColor, disabledColor],\n    [Look.statusColor, disabledColor],\n    [Look.accentColor, disabledColor],\n  );\n\n  const inactiveFeel = FeelVector.of(\n    [Look.statusColor, inactiveColor],\n    [Look.accentColor, inactiveColor],\n  );\n\n  const warningFeel = FeelVector.of(\n    [Look.statusColor, warningColor],\n    [Look.accentColor, warningColor],\n    [Look.selectionColor, warningSelectionColor],\n  );\n\n  const alertFeel = FeelVector.of(\n    [Look.statusColor, alertColor],\n    [Look.accentColor, alertColor],\n    [Look.selectionColor, alertSelectionColor],\n  );\n\n  const unselectedFeel = FeelVector.of(\n    [Look.textColor, labelColor],\n    [Look.iconColor, labelColor],\n    [Look.backgroundColor, backgroundColor.darker(1 / 2)],\n  );\n\n  const selectedFeel = FeelVector.of(\n    [Look.textColor, textColor],\n    [Look.iconColor, iconColor],\n    [Look.backgroundColor, selectionColor],\n  );\n\n  const raisedFeel = FeelVector.of(\n    [Look.labelColor, labelColor.darker(1 / 3)],\n    [Look.legendColor, legendColor.darker(1 / 3)],\n    [Look.backgroundColor, raisedColor],\n  );\n\n  const coveredFeel = FeelVector.of(\n    [Look.labelColor, labelColor.darker(1 / 3)],\n    [Look.legendColor, legendColor.darker(1 / 3)],\n    [Look.backgroundColor, coveredColor],\n  );\n\n  const opaqueFeel = FeelVector.of(\n    [Look.backgroundColor, backgroundColor],\n    [Look.borderColor, borderColor],\n  );\n\n  const floatingFeel = FeelVector.of(\n    [Look.shadow, BoxShadow.create(0, 2, 4, 0, Color.black(0.5))],\n  );\n\n  const darkerFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1)],\n    [Look.selectionColor, Color.black(1)],\n    [Look.iconColor, Color.black(1)],\n    [Look.statusColor, Color.black(1)],\n    [Look.accentColor, Color.black(1)],\n    [Look.etchColor, Color.black(1)],\n    [Look.maskColor, Color.black(1)],\n  );\n\n  const lighterFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(-1)],\n    [Look.selectionColor, Color.black(-1)],\n    [Look.iconColor, Color.black(-1)],\n    [Look.statusColor, Color.black(-1)],\n    [Look.accentColor, Color.black(-1)],\n    [Look.etchColor, Color.black(-1)],\n    [Look.maskColor, Color.black(-1)],\n  );\n\n  const contrastedFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1)],\n    [Look.selectionColor, Color.black(1)],\n    [Look.iconColor, Color.black(1)],\n    [Look.statusColor, Color.black(1)],\n    [Look.accentColor, Color.black(1)],\n    [Look.etchColor, Color.black(1)],\n    [Look.maskColor, Color.black(1)],\n  );\n\n  const embossedFeel = FeelVector.of(\n    [Look.iconColor, Color.black(1)],\n    [Look.statusColor, Color.black(1)],\n    [Look.accentColor, Color.black(1)],\n  );\n\n  const nestedFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1 / 24)],\n    [Look.borderColor, Color.black(1 / 24)],\n  );\n\n  const hoveringFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(1 / 4)],\n    [Look.etchColor, Color.black(1 / 4)],\n    [Look.maskColor, Color.black(1 / 4)],\n  );\n\n  const translucentFeel = FeelVector.of(\n    [Look.iconColor, Color.black(0.8)],\n    [Look.statusColor, Color.black(0.8)],\n    [Look.accentColor, Color.black(0.8)],\n    [Look.backgroundColor, Color.black(0.8)],\n    [Look.selectionColor, Color.black(0.8)],\n  );\n\n  const transparentFeel = FeelVector.of(\n    [Look.backgroundColor, Color.black(0)],\n    [Look.selectionColor, Color.black(0)],\n  );\n\n  const navigatingFeel = FeelVector.of(\n    [Look.timing, Easing.cubicOut.withDuration(350)],\n  );\n\n  const theme = ThemeMatrix.forCols(\n    [Feel.ambient, ambientFeel],\n    [Feel.default, defaultFeel],\n\n    [Feel.primary, primaryFeel],\n    [Feel.secondary, secondaryFeel],\n    [Feel.disabled, disabledFeel],\n    [Feel.inactive, inactiveFeel],\n    [Feel.warning, warningFeel],\n    [Feel.alert, alertFeel],\n\n    [Feel.unselected, unselectedFeel],\n    [Feel.selected, selectedFeel],\n\n    [Feel.raised, raisedFeel],\n    [Feel.covered, coveredFeel],\n\n    [Feel.opaque, opaqueFeel],\n    [Feel.floating, floatingFeel],\n    [Feel.embossed, embossedFeel],\n    [Feel.nested, nestedFeel],\n    [Feel.hovering, hoveringFeel],\n\n    [Feel.translucent, translucentFeel],\n    [Feel.darker, darkerFeel],\n    [Feel.lighter, lighterFeel],\n    [Feel.contrasted, contrastedFeel],\n    [Feel.transparent, transparentFeel],\n\n    [Feel.navigating, navigatingFeel],\n  );\n\n  return theme;\n})();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport type {FromLike} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {ComponentFlags} from \"@swim/component\";\nimport type {ComponentObserver} from \"@swim/component\";\nimport {Component} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport {ConstraintExpression} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport {ConstraintProperty} from \"@swim/constraint\";\nimport type {ConstraintRelation} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport {ConstraintStrength} from \"@swim/constraint\";\nimport {Constraint} from \"@swim/constraint\";\nimport type {ConstraintScope} from \"@swim/constraint\";\nimport type {ConstraintContext} from \"@swim/constraint\";\nimport {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport {MoodVector} from \"@swim/theme\";\nimport {MoodMatrix} from \"@swim/theme\";\nimport {ThemeMatrix} from \"@swim/theme\";\nimport type {ThemeContext} from \"@swim/theme\";\nimport {ViewRelation} from \"./\"; // forward import\nimport {Gesture} from \"./\"; // forward import\nimport type {LayoutViewport} from \"./Viewport\";\nimport type {VisualViewport} from \"./Viewport\";\nimport {ViewportService} from \"./\"; // forward import\nimport {DisplayerService} from \"./\"; // forward import\nimport {SolverService} from \"./\"; // forward import\nimport {StylerService} from \"./\"; // forward import\n\n/** @public */\nexport type ViewIdiom = \"unspecified\" | \"mobile\" | \"tablet\" | \"desktop\";\n\n/** @public */\nexport interface ViewInsets {\n  readonly insetTop: number;\n  readonly insetRight: number;\n  readonly insetBottom: number;\n  readonly insetLeft: number;\n}\n\n/** @public */\nexport const ViewInsets = {\n  zero: Lazy(function (): ViewInsets {\n    return Object.freeze({\n      insetTop: 0,\n      insetRight: 0,\n      insetBottom: 0,\n      insetLeft: 0,\n    });\n  }),\n\n  equal(x: ViewInsets | null | undefined, y: ViewInsets | null | undefined): boolean {\n    if (x === y) {\n      return true;\n    } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n      return x.insetTop === y.insetTop\n          && x.insetRight === y.insetRight\n          && x.insetBottom === y.insetBottom\n          && x.insetLeft === y.insetLeft;\n    }\n    return false;\n  },\n};\n\n/** @public */\nexport type ViewFlags = ComponentFlags;\n\n/** @public */\nexport interface ViewFactory<V extends View = View> extends Creatable<V>, FromLike<V> {\n}\n\n/** @public */\nexport interface ViewClass<V extends View = View> extends Function, ViewFactory<V> {\n  readonly prototype: V;\n}\n\n/** @public */\nexport interface ViewConstructor<V extends View = View> extends ViewClass<V> {\n  new(): V;\n}\n\n/** @public */\nexport interface ViewObserver<V extends View = View> extends ComponentObserver<V> {\n  viewWillAttachParent?(parent: View, view: V): void;\n\n  viewDidAttachParent?(parent: View, view: V): void;\n\n  viewWillDetachParent?(parent: View, view: V): void;\n\n  viewDidDetachParent?(parent: View, view: V): void;\n\n  viewWillInsertChild?(child: View, target: View | null, view: V): void;\n\n  viewDidInsertChild?(child: View, target: View | null, view: V): void;\n\n  viewWillRemoveChild?(child: View, view: V): void;\n\n  viewDidRemoveChild?(child: View, view: V): void;\n\n  viewWillReinsertChild?(child: View, target: View | null, view: V): void;\n\n  viewDidReinsertChild?(child: View, target: View | null, view: V): void;\n\n  viewWillMount?(view: V): void;\n\n  viewDidMount?(view: V): void;\n\n  viewWillUnmount?(view: V): void;\n\n  viewDidUnmount?(view: V): void;\n\n  viewWillCull?(view: V): void;\n\n  viewDidCull?(view: V): void;\n\n  viewWillUncull?(view: V): void;\n\n  viewDidUncull?(view: V): void;\n\n  viewWillHide?(view: V): void;\n\n  viewDidHide?(view: V): void;\n\n  viewWillUnhide?(view: V): void;\n\n  viewDidUnhide?(view: V): void;\n\n  viewWillResize?(view: V): void;\n\n  viewDidResize?(view: V): void;\n\n  viewWillScroll?(view: V): void;\n\n  viewDidScroll?(view: V): void;\n\n  viewWillChange?(view: V): void;\n\n  viewDidChange?(view: V): void;\n\n  viewWillAnimate?(view: V): void;\n\n  viewDidAnimate?(view: V): void;\n\n  viewWillProject?(view: V): void;\n\n  viewDidProject?(view: V): void;\n\n  viewWillLayout?(view: V): void;\n\n  viewDidLayout?(view: V): void;\n\n  viewWillRender?(view: V): void;\n\n  viewDidRender?(view: V): void;\n\n  viewWillRasterize?(view: V): void;\n\n  viewDidRasterize?(view: V): void;\n\n  viewWillComposite?(view: V): void;\n\n  viewDidComposite?(view: V): void;\n\n  viewWillApplyTheme?(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, view: V): void;\n\n  viewDidApplyTheme?(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, view: V): void;\n}\n\n/** @public */\nexport class View extends Component<View> implements ConstraintScope, ConstraintContext, ThemeContext, EventTarget {\n  constructor() {\n    super();\n    this.constraints = null;\n    this.constraintVariables = null;\n\n    // Observer caches\n    this.willAttachParentObservers = null;\n    this.didAttachParentObservers = null;\n    this.willDetachParentObservers = null;\n    this.didDetachParentObservers = null;\n    this.willInsertChildObservers = null;\n    this.didInsertChildObservers = null;\n    this.willRemoveChildObservers = null;\n    this.didRemoveChildObservers = null;\n    this.willMountObservers = null;\n    this.didMountObservers = null;\n    this.willUnmountObservers = null;\n    this.didUnmountObservers = null;\n    this.willResizeObservers = null;\n    this.didResizeObservers = null;\n    this.willScrollObservers = null;\n    this.didScrollObservers = null;\n    this.willChangeObservers = null;\n    this.didChangeObservers = null;\n    this.willAnimateObservers = null;\n    this.didAnimateObservers = null;\n    this.willProjectObservers = null;\n    this.didProjectObservers = null;\n    this.willLayoutObservers = null;\n    this.didLayoutObservers = null;\n    this.willRenderObservers = null;\n    this.didRenderObservers = null;\n    this.willRasterizeObservers = null;\n    this.didRasterizeObservers = null;\n    this.willCompositeObservers = null;\n    this.didCompositeObservers = null;\n  }\n\n  declare readonly observerType?: Class<ViewObserver>;\n\n  override get componentType(): Class<View> {\n    return View;\n  }\n\n  /** @internal */\n  override attachParent(parent: View, nextSibling: View | null): void {\n    // assert(this.parent === null);\n    this.willAttachParent(parent);\n    (this as Mutable<this>).parent = parent;\n    let previousSibling: View | null;\n    if (nextSibling !== null) {\n      previousSibling = nextSibling.previousSibling;\n      this.setNextSibling(nextSibling);\n      nextSibling.setPreviousSibling(this);\n    } else {\n      previousSibling = parent.lastChild;\n      parent.setLastChild(this);\n    }\n    if (previousSibling !== null) {\n      previousSibling.setNextSibling(this);\n      this.setPreviousSibling(previousSibling);\n    } else {\n      parent.setFirstChild(this);\n    }\n    if (parent.mounted) {\n      if (parent.culled) {\n        this.cascadeCull();\n      }\n      this.cascadeMount();\n    }\n    this.onAttachParent(parent);\n    this.didAttachParent(parent);\n  }\n\n  /** @internal */\n  protected willAttachParentObservers: Set<Required<Pick<ViewObserver, \"viewWillAttachParent\">>> | null;\n  protected override willAttachParent(parent: View): void {\n    const observers = this.willAttachParentObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onAttachParent(parent: View): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didAttachParentObservers: Set<Required<Pick<ViewObserver, \"viewDidAttachParent\">>> | null;\n  protected override didAttachParent(parent: View): void {\n    const observers = this.didAttachParentObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidAttachParent(parent, this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willDetachParentObservers: Set<Required<Pick<ViewObserver, \"viewWillDetachParent\">>> | null;\n  protected override willDetachParent(parent: View): void {\n    const observers = this.willDetachParentObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillDetachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onDetachParent(parent: View): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didDetachParentObservers: Set<Required<Pick<ViewObserver, \"viewDidDetachParent\">>> | null;\n  protected override didDetachParent(parent: View): void {\n    const observers = this.didDetachParentObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidDetachParent(parent, this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willInsertChildObservers: Set<Required<Pick<ViewObserver, \"viewWillInsertChild\">>> | null;\n  protected override willInsertChild(child: View, target: View | null): void {\n    super.willInsertChild(child, target);\n    const observers = this.willInsertChildObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillInsertChild(child, target, this);\n      }\n    }\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n  }\n\n  /** @internal */\n  protected didInsertChildObservers: Set<Required<Pick<ViewObserver, \"viewDidInsertChild\">>> | null;\n  protected override didInsertChild(child: View, target: View | null): void {\n    const observers = this.didInsertChildObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidInsertChild(child, target, this);\n      }\n    }\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ViewFlags): void {\n    if ((this.flags & View.MountedFlag) !== 0) {\n      if (updateFlags === void 0) {\n        updateFlags = 0;\n      }\n      updateFlags |= this.flags & View.UpdateMask;\n      if ((updateFlags & View.ProcessMask) !== 0) {\n        this.cascadeProcess(updateFlags);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willRemoveChildObservers: Set<Required<Pick<ViewObserver, \"viewWillRemoveChild\">>> | null;\n  protected override willRemoveChild(child: View): void {\n    super.willRemoveChild(child);\n    const observers = this.willRemoveChildObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillRemoveChild(child, this);\n      }\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n  }\n\n  /** @internal */\n  protected didRemoveChildObservers: Set<Required<Pick<ViewObserver, \"viewDidRemoveChild\">>> | null;\n  protected override didRemoveChild(child: View): void {\n    const observers = this.didRemoveChildObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidRemoveChild(child, this);\n      }\n    }\n    super.didRemoveChild(child);\n  }\n\n  protected override willReinsertChild(child: View, target: View | null): void {\n    super.willReinsertChild(child, target);\n    this.callObservers(\"viewWillReinsertChild\", child, target, this);\n  }\n\n  protected override onReinsertChild(child: View, target: View | null): void {\n    super.onReinsertChild(child, target);\n  }\n\n  protected override didReinsertChild(child: View, target: View | null): void {\n    this.callObservers(\"viewDidReinsertChild\", child, target, this);\n    super.didReinsertChild(child, target);\n  }\n\n  /** @internal */\n  override mount(): void {\n    throw new Error();\n  }\n\n  protected willMountObservers: Set<Required<Pick<ViewObserver, \"viewWillMount\">>> | null;\n  protected override willMount(): void {\n    super.willMount();\n    const observers = this.willMountObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillMount(this);\n      }\n    }\n  }\n\n  protected didMountObservers: Set<Required<Pick<ViewObserver, \"viewDidMount\">>> | null;\n  protected override didMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (!this.culled && this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(View.NeedsChange | View.NeedsAnimate);\n    }\n\n    this.mountFasteners();\n\n    this.activateLayout();\n    const observers = this.didMountObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidMount(this);\n      }\n    }\n    super.didMount();\n  }\n\n  /** @internal */\n  override unmount(): void {\n    throw new Error();\n  }\n\n  protected willUnmountObservers: Set<Required<Pick<ViewObserver, \"viewWillUnmount\">>> | null;\n  protected override willUnmount(): void {\n    super.willUnmount();\n    const observers = this.willUnmountObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillUnmount(this);\n      }\n    }\n    this.deactivateLayout();\n  }\n\n  protected didUnmountObservers: Set<Required<Pick<ViewObserver, \"viewDidUnmount\">>> | null;\n  protected override didUnmount(): void {\n    const observers = this.didUnmountObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidUnmount(this);\n      }\n    }\n    super.didUnmount();\n  }\n\n  get culled(): boolean {\n    return (this.flags & View.CulledMask) !== 0;\n  }\n\n  setCulled(culled: boolean): void {\n    const flags = this.flags;\n    if (culled && (flags & View.CulledFlag) === 0) {\n      if ((flags & View.CullFlag) === 0) {\n        this.willCull();\n        this.setFlags(flags | View.CulledFlag);\n        this.onCull();\n        this.cullChildren();\n        this.didCull();\n      } else {\n        this.setFlags(flags | View.CulledFlag);\n      }\n    } else if (!culled && (flags & View.CulledFlag) !== 0) {\n      if ((flags & View.CullFlag) === 0) {\n        this.willUncull();\n        this.setFlags(flags & ~View.CulledFlag);\n        this.uncullChildren();\n        this.onUncull();\n        this.didUncull();\n      } else {\n        this.setFlags(flags & ~View.CulledFlag);\n      }\n    }\n  }\n\n  /** @internal */\n  cascadeCull(): void {\n    if ((this.flags & View.CullFlag) !== 0) {\n      return;\n    } else if ((this.flags & View.CulledFlag) !== 0) {\n      this.setFlags(this.flags | View.CullFlag);\n      return;\n    }\n    this.willCull();\n    this.setFlags(this.flags | View.CullFlag);\n    this.onCull();\n    this.cullChildren();\n    this.didCull();\n  }\n\n  protected willCull(): void {\n    this.callObservers(\"viewWillCull\", this);\n  }\n\n  protected onCull(): void {\n    // hook\n  }\n\n  protected didCull(): void {\n    this.callObservers(\"viewDidCull\", this);\n  }\n\n  /** @internal */\n  protected cullChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeCull();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent cull\");\n      }\n      child = next;\n    }\n  }\n\n  /** @internal */\n  cascadeUncull(): void {\n    if ((this.flags & View.CullFlag) === 0) {\n      return;\n    } else if ((this.flags & View.CulledFlag) !== 0) {\n      this.setFlags(this.flags & ~View.CullFlag);\n      return;\n    }\n    this.willUncull();\n    this.setFlags(this.flags & ~View.CullFlag);\n    this.uncullChildren();\n    this.onUncull();\n    this.didUncull();\n  }\n\n  get uncullFlags(): ViewFlags {\n    return (this.constructor as typeof View).UncullFlags;\n  }\n\n  protected willUncull(): void {\n    this.callObservers(\"viewWillUncull\", this);\n  }\n\n  protected onUncull(): void {\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.uncullFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(View.NeedsChange | View.NeedsAnimate);\n    }\n\n    if (this.mood.derived) {\n      this.mood.decohere();\n    }\n    if (this.theme.derived) {\n      this.theme.decohere();\n    }\n  }\n\n  protected didUncull(): void {\n    this.callObservers(\"viewDidUncull\", this);\n  }\n\n  /** @internal */\n  protected uncullChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeUncull();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent uncull\");\n      }\n      child = next;\n    }\n  }\n\n  /**\n   * Returns `true` if this view is ineligible for rendering and hit testing,\n   * and should be excluded from its parent's layout and hit bounds.\n   */\n  get hidden(): boolean {\n    return (this.flags & View.HiddenMask) !== 0;\n  }\n\n  /**\n   * Makes this view ineligible for rendering and hit testing, and excludes\n   * this view from its parent's layout and hit bounds, when `hidden` is `true`.\n   * Makes this view eligible for rendering and hit testing, and includes this\n   * view in its parent's layout and hit bounds, when `hidden` is `false`.\n   */\n  setHidden(hidden: boolean): void {\n    const flags = this.flags;\n    if (hidden && (flags & View.HiddenFlag) === 0) {\n      this.setFlags(flags | View.HiddenFlag);\n      if ((flags & View.HideFlag) === 0) {\n        this.willHide();\n        this.onHide();\n        this.hideChildren();\n        this.didHide();\n      }\n    } else if (!hidden && (flags & View.HiddenFlag) !== 0) {\n      this.setFlags(flags & ~View.HiddenFlag);\n      if ((flags & View.HideFlag) === 0) {\n        this.willUnhide();\n        this.unhideChildren();\n        this.onUnhide();\n        this.didUnhide();\n      }\n    }\n  }\n\n  /** @internal */\n  cascadeHide(): void {\n    if ((this.flags & View.HideFlag) !== 0) {\n      return;\n    } else if ((this.flags & View.HiddenFlag) !== 0) {\n      this.setFlags(this.flags | View.HideFlag);\n      return;\n    }\n    this.willHide();\n    this.setFlags(this.flags | View.HideFlag);\n    this.onHide();\n    this.hideChildren();\n    this.didHide();\n  }\n\n  protected willHide(): void {\n    this.callObservers(\"viewWillHide\", this);\n  }\n\n  protected onHide(): void {\n    // hook\n  }\n\n  protected didHide(): void {\n    this.callObservers(\"viewDidHide\", this);\n  }\n\n  /** @internal */\n  protected hideChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeHide();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent hide\");\n      }\n      child = next;\n    }\n  }\n\n  cascadeUnhide(): void {\n    if ((this.flags & View.HideFlag) === 0) {\n      return;\n    } else if ((this.flags & View.HiddenFlag) !== 0) {\n      this.setFlags(this.flags & ~View.HideFlag);\n      return;\n    }\n    this.willUnhide();\n    this.setFlags(this.flags & ~View.HideFlag);\n    this.unhideChildren();\n    this.onUnhide();\n    this.didUnhide();\n  }\n\n  get unhideFlags(): ViewFlags {\n    return (this.constructor as typeof View).UnhideFlags;\n  }\n\n  protected willUnhide(): void {\n    this.callObservers(\"viewWillUnhide\", this);\n  }\n\n  protected onUnhide(): void {\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.uncullFlags);\n  }\n\n  protected didUnhide(): void {\n    this.callObservers(\"viewDidUnhide\", this);\n  }\n\n  /** @internal */\n  protected unhideChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeUnhide();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent unhide\");\n      }\n      child = next;\n    }\n  }\n\n  get unbounded(): boolean {\n    return (this.flags & View.UnboundedFlag) !== 0;\n  }\n\n  setUnbounded(unboundedFlag: boolean): void {\n    if (unboundedFlag !== ((this.flags & View.UnboundedFlag) !== 0)) {\n      this.willSetUnbounded(unboundedFlag);\n      if (unboundedFlag) {\n        this.setFlags(this.flags | View.UnboundedFlag);\n      } else {\n        this.setFlags(this.flags & ~View.UnboundedFlag);\n      }\n      this.onSetUnbounded(unboundedFlag);\n      this.didSetUnbounded(unboundedFlag);\n    }\n  }\n\n  protected willSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  protected onSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  protected didSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  get intangible(): boolean {\n    return (this.flags & View.IntangibleFlag) !== 0;\n  }\n\n  setIntangible(intangible: boolean): void {\n    if (intangible !== ((this.flags & View.IntangibleFlag) !== 0)) {\n      this.willSetIntangible(intangible);\n      if (intangible) {\n        this.setFlags(this.flags | View.IntangibleFlag);\n      } else {\n        this.setFlags(this.flags & ~View.IntangibleFlag);\n      }\n      this.onSetIntangible(intangible);\n      this.didSetIntangible(intangible);\n    }\n  }\n\n  protected willSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  protected onSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  protected didSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  override requireUpdate(updateFlags: ViewFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & View.UpdateMask;\n    if (deltaUpdateFlags === 0) {\n      return;\n    }\n    this.setFlags(flags | deltaUpdateFlags);\n    this.requestUpdate(this, deltaUpdateFlags, immediate);\n  }\n\n  protected needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: View, updateFlags: ViewFlags, immediate: boolean): void {\n    if ((this.flags & View.CulledMask) === View.CulledFlag) {\n      return; // culled root\n    }\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & View.UpdateMask;\n    if ((updateFlags & View.ProcessMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsProcess;\n    }\n    if ((updateFlags & View.DisplayMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsDisplay;\n    }\n    if (deltaUpdateFlags === 0 && !immediate) {\n      return;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    const parent = this.parent;\n    if (parent !== null) {\n      parent.requestUpdate(target, updateFlags, immediate);\n    } else if (this.mounted) {\n      const updaterService = this.updater.service;\n      if (updaterService !== null) {\n        updaterService.requestUpdate(target, updateFlags, immediate);\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & View.UpdatingMask) !== 0;\n  }\n\n  get processing(): boolean {\n    return (this.flags & View.ProcessingFlag) !== 0;\n  }\n\n  protected needsProcess(processFlags: ViewFlags): ViewFlags {\n    return processFlags;\n  }\n\n  cascadeProcess(processFlags: ViewFlags): void {\n    try {\n      processFlags &= ~View.NeedsProcess;\n      processFlags |= this.flags & View.UpdateMask;\n      processFlags = this.needsProcess(processFlags);\n      if ((processFlags & View.ProcessMask) === 0) {\n        return;\n      }\n      let cascadeFlags = processFlags;\n      this.setFlags(this.flags & ~View.NeedsProcess | View.ProcessingFlag);\n      this.willProcess(cascadeFlags);\n      if (((this.flags | processFlags) & View.NeedsResize) !== 0) {\n        cascadeFlags |= View.NeedsResize;\n        this.setFlags(this.flags & ~View.NeedsResize);\n        this.willResize();\n      }\n      if (((this.flags | processFlags) & View.NeedsScroll) !== 0) {\n        cascadeFlags |= View.NeedsScroll;\n        this.setFlags(this.flags & ~View.NeedsScroll);\n        this.willScroll();\n      }\n      if (((this.flags | processFlags) & View.NeedsChange) !== 0) {\n        cascadeFlags |= View.NeedsChange;\n        this.setFlags(this.flags & ~View.NeedsChange);\n        this.willChange();\n      }\n      if (((this.flags | processFlags) & View.NeedsAnimate) !== 0) {\n        cascadeFlags |= View.NeedsAnimate;\n        this.setFlags(this.flags & ~View.NeedsAnimate);\n        this.willAnimate();\n      }\n      if (((this.flags | processFlags) & View.NeedsProject) !== 0) {\n        cascadeFlags |= View.NeedsProject;\n        this.setFlags(this.flags & ~View.NeedsProject);\n        this.willProject();\n      }\n\n      this.onProcess(cascadeFlags);\n      if ((cascadeFlags & View.NeedsResize) !== 0) {\n        this.onResize();\n      }\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.onScroll();\n      }\n      if ((cascadeFlags & View.NeedsChange) !== 0) {\n        this.onChange();\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.onAnimate();\n      }\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.onProject();\n      }\n\n      if ((cascadeFlags & View.ProcessMask) !== 0) {\n        this.processChildren(cascadeFlags, this.processChild);\n      }\n\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.didProject();\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.didAnimate();\n      }\n      if ((cascadeFlags & View.NeedsChange) !== 0) {\n        this.didChange();\n      }\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.didScroll();\n      }\n      if ((cascadeFlags & View.NeedsResize) !== 0) {\n        this.didResize();\n      }\n      this.didProcess(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~View.ProcessingFlag);\n    }\n  }\n\n  protected willProcess(processFlags: ViewFlags): void {\n    // hook\n  }\n\n  protected onProcess(processFlags: ViewFlags): void {\n    // hook\n  }\n\n  protected didProcess(processFlags: ViewFlags): void {\n    // hook\n  }\n\n  /** @internal */\n  protected willResizeObservers: Set<Required<Pick<ViewObserver, \"viewWillResize\">>> | null;\n  protected willResize(): void {\n    const observers = this.willResizeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillResize(this);\n      }\n    }\n    this.evaluateConstraintVariables();\n  }\n\n  protected onResize(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didResizeObservers: Set<Required<Pick<ViewObserver, \"viewDidResize\">>> | null;\n  protected didResize(): void {\n    const observers = this.didResizeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidResize(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willScrollObservers: Set<Required<Pick<ViewObserver, \"viewWillScroll\">>> | null;\n  protected willScroll(): void {\n    const observers = this.willScrollObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillScroll(this);\n      }\n    }\n  }\n\n  protected onScroll(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didScrollObservers: Set<Required<Pick<ViewObserver, \"viewDidScroll\">>> | null;\n  protected didScroll(): void {\n    const observers = this.didScrollObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidScroll(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willChangeObservers: Set<Required<Pick<ViewObserver, \"viewWillChange\">>> | null;\n  protected willChange(): void {\n    const observers = this.willChangeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillChange(this);\n      }\n    }\n  }\n\n  protected onChange(): void {\n    this.recohereFasteners(this.updateTime);\n  }\n\n  /** @internal */\n  protected didChangeObservers: Set<Required<Pick<ViewObserver, \"viewDidChange\">>> | null;\n  protected didChange(): void {\n    const observers = this.didChangeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidChange(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willAnimateObservers: Set<Required<Pick<ViewObserver, \"viewWillAnimate\">>> | null;\n  protected willAnimate(): void {\n    const observers = this.willAnimateObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillAnimate(this);\n      }\n    }\n  }\n\n  protected onAnimate(): void {\n    this.recohereAnimators(this.updateTime);\n  }\n\n  /** @internal */\n  protected didAnimateObservers: Set<Required<Pick<ViewObserver, \"viewDidAnimate\">>> | null;\n  protected didAnimate(): void {\n    const observers = this.didAnimateObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidAnimate(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willProjectObservers: Set<Required<Pick<ViewObserver, \"viewWillProject\">>> | null;\n  protected willProject(): void {\n    const observers = this.willProjectObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillProject(this);\n      }\n    }\n  }\n\n  protected onProject(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didProjectObservers: Set<Required<Pick<ViewObserver, \"viewDidProject\">>> | null;\n  protected didProject(): void {\n    const observers = this.didProjectObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidProject(this);\n      }\n    }\n  }\n\n  protected processChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      processChild.call(this, child, processFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent process pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected processChild(child: View, processFlags: ViewFlags): void {\n    child.cascadeProcess(processFlags);\n  }\n\n  get displaying(): boolean {\n    return (this.flags & View.DisplayingFlag) !== 0;\n  }\n\n  protected needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    return displayFlags;\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags): void {\n    try {\n      displayFlags &= ~View.NeedsDisplay;\n      displayFlags |= this.flags & View.UpdateMask;\n      displayFlags = this.needsDisplay(displayFlags);\n      if ((displayFlags & View.DisplayMask) === 0) {\n        return;\n      }\n      let cascadeFlags = displayFlags;\n      this.setFlags(this.flags & ~View.NeedsDisplay | View.DisplayingFlag);\n      this.willDisplay(cascadeFlags);\n      if (((this.flags | displayFlags) & View.NeedsLayout) !== 0) {\n        cascadeFlags |= View.NeedsLayout;\n        this.setFlags(this.flags & ~View.NeedsLayout);\n        this.willLayout();\n      }\n      if (((this.flags | displayFlags) & View.NeedsRender) !== 0) {\n        cascadeFlags |= View.NeedsRender;\n        this.setFlags(this.flags & ~View.NeedsRender);\n        this.willRender();\n      }\n      if (((this.flags | displayFlags) & View.NeedsRasterize) !== 0) {\n        cascadeFlags |= View.NeedsRasterize;\n        this.setFlags(this.flags & ~View.NeedsRasterize);\n        this.willRasterize();\n      }\n      if (((this.flags | displayFlags) & View.NeedsComposite) !== 0) {\n        cascadeFlags |= View.NeedsComposite;\n        this.setFlags(this.flags & ~View.NeedsComposite);\n        this.willComposite();\n      }\n\n      this.onDisplay(cascadeFlags);\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.onLayout();\n      }\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.onRender();\n      }\n      if ((cascadeFlags & View.NeedsRasterize) !== 0) {\n        this.onRasterize();\n      }\n      if ((cascadeFlags & View.NeedsComposite) !== 0) {\n        this.onComposite();\n      }\n\n      if ((cascadeFlags & View.DisplayMask) !== 0 && !this.hidden && !this.culled) {\n        this.displayChildren(cascadeFlags, this.displayChild);\n      }\n\n      if ((cascadeFlags & View.NeedsComposite) !== 0) {\n        this.didComposite();\n      }\n      if ((cascadeFlags & View.NeedsRasterize) !== 0) {\n        this.didRasterize();\n      }\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.didRender();\n      }\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.didLayout();\n      }\n      this.didDisplay(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~View.DisplayingFlag);\n    }\n  }\n\n  protected willDisplay(displayFlags: ViewFlags): void {\n    // hook\n  }\n\n  protected onDisplay(displayFlags: ViewFlags): void {\n    // hook\n  }\n\n  protected didDisplay(displayFlags: ViewFlags): void {\n    // hook\n  }\n\n  /** @internal */\n  protected willLayoutObservers: Set<Required<Pick<ViewObserver, \"viewWillLayout\">>> | null;\n  protected willLayout(): void {\n    const observers = this.willLayoutObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillLayout(this);\n      }\n    }\n  }\n\n  protected onLayout(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didLayoutObservers: Set<Required<Pick<ViewObserver, \"viewDidLayout\">>> | null;\n  protected didLayout(): void {\n    const observers = this.didLayoutObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidLayout(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willRenderObservers: Set<Required<Pick<ViewObserver, \"viewWillRender\">>> | null;\n  protected willRender(): void {\n    const observers = this.willRenderObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillRender(this);\n      }\n    }\n  }\n\n  protected onRender(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didRenderObservers: Set<Required<Pick<ViewObserver, \"viewDidRender\">>> | null;\n  protected didRender(): void {\n    const observers = this.didRenderObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidRender(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willRasterizeObservers: Set<Required<Pick<ViewObserver, \"viewWillRasterize\">>> | null;\n  protected willRasterize(): void {\n    const observers = this.willRasterizeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillRasterize(this);\n      }\n    }\n  }\n\n  protected onRasterize(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didRasterizeObservers: Set<Required<Pick<ViewObserver, \"viewDidRasterize\">>> | null;\n  protected didRasterize(): void {\n    const observers = this.didRasterizeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidRasterize(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected willCompositeObservers: Set<Required<Pick<ViewObserver, \"viewWillComposite\">>> | null;\n  protected willComposite(): void {\n    const observers = this.willCompositeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillComposite(this);\n      }\n    }\n  }\n\n  protected onComposite(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didCompositeObservers: Set<Required<Pick<ViewObserver, \"viewDidComposite\">>> | null;\n  protected didComposite(): void {\n    const observers = this.didCompositeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidComposite(this);\n      }\n    }\n  }\n\n  protected displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      displayChild.call(this, child, displayFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent display pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected displayChild(child: View, displayFlags: ViewFlags): void {\n    child.cascadeDisplay(displayFlags);\n  }\n\n  get updateTime(): number {\n    return this.updater.getService().updateTime;\n  }\n\n  @Provider({\n    get serviceType(): typeof ViewportService { // avoid static forward reference\n      return ViewportService;\n    },\n  })\n  get viewport(): Provider<this, ViewportService> {\n    return Provider.getter();\n  }\n\n  @Provider({\n    get serviceType(): typeof DisplayerService { // avoid static forward reference\n      return DisplayerService;\n    },\n    mountRootService(service: DisplayerService): void {\n      super.mountRootService(service);\n      service.roots.addView(this.owner);\n    },\n    unmountRootService(service: DisplayerService): void {\n      super.unmountRootService(service);\n      service.roots.removeView(this.owner);\n    },\n  })\n  readonly updater!: Provider<this, DisplayerService>;\n\n  @Provider({\n    get serviceType(): typeof SolverService { // avoid static forward reference\n      return SolverService;\n    },\n  })\n  get solver(): Provider<this, SolverService> {\n    return Provider.getter();\n  }\n\n  @Provider({\n    get serviceType(): typeof StylerService { // avoid static forward reference\n      return StylerService;\n    },\n    mountRootService(service: StylerService): void {\n      super.mountRootService(service);\n      service.roots.addView(this.owner);\n    },\n    unmountRootService(service: StylerService): void {\n      super.unmountRootService(service);\n      service.roots.removeView(this.owner);\n    },\n  })\n  readonly styler!: Provider<this, StylerService>;\n\n  @Property({\n    valueType: MoodVector,\n    value: null,\n    affinity: Affinity.Inherited,\n    inherits: true,\n    init(): void {\n      this.timing = void 0;\n    },\n    deriveValue(superMood: MoodVector | null): MoodVector | null {\n      if (superMood !== null) {\n        const moodModifierProperty = this.owner.moodModifier;\n        const moodModifier = moodModifierProperty instanceof Property ? moodModifierProperty.value : null;\n        if (moodModifier !== null) {\n          superMood = moodModifier.timesCol(superMood, true);\n        }\n      }\n      return superMood;\n    },\n    didSetValue(mood: MoodVector | null): void {\n      const theme = this.owner.theme.value;\n      if (theme !== null && mood !== null) {\n        this.owner.applyTheme(theme, mood, this.timing);\n        this.timing = void 0;\n      }\n    },\n  })\n  readonly mood!: Property<this, MoodVector | null> & {\n    /** @internal */\n    timing: TimingLike | boolean | undefined,\n  };\n\n  @Property({\n    valueType: ThemeMatrix,\n    value: null,\n    affinity: Affinity.Inherited,\n    inherits: true,\n    init(): void {\n      this.timing = void 0;\n    },\n    deriveValue(superTheme: ThemeMatrix | null): ThemeMatrix | null {\n      if (superTheme !== null) {\n        const themeModifierProperty = this.owner.themeModifier;\n        const themeModifier = themeModifierProperty instanceof Property ? themeModifierProperty.value : null;\n        if (themeModifier !== null) {\n          superTheme = superTheme.transform(themeModifier, true);\n        }\n      }\n      return superTheme;\n    },\n    didSetValue(theme: ThemeMatrix | null): void {\n      const mood = this.owner.mood.value;\n      if (theme !== null && mood !== null) {\n        this.owner.applyTheme(theme, mood, this.timing);\n        this.timing = void 0;\n      }\n    },\n  })\n  readonly theme!: Property<this, ThemeMatrix | null> & {\n    /** @internal */\n    timing: TimingLike | boolean | undefined,\n  };\n\n  /** @override */\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined {\n    const theme = this.theme.value;\n    let value: T | undefined;\n    if (theme !== null) {\n      if (mood === void 0 || mood === null) {\n        mood = this.mood.value;\n      }\n      if (mood !== null) {\n        value = theme.get(look, mood);\n      }\n    }\n    return value;\n  }\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    if (arguments.length === 2) {\n      elseValue = mood as E;\n      mood = null;\n    }\n    const theme = this.theme.value;\n    let value: T | E;\n    if (theme !== null) {\n      if (mood === void 0 || mood === null) {\n        mood = this.mood.value;\n      }\n      if (mood !== null) {\n        value = theme.getOr(look, mood as MoodVector<Feel>, elseValue as E);\n      } else {\n        value = elseValue as E;\n      }\n    } else {\n      value = elseValue as E;\n    }\n    return value;\n  }\n\n  /** @internal */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean): void {\n    if (timing === void 0 && this.inserting) {\n      timing = false;\n    } else if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.willApplyTheme(theme, mood, timing);\n    this.onApplyTheme(theme, mood, timing);\n    this.didApplyTheme(theme, mood, timing);\n  }\n\n  protected willApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    this.callObservers(\"viewWillApplyTheme\", theme, mood, timing, this);\n  }\n\n  protected onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    this.themeFsteners(theme, mood, timing);\n  }\n\n  protected didApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    this.callObservers(\"viewDidApplyTheme\", theme, mood, timing, this);\n  }\n\n  /** @internal */\n  protected themeFsteners(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!] as Fastener<any, any, any> | undefined;\n      if (fastener !== void 0 && \"applyTheme\" in (fastener as any)) {\n        (fastener as any).applyTheme(theme, mood, timing);\n      }\n    }\n  }\n\n  @Property({\n    valueType: MoodMatrix,\n    value: null,\n    didSetValue(moodModifier: MoodMatrix | null): void {\n      if (moodModifier === null || !this.owner.mood.hasAffinity(Affinity.Inherited)) {\n        return;\n      }\n      let superMood = this.owner.mood.inletValue;\n      if (superMood === void 0 || superMood === null) {\n        const stylerService = this.owner.styler.service;\n        if (stylerService !== void 0 && stylerService !== null) {\n          superMood = stylerService.mood.value;\n        }\n      }\n      if (superMood !== void 0 && superMood !== null) {\n        const mood = moodModifier.timesCol(superMood, true);\n        this.owner.mood.setValue(mood, Affinity.Reflexive);\n      }\n    },\n  })\n  readonly moodModifier!: Property<this, MoodMatrix | null>;\n\n  modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>, timing?: TimingLike | boolean): void {\n    if (!this.moodModifier.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const oldMoodModifier = this.moodModifier.getValueOr(MoodMatrix.empty());\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (newMoodModifier.equals(oldMoodModifier)) {\n      return;\n    }\n    this.mood.timing = timing;\n    this.moodModifier.setIntrinsic(newMoodModifier);\n  }\n\n  @Property({\n    valueType: MoodMatrix,\n    value: null,\n    didSetValue(themeModifier: MoodMatrix | null): void {\n      if (themeModifier === null || !this.owner.theme.hasAffinity(Affinity.Inherited)) {\n        return;\n      }\n      let superTheme = this.owner.theme.inletValue;\n      if (superTheme === void 0 || superTheme === null) {\n        const stylerService = this.owner.styler.service;\n        if (stylerService !== void 0 && stylerService !== null) {\n          superTheme = stylerService.theme.value;\n        }\n      }\n      if (superTheme !== void 0 && superTheme !== null) {\n        const theme = superTheme.transform(themeModifier, true);\n        this.owner.theme.setValue(theme, Affinity.Reflexive);\n      }\n    },\n  })\n  readonly themeModifier!: Property<this, MoodMatrix | null>;\n\n  modifyTheme(feel: Feel, updates: MoodVectorUpdates<Feel>, timing?: TimingLike | boolean): void;\n  modifyTheme(cols: [feel: Feel, updates: MoodVectorUpdates<Feel> | undefined][], timing?: TimingLike | boolean): void;\n  modifyTheme(feel: Feel | [feel: Feel, updates: MoodVectorUpdates<Feel> | undefined][], updates?: MoodVectorUpdates<Feel> | TimingLike | boolean, timing?: TimingLike | boolean): void {\n    if (!this.themeModifier.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const oldThemeModifier = this.themeModifier.getValueOr(MoodMatrix.empty());\n    let newThemeModifier: MoodMatrix;\n    if (feel instanceof Feel) {\n      newThemeModifier = oldThemeModifier.updatedCol(feel, updates as MoodVectorUpdates<Feel>, true);\n    } else {\n      newThemeModifier = oldThemeModifier;\n      const cols = feel as [feel: Feel, updates: MoodVectorUpdates<Feel> | undefined][];\n      timing = updates as TimingLike | boolean;\n      updates = void 0;\n      for (let i = 0; i < cols.length; i += 1) {\n        [feel, updates] = cols[i]!;\n        if (updates !== void 0) {\n          newThemeModifier = newThemeModifier.updatedCol(feel, updates, true);\n        } else {\n          newThemeModifier = newThemeModifier.col(feel, void 0);\n        }\n      }\n    }\n    if (!newThemeModifier.equals(oldThemeModifier)) {\n      this.theme.timing = timing;\n      this.themeModifier.setIntrinsic(newThemeModifier);\n    }\n  }\n\n  /** @override */\n  getTransition(fastener: Fastener<any, any, any>): Timing | null {\n    return this.getLookOr(Look.timing, null);\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: View, target: View | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ViewRelation || fastener instanceof Gesture) {\n      fastener.bindView(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: View): void {\n    if (fastener instanceof ViewRelation || fastener instanceof Gesture) {\n      fastener.unbindView(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal */\n  protected override enqueueFastener(fastener: Fastener): void {\n    super.enqueueFastener(fastener);\n    if (fastener instanceof Animator) {\n      this.requireUpdate(View.NeedsAnimate);\n    } else {\n      this.requireUpdate(View.NeedsChange);\n    }\n  }\n\n  /** @internal */\n  override recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    } else if (t === void 0) {\n      t = performance.now();\n    }\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (!(fastener instanceof Animator)) {\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  recohereAnimators(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    }\n    // The passed-in update time parameter is used to ensure that all animators\n    // update as if evaluated instantaneously. Jitter can occur if an update\n    // pass takes longer than an animation frame. This is especially noticeable\n    // when beginning new animations, such as when animating the insertion of\n    // new views. Since animators base their timing functions on the time of\n    // the first transition frame, update lag can truncate the important first\n    // frames of an animation. To counter this effect, we use the current time\n    // if more than 1/30 of a second has elapsed since the start of the update pass.\n    const now = performance.now();\n    if (now - t >= DisplayerService.MaxProcessInterval) {\n      t = now;\n    }\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (fastener instanceof Animator) {\n          fastener.recohere(t);\n        } else {\n          this.enqueueFastener(fastener);\n        }\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @override */\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation,\n             rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint {\n    lhs = ConstraintExpression.fromLike(lhs);\n    rhs = ConstraintExpression.fromLike(rhs);\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromLike(strength);\n    }\n    const constraint = new Constraint(this, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  }\n\n  /** @internal */\n  readonly constraints: ReadonlySet<Constraint> | null;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean {\n    const constraints = this.constraints;\n    return constraints !== null && constraints.has(constraint);\n  }\n\n  /** @override */\n  addConstraint(constraint: Constraint): void {\n    let constraints = this.constraints as Set<Constraint> | null;\n    if (constraints === null) {\n      constraints = new Set<Constraint>();\n      (this as Mutable<this>).constraints = constraints;\n    } else if (constraints.has(constraint)) {\n      return;\n    }\n    constraints.add(constraint);\n    this.activateConstraint(constraint);\n  }\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void {\n    const constraints = this.constraints as Set<Constraint> | null;\n    if (constraints === null || !constraints.has(constraint)) {\n      return;\n    }\n    this.deactivateConstraint(constraint);\n    constraints.delete(constraint);\n  }\n\n  /** @internal @override */\n  activateConstraint(constraint: Constraint): void {\n    const solverService = this.solver.service;\n    if (solverService === null) {\n      return;\n    }\n    solverService.activateConstraint(constraint);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @internal @override */\n  deactivateConstraint(constraint: Constraint): void {\n    const solverService = this.solver.service;\n    if (solverService === null) {\n      return;\n    }\n    solverService.deactivateConstraint(constraint);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<unknown, number> {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (strength !== void 0) {\n      strength = ConstraintStrength.fromLike(strength);\n    } else {\n      strength = ConstraintStrength.Strong;\n    }\n    const property = ConstraintProperty.create(this) as ConstraintProperty<unknown, number>;\n    Object.defineProperty(property, \"name\", {\n      value: name,\n      configurable: true,\n    });\n    if (value !== void 0) {\n      property.set(value);\n    }\n    property.setStrength(strength);\n    property.mount();\n    return property;\n  }\n\n  /** @internal */\n  readonly constraintVariables: ReadonlySet<ConstraintVariable> | null;\n\n  /** @override */\n  hasConstraintVariable(constraintVariable: ConstraintVariable): boolean {\n    const constraintVariables = this.constraintVariables;\n    return constraintVariables !== null && constraintVariables.has(constraintVariable);\n  }\n\n  /** @override */\n  addConstraintVariable(constraintVariable: ConstraintVariable): void {\n    let constraintVariables = this.constraintVariables as Set<ConstraintVariable> | null;\n    if (constraintVariables === null) {\n      constraintVariables = new Set<ConstraintVariable>();\n      (this as Mutable<this>).constraintVariables = constraintVariables;\n    } else if (constraintVariables.has(constraintVariable)) {\n      return;\n    }\n    constraintVariables.add(constraintVariable);\n    this.activateConstraintVariable(constraintVariable);\n  }\n\n  /** @override */\n  removeConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const constraintVariables = this.constraintVariables as Set<ConstraintVariable> | null;\n    if (constraintVariables === null || !constraintVariables.has(constraintVariable)) {\n      return;\n    }\n    this.deactivateConstraintVariable(constraintVariable);\n    constraintVariables.delete(constraintVariable);\n  }\n\n  /** @internal @override */\n  activateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const solverService = this.solver.service;\n    if (solverService === null) {\n      return;\n    }\n    solverService.activateConstraintVariable(constraintVariable);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @internal @override */\n  deactivateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const solverService = this.solver.service;\n    if (solverService === null) {\n      return;\n    }\n    solverService.deactivateConstraintVariable(constraintVariable);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, value: number): void {\n    const solverService = Provider.tryService(this, \"solver\");\n    if (solverService === null) {\n      return;\n    }\n    solverService.setConstraintVariable(constraintVariable, value);\n  }\n\n  /** @internal */\n  evaluateConstraintVariables(): void {\n    const constraintVariables = this.constraintVariables;\n    if (constraintVariables === null) {\n      return;\n    }\n    for (const constraintVariable of constraintVariables) {\n      constraintVariable.evaluateConstraintVariable();\n    }\n  }\n\n  /** @internal */\n  protected activateLayout(): void {\n    const constraints = this.constraints;\n    if (constraints === null) {\n      return;\n    }\n    const solverService = this.solver.service;\n    if (solverService === null || constraints === null) {\n      return;\n    }\n    for (const constraint of constraints) {\n      solverService.activateConstraint(constraint);\n    }\n  }\n\n  /** @internal */\n  protected deactivateLayout(): void {\n    const constraints = this.constraints;\n    if (constraints === null) {\n      return;\n    }\n    const solverService = this.solver.service;\n    if (solverService === null) {\n      return;\n    }\n    for (const constraint of constraints) {\n      solverService.deactivateConstraint(constraint);\n    }\n  }\n\n  get layoutViewport(): LayoutViewport {\n    return this.viewport.getService().layoutViewport.value;\n  }\n\n  get visualViewport(): VisualViewport {\n    return this.viewport.getService().visualViewport.value;\n  }\n\n  get viewIdiom(): ViewIdiom {\n    return this.viewport.getService().viewIdiom.value;\n  }\n\n  @Property({\n    valueType: ViewInsets,\n    value: ViewInsets.zero(),\n    inherits: true,\n    get updateFlags(): ViewFlags {\n      return View.NeedsResize | View.NeedsScroll | View.NeedsLayout;\n    },\n    equalValues: ViewInsets.equal,\n  })\n  get edgeInsets(): Property<this, ViewInsets> {\n    return Property.getter();\n  }\n\n  /**\n   * Returns the transformation from the parent view coordinates to view\n   * coordinates.\n   */\n  get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  /**\n   * Returns the transformation from page coordinates to view coordinates.\n   */\n  get pageTransform(): Transform {\n    const parent = this.parent;\n    if (parent !== null) {\n      return parent.pageTransform.transform(this.parentTransform);\n    } else {\n      return Transform.identity();\n    }\n  }\n\n  get pageBounds(): R2Box {\n    const clientBounds = this.clientBounds;\n    const clientTransform = this.clientTransform;\n    return clientBounds.transform(clientTransform);\n  }\n\n  /**\n   * Returns the bounding box, in page coordinates, the edges to which attached\n   * popovers should point.\n   */\n  get popoverFrame(): R2Box {\n    return this.pageBounds;\n  }\n\n  /**\n   * Returns the transformation from viewport coordinates to view coordinates.\n   */\n  get clientTransform(): Transform {\n    let clientTransform: Transform;\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    if (scrollX !== 0 || scrollY !== 0) {\n      clientTransform = Transform.translate(scrollX, scrollY);\n    } else {\n      clientTransform = Transform.identity();\n    }\n    const pageTransform = this.pageTransform;\n    return clientTransform.transform(pageTransform);\n  }\n\n  get clientBounds(): R2Box {\n    return R2Box.undefined();\n  }\n\n  intersectsViewport(): boolean {\n    const bounds = this.clientBounds;\n    const viewportWidth = document.documentElement.clientWidth;\n    const viewportHeight = document.documentElement.clientHeight;\n    return (bounds.top <= 0 && 0 < bounds.bottom || 0 <= bounds.top && bounds.top < viewportHeight)\n        && (bounds.left <= 0 && 0 < bounds.right || 0 <= bounds.left && bounds.left < viewportWidth);\n  }\n\n  dispatchEvent(event: Event): boolean {\n    return true; // nop\n  }\n\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    // nop\n  }\n\n  removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    // nop\n  }\n\n  protected override onObserve(observer: Observes<this>): void {\n    super.onObserve(observer);\n    if (observer.viewWillAttachParent !== void 0) {\n      if (this.willAttachParentObservers === null) {\n        this.willAttachParentObservers = new Set();\n      }\n      this.willAttachParentObservers.add(observer as Required<Pick<ViewObserver, \"viewWillAttachParent\">>);\n    }\n    if (observer.viewDidAttachParent !== void 0) {\n      if (this.didAttachParentObservers === null) {\n        this.didAttachParentObservers = new Set();\n      }\n      this.didAttachParentObservers.add(observer as Required<Pick<ViewObserver, \"viewDidAttachParent\">>);\n    }\n    if (observer.viewWillDetachParent !== void 0) {\n      if (this.willDetachParentObservers === null) {\n        this.willDetachParentObservers = new Set();\n      }\n      this.willDetachParentObservers.add(observer as Required<Pick<ViewObserver, \"viewWillDetachParent\">>);\n    }\n    if (observer.viewDidDetachParent !== void 0) {\n      if (this.didDetachParentObservers === null) {\n        this.didDetachParentObservers = new Set();\n      }\n      this.didDetachParentObservers.add(observer as Required<Pick<ViewObserver, \"viewDidDetachParent\">>);\n    }\n    if (observer.viewWillInsertChild !== void 0) {\n      if (this.willInsertChildObservers === null) {\n        this.willInsertChildObservers = new Set();\n      }\n      this.willInsertChildObservers.add(observer as Required<Pick<ViewObserver, \"viewWillInsertChild\">>);\n    }\n    if (observer.viewDidInsertChild !== void 0) {\n      if (this.didInsertChildObservers === null) {\n        this.didInsertChildObservers = new Set();\n      }\n      this.didInsertChildObservers.add(observer as Required<Pick<ViewObserver, \"viewDidInsertChild\">>);\n    }\n    if (observer.viewWillRemoveChild !== void 0) {\n      if (this.willRemoveChildObservers === null) {\n        this.willRemoveChildObservers = new Set();\n      }\n      this.willRemoveChildObservers.add(observer as Required<Pick<ViewObserver, \"viewWillRemoveChild\">>);\n    }\n    if (observer.viewDidRemoveChild !== void 0) {\n      if (this.didRemoveChildObservers === null) {\n        this.didRemoveChildObservers = new Set();\n      }\n      this.didRemoveChildObservers.add(observer as Required<Pick<ViewObserver, \"viewDidRemoveChild\">>);\n    }\n    if (observer.viewWillMount !== void 0) {\n      if (this.willMountObservers === null) {\n        this.willMountObservers = new Set();\n      }\n      this.willMountObservers.add(observer as Required<Pick<ViewObserver, \"viewWillMount\">>);\n    }\n    if (observer.viewDidMount !== void 0) {\n      if (this.didMountObservers === null) {\n        this.didMountObservers = new Set();\n      }\n      this.didMountObservers.add(observer as Required<Pick<ViewObserver, \"viewDidMount\">>);\n    }\n    if (observer.viewWillUnmount !== void 0) {\n      if (this.willUnmountObservers === null) {\n        this.willUnmountObservers = new Set();\n      }\n      this.willUnmountObservers.add(observer as Required<Pick<ViewObserver, \"viewWillUnmount\">>);\n    }\n    if (observer.viewDidUnmount !== void 0) {\n      if (this.didUnmountObservers === null) {\n        this.didUnmountObservers = new Set();\n      }\n      this.didUnmountObservers.add(observer as Required<Pick<ViewObserver, \"viewDidUnmount\">>);\n    }\n    if (observer.viewWillResize !== void 0) {\n      if (this.willResizeObservers === null) {\n        this.willResizeObservers = new Set();\n      }\n      this.willResizeObservers.add(observer as Required<Pick<ViewObserver, \"viewWillResize\">>);\n    }\n    if (observer.viewDidResize !== void 0) {\n      if (this.didResizeObservers === null) {\n        this.didResizeObservers = new Set();\n      }\n      this.didResizeObservers.add(observer as Required<Pick<ViewObserver, \"viewDidResize\">>);\n    }\n    if (observer.viewWillScroll !== void 0) {\n      if (this.willScrollObservers === null) {\n        this.willScrollObservers = new Set();\n      }\n      this.willScrollObservers.add(observer as Required<Pick<ViewObserver, \"viewWillScroll\">>);\n    }\n    if (observer.viewDidScroll !== void 0) {\n      if (this.didScrollObservers === null) {\n        this.didScrollObservers = new Set();\n      }\n      this.didScrollObservers.add(observer as Required<Pick<ViewObserver, \"viewDidScroll\">>);\n    }\n    if (observer.viewWillChange !== void 0) {\n      if (this.willChangeObservers === null) {\n        this.willChangeObservers = new Set();\n      }\n      this.willChangeObservers.add(observer as Required<Pick<ViewObserver, \"viewWillChange\">>);\n    }\n    if (observer.viewDidChange !== void 0) {\n      if (this.didChangeObservers === null) {\n        this.didChangeObservers = new Set();\n      }\n      this.didChangeObservers.add(observer as Required<Pick<ViewObserver, \"viewDidChange\">>);\n    }\n    if (observer.viewWillAnimate !== void 0) {\n      if (this.willAnimateObservers === null) {\n        this.willAnimateObservers = new Set();\n      }\n      this.willAnimateObservers.add(observer as Required<Pick<ViewObserver, \"viewWillAnimate\">>);\n    }\n    if (observer.viewDidAnimate !== void 0) {\n      if (this.didAnimateObservers === null) {\n        this.didAnimateObservers = new Set();\n      }\n      this.didAnimateObservers.add(observer as Required<Pick<ViewObserver, \"viewDidAnimate\">>);\n    }\n    if (observer.viewWillProject !== void 0) {\n      if (this.willProjectObservers === null) {\n        this.willProjectObservers = new Set();\n      }\n      this.willProjectObservers.add(observer as Required<Pick<ViewObserver, \"viewWillProject\">>);\n    }\n    if (observer.viewDidProject !== void 0) {\n      if (this.didProjectObservers === null) {\n        this.didProjectObservers = new Set();\n      }\n      this.didProjectObservers.add(observer as Required<Pick<ViewObserver, \"viewDidProject\">>);\n    }\n    if (observer.viewWillLayout !== void 0) {\n      if (this.willLayoutObservers === null) {\n        this.willLayoutObservers = new Set();\n      }\n      this.willLayoutObservers.add(observer as Required<Pick<ViewObserver, \"viewWillLayout\">>);\n    }\n    if (observer.viewDidLayout !== void 0) {\n      if (this.didLayoutObservers === null) {\n        this.didLayoutObservers = new Set();\n      }\n      this.didLayoutObservers.add(observer as Required<Pick<ViewObserver, \"viewDidLayout\">>);\n    }\n    if (observer.viewWillRender !== void 0) {\n      if (this.willRenderObservers === null) {\n        this.willRenderObservers = new Set();\n      }\n      this.willRenderObservers.add(observer as Required<Pick<ViewObserver, \"viewWillRender\">>);\n    }\n    if (observer.viewDidRender !== void 0) {\n      if (this.didRenderObservers === null) {\n        this.didRenderObservers = new Set();\n      }\n      this.didRenderObservers.add(observer as Required<Pick<ViewObserver, \"viewDidRender\">>);\n    }\n    if (observer.viewWillRasterize !== void 0) {\n      if (this.willRasterizeObservers === null) {\n        this.willRasterizeObservers = new Set();\n      }\n      this.willRasterizeObservers.add(observer as Required<Pick<ViewObserver, \"viewWillRasterize\">>);\n    }\n    if (observer.viewDidRasterize !== void 0) {\n      if (this.didRasterizeObservers === null) {\n        this.didRasterizeObservers = new Set();\n      }\n      this.didRasterizeObservers.add(observer as Required<Pick<ViewObserver, \"viewDidRasterize\">>);\n    }\n    if (observer.viewWillComposite !== void 0) {\n      if (this.willCompositeObservers === null) {\n        this.willCompositeObservers = new Set();\n      }\n      this.willCompositeObservers.add(observer as Required<Pick<ViewObserver, \"viewWillComposite\">>);\n    }\n    if (observer.viewDidComposite !== void 0) {\n      if (this.didCompositeObservers === null) {\n        this.didCompositeObservers = new Set();\n      }\n      this.didCompositeObservers.add(observer as Required<Pick<ViewObserver, \"viewDidComposite\">>);\n    }\n  }\n\n  protected override onUnobserve(observer: Observes<this>): void {\n    super.onUnobserve(observer);\n    if (observer.viewWillAttachParent !== void 0 && this.willAttachParentObservers !== null) {\n      this.willAttachParentObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillAttachParent\">>);\n    }\n    if (observer.viewDidAttachParent !== void 0 && this.didAttachParentObservers !== null) {\n      this.didAttachParentObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidAttachParent\">>);\n    }\n    if (observer.viewWillDetachParent !== void 0 && this.willDetachParentObservers !== null) {\n      this.willDetachParentObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillDetachParent\">>);\n    }\n    if (observer.viewDidDetachParent !== void 0 && this.didDetachParentObservers !== null) {\n      this.didDetachParentObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidDetachParent\">>);\n    }\n    if (observer.viewWillInsertChild !== void 0 && this.willInsertChildObservers !== null) {\n      this.willInsertChildObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillInsertChild\">>);\n    }\n    if (observer.viewDidInsertChild !== void 0 && this.didInsertChildObservers !== null) {\n      this.didInsertChildObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidInsertChild\">>);\n    }\n    if (observer.viewWillRemoveChild !== void 0 && this.willRemoveChildObservers !== null) {\n      this.willRemoveChildObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillRemoveChild\">>);\n    }\n    if (observer.viewDidRemoveChild !== void 0 && this.didRemoveChildObservers !== null) {\n      this.didRemoveChildObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidRemoveChild\">>);\n    }\n    if (observer.viewWillMount !== void 0 && this.willMountObservers !== null) {\n      this.willMountObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillMount\">>);\n    }\n    if (observer.viewDidMount !== void 0 && this.didMountObservers !== null) {\n      this.didMountObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidMount\">>);\n    }\n    if (observer.viewWillUnmount !== void 0 && this.willUnmountObservers !== null) {\n      this.willUnmountObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillUnmount\">>);\n    }\n    if (observer.viewDidUnmount !== void 0 && this.didUnmountObservers !== null) {\n      this.didUnmountObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidUnmount\">>);\n    }\n    if (observer.viewWillResize !== void 0 && this.willResizeObservers !== null) {\n      this.willResizeObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillResize\">>);\n    }\n    if (observer.viewDidResize !== void 0 && this.didResizeObservers !== null) {\n      this.didResizeObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidResize\">>);\n    }\n    if (observer.viewWillScroll !== void 0 && this.willScrollObservers !== null) {\n      this.willScrollObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillScroll\">>);\n    }\n    if (observer.viewDidScroll !== void 0 && this.didScrollObservers !== null) {\n      this.didScrollObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidScroll\">>);\n    }\n    if (observer.viewWillChange !== void 0 && this.willChangeObservers !== null) {\n      this.willChangeObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillChange\">>);\n    }\n    if (observer.viewDidChange !== void 0 && this.didChangeObservers !== null) {\n      this.didChangeObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidChange\">>);\n    }\n    if (observer.viewWillAnimate !== void 0 && this.willAnimateObservers !== null) {\n      this.willAnimateObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillAnimate\">>);\n    }\n    if (observer.viewDidAnimate !== void 0 && this.didAnimateObservers !== null) {\n      this.didAnimateObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidAnimate\">>);\n    }\n    if (observer.viewWillProject !== void 0 && this.willProjectObservers !== null) {\n      this.willProjectObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillProject\">>);\n    }\n    if (observer.viewDidProject !== void 0 && this.didProjectObservers !== null) {\n      this.didProjectObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidProject\">>);\n    }\n    if (observer.viewWillLayout !== void 0 && this.willLayoutObservers !== null) {\n      this.willLayoutObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillLayout\">>);\n    }\n    if (observer.viewDidLayout !== void 0 && this.didLayoutObservers !== null) {\n      this.didLayoutObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidLayout\">>);\n    }\n    if (observer.viewWillRender !== void 0 && this.willRenderObservers !== null) {\n      this.willRenderObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillRender\">>);\n    }\n    if (observer.viewDidRender !== void 0 && this.didRenderObservers !== null) {\n      this.didRenderObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidRender\">>);\n    }\n    if (observer.viewWillRasterize !== void 0 && this.willRasterizeObservers !== null) {\n      this.willRasterizeObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillRasterize\">>);\n    }\n    if (observer.viewDidRasterize !== void 0 && this.didRasterizeObservers !== null) {\n      this.didRasterizeObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidRasterize\">>);\n    }\n    if (observer.viewWillComposite !== void 0 && this.willCompositeObservers !== null) {\n      this.willCompositeObservers.delete(observer as Required<Pick<ViewObserver, \"viewWillComposite\">>);\n    }\n    if (observer.viewDidComposite !== void 0 && this.didCompositeObservers !== null) {\n      this.didCompositeObservers.delete(observer as Required<Pick<ViewObserver, \"viewDidComposite\">>);\n    }\n  }\n\n  /** @internal */\n  static override uid: () => string = (function () {\n    let nextId = 1;\n    return function uid(): string {\n      const id = ~~nextId;\n      nextId += 1;\n      return \"view\" + id;\n    };\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ViewFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly InsertingFlag: ViewFlags = Component.InsertingFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ViewFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly ProcessingFlag: ViewFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly DisplayingFlag: ViewFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly CullFlag: ViewFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly CulledFlag: ViewFlags = 1 << (Component.FlagShift + 3);\n  /** @internal */\n  static readonly HideFlag: ViewFlags = 1 << (Component.FlagShift + 4);\n  /** @internal */\n  static readonly HiddenFlag: ViewFlags = 1 << (Component.FlagShift + 5);\n  /** @internal */\n  static readonly UnboundedFlag: ViewFlags = 1 << (Component.FlagShift + 6);\n  /** @internal */\n  static readonly IntangibleFlag: ViewFlags = 1 << (Component.FlagShift + 7);\n  /** @internal */\n  static readonly CulledMask: ViewFlags = this.CullFlag\n                                        | this.CulledFlag;\n  /** @internal */\n  static readonly HiddenMask: ViewFlags = this.HideFlag\n                                        | this.HiddenFlag;\n  /** @internal */\n  static readonly UpdatingMask: ViewFlags = this.ProcessingFlag\n                                          | this.DisplayingFlag;\n  /** @internal */\n  static readonly StatusMask: ViewFlags = this.MountedFlag\n                                        | this.InsertingFlag\n                                        | this.RemovingFlag\n                                        | this.ProcessingFlag\n                                        | this.DisplayingFlag\n                                        | this.CullFlag\n                                        | this.CulledFlag\n                                        | this.HiddenFlag\n                                        | this.UnboundedFlag\n                                        | this.IntangibleFlag;\n\n  static readonly NeedsProcess: ViewFlags = 1 << (Component.FlagShift + 8);\n  static readonly NeedsResize: ViewFlags = 1 << (Component.FlagShift + 9);\n  static readonly NeedsScroll: ViewFlags = 1 << (Component.FlagShift + 10);\n  static readonly NeedsChange: ViewFlags = 1 << (Component.FlagShift + 11);\n  static readonly NeedsAnimate: ViewFlags = 1 << (Component.FlagShift + 12);\n  static readonly NeedsProject: ViewFlags = 1 << (Component.FlagShift + 13);\n  /** @internal */\n  static readonly ProcessMask: ViewFlags = this.NeedsProcess\n                                         | this.NeedsResize\n                                         | this.NeedsScroll\n                                         | this.NeedsChange\n                                         | this.NeedsAnimate\n                                         | this.NeedsProject;\n\n  static readonly NeedsDisplay: ViewFlags = 1 << (Component.FlagShift + 14);\n  static readonly NeedsLayout: ViewFlags = 1 << (Component.FlagShift + 15);\n  static readonly NeedsRender: ViewFlags = 1 << (Component.FlagShift + 16);\n  static readonly NeedsRasterize: ViewFlags = 1 << (Component.FlagShift + 17);\n  static readonly NeedsComposite: ViewFlags = 1 << (Component.FlagShift + 18);\n  /** @internal */\n  static readonly DisplayMask: ViewFlags = this.NeedsDisplay\n                                         | this.NeedsLayout\n                                         | this.NeedsRender\n                                         | this.NeedsRasterize\n                                         | this.NeedsComposite;\n\n  /** @internal */\n  static readonly UpdateMask: ViewFlags = this.ProcessMask\n                                        | this.DisplayMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 19;\n  /** @internal */\n  static override readonly FlagMask: ViewFlags = (1 << this.FlagShift) - 1;\n\n  static override readonly MountFlags: ViewFlags = Component.MountFlags | this.NeedsResize | this.NeedsChange | this.NeedsLayout;\n  static readonly UncullFlags: ViewFlags = this.NeedsResize | this.NeedsChange | this.NeedsLayout;\n  static readonly UnhideFlags: ViewFlags = this.NeedsLayout;\n  static override readonly InsertChildFlags: ViewFlags = Component.InsertChildFlags | this.NeedsLayout;\n  static override readonly RemoveChildFlags: ViewFlags = Component.RemoveChildFlags | this.NeedsLayout;\n  static override readonly ReinsertChildFlags: ViewFlags = Component.InsertChildFlags | this.NeedsLayout;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {ViewFactory} from \"./View\";\nimport {View} from \"./View\";\n\n/** @public */\nexport interface ViewRelationDescriptor<R, V extends View> extends FastenerDescriptor<R> {\n  extends?: Proto<ViewRelation<any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface ViewRelationClass<F extends ViewRelation<any, any, any> = ViewRelation<any, any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface ViewRelation<R = any, V extends View = View, I extends any[] = [V | null]> extends Fastener<R, V | null, I> {\n  /** @override */\n  get descriptorType(): Proto<ViewRelationDescriptor<R, V>>;\n\n  /** @override */\n  get fastenerType(): Proto<ViewRelation<any, any, any>>;\n\n  get viewType(): ViewFactory<V> | null;\n\n  get observes(): boolean;\n\n  /** @override */\n  get parent(): ViewRelation<any, V, any> | null;\n\n  /** @internal */\n  readonly outlets: ReadonlySet<Fastener<any, any, any>> | null;\n\n  /** @internal @override */\n  attachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @override */\n  detachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @protected */\n  decohereOutlets(): void;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  get parentView(): View | null;\n\n  /** @protected */\n  insertChild(parent: View, child: V, target: View | null, key: string | undefined): void;\n\n  /** @internal */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  createView(): V;\n\n  fromLike(value: V | LikeType<V>): V;\n}\n\n/** @public */\nexport const ViewRelation = (<R, V extends View, I extends any[], F extends ViewRelation<any, any, any>>() => Fastener.extend<ViewRelation<R, V, I>, ViewRelationClass<F>>(\"ViewRelation\", {\n  get fastenerType(): Proto<ViewRelation<any, any, any>> {\n    return ViewRelation;\n  },\n\n  viewType: null,\n\n  observes: false,\n\n  attachOutlet(outlet: Fastener<any, any, any>): void {\n    let outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      outlets = new Set<Fastener<any, any, any>>();\n      (this as Mutable<typeof this>).outlets = outlets;\n    }\n    outlets.add(outlet);\n  },\n\n  detachOutlet(outlet: Fastener<any, any, any>): void {\n    const outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      return;\n    }\n    outlets.delete(outlet);\n  },\n\n  decohereOutlets(): void {\n    const outlets = this.outlets;\n    if (outlets !== null) {\n      for (const outlet of outlets) {\n        outlet.decohere(this);\n      }\n    }\n  },\n\n  initView(view: V): void {\n    // hook\n  },\n\n  willAttachView(view: V, target: View | null): void {\n    // hook\n  },\n\n  onAttachView(view: V, target: View | null): void {\n    if (this.observes) {\n      view.observe(this as Observes<V>);\n    }\n  },\n\n  didAttachView(view: V, target: View | null): void {\n    // hook\n  },\n\n  deinitView(view: V): void {\n    // hook\n  },\n\n  willDetachView(view: V): void {\n    // hook\n  },\n\n  onDetachView(view: V): void {\n    if (this.observes) {\n      view.unobserve(this as Observes<V>);\n    }\n  },\n\n  didDetachView(view: V): void {\n    // hook\n  },\n\n  get parentView(): View | null {\n    const owner = this.owner;\n    return owner instanceof View ? owner : null;\n  },\n\n  insertChild(parent: View, child: V, target: View | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  },\n\n  bindView(view: View, target: View | null): void {\n    // hook\n  },\n\n  unbindView(view: View): void {\n    // hook\n  },\n\n  detectView(view: View): V | null {\n    return null;\n  },\n\n  createView(): V {\n    let view: V | undefined;\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      view = viewType.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  },\n\n  fromLike(value: V | LikeType<V>): V {\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      return viewType.fromLike(value);\n    }\n    return View.fromLike(value) as V;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).outlets = null;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport {ConstraintExpression} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport {ConstraintProperty} from \"@swim/constraint\";\nimport type {ConstraintRelation} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport {ConstraintStrength} from \"@swim/constraint\";\nimport {Constraint} from \"@swim/constraint\";\nimport {ConstraintScope} from \"@swim/constraint\";\nimport {ConstraintContext} from \"@swim/constraint\";\nimport type {View} from \"./View\";\nimport type {ViewRelationDescriptor} from \"./ViewRelation\";\nimport type {ViewRelationClass} from \"./ViewRelation\";\nimport {ViewRelation} from \"./ViewRelation\";\n\n/** @public */\nexport interface ViewRefDescriptor<R, V extends View> extends ViewRelationDescriptor<R, V> {\n  extends?: Proto<ViewRef<any, any, any>> | boolean | null;\n  viewKey?: string | boolean;\n}\n\n/** @public */\nexport interface ViewRefClass<F extends ViewRef<any, any, any> = ViewRef<any, any, any>> extends ViewRelationClass<F> {\n  tryView<R, K extends keyof R, F extends R[K] = R[K]>(owner: R, fastenerName: K): (F extends {readonly view: infer V | null} ? V | null : never) | null;\n}\n\n/** @public */\nexport interface ViewRef<R = any, V extends View = View, I extends any[] = [V | null]> extends ViewRelation<R, V, I>, ConstraintScope, ConstraintContext {\n  /** @override */\n  get descriptorType(): Proto<ViewRefDescriptor<R, V>>;\n\n  /** @override */\n  get fastenerType(): Proto<ViewRef<any, any, any>>;\n\n  /** @override */\n  get parent(): ViewRef<any, V, any> | null;\n\n  get inletView(): V | null;\n\n  getInletView(): V;\n\n  get(): V | null;\n\n  set(view: V | LikeType<V> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(view: V | LikeType<V> | Fastener<any, I[0], any> | null): R;\n\n  get viewKey(): string | undefined;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(view: V | LikeType<V> | null, target?: View | null, key?: string): V | null;\n\n  attachView(view?: V | LikeType<V> | null, target?: View | null): V;\n\n  detachView(): V | null;\n\n  insertView(parent?: View | null, view?: V | LikeType<V>, target?: View | null, key?: string): V;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  /** @internal @override */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal @override */\n  unbindView(view: View): void;\n\n  /** @override */\n  detectView(view: View): V | null;\n\n  /** @override */\n  recohere(t: number): void;\n\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation, rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint;\n\n  /** @internal */\n  readonly constraints: ReadonlySet<Constraint> | null;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  activateConstraint(constraint: Constraint): void;\n\n  /** @override */\n  deactivateConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<any, number>;\n\n  /** @internal */\n  readonly constraintVariables: ReadonlySet<ConstraintVariable> | null;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  activateConstraintVariable(constraintVariable: ConstraintVariable): void;\n\n  /** @override */\n  deactivateConstraintVariable(constraintVariable: ConstraintVariable): void;\n\n  /** @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @internal @protected */\n  activateLayout(): void;\n\n  /** @internal @protected */\n  deactivateLayout(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const ViewRef = (<R, V extends View, I extends any[], F extends ViewRef<any, any, any>>() => ViewRelation.extend<ViewRef<R, V, I>, ViewRefClass<F>>(\"ViewRef\", {\n  get fastenerType(): Proto<ViewRef<any, any, any>> {\n    return ViewRef;\n  },\n\n  get inletView(): V | null {\n    const inlet = this.inlet;\n    return inlet instanceof ViewRef ? inlet.view : null;\n  },\n\n  getInletView(): V {\n    const inletView = this.inletView;\n    if (inletView === void 0 || inletView === null) {\n      let message = inletView + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"inlet view\";\n      throw new TypeError(message);\n    }\n    return inletView;\n  },\n\n  get(): V | null {\n    return this.view;\n  },\n\n  set(view: V | LikeType<V> | Fastener<any, I[0], any> | null): R {\n    if (view instanceof Fastener) {\n      this.bindInlet(view);\n    } else {\n      this.setView(view);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(view: V | LikeType<V> | Fastener<any, I[0], any> | null): R {\n    if (view instanceof Fastener) {\n      this.bindInlet(view);\n    } else {\n      this.setView(view);\n    }\n    return this.owner;\n  },\n\n  viewKey: void 0,\n\n  getView(): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  },\n\n  setView(newView: V | LikeType<V> | null, target?: View | null, key?: string): V | null {\n    if (newView !== null) {\n      newView = this.fromLike(newView);\n    }\n    let oldView = this.view;\n    if (oldView === newView) {\n      this.setCoherent(true);\n      return oldView;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let parent: View | null;\n    if (this.binds && (parent = this.parentView, parent !== null)) {\n      if (oldView !== null && oldView.parent === parent) {\n        if (target === null) {\n          target = oldView.nextSibling;\n        }\n        oldView.remove();\n      }\n      if (newView !== null) {\n        if (key === void 0) {\n          key = this.viewKey;\n        }\n        this.insertChild(parent, newView, target, key);\n      }\n      oldView = this.view;\n      if (oldView === newView) {\n        return oldView;\n      }\n    }\n    if (oldView !== null) {\n      this.deactivateLayout();\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    if (newView !== null) {\n      (this as Mutable<typeof this>).view = newView;\n      this.willAttachView(newView, target);\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldView;\n  },\n\n  attachView(newView?: V | LikeType<V> | null, target?: View | null): V {\n    const oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      this.deactivateLayout();\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newView;\n  },\n\n  detachView(): V | null {\n    const oldView = this.view;\n    if (oldView === null) {\n      return null;\n    }\n    this.deactivateLayout();\n    (this as Mutable<typeof this>).view = null;\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldView;\n  },\n\n  insertView(parent?: View | null, newView?: V | LikeType<V>, target?: View | null, key?: string): V {\n    let oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && oldView === newView && newView.parent !== null && parent === null && key === void 0) {\n      return newView;\n    }\n    if (parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.viewKey;\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      this.insertChild(parent, newView, target, key);\n    }\n    oldView = this.view;\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      this.deactivateLayout();\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n      if (this.binds && parent !== null && oldView.parent === parent) {\n        oldView.remove();\n      }\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newView;\n  },\n\n  removeView(): V | null {\n    const view = this.view;\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  deleteView(): V | null {\n    const view = this.detachView();\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  bindView(view: View, target: View | null): void {\n    if (!this.binds || this.view !== null) {\n      return;\n    }\n    const newView = this.detectView(view);\n    if (newView === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindView(view: View): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldView = this.detectView(view);\n    if (oldView === null || this.view !== oldView) {\n      return;\n    }\n    this.deactivateLayout();\n    (this as Mutable<typeof this>).view = null;\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectView(view: View): V | null {\n    const key = this.viewKey;\n    if (key !== void 0 && key === view.key) {\n      return view as V;\n    }\n    return null;\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ViewRef) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setView(inlet.view);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation, rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    lhs = ConstraintExpression.fromLike(lhs);\n    rhs = ConstraintExpression.fromLike(rhs);\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromLike(strength);\n    }\n    const constraint = new Constraint(this.owner, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  },\n\n  hasConstraint(constraint: Constraint): boolean {\n    const constraints = this.constraints;\n    return constraints !== null && constraints.has(constraint);\n  },\n\n  addConstraint(constraint: Constraint): void {\n    let constraints = this.constraints as Set<Constraint> | null;\n    if (constraints === null) {\n      constraints = new Set<Constraint>();\n      (this as Mutable<typeof this>).constraints = constraints;\n    } else if (constraints.has(constraint)) {\n      return;\n    }\n    constraints.add(constraint);\n    this.activateConstraint(constraint);\n  },\n\n  removeConstraint(constraint: Constraint): void {\n    const constraints = this.constraints as Set<Constraint> | null;\n    if (constraints === null || !constraints.has(constraint)) {\n      return;\n    }\n    this.deactivateConstraint(constraint);\n    constraints.delete(constraint);\n  },\n\n  activateConstraint(constraint: Constraint): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint context\");\n    }\n    this.owner.activateConstraint(constraint);\n  },\n\n  deactivateConstraint(constraint: Constraint): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint context\");\n    }\n    this.owner.deactivateConstraint(constraint);\n  },\n\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<unknown, number> {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (strength !== void 0) {\n      strength = ConstraintStrength.fromLike(strength);\n    } else {\n      strength = ConstraintStrength.Strong;\n    }\n    const property = ConstraintProperty.create(this) as ConstraintProperty<unknown, number>;\n    Object.defineProperty(property, \"name\", {\n      value: name,\n      enumerable: true,\n      configurable: true,\n    });\n    if (value !== void 0) {\n      property.set(value);\n    }\n    property.setStrength(strength);\n    property.mount();\n    return property;\n  },\n\n  hasConstraintVariable(constraintVariable: ConstraintVariable): boolean {\n    const constraintVariables = this.constraintVariables;\n    return constraintVariables !== null && constraintVariables.has(constraintVariable);\n  },\n\n  addConstraintVariable(constraintVariable: ConstraintVariable): void {\n    let constraintVariables = this.constraintVariables as Set<ConstraintVariable> | null;\n    if (constraintVariables === null) {\n      constraintVariables = new Set<ConstraintVariable>();\n      (this as Mutable<typeof this>).constraintVariables = constraintVariables;\n    } else if (constraintVariables.has(constraintVariable)) {\n      return;\n    }\n    constraintVariables.add(constraintVariable);\n    this.activateConstraintVariable(constraintVariable);\n  },\n\n  removeConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const constraintVariables = this.constraintVariables as Set<ConstraintVariable> | null;\n    if (constraintVariables === null || !constraintVariables.has(constraintVariable)) {\n      return;\n    }\n    this.deactivateConstraintVariable(constraintVariable);\n    constraintVariables.delete(constraintVariable);\n  },\n\n  activateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint context\");\n    }\n    this.owner.activateConstraintVariable(constraintVariable);\n  },\n\n  deactivateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint context\");\n    }\n    this.owner.deactivateConstraintVariable(constraintVariable);\n  },\n\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint context\");\n    }\n    this.owner.setConstraintVariable(constraintVariable, state);\n  },\n\n  activateLayout(): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      return;\n    }\n    const constraintVariables = this.constraintVariables;\n    if (constraintVariables !== null) {\n      for (const constraintVariable of constraintVariables) {\n        this.owner.activateConstraintVariable(constraintVariable);\n      }\n    }\n    const constraints = this.constraints;\n    if (constraints !== null) {\n      for (const constraint of constraints) {\n        this.owner.activateConstraint(constraint);\n      }\n    }\n  },\n\n  deactivateLayout(): void {\n    if (!ConstraintContext[Symbol.hasInstance](this.owner)) {\n      return;\n    }\n    const constraints = this.constraints;\n    if (constraints !== null) {\n      for (const constraint of constraints) {\n        this.owner.deactivateConstraint(constraint);\n      }\n    }\n    const constraintVariables = this.constraintVariables;\n    if (constraintVariables !== null) {\n      for (const constraintVariable of constraintVariables) {\n        this.owner.deactivateConstraintVariable(constraintVariable);\n      }\n    }\n  },\n\n  onMount(): void {\n    super.onMount();\n    this.activateLayout();\n  },\n\n  onUnmount(): void {\n    this.deactivateLayout();\n    super.onUnmount();\n  },\n},\n{\n  tryView<R, K extends keyof R, F extends R[K]>(owner: R, fastenerName: K): (F extends {readonly view: infer V | null} ? V | null : never) | null {\n    const metaclass = FastenerContextMetaclass.get(owner);\n    const viewRef = metaclass !== null ? metaclass.tryFastener(owner, fastenerName) : null;\n    return viewRef instanceof ViewRef ? viewRef.view : null;\n  },\n\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).constraints = null;\n    (fastener as Mutable<typeof fastener>).constraintVariables = null;\n    (fastener as Mutable<typeof fastener>).view = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ViewRef<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const viewKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"viewKey\");\n    if (viewKeyDescriptor !== void 0 && \"value\" in viewKeyDescriptor) {\n      if (viewKeyDescriptor.value === true) {\n        viewKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      } else if (viewKeyDescriptor.value === false) {\n        viewKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {View} from \"./View\";\nimport type {ViewRelationDescriptor} from \"./ViewRelation\";\nimport type {ViewRelationClass} from \"./ViewRelation\";\nimport {ViewRelation} from \"./ViewRelation\";\n\n/** @public */\nexport interface ViewSetDescriptor<R, V extends View> extends ViewRelationDescriptor<R, V> {\n  extends?: Proto<ViewSet<any, any, any>> | boolean | null;\n  ordered?: boolean;\n  sorted?: boolean;\n}\n\n/** @public */\nexport interface ViewSetClass<F extends ViewSet<any, any, any> = ViewSet<any, any, any>> extends ViewRelationClass<F> {\n  /** @internal */\n  readonly OrderedFlag: FastenerFlags;\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ViewSet<R = any, V extends View = View, I extends any[] = [V | null]> extends ViewRelation<R, V, I> {\n  /** @override */\n  get descriptorType(): Proto<ViewSetDescriptor<R, V>>;\n\n  /** @override */\n  get fastenerType(): Proto<ViewSet<any, any, any>>;\n\n  /** @override */\n  get parent(): ViewSet<any, V, any> | null;\n\n  /** @protected */\n  viewKey(view: V): string | undefined;\n\n  /** @internal */\n  readonly views: {readonly [viewId: string]: V | undefined};\n\n  readonly viewCount: number;\n\n  /** @internal */\n  insertViewMap(newView: V, target: View | null): void;\n\n  /** @internal */\n  removeViewMap(oldView: V): void;\n\n  hasView(view: View): boolean;\n\n  addView(view?: V | LikeType<V>, target?: View | null, key?: string): V;\n\n  addViews(views: {readonly [viewId: string]: V | undefined}, target?: View | null): void;\n\n  setViews(views: {readonly [viewId: string]: V | undefined}, target?: View | null): void;\n\n  attachView(view?: V | LikeType<V> | null, target?: View | null): V;\n\n  attachViews(views: {readonly [viewId: string]: V | undefined}, target?: View | null): void;\n\n  detachView(view: V): V | null;\n\n  detachViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  insertView(parent?: View | null, view?: V | LikeType<V>, target?: View | null, key?: string): V;\n\n  insertViews(parent: View | null, views: {readonly [viewId: string]: V | undefined}, target?: View | null): void;\n\n  removeView(view: V): V | null;\n\n  removeViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  deleteView(view: V): V | null;\n\n  deleteViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  reinsertView(view: V, target?: View | null): void;\n\n  /** @internal @override */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal @override */\n  unbindView(view: View): void;\n\n  /** @override */\n  detectView(view: View): V | null;\n\n  /** @override */\n  recohere(t: number): void;\n\n  get ordered(): boolean;\n\n  order(ordered?: boolean): this;\n\n  get sorted(): boolean;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: View | null): void;\n\n  /** @protected */\n  onSort(parent: View | null): void;\n\n  /** @protected */\n  didSort(parent: View | null): void;\n\n  /** @internal */\n  sortChildren(parent: View, comparator?: Comparator<V>): void;\n\n  /** @internal */\n  getTargetChild(parent: View, child: V): View | null;\n\n  /** @internal */\n  compareChildren(a: View, b: View): number;\n\n  /** @internal */\n  compareTargetChild(a: View, b: View): number;\n\n  /** @protected */\n  compare(a: V, b: V): number;\n}\n\n/** @public */\nexport const ViewSet = (<R, V extends View, I extends any[], F extends ViewSet<any, any, any>>() => ViewRelation.extend<ViewSet<R, V, I>, ViewSetClass<F>>(\"ViewSet\", {\n  get fastenerType(): Proto<ViewSet<any, any, any>> {\n    return ViewSet;\n  },\n\n  viewKey(view: V): string | undefined {\n    return void 0;\n  },\n\n  insertViewMap(newView: V, target: View | null): void {\n    const views = this.views as {[viewId: string]: V | undefined};\n    if (target !== null && (this.flags & ViewSet.OrderedFlag) !== 0) {\n      (this as Mutable<typeof this>).views = Objects.inserted(views, newView.uid, newView, target);\n    } else {\n      views[newView.uid] = newView;\n    }\n  },\n\n  removeViewMap(oldView: V): void {\n    const views = this.views as {[viewId: string]: V | undefined};\n    delete views[oldView.uid];\n  },\n\n  hasView(view: View): boolean {\n    return this.views[view.uid] !== void 0;\n  },\n\n  addView(newView?: V | LikeType<V>, target?: View | null, key?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: View | null;\n    if (this.binds && (parent = this.parentView, parent !== null)) {\n      if (target === null) {\n        if (newView.parent === parent) {\n          target = newView.nextSibling;\n        } else {\n          target = this.getTargetChild(parent, newView);\n        }\n      }\n      if (key === void 0) {\n        key = this.viewKey(newView);\n      }\n      if (newView.parent !== parent || newView.nextSibling !== target || newView.key !== key) {\n        this.insertChild(parent, newView, target, key);\n      }\n    }\n    if (this.views[newView.uid] !== void 0) {\n      return newView;\n    }\n    this.insertViewMap(newView, target);\n    (this as Mutable<typeof this>).viewCount += 1;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newView;\n  },\n\n  addViews(newViews: {readonly [viewId: string]: V | undefined}, target?: View | null): void {\n    for (const viewId in newViews) {\n      this.addView(newViews[viewId]!, target);\n    }\n  },\n\n  setViews(newViews: {readonly [viewId: string]: V | undefined}, target?: View | null): void {\n    const binds = this.binds;\n    const parent = binds ? this.parentView : null;\n    const views = this.views;\n    for (const viewId in views) {\n      if (newViews[viewId] === void 0) {\n        const oldView = this.detachView(views[viewId]!);\n        if (oldView !== null && binds && parent !== null && oldView.parent === parent) {\n          oldView.remove();\n        }\n      }\n    }\n    if ((this.flags & ViewSet.OrderedFlag) !== 0) {\n      const orderedViews = new Array<V>();\n      for (const viewId in newViews) {\n        orderedViews.push(newViews[viewId]!);\n      }\n      for (let i = 0, n = orderedViews.length; i < n; i += 1) {\n        const newView = orderedViews[i]!;\n        if (views[newView.uid] === void 0) {\n          const targetView = i < n + 1 ? orderedViews[i + 1] : target;\n          this.addView(newView, targetView);\n        }\n      }\n    } else {\n      for (const viewId in newViews) {\n        if (views[viewId] === void 0) {\n          this.addView(newViews[viewId]!, target);\n        }\n      }\n    }\n  },\n\n  attachView(newView?: V | LikeType<V> | null, target?: View | null): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    if (this.views[newView.uid] !== void 0) {\n      return newView;\n    } else if (target === void 0) {\n      target = null;\n    }\n    this.insertViewMap(newView, target);\n    (this as Mutable<typeof this>).viewCount += 1;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newView;\n  },\n\n  attachViews(newViews: {readonly [viewId: string]: V | undefined}, target?: View | null): void {\n    for (const viewId in newViews) {\n      this.attachView(newViews[viewId]!, target);\n    }\n  },\n\n  detachView(oldView: V): V | null {\n    if (this.views[oldView.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).viewCount -= 1;\n    this.removeViewMap(oldView);\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldView;\n  },\n\n  detachViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.detachView(views[viewId]!);\n    }\n  },\n\n  insertView(parent?: View | null, newView?: V | LikeType<V>, target?: View | null, key?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && this.views[newView.uid] !== void 0 && newView.parent !== null && parent === null && key === void 0) {\n      return newView;\n    }\n    if (parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.viewKey(newView);\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      if (target === null) {\n        target = this.getTargetChild(parent, newView);\n      }\n      this.insertChild(parent, newView, target, key);\n    }\n    if (this.views[newView.uid] !== void 0) {\n      return newView;\n    }\n    this.insertViewMap(newView, target);\n    (this as Mutable<typeof this>).viewCount += 1;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newView;\n  },\n\n  insertViews(parent: View | null, newViews: {readonly [viewId: string]: V | undefined}, target?: View | null): void {\n    for (const viewId in newViews) {\n      this.insertView(parent, newViews[viewId]!, target);\n    }\n  },\n\n  removeView(view: V): V | null {\n    if (!this.hasView(view)) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  removeViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.removeView(views[viewId]!);\n    }\n  },\n\n  deleteView(view: V): V | null {\n    const oldView = this.detachView(view);\n    if (oldView === null) {\n      return null;\n    }\n    oldView.remove();\n    return oldView;\n  },\n\n  deleteViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.deleteView(views[viewId]!);\n    }\n  },\n\n  reinsertView(view: V, target?: View | null): void {\n    if (this.views[view.uid] === void 0 || (target === void 0 && (this.flags & ViewSet.SortedFlag) === 0)) {\n      return;\n    }\n    const parent = view.parent;\n    if (parent === null) {\n      return;\n    } else if (target === void 0) {\n      target = this.getTargetChild(parent, view);\n    }\n    parent.reinsertChild(view, target);\n  },\n\n  bindView(view: View, target: View | null): void {\n    if (!this.binds) {\n      return;\n    }\n    const newView = this.detectView(view);\n    if (newView === null || this.views[newView.uid] !== void 0) {\n      return;\n    }\n    this.insertViewMap(newView, target);\n    (this as Mutable<typeof this>).viewCount += 1;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindView(view: View): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldView = this.detectView(view);\n    if (oldView === null || this.views[oldView.uid] === void 0) {\n      return;\n    }\n    (this as Mutable<typeof this>).viewCount -= 1;\n    this.removeViewMap(oldView);\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectView(view: View): V | null {\n    if (typeof this.viewType === \"function\" && view instanceof this.viewType) {\n      return view as V;\n    }\n    return null;\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ViewSet) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setViews(inlet.views);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  get ordered(): boolean {\n    return (this.flags & ViewSet.OrderedFlag) !== 0;\n  },\n\n  order(ordered?: boolean): typeof this {\n    if (ordered === void 0) {\n      ordered = true;\n    }\n    if (ordered) {\n      this.setFlags(this.flags | ViewSet.OrderedFlag);\n    } else {\n      this.setFlags(this.flags & ~ViewSet.OrderedFlag);\n    }\n    return this;\n  },\n\n  get sorted(): boolean {\n    return (this.flags & ViewSet.SortedFlag) !== 0;\n  },\n\n  sort(sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    if (sorted) {\n      const parent = this.parentView;\n      this.willSort(parent);\n      this.setFlags(this.flags | ViewSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else {\n      this.setFlags(this.flags & ~ViewSet.SortedFlag);\n    }\n    return this;\n  },\n\n  willSort(parent: View | null): void {\n    // hook\n  },\n\n  onSort(parent: View | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  },\n\n  didSort(parent: View | null): void {\n    // hook\n  },\n\n  sortChildren(parent: View, comparator?: Comparator<V>): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  },\n\n  getTargetChild(parent: View, child: V): View | null {\n    if ((this.flags & ViewSet.SortedFlag) !== 0) {\n      return parent.getTargetChild(child, this.compareTargetChild.bind(this));\n    }\n    return null;\n  },\n\n  compareChildren(a: View, b: View): number {\n    const views = this.views;\n    const x = views[a.uid];\n    const y = views[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    }\n    return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n  },\n\n  compareTargetChild(a: V, b: View): number {\n    const views = this.views;\n    const y = views[b.uid];\n    if (y !== void 0) {\n      return this.compare(a, y);\n    }\n    return y !== void 0 ? -1 : 0;\n  },\n\n  compare(a: V, b: V): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).views = {};\n    (fastener as Mutable<typeof fastener>).viewCount = 0;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ViewSet<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    let flagsInit = fastenerPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"ordered\")) {\n      if (fastenerPrototype.ordered) {\n        flagsInit |= ViewSet.OrderedFlag;\n      } else {\n        flagsInit &= ~ViewSet.OrderedFlag;\n      }\n      delete (fastenerPrototype as ViewSetDescriptor<any, any>).ordered;\n    }\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"sorted\")) {\n      if (fastenerPrototype.sorted) {\n        flagsInit |= ViewSet.SortedFlag;\n      } else {\n        flagsInit &= ~ViewSet.SortedFlag;\n      }\n      delete (fastenerPrototype as ViewSetDescriptor<any, any>).sorted;\n    }\n    Object.defineProperty(fastenerPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n  },\n\n  OrderedFlag: 1 << (ViewRelation.FlagShift + 0),\n  SortedFlag: 1 << (ViewRelation.FlagShift + 1),\n\n  FlagShift: ViewRelation.FlagShift + 2,\n  FlagMask: (1 << (ViewRelation.FlagShift + 2)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {View} from \"./View\";\n\n/** @public */\nexport type GestureInputType = \"mouse\" | \"wheel\" | \"touch\" | \"pen\" | \"unknown\";\n\n/** @public */\nexport class GestureInput {\n  readonly inputId: string;\n  inputType: GestureInputType;\n  isPrimary: boolean;\n\n  target: EventTarget | null;\n  button: number;\n  buttons: number;\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n\n  width: number;\n  height: number;\n  tiltX: number;\n  tiltY: number;\n  twist: number;\n  pressure: number;\n  tangentialPressure: number;\n\n  x0: number;\n  y0: number;\n  t0: number;\n  dx: number;\n  dy: number;\n  dt: number;\n  x: number;\n  y: number;\n  t: number;\n\n  detail: unknown;\n\n  defaultPrevented: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    this.inputId = inputId;\n    this.inputType = inputType;\n    this.isPrimary = isPrimary;\n\n    this.target = null;\n    this.button = 0;\n    this.buttons = 0;\n    this.altKey = false;\n    this.ctrlKey = false;\n    this.metaKey = false;\n    this.shiftKey = false;\n\n    this.width = 0;\n    this.height = 0;\n    this.tiltX = 0;\n    this.tiltY = 0;\n    this.twist = 0;\n    this.pressure = 0;\n    this.tangentialPressure = 0;\n\n    this.x0 = x;\n    this.y0 = y;\n    this.t0 = t;\n    this.dx = 0;\n    this.dy = 0;\n    this.dt = 0;\n    this.x = x;\n    this.y = y;\n    this.t = t;\n\n    this.detail = void 0;\n\n    this.defaultPrevented = false;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n  }\n\n  /** @internal */\n  static pointerInputType(inputType: string): GestureInputType {\n    if (inputType === \"mouse\" || inputType === \"touch\" || inputType === \"pen\") {\n      return inputType;\n    }\n    return \"unknown\";\n  }\n}\n\n/** @public */\nexport type GestureMethod = \"auto\" | \"pointer\" | \"touch\" | \"mouse\";\n\n/** @public */\nexport interface GestureDescriptor<R, V extends View> extends FastenerDescriptor<R> {\n  extends?: Proto<Gesture<any, any>> | boolean | null;\n  method?: GestureMethod;\n  viewKey?: string | boolean;\n  observes?: boolean;\n}\n\n/** @public */\nexport interface GestureClass<G extends Gesture<any, any> = Gesture> extends FastenerClass<G> {\n}\n\n/** @public */\nexport interface Gesture<R = any, V extends View = View> extends Fastener<R> {\n  /** @override */\n  get descriptorType(): Proto<GestureDescriptor<R, V>>;\n\n  /** @override */\n  get fastenerType(): Proto<Gesture<any, any>>;\n\n  get bindsOwner(): boolean;\n\n  get observes(): boolean;\n\n  get viewKey(): string | undefined;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(newView: V | null): V | null;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V): void;\n\n  /** @protected */\n  onAttachView(view: V): void;\n\n  /** @protected */\n  didAttachView(view: V): void;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  /** @internal @protected */\n  attachEvents(view: V): void;\n\n  /** @internal @protected */\n  detachEvents(view: V): void;\n\n  /** @internal */\n  readonly inputs: {readonly [inputId: string]: GestureInput | undefined};\n\n  readonly inputCount: number;\n\n  getInput(inputId: string | number): GestureInput | null;\n\n  /** @internal */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): GestureInput;\n\n  /** @internal */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): GestureInput;\n\n  /** @internal */\n  clearInput(input: GestureInput): void;\n\n  /** @internal */\n  clearInputs(): void;\n\n  /** @internal */\n  resetInput(input: GestureInput): void;\n\n  /** @internal */\n  resetInputs(): void;\n\n  /** @internal */\n  bindView(view: View): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  /** @internal */\n  viewWillUnmount(view: V): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const Gesture = (<R, V extends View, G extends Gesture<any, any>>() => Fastener.extend<Gesture<R, V>, GestureClass<G>>(\"Gesture\", {\n  get fastenerType(): Proto<Gesture<any, any>> {\n    return Gesture;\n  },\n\n  bindsOwner: false,\n\n  observes: true,\n\n  viewKey: void 0,\n\n  getView(): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  },\n\n  setView(newView: V | null): V | null {\n    const oldView = this.view;\n    if (oldView === newView) {\n      return oldView;\n    } else if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    if (newView !== null) {\n      (this as Mutable<typeof this>).view = newView;\n      this.willAttachView(newView);\n      this.onAttachView(newView);\n      this.initView(newView);\n      this.didAttachView(newView);\n    }\n    return oldView;\n  },\n\n  initView(view: V): void {\n    // hook\n  },\n\n  willAttachView(view: V): void {\n    // hook\n  },\n\n  onAttachView(view: V): void {\n    if ((this.flags & Fastener.MountedFlag) === 0) {\n      return;\n    }\n    this.attachEvents(view);\n    if (this.observes) {\n      view.observe(this as Observes<V>);\n    }\n  },\n\n  didAttachView(view: V): void {\n    // hook\n  },\n\n  deinitView(view: V): void {\n    // hook\n  },\n\n  willDetachView(view: V): void {\n    // hook\n  },\n\n  onDetachView(view: V): void {\n    this.clearInputs();\n    if ((this.flags & Fastener.MountedFlag) === 0) {\n      return;\n    }\n    if (this.observes) {\n      view.unobserve(this as Observes<V>);\n    }\n    this.detachEvents(view);\n  },\n\n  didDetachView(view: V): void {\n    // hook\n  },\n\n  attachEvents(view: V): void {\n    // hook\n  },\n\n  detachEvents(view: V): void {\n    // hook\n  },\n\n  getInput(inputId: string | number): GestureInput | null {\n    if (typeof inputId === \"number\") {\n      inputId = \"\" + inputId;\n    }\n    const input = this.inputs[inputId];\n    return input !== void 0 ? input : null;\n  },\n\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): GestureInput {\n    return new GestureInput(inputId, inputType, isPrimary, x, y, t);\n  },\n\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): GestureInput {\n    if (typeof inputId === \"number\") {\n      inputId = \"\" + inputId;\n    }\n    const inputs = this.inputs as {[inputId: string]: GestureInput | undefined};\n    let input = inputs[inputId];\n    if (input === void 0) {\n      input = this.createInput(inputId, inputType, isPrimary, x, y, t);\n      inputs[inputId] = input;\n      (this as Mutable<typeof this>).inputCount += 1;\n    }\n    return input;\n  },\n\n  clearInput(input: GestureInput): void {\n    const inputs = this.inputs as {[inputId: string]: GestureInput | undefined};\n    delete inputs[input.inputId];\n    (this as Mutable<typeof this>).inputCount -= 1;\n  },\n\n  clearInputs(): void {\n    (this as Mutable<typeof this>).inputs = {};\n    (this as Mutable<typeof this>).inputCount = 0;\n  },\n\n  resetInput(input: GestureInput): void {\n    this.clearInput(input);\n  },\n\n  resetInputs(): void {\n    const inputs = this.inputs as {[inputId: string]: GestureInput | undefined};\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      this.resetInput(input);\n    }\n  },\n\n  bindView(view: View): void {\n    if (!this.binds || this.view !== null) {\n      return;\n    }\n    const newView = this.detectView(view);\n    if (newView === null) {\n      return;\n    }\n    this.setView(newView);\n  },\n\n  unbindView(view: View): void {\n    if (!this.binds || this.view !== view) {\n      return;\n    }\n    this.setView(null);\n  },\n\n  detectView(view: View): V | null {\n    if (this.viewKey !== void 0 && this.viewKey === view.key) {\n      return view as V;\n    }\n    return null;\n  },\n\n  viewWillUnmount(view: View): void {\n    this.clearInputs();\n  },\n\n  onMount(): void {\n    super.onMount();\n    const view = this.view;\n    if (view !== null) {\n      this.attachEvents(view);\n      if (this.observes) {\n        view.observe(this as Observes<V>);\n      }\n    }\n  },\n\n  onUnmount(): void {\n    super.onUnmount();\n    this.clearInputs();\n    const view = this.view;\n    if (view !== null) {\n      if (this.observes) {\n        view.unobserve(this as Observes<V>);\n      }\n      this.detachEvents(view);\n    }\n  },\n},\n{\n  create(owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    const gesture = super.create(owner) as G;\n    if (gesture.view === null && gesture.bindsOwner === true && (owner as unknown) instanceof View) {\n      gesture.setView(owner);\n    }\n    return gesture;\n  },\n\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).view = null;\n    (gesture as Mutable<typeof gesture>).inputs = {};\n    (gesture as Mutable<typeof gesture>).inputCount = 0;\n    return gesture;\n  },\n\n  refine(fastenerClass: FastenerClass<Gesture<any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const viewKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"viewKey\");\n    if (viewKeyDescriptor !== void 0 && \"value\" in viewKeyDescriptor) {\n      if (viewKeyDescriptor.value === true) {\n        viewKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      } else if (viewKeyDescriptor.value === false) {\n        viewKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {View} from \"./View\";\nimport type {GestureInputType} from \"./Gesture\";\nimport {GestureInput} from \"./Gesture\";\nimport type {GestureDescriptor} from \"./Gesture\";\nimport type {GestureClass} from \"./Gesture\";\nimport {Gesture} from \"./Gesture\";\n\n/** @public */\nexport class PositionGestureInput extends GestureInput {\n  hovering: boolean;\n  pressing: boolean;\n  holdTimer: number;\n  holdDelay: number;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.hovering = false;\n    this.pressing = false;\n    this.holdTimer = 0;\n    this.holdDelay = 400;\n  }\n\n  isRunaway(): boolean {\n    const dx = this.x - this.x0;\n    const dy = this.y - this.y0;\n    const dt = this.t - this.t0;\n    return this.inputType !== \"mouse\" && dt < 100\n        && dx * dx + dy * dy > 10 * 10;\n  }\n\n  setHoldTimer(f: () => void): void {\n    if (this.holdDelay === 0) {\n      return;\n    }\n    this.clearHoldTimer();\n    this.holdTimer = setTimeout(f, this.holdDelay) as any;\n  }\n\n  clearHoldTimer(): void {\n    if (this.holdTimer === 0) {\n      return;\n    }\n    clearTimeout(this.holdTimer);\n    this.holdTimer = 0;\n  }\n}\n\n/** @public */\nexport interface PositionGestureDescriptor<R, V extends View> extends GestureDescriptor<R, V> {\n  extends?: Proto<PositionGesture<any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface PositionGestureClass<G extends PositionGesture<any, any> = PositionGesture> extends GestureClass<G> {\n}\n\n/** @public */\nexport interface PositionGesture<R = any, V extends View = View> extends Gesture<R, V> {\n  /** @override */\n  get descriptorType(): Proto<PositionGestureDescriptor<R, V>>;\n\n  /** @internal @protected @override */\n  attachEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachEvents(view: V): void;\n\n  /** @internal @protected */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  detachPressEvents(view: V): void;\n\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: PositionGestureInput | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): PositionGestureInput | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): PositionGestureInput;\n\n  /** @internal */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): PositionGestureInput;\n\n  /** @internal @override */\n  clearInput(input: PositionGestureInput): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  /** @internal @override */\n  resetInput(input: PositionGestureInput): void;\n\n  readonly hoverCount: number;\n\n  get hovering(): boolean;\n\n  /** @internal */\n  startHovering(): void;\n\n  /** @protected */\n  willStartHovering(): void;\n\n  /** @protected */\n  onStartHovering(): void;\n\n  /** @protected */\n  didStartHovering(): void;\n\n  /** @internal */\n  stopHovering(): void;\n\n  /** @protected */\n  willStopHovering(): void;\n\n  /** @protected */\n  onStopHovering(): void;\n\n  /** @protected */\n  didStopHovering(): void;\n\n  /** @internal */\n  beginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  readonly pressCount: number;\n\n  get pressing(): boolean\n\n  /** @internal */\n  startPressing(): void;\n\n  /** @protected */\n  willStartPressing(): void;\n\n  /** @protected */\n  onStartPressing(): void;\n\n  /** @protected */\n  didStartPressing(): void;\n\n  /** @internal */\n  stopPressing(): void;\n\n  /** @protected */\n  willStopPressing(): void;\n\n  /** @protected */\n  onStopPressing(): void;\n\n  /** @protected */\n  didStopPressing(): void;\n\n  /** @internal */\n  beginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginPress(input: PositionGestureInput, event: Event | null): boolean | void;\n\n  /** @protected */\n  onBeginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  movePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  cancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  press(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  longPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  willLongPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  onLongPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  didLongPress(input: PositionGestureInput): void;\n}\n\n/** @public */\nexport const PositionGesture = (<R, V extends View, G extends PositionGesture<any, any>>() => Gesture.extend<PositionGesture<R, V>, PositionGestureClass<G>>(\"PositionGesture\", {\n  attachEvents(view: V): void {\n    super.attachEvents(view);\n    this.attachHoverEvents(view);\n  },\n\n  detachEvents(view: V): void {\n    this.detachPressEvents(view);\n    this.detachHoverEvents(view);\n    super.detachEvents(view);\n  },\n\n  attachHoverEvents(view: V): void {\n    // hook\n  },\n\n  detachHoverEvents(view: V): void {\n    // hook\n  },\n\n  attachPressEvents(view: V): void {\n    // hook\n  },\n\n  detachPressEvents(view: V): void {\n    // hook\n  },\n\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): PositionGestureInput {\n    return new PositionGestureInput(inputId, inputType, isPrimary, x, y, t);\n  },\n\n  clearInput(input: PositionGestureInput): void {\n    if (!input.hovering && !input.pressing) {\n      super.clearInput(input);\n    }\n  },\n\n  clearInputs(): void {\n    super.clearInputs();\n    (this as Mutable<typeof this>).hoverCount = 0;\n    (this as Mutable<typeof this>).pressCount = 0;\n  },\n\n  resetInput(input: PositionGestureInput): void {\n    if (input.pressing) {\n      this.cancelPress(input, null);\n    }\n    if (input.hovering) {\n      this.endHover(input, null);\n    }\n    super.resetInput(input);\n  },\n\n  get hovering() {\n    return this.hoverCount !== 0;\n  },\n\n  startHovering(): void {\n    this.willStartHovering();\n    this.onStartHovering();\n    this.didStartHovering();\n  },\n\n  willStartHovering(): void {\n    // hook\n  },\n\n  onStartHovering(): void {\n    // hook\n  },\n\n  didStartHovering(): void {\n    // hook\n  },\n\n  stopHovering(): void {\n    this.willStopHovering();\n    this.onStopHovering();\n    this.didStopHovering();\n  },\n\n  willStopHovering(): void {\n    // hook\n  },\n\n  onStopHovering(): void {\n    // hook\n  },\n\n  didStopHovering(): void {\n    // hook\n  },\n\n  beginHover(input: PositionGestureInput, event: Event | null): void {\n    if (input.hovering) {\n      return;\n    }\n    this.willBeginHover(input, event);\n    input.hovering = true;\n    (this as Mutable<typeof this>).hoverCount += 1;\n    this.onBeginHover(input, event);\n    this.didBeginHover(input, event);\n    if (this.hoverCount === 1) {\n      this.startHovering();\n    }\n  },\n\n  willBeginHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onBeginHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didBeginHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  endHover(input: PositionGestureInput, event: Event | null): void {\n    if (!input.hovering) {\n      return;\n    }\n    this.willEndHover(input, event);\n    input.hovering = false;\n    (this as Mutable<typeof this>).hoverCount -= 1;\n    this.onEndHover(input, event);\n    this.didEndHover(input, event);\n    if (this.hoverCount === 0) {\n      this.stopHovering();\n    }\n    this.clearInput(input);\n  },\n\n  willEndHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onEndHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didEndHover(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  get pressing(): boolean {\n    return this.pressCount !== 0;\n  },\n\n  startPressing(): void {\n    this.willStartPressing();\n    this.onStartPressing();\n    this.didStartPressing();\n  },\n\n  willStartPressing(): void {\n    // hook\n  },\n\n  onStartPressing(): void {\n    this.attachPressEvents(this.view!);\n  },\n\n  didStartPressing(): void {\n    // hook\n  },\n\n  stopPressing(): void {\n    this.willStopPressing();\n    this.onStopPressing();\n    this.didStopPressing();\n  },\n\n  willStopPressing(): void {\n    // hook\n  },\n\n  onStopPressing(): void {\n    this.detachPressEvents(this.view!);\n  },\n\n  didStopPressing(): void {\n    // hook\n  },\n\n  beginPress(input: PositionGestureInput, event: Event | null): void {\n    if (input.pressing) {\n      return;\n    }\n    let allowPress = this.willBeginPress(input, event);\n    if (allowPress === void 0) {\n      allowPress = true;\n    }\n    if (!allowPress) {\n      return;\n    }\n    input.pressing = true;\n    input.defaultPrevented = false;\n    (this as Mutable<typeof this>).pressCount += 1;\n    this.onBeginPress(input, event);\n    input.setHoldTimer(this.longPress.bind(this, input));\n    this.didBeginPress(input, event);\n    if (this.pressCount === 1) {\n      this.startPressing();\n    }\n  },\n\n  willBeginPress(input: PositionGestureInput, event: Event | null): boolean | void {\n    // hook\n  },\n\n  onBeginPress(input: PositionGestureInput, event: Event | null): void {\n    input.x0 = input.x;\n    input.y0 = input.y;\n    input.t0 = input.t;\n    input.dx = 0;\n    input.dy = 0;\n    input.dt = 0;\n  },\n\n  didBeginPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  movePress(input: PositionGestureInput, event: Event | null): void {\n    if (!input.pressing) {\n      return;\n    }\n    this.willMovePress(input, event);\n    this.onMovePress(input, event);\n    this.didMovePress(input, event);\n  },\n\n  willMovePress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onMovePress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didMovePress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  endPress(input: PositionGestureInput, event: Event | null): void {\n    input.clearHoldTimer();\n    if (!input.pressing) {\n      return;\n    }\n    this.willEndPress(input, event);\n    input.pressing = false;\n    (this as Mutable<typeof this>).pressCount -= 1;\n    this.onEndPress(input, event);\n    this.didEndPress(input, event);\n    if (this.pressCount === 0) {\n      this.stopPressing();\n    }\n    this.clearInput(input);\n  },\n\n  willEndPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onEndPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didEndPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  cancelPress(input: PositionGestureInput, event: Event | null): void {\n    input.clearHoldTimer();\n    if (!input.pressing) {\n      return;\n    }\n    this.willCancelPress(input, event);\n    input.pressing = false;\n    (this as Mutable<typeof this>).pressCount -= 1;\n    this.onCancelPress(input, event);\n    this.didCancelPress(input, event);\n    if (this.pressCount === 0) {\n      this.stopPressing();\n    }\n    this.clearInput(input);\n  },\n\n  willCancelPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onCancelPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didCancelPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  press(input: PositionGestureInput, event: Event | null): void {\n    this.willPress(input, event);\n    this.onPress(input, event);\n    this.didPress(input, event);\n  },\n\n  willPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  longPress(input: PositionGestureInput): void {\n    input.clearHoldTimer();\n    const dt = performance.now() - input.t0;\n    if (dt >= 1.5 * input.holdDelay || !input.pressing) {\n      return;\n    }\n    this.willLongPress(input);\n    this.onLongPress(input);\n    this.didLongPress(input);\n  },\n\n  willLongPress(input: PositionGestureInput): void {\n    // hook\n  },\n\n  onLongPress(input: PositionGestureInput): void {\n    const t = performance.now();\n    input.dt = t - input.t;\n    input.t = t;\n  },\n\n  didLongPress(input: PositionGestureInput): void {\n    // hook\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).hoverCount = 0;\n    (gesture as Mutable<typeof gesture>).pressCount = 0;\n    return gesture;\n  },\n\n  specialize(template: G extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<G> {\n    let superClass = template.extends as FastenerClass<G> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const method = template.method;\n      if (method === \"pointer\") {\n        superClass = PointerPositionGesture as unknown as FastenerClass<G>;\n      } else if (method === \"touch\") {\n        superClass = TouchPositionGesture as unknown as FastenerClass<G>;\n      } else if (method === \"mouse\") {\n        superClass = MousePositionGesture as unknown as FastenerClass<G>;\n      } else if (typeof PointerEvent !== \"undefined\") {\n        superClass = PointerPositionGesture as unknown as FastenerClass<G>;\n      } else if (typeof TouchEvent !== \"undefined\") {\n        superClass = TouchPositionGesture as unknown as FastenerClass<G>;\n      } else {\n        superClass = MousePositionGesture as unknown as FastenerClass<G>;\n      }\n    }\n    return superClass;\n  },\n}))();\n\n/** @internal */\nexport interface PointerPositionGesture<R = any, V extends View = View> extends PositionGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n}\n\n/** @internal */\nexport const PointerPositionGesture = (<R, V extends View, G extends PointerPositionGesture<any, any>>() => PositionGesture.extend<PointerPositionGesture<R, V>, PositionGestureClass<G>>(\"PointerPositionGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.addEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.addEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.removeEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.removeEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  updateInput(input: PositionGestureInput, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  },\n\n  onPointerEnter(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\" || event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onPointerLeave(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\") {\n      return;\n    }\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endHover(input, event);\n  },\n\n  onPointerDown(event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onPointerMove(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onPointerUp(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onPointerCancel(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n  },\n\n  onPointerLeaveDocument(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface TouchPositionGesture<R = any, V extends View = View> extends PositionGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchPositionGesture = (<R, V extends View, G extends TouchPositionGesture<any, any>>() => PositionGesture.extend<TouchPositionGesture<R, V>, PositionGestureClass<G>>(\"TouchPositionGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    view.addEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.addEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.addEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  detachPressEvents(view: V): void {\n    view.removeEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.removeEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.removeEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  updateInput(input: PositionGestureInput, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onTouchStart(event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false, touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  },\n\n  onTouchMove(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.movePress(input, event);\n    }\n  },\n\n  onTouchEnd(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.endPress(input, event);\n      if (!input.defaultPrevented) {\n        this.press(input, event);\n      }\n      this.endHover(input, event);\n    }\n  },\n\n  onTouchCancel(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface MousePositionGesture<R = any, V extends View = View> extends PositionGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n}\n\n/** @internal */\nexport const MousePositionGesture = (<R, V extends View, G extends MousePositionGesture<any, any>>() => PositionGesture.extend<MousePositionGesture<R, V>, PositionGestureClass<G>>(\"MousePositionGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.addEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.addEventListener(\"mousedown\", this.onMouseDown as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.removeEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.removeEventListener(\"mousedown\", this.onMouseDown as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  updateInput(input: PositionGestureInput, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.y;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onMouseEnter(event: MouseEvent): void {\n    if (event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onMouseLeave(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endHover(input, event);\n  },\n\n  onMouseDown(event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onMouseMove(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onMouseUp(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onMouseLeaveDocument(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    return gesture;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {View} from \"./View\";\nimport type {GestureInputType} from \"./Gesture\";\nimport {GestureInput} from \"./Gesture\";\nimport {PositionGestureInput} from \"./PositionGesture\";\nimport type {PositionGestureDescriptor} from \"./PositionGesture\";\nimport type {PositionGestureClass} from \"./PositionGesture\";\nimport {PositionGesture} from \"./PositionGesture\";\n\n/** @public */\nexport class MomentumGestureInput extends PositionGestureInput {\n  vx: number;\n  vy: number;\n  ax: number;\n  ay: number;\n\n  /** @internal */\n  readonly path: {x: number; y: number; t: number;}[];\n  coasting: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.vx = 0;\n    this.vy = 0;\n    this.ax = 0;\n    this.ay = 0;\n    this.path = [];\n    this.coasting = false;\n  }\n\n  /** @internal */\n  updatePosition(hysteresis: number): void {\n    const path = this.path;\n    const x = this.x;\n    const y = this.y;\n    const t = this.t;\n    path.push({x, y, t});\n    while (path.length > 1 && t - path[0]!.t > hysteresis) {\n      path.shift();\n    }\n  }\n\n  /** @internal */\n  deriveVelocity(vMax: number): void {\n    const p0 = this.path[0]!;\n    const p1 = this.path[this.path.length - 1]!;\n    if (p1 !== void 0 && p1 !== p0) {\n      const dt = p1.t - p0.t;\n      let vx: number;\n      let vy: number;\n      if (dt !== 0) {\n        vx = (p1.x - p0.x) / dt;\n        vy = (p1.y - p0.y) / dt;\n        const v2 = vx * vx + vy * vy;\n        const vMax2 = vMax * vMax;\n        if (vMax2 < v2) {\n          const v = Math.sqrt(v2);\n          vx = vx * vMax / v;\n          vy = vy * vMax / v;\n        }\n      } else {\n        vx = 0;\n        vy = 0;\n      }\n      this.vx = vx;\n      this.vy = vy;\n    } else if (p0 !== void 0) {\n      this.vx = 0;\n      this.vy = 0;\n    }\n  }\n\n  /** @internal */\n  integrateVelocity(t: number): void {\n    const dt = t - this.t;\n    if (dt === 0) {\n      return;\n    }\n\n    let vx = this.vx + this.ax * dt;\n    let x: number;\n    if (vx < 0 === this.vx < 0) {\n      x = this.x + this.vx * dt + 0.5 * (this.ax * dt * dt);\n    } else {\n      x = this.x - (this.vx * this.vx) / (2 * this.ax);\n      vx = 0;\n      this.ax = 0;\n    }\n\n    let vy = this.vy + this.ay * dt;\n    let y: number;\n    if (vy < 0 === this.vy < 0) {\n      y = this.y + this.vy * dt + 0.5 * (this.ay * dt * dt);\n    } else {\n      y = this.y - (this.vy * this.vy) / (2 * this.ay);\n      vy = 0;\n      this.ay = 0;\n    }\n\n    this.dx = x - this.x;\n    this.dy = y - this.y;\n    this.dt = dt;\n    this.x = x;\n    this.y = y;\n    this.t = t;\n    this.vx = vx;\n    this.vy = vy;\n  }\n}\n\n/** @public */\nexport interface MomentumGestureDescriptor<R, V extends View> extends PositionGestureDescriptor<R, V> {\n  extends?: Proto<MomentumGesture<any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface MomentumGestureClass<G extends MomentumGesture<any, any> = MomentumGesture> extends PositionGestureClass<G> {\n}\n\n/** @public */\nexport interface MomentumGesture<R = any, V extends View = View> extends PositionGesture<R, V> {\n  /** @override */\n  get descriptorType(): Proto<MomentumGestureDescriptor<R, V>>;\n\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: MomentumGestureInput | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): MomentumGestureInput | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): MomentumGestureInput;\n\n  /** @internal @override */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): MomentumGestureInput;\n\n  /** @internal @override */\n  clearInput(input: MomentumGestureInput): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  /** @internal @override */\n  resetInput(input: MomentumGestureInput): void;\n\n  /** @protected */\n  initHysteresis(): number;\n\n  /**\n   * The time delta for velocity derivation, in milliseconds.\n   */\n  hysteresis: number;\n\n  /** @protected */\n  initAcceleration(): number;\n\n  /**\n   * The magnitude of the deceleration on coasting input points in,\n   * pixels/millisecond^2. An acceleration of zero disables coasting.\n   */\n  acceleration: number;\n\n  /** @protected */\n  initVelocityMax(): number;\n\n  /**\n   * The maximum magnitude of the velocity of coasting input points,\n   * in pixels/millisecond.\n   */\n  velocityMax: number;\n\n  /** @internal */\n  viewWillAnimate(view: View): void;\n\n  /** @internal */\n  interrupt(event: Event | null): void;\n\n  /** @internal */\n  cancel(event: Event | null): void;\n\n  /** @internal */\n  startInteracting(): void;\n\n  /** @protected */\n  willStartInteracting(): void;\n\n  /** @protected */\n  onStartInteracting(): void;\n\n  /** @protected */\n  didStartInteracting(): void;\n\n  /** @internal */\n  stopInteracting(): void;\n\n  /** @protected */\n  willStopInteracting(): void;\n\n  /** @protected */\n  onStopInteracting(): void;\n\n  /** @protected */\n  didStopInteracting(): void;\n\n  /** @internal @override */\n  onStartPressing(): void;\n\n  /** @internal @override */\n  onStopPressing(): void;\n\n  /** @internal @override */\n  beginPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onBeginPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onMovePress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  willEndPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onEndPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onCancelPress(input: MomentumGestureInput, event: Event | null): void;\n\n  readonly coastCount: number;\n\n  get coasting(): boolean;\n\n  /** @internal */\n  startCoasting(): void;\n\n  /** @protected */\n  willStartCoasting(): void;\n\n  /** @protected */\n  onStartCoasting(): void;\n\n  /** @protected */\n  didStartCoasting(): void;\n\n  /** @internal */\n  stopCoasting(): void;\n\n  /** @protected */\n  willStopCoasting(): void;\n\n  /** @protected */\n  onStopCoasting(): void;\n\n  /** @protected */\n  didStopCoasting(): void;\n\n  /** @internal */\n  beginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginCoast(input: MomentumGestureInput, event: Event | null): boolean | void;\n\n  /** @protected */\n  onBeginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @internal */\n  doCoast(t: number): void;\n\n  /** @protected */\n  willCoast(): void;\n\n  /** @protected */\n  onCoast(): void;\n\n  /** @protected */\n  didCoast(): void;\n\n  /** @internal */\n  integrate(t: number): void;\n}\n\n/** @public */\nexport const MomentumGesture = (<R, V extends View, G extends MomentumGesture<any, any>>() => PositionGesture.extend<MomentumGesture<R, V>, MomentumGestureClass<G>>(\"MomentumGesture\", {\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): MomentumGestureInput {\n    return new MomentumGestureInput(inputId, inputType, isPrimary, x, y, t);\n  },\n\n  clearInput(input: MomentumGestureInput): void {\n    if (!input.coasting) {\n      super.clearInput(input);\n    }\n  },\n\n  clearInputs(): void {\n    super.clearInputs();\n    (this as Mutable<typeof this>).coastCount = 0;\n  },\n\n  resetInput(input: MomentumGestureInput): void {\n    if (input.coasting) {\n      this.endCoast(input, null);\n    }\n    super.resetInput(input);\n  },\n\n  hysteresis: 67,\n\n  initHysteresis(): number {\n    return (Object.getPrototypeOf(this) as MomentumGesture).hysteresis;\n  },\n\n  acceleration: 0.00175,\n\n  initAcceleration(): number {\n    return (Object.getPrototypeOf(this) as MomentumGesture).acceleration;\n  },\n\n  velocityMax: 1.75,\n\n  initVelocityMax(): number {\n    return (Object.getPrototypeOf(this) as MomentumGesture).velocityMax;\n  },\n\n  viewWillAnimate(view: View): void {\n    this.doCoast(view.updateTime);\n  },\n\n  interrupt(event: Event | null): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      this.endCoast(input, event);\n    }\n  },\n\n  cancel(event: Event | null): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      this.endPress(input, event);\n      this.endCoast(input, event);\n    }\n  },\n\n  startInteracting(): void {\n    this.willStartInteracting();\n    this.onStartInteracting();\n    this.didStartInteracting();\n  },\n\n  willStartInteracting(): void {\n    // hook\n  },\n\n  onStartInteracting(): void {\n    // hook\n  },\n\n  didStartInteracting(): void {\n    // hook\n  },\n\n  stopInteracting(): void {\n    this.willStopInteracting();\n    this.onStopInteracting();\n    this.didStopInteracting();\n  },\n\n  willStopInteracting(): void {\n    // hook\n  },\n\n  onStopInteracting(): void {\n    // hook\n  },\n\n  didStopInteracting(): void {\n    // hook\n  },\n\n  onStartPressing(): void {\n    super.onStartPressing();\n    if (this.coastCount === 0) {\n      this.startInteracting();\n    }\n  },\n\n  onStopPressing(): void {\n    super.onStopPressing();\n    if (this.coastCount === 0) {\n      this.stopInteracting();\n    }\n  },\n\n  beginPress(input: MomentumGestureInput, event: Event | null): void {\n    super.beginPress(input, event);\n    this.interrupt(event);\n  },\n\n  onBeginPress(input: MomentumGestureInput, event: Event | null): void {\n    super.onBeginPress(input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  },\n\n  onMovePress(input: MomentumGestureInput, event: Event | null): void {\n    super.onMovePress(input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  },\n\n  willEndPress(input: MomentumGestureInput, event: Event | null): void {\n    super.willEndPress(input, event);\n    this.beginCoast(input, event);\n  },\n\n  onEndPress(input: MomentumGestureInput, event: Event | null): void {\n    super.onEndPress(input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  },\n\n  onCancelPress(input: MomentumGestureInput, event: Event | null): void {\n    super.onCancelPress(input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  },\n\n  get coasting(): boolean {\n    return this.coastCount !== 0;\n  },\n\n  startCoasting(): void {\n    this.willStartCoasting();\n    this.onStartCoasting();\n    this.didStartCoasting();\n  },\n\n  willStartCoasting(): void {\n    // hook\n  },\n\n  onStartCoasting(): void {\n    if (this.pressCount === 0) {\n      this.startInteracting();\n    }\n    if (this.view !== null) {\n      this.view.requireUpdate(View.NeedsAnimate);\n    }\n  },\n\n  didStartCoasting(): void {\n    // hook\n  },\n\n  stopCoasting(): void {\n    this.willStopCoasting();\n    this.onStopCoasting();\n    this.didStopCoasting();\n  },\n\n  willStopCoasting(): void {\n    // hook\n  },\n\n  onStopCoasting(): void {\n    if (this.pressCount === 0) {\n      this.stopInteracting();\n    }\n  },\n\n  didStopCoasting(): void {\n    // hook\n  },\n\n  beginCoast(input: MomentumGestureInput, event: Event | null): void {\n    if (input.coasting || (input.vx === 0 && input.vy === 0)) {\n      return;\n    }\n    const angle = Math.atan2(Math.abs(input.vy), Math.abs(input.vx));\n    const a = this.acceleration;\n    const ax = (input.vx < 0 ? a : input.vx > 0 ? -a : 0) * Math.cos(angle);\n    const ay = (input.vy < 0 ? a : input.vy > 0 ? -a : 0) * Math.sin(angle);\n    if (ax === 0 && ay === 0) {\n      return;\n    }\n    input.ax = ax;\n    input.ay = ay;\n    let allowCoast = this.willBeginCoast(input, event);\n    if (allowCoast === void 0) {\n      allowCoast = true;\n    }\n    if (!allowCoast) {\n      return;\n    }\n    input.coasting = true;\n    (this as Mutable<typeof this>).coastCount += 1;\n    this.onBeginCoast(input, event);\n    this.didBeginCoast(input, event);\n    if (this.coastCount === 1) {\n      this.startCoasting();\n    }\n  },\n\n  willBeginCoast(input: MomentumGestureInput, event: Event | null): boolean | void {\n    // hook\n  },\n\n  onBeginCoast(input: MomentumGestureInput, event: Event | null): void {\n    input.x0 = input.x;\n    input.y0 = input.y;\n    input.t0 = input.t;\n    input.dx = 0;\n    input.dy = 0;\n    input.dt = 0;\n  },\n\n  didBeginCoast(input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  endCoast(input: MomentumGestureInput, event: Event | null): void {\n    if (!input.coasting) {\n      return;\n    }\n    this.willEndCoast(input, event);\n    input.coasting = false;\n    (this as Mutable<typeof this>).coastCount -= 1;\n    this.onEndCoast(input, event);\n    this.didEndCoast(input, event);\n    if (this.coastCount === 0) {\n      this.stopCoasting();\n    }\n    this.clearInput(input);\n  },\n\n  willEndCoast(input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  onEndCoast(input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  didEndCoast(input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  },\n\n  doCoast(t: number): void {\n    if (this.coastCount === 0) {\n      return;\n    }\n    this.willCoast();\n    this.integrate(t);\n    this.onCoast();\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting && input.ax === 0 && input.ay === 0) {\n        this.endCoast(input, null);\n      }\n    }\n    this.didCoast();\n    if (this.coastCount !== 0 && this.view !== null) {\n      this.view.requireUpdate(View.NeedsAnimate);\n    }\n  },\n\n  willCoast(): void {\n    // hook\n  },\n\n  onCoast(): void {\n    // hook\n  },\n\n  didCoast(): void {\n    // hook\n  },\n\n  integrate(t: number): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        input.integrateVelocity(t);\n      }\n    }\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).coastCount = 0;\n    gesture.hysteresis = gesture.initHysteresis();\n    gesture.acceleration = gesture.initAcceleration();\n    gesture.velocityMax = gesture.initVelocityMax();\n    return gesture;\n  },\n\n  specialize(template: G extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<G> {\n    let superClass = template.extends as FastenerClass<G> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const method = template.method;\n      if (method === \"pointer\") {\n        superClass = PointerMomentumGesture as unknown as FastenerClass<G>;\n      } else if (method === \"touch\") {\n        superClass = TouchMomentumGesture as unknown as FastenerClass<G>;\n      } else if (method === \"mouse\") {\n        superClass = MouseMomentumGesture as unknown as FastenerClass<G>;\n      } else if (typeof PointerEvent !== \"undefined\") {\n        superClass = PointerMomentumGesture as unknown as FastenerClass<G>;\n      } else if (typeof TouchEvent !== \"undefined\") {\n        superClass = TouchMomentumGesture as unknown as FastenerClass<G>;\n      } else {\n        superClass = MouseMomentumGesture as unknown as FastenerClass<G>;\n      }\n    }\n    return superClass;\n  },\n}))();\n\n/** @internal */\nexport interface PointerMomentumGesture<R = any, V extends View = View> extends MomentumGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n}\n\n/** @internal */\nexport const PointerMomentumGesture = (<R, V extends View, G extends PointerMomentumGesture<any, any>>() => MomentumGesture.extend<PointerMomentumGesture<R, V>, MomentumGestureClass<G>>(\"PointerMomentumGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.addEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.addEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.removeEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.removeEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  updateInput(input: MomentumGestureInput, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  },\n\n  onPointerEnter(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\" || event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onPointerLeave(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\") {\n      return;\n    }\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endHover(input, event);\n  },\n\n  onPointerDown(event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onPointerMove(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onPointerUp(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onPointerCancel(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n  },\n\n  onPointerLeaveDocument(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface TouchMomentumGesture<R = any, V extends View = View> extends MomentumGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchMomentumGesture = (<R, V extends View, G extends TouchMomentumGesture<any, any>>() => MomentumGesture.extend<TouchMomentumGesture<R, V>, MomentumGestureClass<G>>(\"TouchMomentumGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    view.addEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.addEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.addEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  detachPressEvents(view: V): void {\n    view.removeEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.removeEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.removeEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  updateInput(input: MomentumGestureInput, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onTouchStart(event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false, touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  },\n\n  onTouchMove(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.movePress(input, event);\n    }\n  },\n\n  onTouchEnd(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.endPress(input, event);\n      if (!input.defaultPrevented) {\n        this.press(input, event);\n      }\n      this.endHover(input, event);\n    }\n  },\n\n  onTouchCancel(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface MouseMomentumGesture<R = any, V extends View = View> extends MomentumGesture<R, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n}\n\n/** @internal */\nexport const MouseMomentumGesture = (<R, V extends View, G extends MouseMomentumGesture<any, any>>() => MomentumGesture.extend<MouseMomentumGesture<R, V>, MomentumGestureClass<G>>(\"MouseMomentumGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.addEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.addEventListener(\"mousedown\", this.onMouseDown as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.removeEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.removeEventListener(\"mousedown\", this.onMouseDown as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  updateInput(input: MomentumGestureInput, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onMouseEnter(event: MouseEvent): void {\n    if (event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onMouseLeave(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endHover(input, event);\n  },\n\n  onMouseDown(event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onMouseMove(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onMouseUp(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onMouseLeaveDocument(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    return gesture;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {R2Box} from \"@swim/math\";\nimport {View} from \"./View\";\nimport type {GestureInputType} from \"./Gesture\";\nimport {GestureInput} from \"./Gesture\";\nimport {MomentumGestureInput} from \"./MomentumGesture\";\nimport type {MomentumGestureDescriptor} from \"./MomentumGesture\";\nimport type {MomentumGestureClass} from \"./MomentumGesture\";\nimport {MomentumGesture} from \"./MomentumGesture\";\n\n/** @public */\nexport class ScaleGestureInput<X = any, Y = any> extends MomentumGestureInput {\n  xCoord: X | undefined;\n  yCoord: Y | undefined;\n  disableX: boolean;\n  disableY: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.xCoord = void 0;\n    this.yCoord = void 0;\n    this.disableX = false;\n    this.disableY = false;\n  }\n}\n\n/** @public */\nexport interface ScaleGestureDescriptor<R, V extends View, X, Y> extends MomentumGestureDescriptor<R, V> {\n  extends?: Proto<ScaleGesture<any, any, any, any>> | boolean | null;\n  preserveAspectRatio?: boolean;\n  wheel?: boolean;\n}\n\n/** @public */\nexport interface ScaleGestureClass<G extends ScaleGesture = ScaleGesture> extends MomentumGestureClass<G> {\n  /** @internal */\n  readonly PreserveAspectRatioFlag: FastenerFlags;\n  /** @internal */\n  readonly WheelFlag: FastenerFlags;\n  /** @internal */\n  readonly NeedsRescale: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ScaleGesture<R = any, V extends View = View, X = any, Y = any> extends MomentumGesture<R, V> {\n  /** @override */\n  get descriptorType(): Proto<ScaleGestureDescriptor<R, V, X, Y>>;\n\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: ScaleGestureInput<X, Y> | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): ScaleGestureInput<X, Y> | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): ScaleGestureInput<X, Y>;\n\n  /** @internal @override */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): ScaleGestureInput<X, Y>;\n\n  /** @internal @override */\n  clearInput(input: ScaleGestureInput<X, Y>): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  /** @internal @override */\n  resetInput(input: ScaleGestureInput<X, Y>): void;\n\n  /** @protected */\n  initDistanceMin(): number;\n\n  /**\n   * The minimum radial distance between input positions, in pixels.\n   * Used to avoid scale gesture singularities.\n   */\n  distanceMin: number;\n\n  get preserveAspectRatio(): boolean;\n  set preserveAspectRatio(preserveAspectRatio: boolean);\n\n  get wheel(): boolean;\n  set wheel(wheel: boolean);\n\n  getXScale(): ContinuousScale<X, number> | null;\n\n  setXScale(xScale: ContinuousScale<X, number> | null, timing?: TimingLike | boolean): void;\n\n  getYScale(): ContinuousScale<Y, number> | null;\n\n  setYScale(yScale: ContinuousScale<Y, number> | null, timing?: TimingLike | boolean): void;\n\n  /** @internal */\n  clientToRangeX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): number;\n\n  /** @internal */\n  clientToRangeY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): number;\n\n  /** @internal */\n  unscaleX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): X;\n\n  /** @internal */\n  unscaleY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): Y;\n\n  /** @internal @override */\n  viewWillAnimate(view: View): void;\n\n  /** @protected @override */\n  onBeginPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onMovePress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onEndPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onCancelPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @internal @override */\n  beginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onBeginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onEndCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onCoast(): void;\n\n  /** @internal */\n  updateInputDomain(input: ScaleGestureInput<X, Y>,\n                    xScale?: ContinuousScale<X, number> | null,\n                    yScale?: ContinuousScale<Y, number> | null,\n                    bounds?: R2Box): void;\n\n  /** @internal */\n  neutralizeX(): void;\n\n  /** @internal */\n  neutralizeY(): void;\n\n  /** @internal */\n  rescale(): void;\n\n  /** @internal */\n  rescaleRadial(oldXScale: ContinuousScale<X, number>,\n                oldYScale: ContinuousScale<Y, number>,\n                input0: ScaleGestureInput<X, Y>,\n                input1: ScaleGestureInput<X, Y>,\n                bounds: R2Box): void;\n\n  /** @internal */\n  rescaleXY(oldXScale: ContinuousScale<X, number>,\n            oldYScale: ContinuousScale<Y, number>,\n            input0: ScaleGestureInput<X, Y>,\n            input1: ScaleGestureInput<X, Y> | undefined,\n            bounds: R2Box): void;\n\n  /** @internal */\n  rescaleX(oldXScale: ContinuousScale<X, number>,\n           input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined,\n           bounds: R2Box): void;\n\n  /** @internal */\n  rescaleY(oldYScale: ContinuousScale<Y, number>,\n           input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined,\n           bounds: R2Box): void;\n\n  /** @internal */\n  conserveMomentum(input0: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeXYMomentum(input0: ScaleGestureInput<X, Y>,\n                       input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeXMomentum(input0: ScaleGestureInput<X, Y>,\n                      input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeYMomentum(input0: ScaleGestureInput<X, Y>,\n                      input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal @override */\n  integrate(t: number): void;\n\n  /** @internal */\n  zoom(x: number, y: number, dz: number, event: Event | null): void;\n}\n\n/** @public */\nexport const ScaleGesture = (<R, V extends View, X, Y, G extends ScaleGesture<any, any, any, any>>() => MomentumGesture.extend<ScaleGesture<R, V, X, Y>, ScaleGestureClass<G>>(\"ScaleGesture\", {\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n                                                       x: number, y: number, t: number): ScaleGestureInput<X, Y> {\n    return new ScaleGestureInput(inputId, inputType, isPrimary, x, y, t);\n  },\n\n  clearInputs(): void {\n    super.clearInputs();\n    this.setFlags(this.flags & ~ScaleGesture.NeedsRescale);\n  },\n\n  distanceMin: 10,\n\n  initDistanceMin(): number {\n    return (Object.getPrototypeOf(this) as ScaleGesture).distanceMin;\n  },\n\n  get preserveAspectRatio(): boolean {\n    return (this.flags & ScaleGesture.PreserveAspectRatioFlag) !== 0;\n  },\n\n  set preserveAspectRatio(preserveAspectRatio: boolean) {\n    if (preserveAspectRatio) {\n      this.setFlags(this.flags | ScaleGesture.PreserveAspectRatioFlag);\n    } else {\n      this.setFlags(this.flags & ~ScaleGesture.PreserveAspectRatioFlag);\n    }\n  },\n\n  get wheel(): boolean {\n    return (this.flags & ScaleGesture.WheelFlag) !== 0;\n  },\n\n  set wheel(wheel: boolean) {\n    if (wheel) {\n      this.setFlags(this.flags | ScaleGesture.WheelFlag);\n    } else {\n      this.setFlags(this.flags & ~ScaleGesture.WheelFlag);\n    }\n  },\n\n  getXScale(): ContinuousScale<X, number> | null {\n    return null; // hook\n  },\n\n  setXScale(xScale: ContinuousScale<X, number> | null, timing?: TimingLike | boolean): void {\n    // hook\n  },\n\n  getYScale(): ContinuousScale<Y, number> | null {\n    return null; // hook\n  },\n\n  setYScale(yScale: ContinuousScale<Y, number> | null, timing?: TimingLike | boolean): void {\n    // hook\n  },\n\n  clientToRangeX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): number {\n    const viewX = clientX - bounds.xMin;\n    const xRange = xScale.range;\n    if (xRange[0] <= xRange[1]) {\n      return xRange[0] + viewX;\n    }\n    return bounds.xMax + viewX - xRange[0];\n  },\n\n  clientToRangeY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): number {\n    const viewY = clientY - bounds.yMin;\n    const yRange = yScale.range;\n    if (yRange[0] <= yRange[1]) {\n      return yRange[0] + viewY;\n    }\n    return bounds.yMax + viewY - yRange[0];\n  },\n\n  unscaleX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): X {\n    return xScale.inverse(this.clientToRangeX(clientX, xScale, bounds));\n  },\n\n  unscaleY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): Y {\n    return yScale.inverse(this.clientToRangeY(clientY, yScale, bounds));\n  },\n\n  viewWillAnimate(view: View): void {\n    super.viewWillAnimate(view);\n    if ((this.flags & ScaleGesture.NeedsRescale) !== 0) {\n      this.rescale();\n    }\n  },\n\n  onBeginPress(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onBeginPress(input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  onMovePress(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onMovePress(input, event);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  onEndPress(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onEndPress(input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  onCancelPress(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onCancelPress(input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  beginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    if (this.coastCount < 2) {\n      super.beginCoast(input, event);\n    }\n  },\n\n  onBeginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onBeginCoast(input, event);\n    this.updateInputDomain(input);\n    this.conserveMomentum(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  onEndCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    super.onEndCoast(input, event);\n    input.disableX = false;\n    input.disableY = false;\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  onCoast(): void {\n    super.onCoast();\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  },\n\n  updateInputDomain(input: ScaleGestureInput<X, Y>, xScale?: ContinuousScale<X, number> | null,\n                    yScale?: ContinuousScale<Y, number> | null, bounds?: R2Box): void {\n    if (xScale === void 0) {\n      xScale = this.getXScale();\n    }\n    if (xScale !== null) {\n      if (bounds === void 0) {\n        bounds = this.view!.clientBounds;\n      }\n      input.xCoord = this.unscaleX(input.x0, xScale, bounds);\n    }\n    if (yScale === void 0) {\n      yScale = this.getYScale();\n    }\n    if (yScale !== null) {\n      if (bounds === void 0) {\n        bounds = this.view!.clientBounds;\n      }\n      input.yCoord = this.unscaleY(input.y0, yScale, bounds);\n    }\n  },\n\n  neutralizeX(): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (!input.coasting) {\n        continue;\n      }\n      input.disableX = true;\n      input.vx = 0;\n      input.ax = 0;\n    }\n  },\n\n  neutralizeY(): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (!input.coasting) {\n        continue;\n      }\n      input.disableY = true;\n      input.vy = 0;\n      input.ay = 0;\n    }\n  },\n\n  rescale(): void {\n    let input0: ScaleGestureInput<X, Y> | undefined;\n    let input1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (!input.pressing && !input.coasting) {\n        continue;\n      } else if (input0 === void 0) {\n        input0 = input;\n      } else if (input1 === void 0) {\n        input1 = input;\n      } else if (input.t0 < input0.t0) {\n        input0 = input;\n      } else if (input.t0 < input1.t0) {\n        input1 = input;\n      }\n    }\n    if (input0 !== void 0) {\n      const bounds = this.view!.clientBounds;\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      if (xScale !== null && yScale !== null) {\n        if (input1 !== void 0 && this.preserveAspectRatio) {\n          this.rescaleRadial(xScale, yScale, input0, input1, bounds);\n        } else {\n          this.rescaleXY(xScale, yScale, input0, input1, bounds);\n        }\n      } else if (xScale !== null) {\n        this.rescaleX(xScale, input0, input1, bounds);\n      } else if (yScale !== null) {\n        this.rescaleY(yScale, input0, input1, bounds);\n      }\n    }\n    this.setFlags(this.flags & ~ScaleGesture.NeedsRescale);\n  },\n\n  rescaleRadial(oldXScale: ContinuousScale<X, number>, oldYScale: ContinuousScale<Y, number>,\n                input0: ScaleGestureInput<X, Y>, input1: ScaleGestureInput<X, Y>, bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    const y0 = input0.yCoord!;\n    const px0 = this.clientToRangeX(input0.x0, oldXScale, bounds);\n    const py0 = this.clientToRangeY(input0.y0, oldYScale, bounds);\n    const qx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    const qy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    const vx0 = input0.vx;\n    const vy0 = input0.vy;\n    const ax0 = input0.ax;\n    const ay0 = input0.ay;\n\n    const x1 = input1.xCoord!;\n    const y1 = input1.yCoord!;\n    const px1 = this.clientToRangeX(input1.x0, oldXScale, bounds);\n    const py1 = this.clientToRangeY(input1.y0, oldYScale, bounds);\n    const qx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n    const qy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n    const vx1 = input1.vx;\n    const vy1 = input1.vy;\n    const ax1 = input1.ax;\n    const ay1 = input1.ay;\n\n    // Compute the difference vector between previous input positions.\n    const dpx = px1 - px0;\n    const dpy = py1 - py0;\n    // Normalize the previous input distance vector.\n    const dp = Math.max(this.distanceMin, Math.sqrt(dpx * dpx + dpy * dpy));\n    const upx = dpx / dp;\n    const upy = dpy / dp;\n\n    // Compute the translation vectors from the previous input positions\n    // to the current input positions.\n    const dpqx0 = qx0 - px0;\n    const dpqy0 = qy0 - py0;\n    const dpqx1 = qx1 - px1;\n    const dpqy1 = qy1 - py1;\n\n    // Project the current input positions onto the unit vector separating\n    // the previous input positions.\n    const ip0 = dpqx0 * upx + dpqy0 * upy;\n    const ip1 = dpqx1 * upx + dpqy1 * upy;\n    const ix0 = ip0 * upx;\n    const iy0 = ip0 * upy;\n    const ix1 = ip1 * upx;\n    const iy1 = ip1 * upy;\n\n    // Project the current input positions onto the unit vector orthogonal\n    // to the previous input positions.\n    const jp0 = dpqx0 * upy + dpqy0 * -upx;\n    const jp1 = dpqx1 * upy + dpqy1 * -upx;\n    const jx0 = jp0 * upy;\n    const jy0 = jp0 * -upx;\n    const jx1 = jp1 * upy;\n    const jy1 = jp1 * -upx;\n    // Average the mean orthogonal projection of the input translations.\n    const jpx = (jx0 + jx1) / 2;\n    const jpy = (jy0 + jy1) / 2;\n\n    // Offset the previous input positions by the radial and mean orthogonal\n    // projections of the input translations.\n    const rx0 = px0 + ix0 + jpx;\n    const ry0 = py0 + iy0 + jpy;\n    const rx1 = px1 + ix1 + jpx;\n    const ry1 = py1 + iy1 + jpy;\n\n    // Project the velocity vectors onto the unit vector separating\n    // the previous input positions.\n    const iv0 = vx0 * upx + vy0 * upy;\n    const iv1 = vx1 * upx + vy1 * upy;\n    const ivx0 = iv0 * upx;\n    const ivy0 = iv0 * upy;\n    const ivx1 = iv1 * upx;\n    const ivy1 = iv1 * upy;\n\n    // Project the velocity vectors onto the unit vector orthogonal\n    // to the previous input positions.\n    const jv0 = vx0 * upy + vy0 * -upx;\n    const jv1 = vx1 * upy + vy1 * -upx;\n    const jvx0 = jv0 * upy;\n    const jvy0 = jv0 * -upx;\n    const jvx1 = jv1 * upy;\n    const jvy1 = jv1 * -upx;\n    // Average the mean orthogonal projection of the input velocity.\n    const jvx = (jvx0 + jvx1) / 2;\n    const jvy = (jvy0 + jvy1) / 2;\n\n    // Recombine the radial and mean orthogonal velocity components.\n    let rvx0 = ivx0 + jvx;\n    let rvy0 = ivy0 + jvy;\n    let rvx1 = ivx1 + jvx;\n    let rvy1 = ivy1 + jvy;\n\n    // Normalize the recombined velocity vectors.\n    const v0 = Math.sqrt(rvx0 * rvx0 + rvy0 * rvy0);\n    const v1 = Math.sqrt(rvx1 * rvx1 + rvy1 * rvy1);\n    const uvx0 = v0 !== 0 ? rvx0 / v0 : 0;\n    const uvy0 = v0 !== 0 ? rvy0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? rvx1 / v1 : 0;\n    const uvy1 = v1 !== 0 ? rvy1 / v1 : 0;\n\n    // Scale the recombined velocity vectors back to their original magnitudes.\n    rvx0 = uvx0 * v0;\n    rvy0 = uvy0 * v0;\n    rvx1 = uvx1 * v1;\n    rvy1 = uvy1 * v1;\n\n    // Compute the magnitudes of the acceleration vectors.\n    const a0 = Math.sqrt(ax0 * ax0 + ay0 * ay0);\n    const a1 = Math.sqrt(ax1 * ax1 + ay1 * ay1);\n\n    // Rotate the acceleration vectors to opposite the updated velocity vectors.\n    const rax0 = a0 * -uvx0;\n    const ray0 = a0 * -uvy0;\n    const rax1 = a1 * -uvx1;\n    const ray1 = a1 * -uvy1;\n\n    let newXScale: ContinuousScale<X, number> | null = null;\n    const solvedXScale = oldXScale.solveDomain(x0, rx0, x1, rx1);\n    if (!solvedXScale.equals(oldXScale)) {\n      newXScale = solvedXScale;\n      this.setXScale(newXScale);\n    }\n\n    let newYScale: ContinuousScale<Y, number> | null = null;\n    const solvedYScale = oldYScale.solveDomain(y0, ry0, y1, ry1);\n    if (!solvedYScale.equals(oldYScale)) {\n      newYScale = solvedYScale;\n      this.setYScale(newYScale);\n    }\n\n    if (newXScale === null && newYScale === null) {\n      return;\n    }\n    if (newXScale !== null) {\n      input0.x0 = input0.x;\n      input0.dx = 0;\n      input0.vx = rvx0;\n      input0.ax = rax0;\n      input0.xCoord = this.unscaleX(input0.x0, newXScale, bounds);\n\n      input1.x0 = input1.x;\n      input1.dx = 0;\n      input1.vx = rvx1;\n      input1.ax = rax1;\n      input1.xCoord = this.unscaleX(input1.x0, newXScale, bounds);\n    }\n    if (newYScale !== null) {\n      input0.y0 = input0.y;\n      input0.dy = 0;\n      input0.vy = rvy0;\n      input0.ay = ray0;\n      input0.yCoord = this.unscaleY(input0.y0, newYScale, bounds);\n\n      input1.y0 = input1.y;\n      input1.dy = 0;\n      input1.vy = rvy1;\n      input1.ay = ray1;\n      input1.yCoord = this.unscaleY(input1.y0, newYScale, bounds);\n    }\n\n    if (this.inputCount <= 2) {\n      return;\n    }\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input === input0 || input === input1) {\n        continue;\n      }\n      if (newXScale !== null) {\n        input.x0 = input.x;\n        input.dx = 0;\n        input.xCoord = this.unscaleX(input.x0, newXScale, bounds);\n      }\n      if (newYScale !== null) {\n        input.y0 = input.y;\n        input.dy = 0;\n        input.yCoord = this.unscaleY(input.y0, newYScale, bounds);\n      }\n    }\n  },\n\n  rescaleXY(oldXScale: ContinuousScale<X, number>, oldYScale: ContinuousScale<Y, number>,\n            input0: ScaleGestureInput<X, Y>, input1: ScaleGestureInput<X, Y> | undefined, bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    const y0 = input0.yCoord!;\n    let sx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    let sy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    let disableX = input0.disableX;\n    let disableY = input0.disableY;\n\n    let x1: X | undefined;\n    let y1: Y | undefined;\n    let sx1: number | undefined;\n    let sy1: number | undefined;\n\n    if (input1 !== void 0) {\n      x1 = input1.xCoord!;\n      y1 = input1.yCoord!;\n      sx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n      sy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n      disableX = disableX || input1.disableX;\n      disableY = disableY || input1.disableY;\n      const dsx = Math.abs(sx1 - sx0);\n      const dsy = Math.abs(sy1 - sy0);\n\n      const distanceMin = this.distanceMin;\n      if (dsx < distanceMin) {\n        const esx = (distanceMin - dsx) / 2;\n        if (sx0 <= sx1) {\n          sx0 -= esx;\n          sx1 += esx;\n        } else {\n          sx0 += esx;\n          sx1 -= esx;\n        }\n      }\n      if (dsy < distanceMin) {\n        const esy = (distanceMin - dsy) / 2;\n        if (sy0 <= sy1) {\n          sy0 -= esy;\n          sy1 += esy;\n        } else {\n          sy0 += esy;\n          sy1 -= esy;\n        }\n      }\n    }\n\n    let newXScale: ContinuousScale<X, number> | null = null;\n    if (!disableX) {\n      newXScale = oldXScale.solveDomain(x0, sx0, x1, sx1);\n      if (!newXScale.equals(oldXScale)) {\n        this.setXScale(newXScale);\n      }\n    }\n\n    let newYScale: ContinuousScale<Y, number> | null = null;\n    if (!disableY) {\n      newYScale = oldYScale.solveDomain(y0, sy0, y1, sy1);\n      if (!newYScale.equals(oldYScale)) {\n        this.setYScale(newYScale);\n      }\n    }\n\n    if ((newXScale === null && newYScale === null) || !this.preserveAspectRatio) {\n      return;\n    }\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (newXScale !== null) {\n        input.x0 = input.x;\n        input.dx = 0;\n        input.xCoord = this.unscaleX(input.x0, newXScale, bounds);\n      }\n      if (newYScale !== null) {\n        input.y0 = input.y;\n        input.dy = 0;\n        input.yCoord = this.unscaleY(input.y0, newYScale, bounds);\n      }\n    }\n  },\n\n  rescaleX(oldXScale: ContinuousScale<X, number>, input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined, bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    let sx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    let sx1: number | undefined;\n    let x1: X | undefined;\n    let disableX = input0.disableX;\n    if (input1 !== void 0) {\n      x1 = input1.xCoord!;\n      sx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n      disableX = disableX || input1.disableX;\n      const dsx = Math.abs(sx1 - sx0);\n      const distanceMin = this.distanceMin;\n      if (dsx < distanceMin) {\n        const esx = (distanceMin - dsx) / 2;\n        if (sx0 <= sx1) {\n          sx0 -= esx;\n          sx1 += esx;\n        } else {\n          sx0 += esx;\n          sx1 -= esx;\n        }\n      }\n    }\n    if (disableX) {\n      return;\n    }\n    const newXScale = oldXScale.solveDomain(x0, sx0, x1, sx1);\n    if (!newXScale.equals(oldXScale)) {\n      this.setXScale(newXScale);\n    }\n  },\n\n  rescaleY(oldYScale: ContinuousScale<Y, number>, input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined, bounds: R2Box): void {\n    const y0 = input0.yCoord!;\n    let sy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    let sy1: number | undefined;\n    let y1: Y | undefined;\n    let disableY = input0.disableY;\n    if (input1 !== void 0) {\n      y1 = input1.yCoord!;\n      sy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n      disableY = disableY || input1.disableY;\n      const dsy = Math.abs(sy1 - sy0);\n      const distanceMin = this.distanceMin;\n      if (dsy < distanceMin) {\n        const esy = (distanceMin - dsy) / 2;\n        if (sy0 <= sy1) {\n          sy0 -= esy;\n          sy1 += esy;\n        } else {\n          sy0 += esy;\n          sy1 -= esy;\n        }\n      }\n    }\n    if (disableY) {\n      return;\n    }\n    const newYScale = oldYScale.solveDomain(y0, sy0, y1, sy1);\n    if (!newYScale.equals(oldYScale)) {\n      this.setYScale(newYScale);\n    }\n  },\n\n  conserveMomentum(input0: ScaleGestureInput<X, Y>): void {\n    let input1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (!input.coasting) {\n        continue;\n      } else if (input1 === void 0) {\n        input1 = input;\n      } else if (input.t0 < input1.t0) {\n        input1 = input;\n      }\n    }\n    if (input1 === void 0) {\n      return;\n    }\n    const xScale = this.getXScale();\n    const yScale = this.getYScale();\n    if (xScale !== null && yScale !== null) {\n      this.distributeXYMomentum(input0, input1);\n    } else if (xScale !== null) {\n      this.distributeXMomentum(input0, input1);\n    } else if (yScale !== null) {\n      this.distributeYMomentum(input0, input1);\n    }\n  },\n\n  distributeXYMomentum(input0: ScaleGestureInput<X, Y>, input1: ScaleGestureInput<X, Y>): void {\n    const vx0 = input0.vx;\n    const vy0 = input0.vy;\n    const vx1 = input1.vx;\n    const vy1 = input1.vy;\n    const v0 = Math.sqrt(vx0 * vx0 + vy0 * vy0);\n    const v1 = Math.sqrt(vx1 * vx1 + vy1 * vy1);\n    const uvx0 = v0 !== 0 ? vx0 / v0 : 0;\n    const uvy0 = v0 !== 0 ? vy0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? vx1 / v1 : 0;\n    const uvy1 = v1 !== 0 ? vy1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vx = uvx0 * v;\n    input0.vy = uvy0 * v;\n    input1.vx = uvx1 * v;\n    input1.vy = uvy1 * v;\n\n    const ax0 = input0.ax;\n    const ay0 = input0.ay;\n    const ax1 = input1.ax;\n    const ay1 = input1.ay;\n    const a0 = Math.sqrt(ax0 * ax0 + ay0 * ay0);\n    const a1 = Math.sqrt(ax1 * ax1 + ay1 * ay1);\n    const uax0 = a0 !== 0 ? ax0 / a0 : 0;\n    const uay0 = a0 !== 0 ? ay0 / a0 : 0;\n    const uax1 = a1 !== 0 ? ax1 / a1 : 0;\n    const uay1 = a1 !== 0 ? ay1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ax = uax0 * a;\n    input0.ay = uay0 * a;\n    input1.ax = uax1 * a;\n    input1.ay = uay1 * a;\n  },\n\n  distributeXMomentum(input0: ScaleGestureInput<X, Y>, input1: ScaleGestureInput<X, Y>): void {\n    const vx0 = input0.vx;\n    const vx1 = input1.vx;\n    const v0 = Math.abs(vx0);\n    const v1 = Math.abs(vx1);\n    const uvx0 = v0 !== 0 ? vx0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? vx1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vx = uvx0 * v;\n    input1.vx = uvx1 * v;\n\n    const ax0 = input0.ax;\n    const ax1 = input1.ax;\n    const a0 = Math.abs(ax0);\n    const a1 = Math.abs(ax1);\n    const uax0 = a0 !== 0 ? ax0 / a0 : 0;\n    const uax1 = a1 !== 0 ? ax1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ax = uax0 * a;\n    input1.ax = uax1 * a;\n  },\n\n  distributeYMomentum(input0: ScaleGestureInput<X, Y>, input1: ScaleGestureInput<X, Y>): void {\n    const vy0 = input0.vy;\n    const vy1 = input1.vy;\n    const v0 = Math.sqrt(vy0);\n    const v1 = Math.sqrt(vy1);\n    const uvy0 = v0 !== 0 ? vy0 / v0 : 0;\n    const uvy1 = v1 !== 0 ? vy1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vy = uvy0 * v;\n    input1.vy = uvy1 * v;\n\n    const ay0 = input0.ay;\n    const ay1 = input1.ay;\n    const a0 = Math.sqrt(ay0);\n    const a1 = Math.sqrt(ay1);\n    const uay0 = a0 !== 0 ? ay0 / a0 : 0;\n    const uay1 = a1 !== 0 ? ay1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ay = uay0 * a;\n    input1.ay = uay1 * a;\n  },\n\n  integrate(t: number): void {\n    let coast0: ScaleGestureInput<X, Y> | undefined;\n    let coast1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (!input.coasting) {\n        continue;\n      } else if (coast0 === void 0) {\n        coast0 = input;\n      } else if (coast1 === void 0) {\n        coast1 = input;\n        const dx0 = coast1.x - coast0.x;\n        const dy0 = coast1.y - coast0.y;\n        const d0 = Math.sqrt(dx0 * dx0 + dy0 * dy0);\n        coast0.integrateVelocity(t);\n        coast1.integrateVelocity(t);\n        const dx1 = coast1.x - coast0.x;\n        const dy1 = coast1.y - coast0.y;\n        const d1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const s = d1 / d0;\n        coast0.vx *= s;\n        coast0.vy *= s;\n        coast0.ax *= s;\n        coast0.ay *= s;\n        coast1.vx *= s;\n        coast1.vy *= s;\n        coast1.ax *= s;\n        coast1.ay *= s;\n      } else {\n        input.integrateVelocity(t);\n      }\n    }\n    if (coast0 !== void 0 && coast1 === void 0) {\n      coast0.integrateVelocity(t);\n    }\n  },\n\n  zoom(x: number, y: number, dz: number, event: Event | null): void {\n    if (dz === 0) {\n      return;\n    }\n    const t = event !== null ? event.timeStamp : performance.now();\n    const a = this.acceleration;\n    let ax = a * Math.cos(Math.PI / 4);\n    let ay = a * Math.sin(Math.PI / 4);\n    const vMax = this.velocityMax;\n    const vx = 0.5 * vMax * Math.cos(Math.PI / 4);\n    const vy = 0.5 * vMax * Math.sin(Math.PI / 4);\n    const dx = (4 * vx * vx) / ax;\n    const dy = (4 * vy * vy) / ay;\n\n    const inputs = this.inputs as {[inputId: string]: ScaleGestureInput<X, Y> | undefined};\n    let zoom0 = inputs.zoom0;\n    let zoom1 = inputs.zoom1;\n    if (zoom0 !== void 0 && zoom1 !== void 0) {\n      const dt = t - zoom0.t;\n      if (dt > 0) {\n        const dzx = Math.abs(zoom1.x - zoom0.x) / 2;\n        const dzy = Math.abs(zoom1.y - zoom0.y) / 2;\n        dz = Math.min(Math.max(-vMax * dt, dz), vMax * dt);\n        const zx = (dz * dzx * Math.cos(Math.PI / 4)) / dx;\n        const zy = (dz * dzy * Math.sin(Math.PI / 4)) / dy;\n        ax = (ax * dzx) / dx;\n        ay = (ay * dzy) / dy;\n\n        zoom0.x += zx;\n        zoom0.y += zy;\n        zoom0.t = t;\n        zoom0.dx = zx;\n        zoom0.dy = zy;\n        zoom0.dt = dt;\n        zoom0.vx = zx / dt;\n        zoom0.vy = zy / dt;\n        zoom0.ax = zoom0.vx < 0 ? ax : zoom0.vx > 0 ? -ax : 0;\n        zoom0.ay = zoom0.vy < 0 ? ay : zoom0.vy > 0 ? -ay : 0;\n\n        zoom1.x -= zx;\n        zoom1.y -= zy;\n        zoom1.t = t;\n        zoom0.dx = -zx;\n        zoom0.dy = -zy;\n        zoom0.dt = dt;\n        zoom1.vx = -zx / dt;\n        zoom1.vy = -zy / dt;\n        zoom1.ax = zoom1.vx < 0 ? ax : zoom1.vx > 0 ? -ax : 0;\n        zoom1.ay = zoom1.vy < 0 ? ay : zoom1.vy > 0 ? -ay : 0;\n      }\n    } else {\n      this.interrupt(event);\n\n      if (dz < 0) {\n        zoom0 = this.createInput(\"zoom0\", \"unknown\", false, x - dx, y - dy, t);\n        zoom0.vx = -vx;\n        zoom0.vy = -vy;\n        zoom0.ax = ax;\n        zoom0.ay = ay;\n        zoom1 = this.createInput(\"zoom1\", \"unknown\", false, x + dx, y + dy, t);\n        zoom1.vx = vx;\n        zoom1.vy = vy;\n        zoom1.ax = -ax;\n        zoom1.ay = -ay;\n      } else {\n        zoom0 = this.createInput(\"zoom0\", \"unknown\", false, x - dx, y - dy, t);\n        zoom0.vx = vx;\n        zoom0.vy = vy;\n        zoom0.ax = -ax;\n        zoom0.ay = -ay;\n        zoom1 = this.createInput(\"zoom1\", \"unknown\", false, x + dx, y + dy, t);\n        zoom1.vx = -vx;\n        zoom1.vy = -vy;\n        zoom1.ax = ax;\n        zoom1.ay = ay;\n      }\n\n      inputs.zoom0 = zoom0;\n      inputs.zoom1 = zoom1;\n      (this as Mutable<typeof this>).inputCount += 2;\n      this.beginCoast(zoom0, event);\n      this.beginCoast(zoom1, event);\n    }\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.distanceMin = gesture.initDistanceMin();\n    return gesture;\n  },\n\n  specialize(template: G extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<G> {\n    let superClass = template.extends as FastenerClass<G> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const method = template.method;\n      if (method === \"pointer\") {\n        superClass = PointerScaleGesture as unknown as FastenerClass<G>;\n      } else if (method === \"touch\") {\n        superClass = TouchScaleGesture as unknown as FastenerClass<G>;\n      } else if (method === \"mouse\") {\n        superClass = MouseScaleGesture as unknown as FastenerClass<G>;\n      } else if (typeof PointerEvent !== \"undefined\") {\n        superClass = PointerScaleGesture as unknown as FastenerClass<G>;\n      } else if (typeof TouchEvent !== \"undefined\") {\n        superClass = TouchScaleGesture as unknown as FastenerClass<G>;\n      } else {\n        superClass = MouseScaleGesture as unknown as FastenerClass<G>;\n      }\n    }\n    return superClass;\n  },\n\n  refine(gestureClass: FastenerClass<ScaleGesture<any, any, any, any>>): void {\n    super.refine(gestureClass);\n    const fastenerPrototype = gestureClass.prototype;\n\n    let flagsInit = fastenerPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"preserveAspectRatio\")) {\n      if (fastenerPrototype.preserveAspectRatio) {\n        flagsInit |= ScaleGesture.PreserveAspectRatioFlag;\n      } else {\n        flagsInit &= ~ScaleGesture.PreserveAspectRatioFlag;\n      }\n      delete (fastenerPrototype as ScaleGestureDescriptor<any, any, any, any>).preserveAspectRatio;\n    }\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"wheel\")) {\n      if (fastenerPrototype.wheel) {\n        flagsInit |= ScaleGesture.WheelFlag;\n      } else {\n        flagsInit &= ~ScaleGesture.WheelFlag;\n      }\n      delete (fastenerPrototype as ScaleGestureDescriptor<any, any, any, any>).wheel;\n    }\n    Object.defineProperty(fastenerPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n  },\n\n  PreserveAspectRatioFlag: 1 << (MomentumGesture.FlagShift + 0),\n  WheelFlag: 1 << (MomentumGesture.FlagShift + 1),\n  NeedsRescale: 1 << (MomentumGesture.FlagShift + 2),\n\n  FlagShift: MomentumGesture.FlagShift + 3,\n  FlagMask: (1 << (MomentumGesture.FlagShift + 3)) - 1,\n}))();\n\n/** @internal */\nexport interface PointerScaleGesture<R = any, V extends View = View, X = any, Y = any> extends ScaleGesture<R, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onWheel(event: WheelEvent): void;\n}\n\n/** @internal */\nexport const PointerScaleGesture = (<R, V extends View, X, Y, G extends PointerScaleGesture<any, any, any, any>>() => ScaleGesture.extend<PointerScaleGesture<R, V, X, Y>, ScaleGestureClass<G>>(\"PointerScaleGesture\", {\n  wheel: true,\n\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.addEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.addEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n    view.addEventListener(\"wheel\", this.onWheel as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.removeEventListener(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.removeEventListener(\"pointerdown\", this.onPointerDown as EventListener);\n    view.removeEventListener(\"wheel\", this.onWheel as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  },\n\n  updateInput(input: ScaleGestureInput<X, Y>, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  },\n\n  onPointerEnter(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\" || event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    if (!input.coasting) {\n      this.updateInput(input, event);\n    }\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onPointerLeave(event: PointerEvent): void {\n    if (event.pointerType !== \"mouse\") {\n      return;\n    }\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    } else if (!input.coasting) {\n      this.updateInput(input, event);\n    }\n    this.endHover(input, event);\n  },\n\n  onPointerDown(event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onPointerMove(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onPointerUp(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onPointerCancel(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n  },\n\n  onPointerLeaveDocument(event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n\n  onWheel(event: WheelEvent): void {\n    if (!this.wheel) {\n      return;\n    }\n    event.preventDefault();\n    this.zoom(event.clientX, event.clientY, event.deltaY, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    gesture.onWheel = gesture.onWheel.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface TouchScaleGesture<R = any, V extends View = View, X = any, Y = any> extends ScaleGesture<R, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchScaleGesture = (<R, V extends View, X, Y, G extends TouchScaleGesture<any, any, any, any>>() => ScaleGesture.extend<TouchScaleGesture<R, V, X, Y>, ScaleGestureClass<G>>(\"TouchScaleGesture\", {\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"touchstart\", this.onTouchStart as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    view.addEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.addEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.addEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  detachPressEvents(view: V): void {\n    view.removeEventListener(\"touchmove\", this.onTouchMove as EventListener);\n    view.removeEventListener(\"touchend\", this.onTouchEnd as EventListener);\n    view.removeEventListener(\"touchcancel\", this.onTouchCancel as EventListener);\n  },\n\n  updateInput(input: ScaleGestureInput<X, Y>, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onTouchStart(event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false,\n                                          touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  },\n\n  onTouchMove(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.movePress(input, event);\n    }\n  },\n\n  onTouchEnd(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.endPress(input, event);\n      if (!input.defaultPrevented) {\n        this.press(input, event);\n      }\n      this.endHover(input, event);\n    }\n  },\n\n  onTouchCancel(event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input === null) {\n        continue;\n      }\n      this.updateInput(input, event, touch);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  },\n}))();\n\n/** @internal */\nexport interface MouseScaleGesture<R = any, V extends View = View, X = any, Y = any> extends ScaleGesture<R, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onWheel(event: WheelEvent): void;\n}\n\n/** @internal */\nexport const MouseScaleGesture = (<R, V extends View, X, Y, G extends MouseScaleGesture<any, any, any, any>>() => ScaleGesture.extend<MouseScaleGesture<R, V, X, Y>, ScaleGestureClass<G>>(\"MouseScaleGesture\", {\n  wheel: true,\n\n  attachHoverEvents(view: V): void {\n    view.addEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.addEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.addEventListener(\"mousedown\", this.onMouseDown as EventListener);\n    view.addEventListener(\"wheel\", this.onWheel as EventListener);\n  },\n\n  detachHoverEvents(view: V): void {\n    view.removeEventListener(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.removeEventListener(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.removeEventListener(\"mousedown\", this.onMouseDown as EventListener);\n    view.removeEventListener(\"wheel\", this.onWheel as EventListener);\n  },\n\n  attachPressEvents(view: V): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  detachPressEvents(view: V): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  },\n\n  updateInput(input: ScaleGestureInput<X, Y>, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  },\n\n  onMouseEnter(event: MouseEvent): void {\n    if (event.buttons !== 0) {\n      return;\n    }\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true,\n                                        event.clientX, event.clientY, event.timeStamp);\n    if (!input.coasting) {\n      this.updateInput(input, event);\n    }\n    if (!input.hovering) {\n      this.beginHover(input, event);\n    }\n  },\n\n  onMouseLeave(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    } else if (!input.coasting) {\n      this.updateInput(input, event);\n    }\n    this.endHover(input, event);\n  },\n\n  onMouseDown(event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true,\n                                        event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  },\n\n  onMouseMove(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.movePress(input, event);\n  },\n\n  onMouseUp(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.endPress(input, event);\n    if (!input.defaultPrevented && event.button === 0) {\n      this.press(input, event);\n    }\n  },\n\n  onMouseLeaveDocument(event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input === null) {\n      return;\n    }\n    this.updateInput(input, event);\n    this.cancelPress(input, event);\n    this.endHover(input, event);\n  },\n\n  onWheel(event: WheelEvent): void {\n    if (!this.wheel) {\n      return;\n    }\n    event.preventDefault();\n    this.zoom(event.clientX, event.clientY, event.deltaY, event);\n  },\n},\n{\n  construct(gesture: G | null, owner: G extends Fastener<infer R, any, any> ? R : never): G {\n    gesture = super.construct(gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    gesture.onWheel = gesture.onWheel.bind(gesture);\n    return gesture;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport type ViewportOrientation = \"portrait\" | \"landscape\";\n\n/** @public */\nexport type ViewportColorScheme = \"dark\" | \"light\" | \"no-preference\";\n\n/** @public */\nexport interface LayoutViewport {\n  readonly width: number;\n  readonly height: number;\n  readonly pageLeft: number;\n  readonly pageTop: number;\n}\n\n/** @public */\nexport const LayoutViewport = {\n  equal(x: LayoutViewport | null | undefined, y: LayoutViewport | null | undefined): boolean {\n    if (x === y) {\n      return true;\n    } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n      return x.width === y.width\n          && x.height === y.height\n          && x.pageLeft === y.pageLeft\n          && x.pageTop === y.pageTop;\n    }\n    return false;\n  },\n};\n\n/** @public */\nexport interface VisualViewport {\n  readonly width: number;\n  readonly height: number;\n  readonly pageLeft: number;\n  readonly pageTop: number;\n  readonly offsetLeft: number;\n  readonly offsetTop: number;\n  readonly scale: number;\n}\n\n/** @public */\nexport const VisualViewport = {\n  equal(x: VisualViewport | null | undefined, y: VisualViewport | null | undefined): boolean {\n    if (x === y) {\n      return true;\n    } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n      return x.width === y.width\n          && x.height === y.height\n          && x.pageLeft === y.pageLeft\n          && x.pageTop === y.pageTop\n          && x.offsetLeft === y.offsetLeft\n          && x.offsetTop === y.offsetTop\n          && x.scale === y.scale;\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {EventTimer} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {ViewIdiom} from \"./View\";\nimport {ViewInsets} from \"./View\";\nimport type {ViewportOrientation} from \"./Viewport\";\nimport type {ViewportColorScheme} from \"./Viewport\";\nimport {LayoutViewport} from \"./Viewport\";\nimport {VisualViewport} from \"./Viewport\";\n\n/** @public */\nexport interface ViewportServiceObserver<S extends ViewportService = ViewportService> extends ServiceObserver<S> {\n  serviceDidScrollLayoutViewport?(layoutViewport: LayoutViewport, service: S): void;\n\n  serviceDidResizeLayoutViewport?(layoutViewport: LayoutViewport, service: S): void;\n\n  serviceDidResizeVisualViewport?(visualViewport: VisualViewport, service: S): void;\n\n  serviceDidResizeViewportSafeArea?(safeArea: ViewInsets, service: S): void;\n\n  serviceDidSetViewportOrientation?(orientation: ViewportOrientation, service: S): void;\n\n  serviceDidSetViewportColorScheme?(colorScheme: ViewportColorScheme, service: S): void;\n\n  serviceDidSetViewIdiom?(viewIdiom: ViewIdiom, service: S): void;\n}\n\n/** @public */\nexport class ViewportService extends Service {\n  declare readonly observerType?: Class<ViewportServiceObserver>;\n\n  @Property({\n    valueType: LayoutViewport,\n    initValue(): LayoutViewport {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const layoutViewport = this.detect();\n        this.setIntrinsic(layoutViewport);\n      }\n    },\n    detect(): LayoutViewport {\n      return {\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n        pageLeft: window.pageXOffset,\n        pageTop: window.pageYOffset,\n      };\n    },\n    didSetValue(newLayoutViewport: LayoutViewport, oldLayoutViewport: LayoutViewport): void {\n      if (newLayoutViewport.width !== oldLayoutViewport.width || newLayoutViewport.height !== oldLayoutViewport.height) {\n        this.owner.callObservers(\"serviceDidResizeLayoutViewport\", newLayoutViewport, this.owner);\n        this.owner.safeArea.update();\n        this.owner.viewIdiom.update();\n      } else {\n        this.owner.callObservers(\"serviceDidScrollLayoutViewport\", newLayoutViewport, this.owner);\n      }\n    },\n    equalValues: LayoutViewport.equal,\n  })\n  readonly layoutViewport!: Property<this, LayoutViewport> & {\n    update(): void,\n    detect(): LayoutViewport,\n  };\n\n  @EventTimer({\n    delay: 33,\n    eventType: [\"resize\", \"scroll\"],\n    initTarget(): EventTarget | null {\n      if (typeof window !== \"undefined\") {\n        return window;\n      }\n      return null;\n    },\n    handle(event: Event): void {\n      this.owner.layoutViewport.update();\n    },\n  })\n  readonly layoutViewportChange!: EventTimer<this>;\n\n  @Property({\n    valueType: VisualViewport,\n    initValue(): VisualViewport {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const visualViewport = this.detect();\n        this.setIntrinsic(visualViewport);\n      }\n    },\n    detect(): VisualViewport {\n      let visualViewport: VisualViewport;\n      if (window.visualViewport !== void 0 && window.visualViewport !== null) {\n        visualViewport = {\n          width: window.visualViewport.width,\n          height: window.visualViewport.height,\n          pageLeft: window.visualViewport.pageLeft,\n          pageTop: window.visualViewport.pageTop,\n          offsetLeft: window.visualViewport.offsetLeft,\n          offsetTop: window.visualViewport.offsetTop,\n          scale: window.visualViewport.scale,\n        };\n      } else {\n        visualViewport = {\n          width: document.documentElement.clientWidth,\n          height: document.documentElement.clientHeight,\n          pageLeft: window.pageXOffset,\n          pageTop: window.pageYOffset,\n          offsetLeft: 0,\n          offsetTop: 0,\n          scale: 1,\n        };\n      }\n      return visualViewport;\n    },\n    didSetValue(visualViewport: VisualViewport): void {\n      this.owner.callObservers(\"serviceDidResizeVisualViewport\", visualViewport, this.owner);\n    },\n    equalValues: VisualViewport.equal,\n  })\n  readonly visualViewport!: Property<this, VisualViewport> & {\n    update(): void,\n    detect(): VisualViewport,\n  };\n\n  @EventTimer({\n    delay: 33,\n    eventType: \"resize\",\n    initTarget(): EventTarget | null {\n      if (typeof window !== \"undefined\" && window.visualViewport !== void 0) {\n        return window.visualViewport;\n      }\n      return null;\n    },\n    handle(event: Event): void {\n      this.owner.visualViewport.update();\n    },\n  })\n  readonly visualViewportChange!: EventTimer<this>;\n\n  @Property({\n    valueType: ViewInsets,\n    value: ViewInsets.zero(),\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const safeArea = this.detect();\n        this.setIntrinsic(safeArea);\n      }\n    },\n    detect(): ViewInsets {\n      let safeArea: ViewInsets;\n      try {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const insetTop = Length.parse(documentStyle.getPropertyValue(\"--safe-area-inset-top\")).pxValue();\n        const insetRight = Length.parse(documentStyle.getPropertyValue(\"--safe-area-inset-right\")).pxValue();\n        const insetBottom = Length.parse(documentStyle.getPropertyValue(\"--safe-area-inset-bottom\")).pxValue();\n        const insetLeft = Length.parse(documentStyle.getPropertyValue(\"--safe-area-inset-left\")).pxValue();\n        safeArea = {insetTop, insetRight, insetBottom, insetLeft};\n      } catch (swallow) {\n        safeArea = ViewInsets.zero();\n      }\n      return safeArea;\n    },\n    didSetValue(safeArea: ViewInsets): void {\n      this.owner.callObservers(\"serviceDidResizeViewportSafeArea\", safeArea, this.owner);\n    },\n    equalValues: ViewInsets.equal,\n    didMount(): void {\n      if (typeof CSS !== \"undefined\" && CSS.supports !== void 0 &&\n          CSS.supports(\"--safe-area-inset-top: env(safe-area-inset-top)\")) {\n        const documentStyle = document.documentElement.style;\n        documentStyle.setProperty(\"--safe-area-inset-top\", \"env(safe-area-inset-top)\");\n        documentStyle.setProperty(\"--safe-area-inset-right\", \"env(safe-area-inset-right)\");\n        documentStyle.setProperty(\"--safe-area-inset-bottom\", \"env(safe-area-inset-bottom)\");\n        documentStyle.setProperty(\"--safe-area-inset-left\", \"env(safe-area-inset-left)\");\n        this.update();\n      }\n    },\n  })\n  readonly safeArea!: Property<this, ViewInsets> & {\n    update(): void,\n    detect(): ViewInsets,\n  };\n\n  @Property({\n    valueType: String,\n    initValue(): ViewportOrientation {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const orientation = this.detect();\n        this.setIntrinsic(orientation);\n      }\n    },\n    detect(): ViewportOrientation {\n      let orientation: ViewportOrientation;\n      if (typeof window !== \"undefined\" && window.matchMedia(\"(orientation: portrait)\").matches) {\n        orientation = \"portrait\";\n      } else if (typeof window !== \"undefined\" && window.matchMedia(\"(orientation: landscape)\").matches) {\n        orientation = \"landscape\";\n      } else {\n        orientation = \"landscape\";\n      }\n      return orientation;\n    },\n    didSetValue(orientation: ViewportOrientation): void {\n      this.owner.callObservers(\"serviceDidSetViewportOrientation\", orientation, this.owner);\n      this.owner.safeArea.update();\n      this.owner.viewIdiom.update();\n    },\n  })\n  readonly orientation!: Property<this, ViewportOrientation> & {\n    update(): void,\n    detect(): ViewportOrientation,\n  };\n\n  @EventHandler({\n    eventType: \"change\",\n    initTarget(): EventTarget | null {\n      if (typeof window !== \"undefined\") {\n        return window.matchMedia(\"(orientation: landscape)\");\n      }\n      return null;\n    },\n    handle(event: MediaQueryListEvent): void {\n      this.owner.orientation.update();\n    },\n  })\n  readonly orientationChange!: EventHandler<this>;\n\n  @Property({\n    valueType: String,\n    initValue(): ViewportColorScheme {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const colorScheme = this.detect();\n        this.setIntrinsic(colorScheme);\n      }\n    },\n    detect(): ViewportColorScheme {\n      let colorScheme: ViewportColorScheme;\n      if (typeof window !== \"undefined\" && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        colorScheme = \"dark\";\n      } else if (typeof window !== \"undefined\" && window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n        colorScheme = \"light\";\n      } else {\n        colorScheme = \"no-preference\";\n      }\n      return colorScheme;\n    },\n    didSetValue(colorScheme: ViewportColorScheme): void {\n      this.owner.callObservers(\"serviceDidSetViewportColorScheme\", colorScheme, this.owner);\n    },\n  })\n  readonly colorScheme!: Property<this, ViewportColorScheme> & {\n    update(): void,\n    detect(): ViewportColorScheme,\n  };\n\n  @EventHandler({\n    eventType: \"change\",\n    initTarget(): EventTarget | null {\n      if (typeof window !== \"undefined\") {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\");\n      }\n      return null;\n    },\n    handle(event: MediaQueryListEvent): void {\n      this.owner.colorScheme.update();\n    },\n  })\n  readonly colorSchemeChange!: EventHandler<this>;\n\n  @Property({\n    valueType: String,\n    initValue(): ViewIdiom {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const viewIdiom = this.detect();\n        this.setIntrinsic(viewIdiom);\n      }\n    },\n    detect(): ViewIdiom {\n      let viewIdiom: ViewIdiom;\n      const viewport = this.owner.layoutViewport.value;\n      if (viewport.width < 600) {\n        viewIdiom = \"mobile\";\n      } else if (viewport.width < 800) {\n        viewIdiom = \"tablet\";\n      } else {\n        viewIdiom = \"desktop\";\n      }\n      return viewIdiom;\n    },\n    didSetValue(viewIdiom: ViewIdiom): void {\n      return this.owner.callObservers(\"serviceDidSetViewIdiom\", viewIdiom, this.owner);\n    },\n  })\n  readonly viewIdiom!: Property<this, ViewIdiom> & {\n    update(): void,\n    detect(): ViewIdiom,\n  };\n\n  @EventTimer({\n    delay: 100, // work around safe area not available on standalone load\n    eventType: \"load\",\n    initTarget(): EventTarget | null {\n      if (typeof window !== \"undefined\") {\n        return window;\n      }\n      return null;\n    },\n    handle(event: Event): void {\n      this.owner.layoutViewport.update();\n      this.owner.visualViewport.update();\n      this.owner.safeArea.update();\n      this.owner.orientation.update();\n      this.owner.colorScheme.update();\n    },\n  })\n  readonly load!: EventTimer<this>;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {ViewIdiom} from \"./View\";\nimport type {ViewInsets} from \"./View\";\nimport type {ViewFlags} from \"./View\";\nimport {View} from \"./View\";\nimport {ViewSet} from \"./ViewSet\";\nimport type {ViewportOrientation} from \"./Viewport\";\nimport type {LayoutViewport} from \"./Viewport\";\nimport type {VisualViewport} from \"./Viewport\";\nimport {ViewportService} from \"./ViewportService\";\n\n/** @public */\nexport interface DisplayerServiceObserver<S extends DisplayerService = DisplayerService> extends ServiceObserver<S> {\n  serviceWillAttachRoot?(rootView: View, service: S): void;\n\n  serviceDidAttachRoot?(rootView: View, service: S): void;\n\n  serviceWillDetachRoot?(rootView: View, service: S): void;\n\n  serviceDidDetachRoot?(rootView: View, service: S): void;\n}\n\n/** @public */\nexport class DisplayerService extends Service {\n  constructor() {\n    super();\n    this.updateFlags = 0;\n    this.updateTime = performance.now();\n    this.updateDelay = DisplayerService.MinUpdateDelay;\n    this.processTimer = 0;\n    this.displayFrame = 0;\n\n    this.runProcessPass = this.runProcessPass.bind(this);\n    this.runDisplayPass = this.runDisplayPass.bind(this);\n  }\n\n  declare readonly observerType?: Class<DisplayerServiceObserver>;\n\n  @ViewSet({\n    initView(rootView: View): void {\n      this.owner.requestUpdate(rootView, rootView.flags & View.UpdateMask, false);\n      const safeArea = this.owner.viewport.getService().safeArea.value;\n      rootView.edgeInsets.setValue(safeArea, Affinity.Inherited);\n    },\n    willAttachView(rootView: View): void {\n      this.owner.callObservers(\"serviceWillAttachRoot\", rootView, this.owner);\n    },\n    didAttachView(rootView: View): void {\n      this.owner.callObservers(\"serviceDidAttachRoot\", rootView, this.owner);\n    },\n    willDetachView(rootView: View): void {\n      this.owner.callObservers(\"serviceWillDetachRoot\", rootView, this.owner);\n    },\n    didDetachView(rootView: View): void {\n      this.owner.callObservers(\"serviceDidDetachRoot\", rootView, this.owner);\n    },\n    updateSafeArea(safeArea: ViewInsets): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.edgeInsets.setValue(safeArea, Affinity.Inherited);\n      }\n    },\n  })\n  readonly roots!: ViewSet<this, View> & {\n    /** @internal */\n    updateSafeArea(safeArea: ViewInsets): void,\n  };\n\n  @Provider({\n    serviceType: ViewportService,\n    observes: true,\n    initService(viewportService: ViewportService): void {\n      this.owner.roots.updateSafeArea(viewportService.safeArea.value);\n    },\n    serviceDidScrollLayoutViewport(layoutViewport: LayoutViewport): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.requireUpdate(View.NeedsScroll);\n      }\n    },\n    serviceDidResizeLayoutViewport(layoutViewport: LayoutViewport): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.requireUpdate(View.NeedsResize | View.NeedsScroll);\n      }\n    },\n    serviceDidResizeVisualViewport(visualViewport: VisualViewport): void {\n      // hook\n    },\n    serviceDidResizeViewportSafeArea(safeArea: ViewInsets): void {\n      this.owner.roots.updateSafeArea(safeArea);\n    },\n    serviceDidSetViewportOrientation(orientation: ViewportOrientation): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.requireUpdate(View.NeedsResize | View.NeedsScroll | View.NeedsLayout);\n      }\n    },\n    serviceDidSetViewIdiom(viewIdiom: ViewIdiom): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.requireUpdate(View.NeedsResize | View.NeedsLayout);\n      }\n    }\n  })\n  readonly viewport!: Provider<this, ViewportService> & Observes<ViewportService>;\n\n  /** @internal */\n  readonly updateFlags: ViewFlags;\n\n  /** @internal */\n  setUpdateFlags(updateFlags: ViewFlags): void {\n    (this as Mutable<this>).updateFlags = updateFlags;\n  }\n\n  readonly updateTime: number;\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: View, updateFlags: ViewFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.updateFlags & ~updateFlags & View.UpdateMask;\n    if ((updateFlags & View.ProcessMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsProcess;\n    }\n    if ((updateFlags & View.DisplayMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsDisplay;\n    }\n    this.setUpdateFlags(this.updateFlags | deltaUpdateFlags);\n    if (immediate && (this.updateFlags & (View.ProcessingFlag | View.DisplayingFlag)) === 0 && this.updateDelay <= DisplayerService.MaxProcessInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const updateFlags = this.updateFlags;\n    if ((updateFlags & View.ProcessingFlag) === 0 && (updateFlags & View.ProcessMask) !== 0) {\n      this.scheduleProcessPass(this.updateDelay);\n    } else if ((updateFlags & View.DisplayingFlag) === 0 && (updateFlags & View.DisplayMask) !== 0) {\n      this.scheduleDisplayPass();\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelProcessPass();\n    this.cancelDisplayPass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.updateFlags & View.ProcessMask) !== 0) {\n      this.cancelUpdate();\n      this.runProcessPass(true);\n    }\n    if ((this.updateFlags & View.DisplayMask) !== 0 && this.updateDelay <= DisplayerService.MaxProcessInterval) {\n      this.cancelUpdate();\n      this.runDisplayPass(void 0, true);\n    }\n  }\n\n  /** @internal */\n  processTimer: number;\n\n  protected scheduleProcessPass(updateDelay: number): void {\n    if (this.processTimer === 0) {\n      this.processTimer = setTimeout(this.runProcessPass, updateDelay) as any;\n    }\n  }\n\n  protected cancelProcessPass(): void {\n    if (this.processTimer !== 0) {\n      clearTimeout(this.processTimer);\n      this.processTimer = 0;\n    }\n  }\n\n  protected runProcessPass(immediate: boolean = false): void {\n    if (!immediate) {\n      this.processTimer = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~View.ProcessMask | View.ProcessingFlag);\n    try {\n      const t0 = performance.now();\n      (this as Mutable<this>).updateTime = t0;\n\n      const rootViews = this.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        if ((rootView.flags & View.ProcessMask) !== 0) {\n          rootView.cascadeProcess(0);\n        }\n      }\n\n      const t1 = performance.now();\n      let processDelay = Math.max(DisplayerService.MinProcessInterval, this.updateDelay);\n      if (t1 - t0 > processDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), DisplayerService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(DisplayerService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelProcessPass();\n      if ((this.updateFlags & View.DisplayMask) !== 0) {\n        this.scheduleDisplayPass();\n      } else if ((this.updateFlags & View.ProcessMask) !== 0) {\n        if (immediate) {\n          processDelay = Math.max(DisplayerService.MaxProcessInterval, processDelay);\n        }\n        this.cancelDisplayPass();\n        this.scheduleProcessPass(processDelay);\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~View.ProcessingFlag);\n    }\n  }\n\n  /** @internal */\n  displayFrame: number;\n\n  protected scheduleDisplayPass(): void {\n    if (this.displayFrame === 0) {\n      this.displayFrame = requestAnimationFrame(this.runDisplayPass);\n    }\n  }\n\n  protected cancelDisplayPass(): void {\n    if (this.displayFrame !== 0) {\n      cancelAnimationFrame(this.displayFrame);\n      this.displayFrame = 0;\n    }\n  }\n\n  protected runDisplayPass(time?: number, immediate: boolean = false): void {\n    if (!immediate) {\n      this.displayFrame = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~View.DisplayMask | View.DisplayingFlag);\n    try {\n      if (time === void 0) {\n        time = performance.now();\n      }\n      (this as Mutable<this>).updateTime = time;\n\n      const rootViews = this.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        if ((rootView.flags & View.DisplayMask) !== 0) {\n          rootView.cascadeDisplay(0);\n        }\n      }\n\n      this.cancelDisplayPass();\n      if ((this.updateFlags & View.ProcessMask) !== 0) {\n        let processDelay = this.updateDelay;\n        if (immediate) {\n          processDelay = Math.max(DisplayerService.MaxProcessInterval, processDelay);\n        }\n        this.scheduleProcessPass(processDelay);\n      } else if ((this.updateFlags & View.DisplayMask) !== 0) {\n        this.cancelProcessPass();\n        this.scheduleDisplayPass();\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~View.DisplayingFlag);\n    }\n  }\n\n  get powerFlags(): ViewFlags {\n    return View.NeedsResize | View.NeedsScroll;\n  }\n\n  power(): void {\n    const rootViews = this.roots.views;\n    for (const viewId in rootViews) {\n      const rootView = rootViews[viewId]!;\n      rootView.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = DisplayerService.MinUpdateDelay;\n  }\n\n  @EventHandler({\n    eventType: \"visibilitychange\",\n    target: typeof document !== \"undefined\" ? document : null,\n    handle(event: Event): void {\n      if (document.visibilityState === \"visible\") {\n        this.owner.power();\n      } else {\n        this.owner.unpower();\n      }\n    },\n  })\n  readonly visibilityChange!: EventHandler<this>;\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinProcessInterval: number = 12;\n  /** @internal */\n  static MaxProcessInterval: number = 33;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport type {Constraint} from \"@swim/constraint\";\nimport type {ConstraintContext} from \"@swim/constraint\";\nimport {ConstraintSolver} from \"@swim/constraint\";\n\n/** @public */\nexport interface SolverServiceObserver<S extends SolverService = SolverService> extends ServiceObserver<S> {\n}\n\n/** @public */\nexport class SolverService extends Service implements ConstraintContext {\n  constructor() {\n    super();\n    this.solver = this.createSolver();\n  }\n\n  declare readonly observerType?: Class<SolverServiceObserver>;\n\n  readonly solver: ConstraintSolver;\n\n  /** @internal */\n  protected createSolver(): ConstraintSolver {\n    return new ConstraintSolver();\n  }\n\n  /** @override */\n  activateConstraint(constraint: Constraint): void {\n    this.solver.addConstraint(constraint);\n  }\n\n  /** @override */\n  deactivateConstraint(constraint: Constraint): void {\n    this.solver.removeConstraint(constraint);\n  }\n\n  /** @override */\n  activateConstraintVariable(variable: ConstraintVariable): void {\n    this.solver.addConstraintVariable(variable);\n  }\n\n  /** @override */\n  deactivateConstraintVariable(variable: ConstraintVariable): void {\n    this.solver.removeConstraintVariable(variable);\n  }\n\n  /** @override */\n  setConstraintVariable(variable: ConstraintVariable, value: number): void {\n    this.solver.setConstraintVariable(variable, value);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport {Mood} from \"@swim/theme\";\nimport {MoodVector} from \"@swim/theme\";\nimport {Theme} from \"@swim/theme\";\nimport {ThemeMatrix} from \"@swim/theme\";\nimport {View} from \"./View\";\nimport {ViewSet} from \"./ViewSet\";\nimport type {ViewportColorScheme} from \"./Viewport\";\nimport {ViewportService} from \"./ViewportService\";\n\n/** @public */\nexport interface StylerServiceObserver<S extends StylerService = StylerService> extends ServiceObserver<S> {\n  serviceWillAttachRoot?(rootView: View, service: S): void;\n\n  serviceDidAttachRoot?(rootView: View, service: S): void;\n\n  serviceWillDetachRoot?(rootView: View, service: S): void;\n\n  serviceDidDetachRoot?(rootView: View, service: S): void;\n\n  serviceDidSetTheme?(theme: ThemeMatrix, service: S): void;\n\n  serviceDidSetMood?(mood: MoodVector, service: S): void;\n\n  serviceWillApplyTheme?(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, service: S): void;\n\n  serviceDidApplyTheme?(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, service: S): void;\n}\n\n/** @public */\nexport class StylerService extends Service {\n  declare readonly observerType?: Class<StylerServiceObserver>;\n\n  @ViewSet({\n    initView(rootView: View): void {\n      rootView.mood.setValue(this.owner.mood.value, Affinity.Inherited);\n      rootView.theme.setValue(this.owner.theme.value, Affinity.Inherited);\n      rootView.requireUpdate(View.NeedsChange);\n    },\n    willAttachView(rootView: View): void {\n      this.owner.callObservers(\"serviceWillAttachRoot\", rootView, this.owner);\n    },\n    didAttachView(rootView: View): void {\n      this.owner.callObservers(\"serviceDidAttachRoot\", rootView, this.owner);\n    },\n    willDetachView(rootView: View): void {\n      this.owner.callObservers(\"serviceWillDetachRoot\", rootView, this.owner);\n    },\n    didDetachView(rootView: View): void {\n      this.owner.callObservers(\"serviceDidDetachRoot\", rootView, this.owner);\n    },\n  })\n  readonly roots!: ViewSet<this, View>;\n\n  @Provider({\n    serviceType: ViewportService,\n    observes: true,\n    serviceDidSetViewportColorScheme(colorScheme: ViewportColorScheme): void {\n      this.owner.theme.update();\n    },\n  })\n  readonly viewport!: Provider<this, ViewportService> & Observes<ViewportService>;\n\n  @Property({\n    valueType: ThemeMatrix,\n    initValue(): ThemeMatrix {\n      return this.detect();\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        const theme = this.detect();\n        this.setIntrinsic(theme);\n      }\n    },\n    detect(): ThemeMatrix {\n      const viewportService = this.owner.viewport.getService();\n      const colorScheme = viewportService.colorScheme.value;\n      if (colorScheme === \"dark\") {\n        return Theme.dark;\n      } else {\n        return Theme.light;\n      }\n    },\n    didSetValue(theme: ThemeMatrix): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.theme.setValue(theme, Affinity.Inherited);\n        rootView.requireUpdate(View.NeedsChange);\n      }\n      this.owner.callObservers(\"serviceDidSetTheme\", theme, this.owner);\n    },\n  })\n  readonly theme!: Property<this, ThemeMatrix> & {\n    update(): void,\n    detect(): ThemeMatrix,\n  };\n\n  @Property({\n    valueType: MoodVector,\n    initValue(): MoodVector {\n      return Mood.default;\n    },\n    didSetValue(mood: MoodVector): void {\n      const rootViews = this.owner.roots.views;\n      for (const viewId in rootViews) {\n        const rootView = rootViews[viewId]!;\n        rootView.mood.setValue(mood, Affinity.Inherited);\n        rootView.requireUpdate(View.NeedsChange);\n      }\n      this.owner.callObservers(\"serviceDidSetMood\", mood, this.owner);\n    },\n  })\n  readonly mood!: Property<this, MoodVector>;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\n\n/** @public */\nexport interface AttributeContext {\n  getAttribute(attributeName: string): string | null;\n\n  setAttribute(attributeName: string, value: unknown): this;\n}\n\n/** @public */\nexport const AttributeContext = {\n  [Symbol.hasInstance](instance: unknown): instance is AttributeContext {\n    return Objects.hasAllKeys<AttributeContext>(instance, \"getAttribute\", \"setAttribute\");\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport type {ThemeAnimatorDescriptor} from \"@swim/theme\";\nimport type {ThemeAnimatorClass} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {Look} from \"@swim/theme\";\nimport {AttributeContext} from \"./AttributeContext\";\n\n/** @public */\nexport interface AttributeAnimatorDescriptor<R, T> extends ThemeAnimatorDescriptor<R, T> {\n  extends?: Proto<AttributeAnimator<any, any, any>> | boolean | null;\n  attributeName?: string;\n}\n\n/** @public */\nexport interface AttributeAnimatorClass<A extends AttributeAnimator<any, any, any> = AttributeAnimator<any, any, any>> extends ThemeAnimatorClass<A> {\n}\n\n/** @public */\nexport interface AttributeAnimator<R = any, T = any, I extends any[] = [Look<NonNullable<T>> | T]> extends ThemeAnimator<R, T, I> {\n  /** @override */\n  get descriptorType(): Proto<AttributeAnimatorDescriptor<R, T>>;\n\n  get attributeName(): string;\n\n  get attributeValue(): T;\n\n  getAttributeValue(): NonNullable<T>;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  parse(value: string): T;\n}\n\n/** @public */\nexport const AttributeAnimator = (<R, T, I extends any[], A extends AttributeAnimator<any, any, any>>() => ThemeAnimator.extend<AttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"AttributeAnimator\", {\n  get attributeName(): string {\n    throw new Error(\"no attribute name\");\n  },\n\n  get attributeValue(): T {\n    if (AttributeContext[Symbol.hasInstance](this.owner)) {\n      const value = this.owner.getAttribute(this.attributeName);\n      if (value !== null) {\n        try {\n          return this.parse(value);\n        } catch (e) {\n          // swallow parse errors\n        }\n      }\n    }\n    return (Object.getPrototypeOf(this) as AttributeAnimator<R, T, I>).value;\n  },\n\n  getAttributeValue(): NonNullable<T> {\n    const attributeValue = this.attributeValue;\n    if (attributeValue === void 0 || attributeValue === null) {\n      let message = attributeValue + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"attribute value\";\n      throw new TypeError(message);\n    }\n    return attributeValue as NonNullable<T>;\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    if (AttributeContext[Symbol.hasInstance](this.owner)) {\n      this.owner.setAttribute(this.attributeName, newValue);\n    }\n    super.onSetValue(newValue, oldValue);\n  },\n\n  parse(): T {\n    throw new Error();\n  },\n},\n{\n  construct(animator: A | null, owner: A extends Fastener<infer R, any, any> ? R : never): A {\n    animator = super.construct(animator, owner) as A;\n    return animator;\n  },\n\n  specialize(template: A extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<A> {\n    let superClass = template.extends as FastenerClass<A> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const valueType = template.valueType;\n      if (valueType === String) {\n        superClass = StringAttributeAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Number) {\n        superClass = NumberAttributeAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Boolean) {\n        superClass = BooleanAttributeAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Length) {\n        superClass = LengthAttributeAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Color) {\n        superClass = ColorAttributeAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Transform) {\n        superClass = TransformAttributeAnimator as unknown as FastenerClass<A>;\n      } else {\n        superClass = this;\n      }\n    }\n    return superClass;\n  },\n}))();\n\n/** @internal */\nexport interface StringAttributeAnimator<R = any, T extends string | undefined = string | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const StringAttributeAnimator = (<R, T extends string | undefined, I extends any[], A extends StringAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<StringAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"StringAttributeAnimator\", {\n  valueType: String,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return value as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    return value as T;\n  },\n}))();\n\n/** @internal */\nexport interface NumberAttributeAnimator<R = any, T extends number | undefined = number | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const NumberAttributeAnimator = (<R, T extends number | undefined, I extends any[], A extends NumberAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<NumberAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"NumberAttributeAnimator\", {\n  valueType: Number,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    const number = +value;\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    if (typeof value === \"number\") {\n      return value as T;\n    }\n    const number = +(value as any);\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n}))();\n\n/** @internal */\nexport interface BooleanAttributeAnimator<R = any, T extends boolean | undefined = boolean | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const BooleanAttributeAnimator = (<R, T extends boolean | undefined, I extends any[], A extends BooleanAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<BooleanAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"BooleanAttributeAnimator\", {\n  valueType: Boolean,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return !!value as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    return !!value as T;\n  },\n}))();\n\n/** @internal */\nexport interface LengthAttributeAnimator<R = any, T extends Length | null | undefined = Length | null, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const LengthAttributeAnimator = (<R, T extends Length | null | undefined, I extends any[], A extends LengthAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<LengthAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"LengthAttributeAnimator\", {\n  valueType: Length,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Length.parse(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Length.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n\n/** @internal */\nexport interface ColorAttributeAnimator<R = any, T extends Color | null | undefined = Color | null, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const ColorAttributeAnimator = (<R, T extends Color | null | undefined, I extends any[], A extends ColorAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<ColorAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"ColorAttributeAnimator\", {\n  valueType: Color,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Color.parse(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Color.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n\n/** @internal */\nexport interface TransformAttributeAnimator<R = any, T extends Transform | null | undefined = Transform | null, I extends any[] = [Look<NonNullable<T>> | T]> extends AttributeAnimator<R, T, I> {\n}\n\n/** @internal */\nexport const TransformAttributeAnimator = (<R, T extends Transform | null | undefined, I extends any[], A extends TransformAttributeAnimator<any, any, any>>() => AttributeAnimator.extend<TransformAttributeAnimator<R, T, I>, AttributeAnimatorClass<A>>(\"TransformAttributeAnimator\", {\n  valueType: Transform,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Transform.parse(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Transform.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\n\n/** @public */\nexport interface StyleContext {\n  readonly node?: Node;\n\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined;\n\n  setStyle(propertyName: string, value: unknown, priority?: string): this;\n}\n\n/** @public */\nexport const StyleContext = {\n  [Symbol.hasInstance](instance: unknown): instance is StyleContext {\n    return Objects.hasAllKeys<StyleContext>(instance, \"getStyle\", \"setStyle\");\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {LengthUnits} from \"@swim/math\";\nimport type {LengthBasis} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {PxLength} from \"@swim/math\";\nimport {EmLength} from \"@swim/math\";\nimport {RemLength} from \"@swim/math\";\nimport {PctLength} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {FontFamily} from \"@swim/style\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {BoxShadow} from \"@swim/style\";\nimport type {ThemeAnimatorDescriptor} from \"@swim/theme\";\nimport type {ThemeAnimatorClass} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {Look} from \"@swim/theme\";\nimport {StyleContext} from \"./StyleContext\";\n\n/** @public */\nexport interface StyleAnimatorDescriptor<R, T> extends ThemeAnimatorDescriptor<R, T> {\n  extends?: Proto<StyleAnimator<any, any, any>> | boolean | null;\n  propertyNames?: string | readonly string[];\n  priority?: string;\n}\n\n/** @public */\nexport interface StyleAnimatorClass<A extends StyleAnimator<any, any, any> = StyleAnimator> extends ThemeAnimatorClass<A> {\n}\n\n/** @public */\nexport interface StyleAnimator<R = any, T = any, I extends any[] = [Look<NonNullable<T>> | T]> extends ThemeAnimator<R, T, I> {\n  /** @override */\n  get descriptorType(): Proto<StyleAnimatorDescriptor<R, T>>;\n\n  get propertyNames(): string | readonly string[];\n\n  get propertyValue(): T;\n\n  getPropertyValue(): NonNullable<T>;\n\n  get computedValue(): T;\n\n  get cssValue(): T;\n\n  getCssValue(): NonNullable<T>;\n\n  get cssState(): T;\n\n  getCssState(): NonNullable<T>;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  initPriority(): string | undefined;\n\n  get priority(): string | undefined;\n\n  setPriority(priority: string | undefined): void;\n\n  /** @internal */\n  applyStyle(value: T, priority: string | undefined): void;\n\n  parse(value: string): T;\n\n  fromCssValue(value: CSSStyleValue): T;\n}\n\n/** @public */\nexport const StyleAnimator = (<R, T, I extends any[], A extends StyleAnimator<any, any, any>>() => ThemeAnimator.extend<StyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"StyleAnimator\", {\n  get propertyNames(): string | readonly string[] {\n    throw new Error(\"no property names\");\n  },\n\n  get propertyValue(): T {\n    if (StyleContext[Symbol.hasInstance](this.owner)) {\n      let value: T | CSSStyleValue | string | undefined = this.owner.getStyle(this.propertyNames);\n      if (typeof CSSStyleValue !== \"undefined\" && value instanceof CSSStyleValue) { // CSS Typed OM support\n        try {\n          value = this.fromCssValue(value);\n        } catch (e) {\n          value = \"\" + value; // coerce to string on decode error\n        }\n      }\n      if (typeof value === \"string\" && value.length !== 0) {\n        try {\n          return this.parse(value);\n        } catch (e) {\n          // swallow parse errors\n        }\n      }\n    }\n    return (Object.getPrototypeOf(this) as StyleAnimator<R, T, I>).value;\n  },\n\n  getPropertyValue(): NonNullable<T> {\n    const propertyValue = this.propertyValue;\n    if (propertyValue === void 0 || propertyValue === null) {\n      let message = propertyValue + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"property value\";\n      throw new TypeError(message);\n    }\n    return propertyValue as NonNullable<T>;\n  },\n\n  get computedValue(): T {\n    let computedValue: T | undefined;\n    const node = StyleContext[Symbol.hasInstance](this.owner) ? this.owner.node : void 0;\n    if (node instanceof Element) {\n      const styles = getComputedStyle(node);\n      const propertyNames = this.propertyNames;\n      let propertyValue = \"\";\n      if (typeof propertyNames === \"string\") {\n        propertyValue = styles.getPropertyValue(propertyNames);\n      } else {\n        for (let i = 0; i < propertyNames.length && propertyValue.length === 0; i += 1) {\n          propertyValue = styles.getPropertyValue(propertyNames[i]!);\n        }\n      }\n      if (propertyValue.length !== 0) {\n        try {\n          computedValue = this.parse(propertyValue);\n        } catch (e) {\n          // swallow parse errors\n        }\n      }\n    }\n    if (computedValue === void 0) {\n      computedValue = (Object.getPrototypeOf(this) as StyleAnimator<R, T, I>).value;\n    }\n    return computedValue;\n  },\n\n  get cssValue(): T {\n    const value = this.value;\n    if (!this.definedValue(value)) {\n      return this.computedValue;\n    }\n    return value;\n  },\n\n  getCssValue(): NonNullable<T> {\n    const cssValue = this.cssValue;\n    if (cssValue === void 0 || cssValue === null) {\n      let message = cssValue + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"css value\";\n      throw new TypeError(message);\n    }\n    return cssValue as NonNullable<T>;\n  },\n\n  get cssState(): T {\n    const state = this.state;\n    if (!this.definedValue(state)) {\n      return this.computedValue;\n    }\n    return state;\n  },\n\n  getCssState(): NonNullable<T> {\n    const cssState = this.cssState;\n    if (cssState === void 0 || cssState === null) {\n      let message = cssState + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"css state\";\n      throw new TypeError(message);\n    }\n    return cssState as NonNullable<T>;\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    this.applyStyle(newValue, this.priority);\n    super.onSetValue(newValue, oldValue);\n  },\n\n  priority: void 0,\n\n  initPriority(): string | undefined {\n    return (Object.getPrototypeOf(this) as StyleAnimator<R, T, I>).priority;\n  },\n\n  setPriority(priority: string | undefined): void {\n    (this as Mutable<typeof this>).priority = priority;\n    this.applyStyle(this.value, priority);\n  },\n\n  applyStyle(value: T, priority: string | undefined): void {\n    if (!StyleContext[Symbol.hasInstance](this.owner)) {\n      return;\n    }\n    const propertyNames = this.propertyNames;\n    if (typeof propertyNames === \"string\") {\n      this.owner.setStyle(propertyNames, value, priority);\n    } else {\n      for (let i = 0; i <  propertyNames.length; i += 1) {\n        this.owner.setStyle(propertyNames[i]!, value, priority);\n      }\n    }\n  },\n\n  parse(): T {\n    throw new Error(\"abstract\");\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    throw new Error(\"unsupported\");\n  },\n},\n{\n  construct(animator: A | null, owner: A extends Fastener<infer R, any, any> ? R : never): A {\n    animator = super.construct(animator, owner) as A;\n    (animator as Mutable<typeof animator>).priority = animator.initPriority();\n    return animator;\n  },\n\n  specialize(template: A extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<A> {\n    let superClass = template.extends as FastenerClass<A> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const valueType = template.valueType;\n      if (valueType === String) {\n        superClass = StringStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Number) {\n        superClass = NumberStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Length) {\n        superClass = LengthStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Color) {\n        superClass = ColorStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === FontFamily) {\n        superClass = FontFamilyStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === BoxShadow) {\n        superClass = BoxShadowStyleAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Transform) {\n        superClass = TransformStyleAnimator as unknown as FastenerClass<A>;\n      } else {\n        superClass = this;\n      }\n    }\n    return superClass;\n  },\n}))();\n\n/** @public */\nexport interface StringStyleAnimator<R = any, T extends string | undefined = string | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const StringStyleAnimator = (<R, T extends string | undefined, I extends any[], A extends StringStyleAnimator<any, any, any>>() => StyleAnimator.extend<StringStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"StringStyleAnimator\", {\n  valueType: String,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return value as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    return value.toString() as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    return value as T;\n  },\n}))();\n\n/** @public */\nexport interface NumberStyleAnimator<R = any, T extends number | undefined = number | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const NumberStyleAnimator = (<R, T extends number | undefined, I extends any[], A extends NumberStyleAnimator<any, any, any>>() => StyleAnimator.extend<NumberStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"NumberStyleAnimator\", {\n  valueType: Number,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    const number = +value;\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    if (value instanceof CSSNumericValue) {\n      return value.to(\"number\").value as T;\n    }\n    return void 0 as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    if (typeof value === \"number\") {\n      return value as T;\n    }\n    const number = +(value as any);\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n}))();\n\n/** @public */\nexport interface LengthStyleAnimator<R = any, T extends Length | null | undefined = Length | null, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I>, LengthBasis {\n  get units(): LengthUnits | undefined;\n\n  pxValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  emValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  remValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pctValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pxState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  emState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  remState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pctState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  px(basis?: LengthBasis | number, defaultValue?: number): PxLength;\n\n  em(basis?: LengthBasis | number, defaultValue?: number): EmLength;\n\n  rem(basis?: LengthBasis | number, defaultValue?: number): RemLength;\n\n  pct(basis?: LengthBasis | number, defaultValue?: number): PctLength;\n\n  to(units: LengthUnits, basis?: LengthBasis | number, defaultValue?: number): Length;\n\n  /** @override */\n  get emUnit(): Node | number | undefined;\n\n  /** @override */\n  get remUnit(): number | undefined;\n\n  /** @override */\n  get pctUnit(): number | undefined;\n\n  /** @override */\n  parse(value: string): T;\n\n  /** @override */\n  fromCssValue(value: CSSStyleValue): T;\n\n  /** @override */\n  equalValues(newValue: T, oldValue: T | undefined): boolean;\n\n  /** @override */\n  fromLike(value: T | LikeType<T>): T;\n}\n\n/** @public */\nexport const LengthStyleAnimator = (<R, T extends Length | null | undefined, I extends any[], A extends LengthStyleAnimator<any, any, any>>() => StyleAnimator.extend<LengthStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"LengthStyleAnimator\", {\n  valueType: Length,\n  value: null as T,\n\n  get units(): LengthUnits | undefined {\n    const value = this.cssValue;\n    return value !== void 0 && value !== null ? value.units : void 0;\n  },\n\n  pxValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pxValue(basis);\n  },\n\n  emValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.emValue(basis);\n  },\n\n  remValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.remValue(basis);\n  },\n\n  pctValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pctValue(basis);\n  },\n\n  pxState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pxValue(basis);\n  },\n\n  emState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.emValue(basis);\n  },\n\n  remState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.remValue(basis);\n  },\n\n  pctState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pctValue(basis);\n  },\n\n  px(basis?: LengthBasis | number, defaultValue?: number): PxLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return PxLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.px(basis);\n  },\n\n  em(basis?: LengthBasis | number, defaultValue?: number): EmLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return EmLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.em(basis);\n  },\n\n  rem(basis?: LengthBasis | number, defaultValue?: number): RemLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return RemLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.rem(basis);\n  },\n\n  pct(basis?: LengthBasis | number, defaultValue?: number): PctLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return PctLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pct(basis);\n  },\n\n  to(units: LengthUnits, basis?: LengthBasis | number, defaultValue?: number): Length {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return Length.of(defaultValue !== void 0 ? defaultValue : 0, units);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.to(units, basis);\n  },\n\n  get emUnit(): Node | number | undefined {\n    if (StyleContext[Symbol.hasInstance](this.owner)) {\n      const node = this.owner.node;\n      if (node !== void 0) {\n        return node;\n      }\n    }\n    return 0;\n  },\n\n  get remUnit(): number {\n    return 0;\n  },\n\n  get pctUnit(): number {\n    return 0;\n  },\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Length.parse(value) as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    return Length.fromCssValue(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Length.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n\n/** @public */\nexport interface ColorStyleAnimator<R = any, T extends Color | null | undefined = Color | null, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const ColorStyleAnimator = (<R, T extends Color | null | undefined, I extends any[], A extends ColorStyleAnimator<any, any, any>>() => StyleAnimator.extend<ColorStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"ColorStyleAnimator\", {\n  valueType: Color,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Color.parse(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Color.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n\n/** @public */\nexport interface FontFamilyStyleAnimator<R = any, T extends FontFamily | readonly FontFamily[] | undefined = FontFamily | readonly FontFamily[] | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const FontFamilyStyleAnimator = (<R, T extends FontFamily | readonly FontFamily[] | undefined, I extends any[], A extends FontFamilyStyleAnimator<any, any, any>>() => StyleAnimator.extend<FontFamilyStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"FontFamilyStyleAnimator\", {\n  valueType: FontFamily,\n\n  parse(value: string): T {\n    return Font.parse(value).family as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    return Font.family(value as FontFamily | readonly FontFamily[]).family as T;\n  },\n}))();\n\n/** @public */\nexport interface BoxShadowStyleAnimator<R = any, T extends BoxShadow | null | undefined = BoxShadow | null, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const BoxShadowStyleAnimator = (<R, T extends BoxShadow | null | undefined, I extends any[], A extends BoxShadowStyleAnimator<any, any, any>>() => StyleAnimator.extend<BoxShadowStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"BoxShadowStyleAnimator\", {\n  valueType: BoxShadow,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return BoxShadow.parse(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return BoxShadow.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n\n/** @public */\nexport interface TransformStyleAnimator<R = any, T extends Transform | null | undefined = Transform | null, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I> {\n}\n\n/** @public */\nexport const TransformStyleAnimator = (<R, T extends Transform | null | undefined, I extends any[], A extends TransformStyleAnimator<any, any, any>>() => StyleAnimator.extend<TransformStyleAnimator<R, T, I>, StyleAnimatorClass<A>>(\"TransformStyleAnimator\", {\n  valueType: Transform,\n  value: null as T,\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    }\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Transform.parse(value) as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    return Transform.fromCssValue(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Transform.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport {ConstraintExpression} from \"@swim/constraint\";\nimport type {ConstraintTerm} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport {ConstraintStrength} from \"@swim/constraint\";\nimport type {Constraint} from \"@swim/constraint\";\nimport {ConstraintScope} from \"@swim/constraint\";\nimport type {ConstraintSolver} from \"@swim/constraint\";\nimport type {LengthUnits} from \"@swim/math\";\nimport type {LengthBasis} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {PxLength} from \"@swim/math\";\nimport {EmLength} from \"@swim/math\";\nimport {RemLength} from \"@swim/math\";\nimport {PctLength} from \"@swim/math\";\nimport type {Look} from \"@swim/theme\";\nimport type {StyleAnimatorDescriptor} from \"./StyleAnimator\";\nimport type {StyleAnimatorClass} from \"./StyleAnimator\";\nimport {StyleContext} from \"./StyleContext\";\nimport {StyleAnimator} from \"./StyleAnimator\";\n\n/** @public */\nexport interface StyleConstraintAnimatorDescriptor<R, T> extends StyleAnimatorDescriptor<R, T> {\n  extends?: Proto<StyleConstraintAnimator<any, any, any>> | boolean | null;\n  strength?: ConstraintStrengthLike;\n  constrained?: boolean;\n}\n\n/** @public */\nexport interface StyleConstraintAnimatorClass<A extends StyleConstraintAnimator<any, any, any> = StyleConstraintAnimator> extends StyleAnimatorClass<A> {\n  /** @internal */\n  readonly ConstrainedFlag: FastenerFlags;\n  /** @internal */\n  readonly ConstrainingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface StyleConstraintAnimator<R = any, T = any, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleAnimator<R, T, I>, ConstraintVariable {\n  /** @override */\n  get descriptorType(): Proto<StyleConstraintAnimatorDescriptor<R, T>>;\n\n  /** @internal @override */\n  isExternal(): boolean;\n\n  /** @internal @override */\n  isDummy(): boolean;\n\n  /** @internal @override */\n  isInvalid(): boolean;\n\n  /** @override */\n  isConstant(): boolean;\n\n  /** @internal */\n  get constraintValue(): T;\n\n  /** @internal @override */\n  evaluateConstraintVariable(): void;\n\n  /** @internal @override */\n  updateConstraintSolution(value: number): void;\n\n  /** @internal @protected */\n  initStrength(): ConstraintStrength;\n\n  /** @override */\n  readonly strength: ConstraintStrength;\n\n  setStrength(strength: ConstraintStrengthLike): void;\n\n  /** @override */\n  get coefficient(): number;\n\n  /** @override */\n  get variable(): ConstraintVariable | null;\n\n  /** @override */\n  get terms(): ReadonlyMap<ConstraintVariable, number>;\n\n  /** @override */\n  get constant(): number;\n\n  /** @override */\n  plus(that: ConstraintExpressionLike): ConstraintExpression;\n\n  /** @override */\n  negative(): ConstraintTerm;\n\n  /** @override */\n  minus(that: ConstraintExpressionLike): ConstraintExpression;\n\n  /** @override */\n  times(scalar: number): ConstraintExpression;\n\n  /** @override */\n  divide(scalar: number): ConstraintExpression;\n\n  get constrained(): boolean;\n\n  constrain(constrained?: boolean): this;\n\n  /** @internal */\n  readonly conditionCount: number;\n\n  /** @internal @override */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal @override */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal */\n  get constraining(): boolean;\n\n  /** @internal */\n  startConstraining(): void;\n\n  /** @protected */\n  willStartConstraining(): void;\n\n  /** @protected */\n  onStartConstraining(): void;\n\n  /** @protected */\n  didStartConstraining(): void;\n\n  /** @internal */\n  stopConstraining(): void;\n\n  /** @protected */\n  willStopConstraining(): void;\n\n  /** @protected */\n  onStopConstraining(): void;\n\n  /** @protected */\n  didStopConstraining(): void;\n\n  /** @internal */\n  updateConstraintVariable(): void;\n\n  /** @protected @override */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @internal */\n  toNumber(value: T): number;\n}\n\n/** @public */\nexport const StyleConstraintAnimator = (<R, T, I extends any[], A extends StyleConstraintAnimator<any, any, any>>() => StyleAnimator.extend<StyleConstraintAnimator<R, T, I>, StyleConstraintAnimatorClass<A>>(\"StyleConstraintAnimator\", {\n  isExternal(): boolean {\n    return true;\n  },\n\n  isDummy(): boolean {\n    return false;\n  },\n\n  isInvalid(): boolean {\n    return false;\n  },\n\n  isConstant(): boolean {\n    return false;\n  },\n\n  get constraintValue(): T {\n    return this.computedValue;\n  },\n\n  evaluateConstraintVariable(): void {\n    const constraintScope = this.owner;\n    if (!ConstraintScope[Symbol.hasInstance](constraintScope) || this.constrained || !this.constraining) {\n      return;\n    }\n    const value = this.constraintValue;\n    if (!this.definedValue(value)) {\n      return;\n    }\n    constraintScope.setConstraintVariable(this, this.toNumber(value));\n  },\n\n  updateConstraintSolution(state: number): void {\n    if (this.constrained && this.toNumber(this.state) !== state) {\n      this.setState(state as unknown as T, Affinity.Reflexive);\n    }\n  },\n\n  initStrength(): ConstraintStrength {\n    let strength = (Object.getPrototypeOf(this) as StyleConstraintAnimator).strength as ConstraintStrength | undefined;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Strong;\n    }\n    return strength;\n  },\n\n  setStrength(strength: ConstraintStrengthLike): void {\n    (this as Mutable<typeof this>).strength = ConstraintStrength.fromLike(strength);\n  },\n\n  get coefficient(): number {\n    return 1;\n  },\n\n  get variable(): ConstraintVariable {\n    return this;\n  },\n\n  get terms(): ReadonlyMap<ConstraintVariable, number> {\n    const terms = new Map<ConstraintVariable, number>();\n    terms.set(this, 1);\n    return terms;\n  },\n\n  get constant(): number {\n    return 0;\n  },\n\n  plus(that: ConstraintExpressionLike): ConstraintExpression {\n    that = ConstraintExpression.fromLike(that);\n    if (this === that) {\n      return ConstraintExpression.product(2, this);\n    }\n    return ConstraintExpression.sum(this, that);\n  },\n\n  negative(): ConstraintTerm {\n    return ConstraintExpression.product(-1, this);\n  },\n\n  minus(that: ConstraintExpressionLike): ConstraintExpression {\n    that = ConstraintExpression.fromLike(that);\n    if (this === that) {\n      return ConstraintExpression.zero();\n    }\n    return ConstraintExpression.sum(this, that.negative());\n  },\n\n  times(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(scalar, this);\n  },\n\n  divide(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(1 / scalar, this);\n  },\n\n  get constrained(): boolean {\n    return (this.flags & StyleConstraintAnimator.ConstrainedFlag) !== 0;\n  },\n\n  constrain(constrained?: boolean): typeof this {\n    if (constrained === void 0) {\n      constrained = true;\n    }\n    const flags = this.flags;\n    if (constrained && (flags & StyleConstraintAnimator.ConstrainedFlag) === 0) {\n      this.setFlags(flags | StyleConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.stopConstraining();\n      }\n    } else if (!constrained && (flags & StyleConstraintAnimator.ConstrainedFlag) !== 0) {\n      this.setFlags(flags & ~StyleConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.startConstraining();\n        this.updateConstraintVariable();\n      }\n    }\n    return this;\n  },\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount += 1;\n    if (!this.constrained && this.conditionCount === 1 && this.mounted) {\n      this.startConstraining();\n      this.updateConstraintVariable();\n    }\n  },\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount -= 1;\n    if (!this.constrained && this.conditionCount === 0 && this.mounted) {\n      this.stopConstraining();\n    }\n  },\n\n  get constraining(): boolean {\n    return (this.flags & StyleConstraintAnimator.ConstrainingFlag) !== 0;\n  },\n\n  startConstraining(): void {\n    if ((this.flags & StyleConstraintAnimator.ConstrainingFlag) !== 0) {\n      return;\n    }\n    this.willStartConstraining();\n    this.setFlags(this.flags | StyleConstraintAnimator.ConstrainingFlag);\n    this.onStartConstraining();\n    this.didStartConstraining();\n  },\n\n  willStartConstraining(): void {\n    // hook\n  },\n\n  onStartConstraining(): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.addConstraintVariable(this);\n    }\n  },\n\n  didStartConstraining(): void {\n    // hook\n  },\n\n  stopConstraining(): void {\n    if ((this.flags & StyleConstraintAnimator.ConstrainingFlag) === 0) {\n      return;\n    }\n    this.willStopConstraining();\n    this.setFlags(this.flags & ~StyleConstraintAnimator.ConstrainingFlag);\n    this.onStopConstraining();\n    this.didStopConstraining();\n  },\n\n  willStopConstraining(): void {\n    // hook\n  },\n\n  onStopConstraining(): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.removeConstraintVariable(this);\n    }\n  },\n\n  didStopConstraining(): void {\n    // hook\n  },\n\n  updateConstraintVariable(): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      let value = this.value;\n      if (!this.definedValue(value)) {\n        value = this.constraintValue;\n      }\n      constraintScope.setConstraintVariable(this, this.toNumber(value));\n    }\n  },\n\n  onSetValue(newValue: T, oldValue: T): void {\n    super.onSetValue(newValue, oldValue);\n    const constraintScope = this.owner;\n    if (this.constraining && ConstraintScope[Symbol.hasInstance](constraintScope)) {\n      constraintScope.setConstraintVariable(this, newValue !== void 0 && newValue !== null ? this.toNumber(newValue) : 0);\n    }\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.startConstraining();\n    }\n  },\n\n  onUnmount(): void {\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.stopConstraining();\n    }\n    super.onUnmount();\n  },\n\n  toNumber(value: T): number {\n    return value !== void 0 && value !== null ? +value : 0;\n  },\n},\n{\n  construct(animator: A | null, owner: A extends Fastener<infer R, any, any> ? R : never): A {\n    animator = super.construct(animator, owner) as A;\n    (animator as Mutable<typeof animator>).strength = animator.initStrength();\n    (animator as Mutable<typeof animator>).conditionCount = 0;\n    return animator;\n  },\n\n  specialize(template: A extends {readonly descriptorType?: Proto<infer D>} ? D : never): FastenerClass<A> {\n    let superClass = template.extends as FastenerClass<A> | null | undefined;\n    if (superClass === void 0 || superClass === null) {\n      const valueType = template.valueType;\n      if (valueType === Number) {\n        superClass = NumberStyleConstraintAnimator as unknown as FastenerClass<A>;\n      } else if (valueType === Length) {\n        superClass = LengthStyleConstraintAnimator as unknown as FastenerClass<A>;\n      } else {\n        superClass = this;\n      }\n    }\n    return superClass;\n  },\n\n  refine(animatorClass: FastenerClass<StyleConstraintAnimator<any, any, any>>): void {\n    super.refine(animatorClass);\n    const animatorPrototype = animatorClass.prototype;\n\n    let flagsInit = animatorPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(animatorPrototype, \"constrained\")) {\n      if (animatorPrototype.constrained) {\n        flagsInit |= StyleConstraintAnimator.ConstrainedFlag;\n      } else {\n        flagsInit &= ~StyleConstraintAnimator.ConstrainedFlag;\n      }\n      delete (animatorPrototype as StyleConstraintAnimatorDescriptor<any, any>).constrained;\n    }\n    Object.defineProperty(animatorPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n\n    const strengthDescriptor = Object.getOwnPropertyDescriptor(animatorPrototype, \"strength\");\n    if (strengthDescriptor !== void 0 && \"value\" in strengthDescriptor) {\n      strengthDescriptor.value = ConstraintStrength.fromLike(strengthDescriptor.value);\n      Object.defineProperty(animatorPrototype, \"strength\", strengthDescriptor);\n    }\n  },\n\n  ConstrainedFlag: 1 << (StyleAnimator.FlagShift + 0),\n  ConstrainingFlag: 1 << (StyleAnimator.FlagShift + 1),\n\n  FlagShift: StyleAnimator.FlagShift + 2,\n  FlagMask: (1 << (StyleAnimator.FlagShift + 2)) - 1,\n}))();\n\n/** @public */\nexport interface NumberStyleConstraintAnimator<R = any, T extends number | undefined = number | undefined, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleConstraintAnimator<R, T, I> {\n}\n\n/** @public */\nexport const NumberStyleConstraintAnimator = (<R, T extends number | undefined, I extends any[], A extends NumberStyleConstraintAnimator<any, any, any>>() => StyleConstraintAnimator.extend<NumberStyleConstraintAnimator<R, T, I>, StyleConstraintAnimatorClass<A>>(\"NumberStyleConstraintAnimator\", {\n  valueType: Number,\n\n  toNumber(value: T): number {\n    return typeof value === \"number\" ? value : 0;\n  },\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    const number = +value;\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    if (value instanceof CSSNumericValue) {\n      return value.to(\"number\").value as T;\n    }\n    return void 0 as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    if (typeof value === \"number\") {\n      return value as T;\n    }\n    const number = +(value as any);\n    return isFinite(number) ? number as T : void 0 as T;\n  },\n}))();\n\n/** @public */\nexport interface LengthStyleConstraintAnimator<R = any, T extends Length | null | undefined = Length | null, I extends any[] = [Look<NonNullable<T>> | T]> extends StyleConstraintAnimator<R, T, I>, LengthBasis {\n  get units(): LengthUnits | undefined;\n\n  pxValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  emValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  remValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pctValue(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pxState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  emState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  remState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  pctState(basis?: LengthBasis | number, defaultValue?: number): number;\n\n  px(basis?: LengthBasis | number, defaultValue?: number): PxLength;\n\n  em(basis?: LengthBasis | number, defaultValue?: number): EmLength;\n\n  rem(basis?: LengthBasis | number, defaultValue?: number): RemLength;\n\n  pct(basis?: LengthBasis | number, defaultValue?: number): PctLength;\n\n  to(units: LengthUnits, basis?: LengthBasis | number, defaultValue?: number): Length;\n\n  /** @override */\n  get emUnit(): Node | number | undefined;\n\n  /** @override */\n  get remUnit(): number | undefined;\n\n  /** @override */\n  get pctUnit(): number | undefined;\n\n  /** @override */\n  parse(value: string): T;\n\n  /** @override */\n  fromCssValue(value: CSSStyleValue): T;\n\n  /** @override */\n  equalValues(newValue: T, oldValue: T | undefined): boolean;\n\n  /** @override */\n  fromLike(value: T | LikeType<T>): T;\n}\n\n/** @public */\nexport const LengthStyleConstraintAnimator = (<R, T extends Length | null | undefined, I extends any[], A extends LengthStyleConstraintAnimator<any, any, any>>() => StyleConstraintAnimator.extend<LengthStyleConstraintAnimator<R, T, I>, StyleConstraintAnimatorClass<A>>(\"LengthStyleConstraintAnimator\", {\n  valueType: Length,\n  value: null as T,\n\n  get units(): LengthUnits | undefined {\n    const value = this.cssValue;\n    return value !== void 0 && value !== null ? value.units : void 0;\n  },\n\n  pxValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pxValue(basis);\n  },\n\n  emValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.emValue(basis);\n  },\n\n  remValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.remValue(basis);\n  },\n\n  pctValue(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pctValue(basis);\n  },\n\n  pxState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pxValue(basis);\n  },\n\n  emState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.emValue(basis);\n  },\n\n  remState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.remValue(basis);\n  },\n\n  pctState(basis?: LengthBasis | number, defaultValue?: number): number {\n    const value = this.cssState;\n    if (value === void 0 || value === null) {\n      return defaultValue !== void 0 ? defaultValue : 0;\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pctValue(basis);\n  },\n\n  px(basis?: LengthBasis | number, defaultValue?: number): PxLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return PxLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.px(basis);\n  },\n\n  em(basis?: LengthBasis | number, defaultValue?: number): EmLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return EmLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.em(basis);\n  },\n\n  rem(basis?: LengthBasis | number, defaultValue?: number): RemLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return RemLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.rem(basis);\n  },\n\n  pct(basis?: LengthBasis | number, defaultValue?: number): PctLength {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return PctLength.of(defaultValue !== void 0 ? defaultValue : 0);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.pct(basis);\n  },\n\n  to(units: LengthUnits, basis?: LengthBasis | number, defaultValue?: number): Length {\n    const value = this.cssValue;\n    if (value === void 0 || value === null) {\n      return Length.of(defaultValue !== void 0 ? defaultValue : 0, units);\n    } else if (basis === void 0) {\n      basis = this;\n    }\n    return value.to(units, basis);\n  },\n\n  get emUnit(): Node | number | undefined {\n    const styleContext = this.owner;\n    if (StyleContext[Symbol.hasInstance](styleContext)) {\n      const node = styleContext.node;\n      if (node !== void 0) {\n        return node;\n      }\n    }\n    return 0;\n  },\n\n  get remUnit(): number {\n    return 0;\n  },\n\n  get pctUnit(): number {\n    return 0;\n  },\n\n  toNumber(value: T): number {\n    return value !== void 0 && value !== null ? value.pxValue() : 0;\n  },\n\n  equalValues(newValue: T, oldValue: T): boolean {\n    return newValue === oldValue;\n  },\n\n  parse(value: string): T {\n    return Length.parse(value) as T;\n  },\n\n  fromCssValue(value: CSSStyleValue): T {\n    return Length.fromCssValue(value) as T;\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    try {\n      return Length.fromLike(value) as T;\n    } catch (swallow) {\n      return null as T;\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport type {ConstraintProperty} from \"@swim/constraint\";\nimport type {ConstraintRelation} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport type {Constraint} from \"@swim/constraint\";\nimport {ConstraintScope} from \"@swim/constraint\";\nimport {Length} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {FontStyle} from \"@swim/style\";\nimport type {FontVariant} from \"@swim/style\";\nimport type {FontWeight} from \"@swim/style\";\nimport type {FontStretch} from \"@swim/style\";\nimport {FontFamily} from \"@swim/style\";\nimport type {FontLike} from \"@swim/style\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport type {LinearGradientLike} from \"@swim/style\";\nimport {LinearGradient} from \"@swim/style\";\nimport {BoxShadow} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {LengthOrLookLike} from \"@swim/theme\";\nimport type {ColorOrLookLike} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeContext} from \"@swim/theme\";\nimport {StyleAnimator} from \"./StyleAnimator\";\nimport {LengthStyleAnimator} from \"./StyleAnimator\";\nimport {LengthStyleConstraintAnimator} from \"./StyleConstraintAnimator\";\nimport type {AlignContent} from \"./csstypes\";\nimport type {AlignItems} from \"./csstypes\";\nimport type {AlignSelf} from \"./csstypes\";\nimport type {Appearance} from \"./csstypes\";\nimport type {BackgroundClip} from \"./csstypes\";\nimport type {BorderCollapse} from \"./csstypes\";\nimport type {BorderStyle} from \"./csstypes\";\nimport type {BoxSizing} from \"./csstypes\";\nimport type {CssCursor} from \"./csstypes\";\nimport type {CssDisplay} from \"./csstypes\";\nimport type {FlexBasis} from \"./csstypes\";\nimport type {FlexDirection} from \"./csstypes\";\nimport type {FlexWrap} from \"./csstypes\";\nimport type {JustifyContent} from \"./csstypes\";\nimport type {Overflow} from \"./csstypes\";\nimport type {OverscrollBehavior} from \"./csstypes\";\nimport type {PointerEvents} from \"./csstypes\";\nimport type {Position} from \"./csstypes\";\nimport type {TextAlign} from \"./csstypes\";\nimport type {TextDecorationStyle} from \"./csstypes\";\nimport type {TextTransform} from \"./csstypes\";\nimport type {TouchAction} from \"./csstypes\";\nimport type {UserSelect} from \"./csstypes\";\nimport type {VerticalAlign} from \"./csstypes\";\nimport type {Visibility} from \"./csstypes\";\nimport type {WhiteSpace} from \"./csstypes\";\nimport type {StyleContext} from \"./StyleContext\";\n\n/** @public */\nexport interface StyleAttributeDescriptor<R> extends FastenerDescriptor<R> {\n  extends?: Proto<StyleAttribute<any>> | boolean | null;\n}\n\n/** @public */\nexport interface StyleAttributeClass<F extends StyleAttribute<any> = StyleAttribute> extends FastenerClass<F> {\n  /** @internal */\n  pctWidthUnit(node: Node | undefined): number;\n\n  /** @internal */\n  pctHeightUnit(node: Node | undefined): number;\n}\n\n/** @public */\nexport interface StyleAttribute<R = any> extends Fastener<R>, ConstraintScope, ThemeContext, StyleContext {\n  /** @override */\n  get descriptorType(): Proto<StyleAttributeDescriptor<R>>;\n\n  /** @override */\n  get fastenerType(): Proto<StyleAttribute<any>>;\n\n  get alignContent(): StyleAnimator<this, AlignContent | undefined>;\n\n  get alignItems(): StyleAnimator<this, AlignItems | undefined>;\n\n  get alignSelf(): StyleAnimator<this, AlignSelf | undefined>;\n\n  get appearance(): StyleAnimator<this, Appearance | undefined>;\n\n  get backdropFilter(): StyleAnimator<this, string | undefined>;\n\n  get backgroundClip(): StyleAnimator<this, BackgroundClip | undefined>;\n\n  get backgroundColor(): StyleAnimator<this, Color | null>;\n\n  get backgroundImage(): StyleAnimator<this, LinearGradient | string | null>;\n\n  get borderCollapse(): StyleAnimator<this, BorderCollapse | undefined>;\n\n  get borderColor(): Fastener<this> & {\n    get(): [Color | null, Color | null, Color | null, Color | null] | Color | null;\n    set(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get borderTopColor(): StyleAnimator<this, Color | null>;\n\n  get borderRightColor(): StyleAnimator<this, Color | null>;\n\n  get borderBottomColor(): StyleAnimator<this, Color | null>;\n\n  get borderLeftColor(): StyleAnimator<this, Color | null>;\n\n  get borderRadius(): Fastener<this> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get borderTopLeftRadius(): LengthStyleAnimator<this, Length | null>;\n\n  get borderTopRightRadius(): LengthStyleAnimator<this, Length | null>;\n\n  get borderBottomRightRadius(): LengthStyleAnimator<this, Length | null>;\n\n  get borderBottomLeftRadius(): LengthStyleAnimator<this, Length | null>;\n\n  get borderSpacing(): StyleAnimator<this, string | undefined>;\n\n  get borderStyle(): Fastener<this> & {\n    get(): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined;\n    set(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get borderTopStyle(): StyleAnimator<this, BorderStyle | undefined>;\n\n  get borderRightStyle(): StyleAnimator<this, BorderStyle | undefined>;\n\n  get borderBottomStyle(): StyleAnimator<this, BorderStyle | undefined>;\n\n  get borderLeftStyle(): StyleAnimator<this, BorderStyle | undefined>;\n\n  get borderWidth(): Fastener<this> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get borderTopWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get borderRightWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get borderBottomWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get borderLeftWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get bottom(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get boxShadow(): StyleAnimator<this, BoxShadow | null>;\n\n  get boxSizing(): StyleAnimator<this, BoxSizing | undefined>;\n\n  get color(): StyleAnimator<this, Color | null>;\n\n  get cursor(): StyleAnimator<this, CssCursor | undefined>;\n\n  get display(): StyleAnimator<this, CssDisplay | undefined>;\n\n  get filter(): StyleAnimator<this, string | undefined>;\n\n  get flexBasis(): StyleAnimator<this, Length | FlexBasis | null>;\n\n  get flexDirection(): StyleAnimator<this, FlexDirection | string>;\n\n  get flexGrow(): StyleAnimator<this, number | undefined>;\n\n  get flexShrink(): StyleAnimator<this, number | undefined>;\n\n  get flexWrap(): StyleAnimator<this, FlexWrap | undefined>;\n\n  get font(): Fastener<this> & {\n    get(): Font | null;\n    set(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: FontLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get fontFamily(): StyleAnimator<this, FontFamily | readonly FontFamily[] | undefined>;\n\n  get fontSize(): LengthStyleAnimator<this, Length | null>;\n\n  get fontStretch(): StyleAnimator<this, FontStretch | undefined>;\n\n  get fontStyle(): StyleAnimator<this, FontStyle | undefined>;\n\n  get fontVariant(): StyleAnimator<this, FontVariant | undefined>;\n\n  get fontWeight(): StyleAnimator<this, FontWeight | undefined>;\n\n  get height(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get justifyContent(): StyleAnimator<this, JustifyContent | undefined>;\n\n  get left(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get lineHeight(): LengthStyleAnimator<this, Length | null>;\n\n  get margin(): Fastener<this> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get marginTop(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get marginRight(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get marginBottom(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get marginLeft(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get maxHeight(): LengthStyleAnimator<this, Length | null>;\n\n  get maxWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get minHeight(): LengthStyleAnimator<this, Length | null>;\n\n  get minWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get opacity(): StyleAnimator<this, number | undefined>;\n\n  get order(): StyleAnimator<this, number | undefined>;\n\n  get outlineColor(): StyleAnimator<this, Color | null>;\n\n  get outlineOffset(): LengthStyleAnimator<this, Length | null>;\n\n  get outlineStyle(): StyleAnimator<this, BorderStyle | undefined>;\n\n  get outlineWidth(): LengthStyleAnimator<this, Length | null>;\n\n  get overflow(): Fastener<this> & {\n    get(): [Overflow | undefined, Overflow | undefined] | Overflow | undefined;\n    set(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get overflowX(): StyleAnimator<this, Overflow | undefined>;\n\n  get overflowY(): StyleAnimator<this, Overflow | undefined>;\n\n  get overflowScrolling(): StyleAnimator<this, \"auto\" | \"touch\" | undefined>;\n\n  get overscrollBehavior(): Fastener<this> & {\n    get(): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined;\n    set(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get overscrollBehaviorX(): StyleAnimator<this, OverscrollBehavior | undefined>;\n\n  get overscrollBehaviorY(): StyleAnimator<this, OverscrollBehavior | undefined>;\n\n  get padding(): Fastener<this> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  };\n\n  get paddingTop(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get paddingRight(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get paddingBottom(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get paddingLeft(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get pointerEvents(): StyleAnimator<this, PointerEvents | undefined>;\n\n  get position(): StyleAnimator<this, Position | undefined>;\n\n  get right(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get textAlign(): StyleAnimator<this, TextAlign | undefined>;\n\n  get textDecorationColor(): StyleAnimator<this, Color | null>;\n\n  get textDecorationLine(): StyleAnimator<this, string | undefined>;\n\n  get textDecorationStyle(): StyleAnimator<this, TextDecorationStyle | undefined>;\n\n  get textOverflow(): StyleAnimator<this, string | undefined>;\n\n  get textTransform(): StyleAnimator<this, TextTransform | undefined>;\n\n  get top(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get touchAction(): StyleAnimator<this, TouchAction | undefined>;\n\n  get transform(): StyleAnimator<this, Transform | null>;\n\n  get userSelect(): StyleAnimator<this, UserSelect | undefined>;\n\n  get verticalAlign(): StyleAnimator<this, VerticalAlign | undefined>;\n\n  get visibility(): StyleAnimator<this, Visibility | undefined>;\n\n  get whiteSpace(): StyleAnimator<this, WhiteSpace | undefined>;\n\n  get width(): LengthStyleConstraintAnimator<this, Length | null>;\n\n  get zIndex(): StyleAnimator<this, number | undefined>;\n\n  set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  set(properties: {[K in keyof StyleAttribute as StyleAttribute[K] extends {set(value: any): any} ? K : never]?: StyleAttribute[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  setIntrinsic<S>(this: S, properties: {[K in keyof S as S[K] extends {setIntrinsic(value: any): any} ? K : never]?: S[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  setIntrinsic(properties: {[K in keyof StyleAttribute as StyleAttribute[K] extends {setIntrinsic(value: any): any} ? K : never]?: StyleAttribute[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  get node(): Node | undefined;\n\n  /** @override */\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined;\n\n  /** @override */\n  setStyle(propertyName: string, value: unknown, priority?: string): this;\n\n  /** @protected */\n  willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @internal */\n  applyStyles(): void;\n\n  /** @override */\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation,\n             rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<any, number>;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @override */\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n\n  /** @override */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void;\n}\n\n/** @public */\nexport const StyleAttribute = (<R, F extends StyleAttribute<any>>() => Fastener.extend<StyleAttribute<R>, StyleAttributeClass<F>>(\"StyleAttribute\", {\n  get fastenerType(): Proto<StyleAttribute<any>> {\n    return StyleAttribute;\n  },\n\n  set(properties: {[K in keyof StyleAttribute as StyleAttribute[K] extends {set(value: any): any} ? K : never]?: StyleAttribute[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R {\n    for (const key in properties) {\n      const value = properties[key as keyof typeof properties];\n      const property = (this as any)[key] as {set?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.set === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.set(value, timing);\n      } else {\n        property.set(value);\n      }\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(properties: {[K in keyof StyleAttribute as StyleAttribute[K] extends {setIntrinsic(value: any): any} ? K : never]?: StyleAttribute[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R {\n    for (const key in properties) {\n      const value = properties[key as keyof typeof properties];\n      const property = (this as any)[key] as {setIntrinsic?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.setIntrinsic === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.setIntrinsic(value, timing);\n      } else {\n        property.setIntrinsic(value);\n      }\n    }\n    return this.owner;\n  },\n\n  get node(): Node | undefined {\n    return (this.owner as StyleContext).node;\n  },\n\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined {\n    return (this.owner as StyleContext).getStyle(propertyNames);\n  },\n\n  setStyle(propertyName: string, value: unknown, priority?: string): StyleAttribute {\n    (this.owner as StyleContext).setStyle(propertyName, value, priority);\n    return this;\n  },\n\n  willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  applyStyles(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof StyleAnimator) {\n        fastener.applyStyle(fastener.value, fastener.priority);\n      }\n    }\n  },\n\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation,\n             rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.constraint(lhs, relation, rhs, strength);\n  },\n\n  hasConstraint(constraint: Constraint): boolean {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.hasConstraint(constraint);\n  },\n\n  addConstraint(constraint: Constraint): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.addConstraint(constraint);\n  },\n\n  removeConstraint(constraint: Constraint): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.removeConstraint(constraint);\n  },\n\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<any, number> {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.constraintVariable(name, value, strength);\n  },\n\n  hasConstraintVariable(constraintVariable: ConstraintVariable): boolean {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.hasConstraintVariable(constraintVariable);\n  },\n\n  addConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.addConstraintVariable(constraintVariable);\n  },\n\n  removeConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.removeConstraintVariable(constraintVariable);\n  },\n\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.setConstraintVariable(constraintVariable, state);\n  },\n\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined {\n    if (!ThemeContext[Symbol.hasInstance](this.owner)) {\n      return void 0;\n    }\n    return this.owner.getLook(look, mood);\n  },\n\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    if (ThemeContext[Symbol.hasInstance](this.owner)) {\n      if (arguments.length === 2) {\n        return this.owner.getLookOr(look, mood as E);\n      } else {\n        return this.owner.getLookOr(look, mood as MoodVector<Feel> | null, elseValue!);\n      }\n    } else if (arguments.length === 2) {\n      return mood as E;\n    }\n    return elseValue!;\n  },\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    } else if (timing === void 0 || timing === null || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!] as Fastener<any, any, any> | undefined;\n      if (fastener !== void 0 && \"applyTheme\" in (fastener as any)) {\n        (fastener as any).applyTheme(theme, mood, timing);\n      }\n    }\n  },\n},\n{\n  pctWidthUnit(node: Node | undefined): number {\n    if (node instanceof HTMLElement) {\n      const offsetParent = node.offsetParent;\n      if (offsetParent instanceof HTMLElement) {\n        return offsetParent.offsetWidth;\n      }\n    }\n    if (node === document.body || node === document.documentElement) {\n      return window.innerWidth;\n    }\n    return 0;\n  },\n\n  pctHeightUnit(node: Node | undefined): number {\n    if (node instanceof HTMLElement) {\n      const offsetParent = node.offsetParent;\n      if (offsetParent instanceof HTMLElement) {\n        return offsetParent.offsetHeight;\n      }\n    }\n    if (node === document.body || node === document.documentElement) {\n      return window.innerHeight;\n    }\n    return 0;\n  },\n\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    fastener.initFasteners(StyleAttribute);\n    return fastener;\n  },\n}))();\n\nStyleAttribute.defineGetter(\"alignContent\", [StyleAnimator({\n  propertyNames: \"align-content\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"alignItems\", [StyleAnimator({\n  propertyNames: \"align-items\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"alignSelf\", [StyleAnimator({\n  propertyNames: \"align-self\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"appearance\", [StyleAnimator({\n  propertyNames: [\"appearance\", \"-webkit-appearance\"],\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"backdropFilter\", [StyleAnimator({\n  propertyNames: [\"backdrop-filter\", \"-webkit-backdrop-filter\"],\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"backgroundClip\", [StyleAnimator({\n  propertyNames: [\"background-clip\", \"-webkit-background-clip\"],\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"backgroundColor\", [StyleAnimator({\n  propertyNames: \"background-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"backgroundImage\", [StyleAnimator({\n  propertyNames: \"background-image\",\n  value: null,\n  parse(value: string): LinearGradient | string | null {\n    try {\n      return LinearGradient.parse(value);\n    } catch (swallow) {\n      return value;\n    }\n  },\n  fromLike(value: LinearGradientLike | string | null): LinearGradient | string | null {\n    if (typeof value === \"string\") {\n      try {\n        return LinearGradient.parse(value);\n      } catch (swallow) {\n        return value;\n      }\n    } else {\n      return LinearGradient.fromLike(value);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"borderCollapse\", [StyleAnimator({\n  propertyNames: \"border-collapse\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderColor\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Color | null, Color | null, Color | null, Color | null] | Color | null;\n    set(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Color | null, Color | null, Color | null, Color | null] | Color | null {\n    const borderTopColor = this.owner.borderTopColor.value;\n    const borderRightColor = this.owner.borderRightColor.value;\n    const borderBottomColor = this.owner.borderBottomColor.value;\n    const borderLeftColor = this.owner.borderLeftColor.value;\n    if (Values.equal(borderTopColor, borderRightColor)\n        && Values.equal(borderRightColor, borderBottomColor)\n        && Values.equal(borderBottomColor, borderLeftColor)) {\n      return borderTopColor;\n    }\n    return [borderTopColor, borderRightColor, borderBottomColor, borderLeftColor];\n  },\n  set(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | Color | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [ColorOrLookLike | null, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?, (ColorOrLookLike | null)?] | ColorOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    let borderTopColor: ColorOrLookLike | null;\n    let borderRightColor: ColorOrLookLike | null;\n    let borderBottomColor: ColorOrLookLike | null;\n    let borderLeftColor: ColorOrLookLike | null;\n    if (!Array.isArray(value)) {\n      borderTopColor = value as ColorOrLookLike | null;\n      borderRightColor = value as ColorOrLookLike | null;\n      borderBottomColor = value as ColorOrLookLike | null;\n      borderLeftColor = value as ColorOrLookLike | null;\n    } else if (value.length === 1) {\n      borderTopColor = value[0];\n      borderRightColor = value[0];\n      borderBottomColor = value[0];\n      borderLeftColor = value[0];\n    } else if (value.length === 2) {\n      borderTopColor = value[0];\n      borderRightColor = value[1];\n      borderBottomColor = value[0];\n      borderLeftColor = value[1];\n    } else if (value.length === 3) {\n      borderTopColor = value[0];\n      borderRightColor = value[1];\n      borderBottomColor = value[2];\n      borderLeftColor = value[1];\n    } else if (value.length === 4) {\n      borderTopColor = value[0];\n      borderRightColor = value[1];\n      borderBottomColor = value[2];\n      borderLeftColor = value[3];\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n    if (borderTopColor instanceof Look) {\n      this.owner.borderTopColor.setLook(borderTopColor, timing, affinity);\n    } else {\n      this.owner.borderTopColor.setState(borderTopColor, timing, affinity);\n    }\n    if (borderRightColor instanceof Look) {\n      this.owner.borderRightColor.setLook(borderRightColor, timing, affinity);\n    } else {\n      this.owner.borderRightColor.setState(borderRightColor, timing, affinity);\n    }\n    if (borderBottomColor instanceof Look) {\n      this.owner.borderBottomColor.setLook(borderBottomColor, timing, affinity);\n    } else {\n      this.owner.borderBottomColor.setState(borderBottomColor, timing, affinity);\n    }\n    if (borderLeftColor instanceof Look) {\n      this.owner.borderLeftColor.setLook(borderLeftColor, timing, affinity);\n    } else {\n      this.owner.borderLeftColor.setState(borderLeftColor, timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"borderTopColor\", [StyleAnimator({\n  propertyNames: \"border-top-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderRightColor\", [StyleAnimator({\n  propertyNames: \"border-right-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderBottomColor\", [StyleAnimator({\n  propertyNames: \"border-bottom-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderLeftColor\", [StyleAnimator({\n  propertyNames: \"border-left-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderRadius\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Length | null, Length | null, Length | null, Length | null] | Length | null {\n    const borderTopLeftRadius = this.owner.borderTopLeftRadius.value;\n    const borderTopRightRadius = this.owner.borderTopRightRadius.value;\n    const borderBottomRightRadius = this.owner.borderBottomRightRadius.value;\n    const borderBottomLeftRadius = this.owner.borderBottomLeftRadius.value;\n    if (Equals(borderTopLeftRadius, borderTopRightRadius)\n        && Equals(borderTopRightRadius, borderBottomRightRadius)\n        && Equals(borderBottomRightRadius, borderBottomLeftRadius)) {\n      return borderTopLeftRadius;\n    }\n    return [borderTopLeftRadius, borderTopRightRadius, borderBottomRightRadius, borderBottomLeftRadius];\n  },\n  set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    let borderTopLeftRadius: LengthOrLookLike | null;\n    let borderTopRightRadius: LengthOrLookLike | null;\n    let borderBottomRightRadius: LengthOrLookLike | null;\n    let borderBottomLeftRadius: LengthOrLookLike | null;\n    if (!Array.isArray(value)) {\n      borderTopLeftRadius = value as LengthOrLookLike | null;\n      borderTopRightRadius = value as LengthOrLookLike | null;\n      borderBottomRightRadius = value as LengthOrLookLike | null;\n      borderBottomLeftRadius = value as LengthOrLookLike | null;\n    } else if (value.length === 1) {\n      borderTopLeftRadius = value[0];\n      borderTopRightRadius = value[0];\n      borderBottomRightRadius = value[0];\n      borderBottomLeftRadius = value[0];\n    } else if (value.length === 2) {\n      borderTopLeftRadius = value[0];\n      borderTopRightRadius = value[1];\n      borderBottomRightRadius = value[0];\n      borderBottomLeftRadius = value[1];\n    } else if (value.length === 3) {\n      borderTopLeftRadius = value[0];\n      borderTopRightRadius = value[1];\n      borderBottomRightRadius = value[2];\n      borderBottomLeftRadius = value[1];\n    } else if (value.length === 4) {\n      borderTopLeftRadius = value[0];\n      borderTopRightRadius = value[1];\n      borderBottomRightRadius = value[2];\n      borderBottomLeftRadius = value[3];\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n    if (borderTopLeftRadius instanceof Look) {\n      this.owner.borderTopLeftRadius.setLook(borderTopLeftRadius, timing, affinity);\n    } else {\n      this.owner.borderTopLeftRadius.setState(borderTopLeftRadius, timing, affinity);\n    }\n    if (borderTopRightRadius instanceof Look) {\n      this.owner.borderTopRightRadius.setLook(borderTopRightRadius, timing, affinity);\n    } else {\n      this.owner.borderTopRightRadius.setState(borderTopRightRadius, timing, affinity);\n    }\n    if (borderBottomRightRadius instanceof Look) {\n      this.owner.borderBottomRightRadius.setLook(borderBottomRightRadius, timing, affinity);\n    } else {\n      this.owner.borderBottomRightRadius.setState(borderBottomRightRadius, timing, affinity);\n    }\n    if (borderBottomLeftRadius instanceof Look) {\n      this.owner.borderBottomLeftRadius.setLook(borderBottomLeftRadius, timing, affinity);\n    } else {\n      this.owner.borderBottomLeftRadius.setState(borderBottomLeftRadius, timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"borderTopLeftRadius\", [LengthStyleAnimator({\n  propertyNames: \"border-top-left-radius\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderTopRightRadius\", [LengthStyleAnimator({\n  propertyNames: \"border-top-right-radius\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderBottomRightRadius\", [LengthStyleAnimator({\n  propertyNames: \"border-bottom-right-radius\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderBottomLeftRadius\", [LengthStyleAnimator({\n  propertyNames: \"border-bottom-left-radius\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderSpacing\", [StyleAnimator({\n  propertyNames: \"border-spacing\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderStyle\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined;\n    set(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined {\n    const borderTopStyle = this.owner.borderTopStyle.value;\n    const borderRightStyle = this.owner.borderRightStyle.value;\n    const borderBottomStyle = this.owner.borderBottomStyle.value;\n    const borderLeftStyle = this.owner.borderLeftStyle.value;\n    if (borderTopStyle === borderRightStyle\n        && borderRightStyle === borderBottomStyle\n        && borderBottomStyle === borderLeftStyle) {\n      return borderTopStyle;\n    }\n    return [borderTopStyle, borderRightStyle, borderBottomStyle, borderLeftStyle];\n  },\n  set(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [BorderStyle | undefined, (BorderStyle | undefined)?, (BorderStyle | undefined)?, (BorderStyle | undefined)?] | BorderStyle | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    if (!Array.isArray(value)) {\n      this.owner.borderTopStyle.setState(value as BorderStyle | undefined, timing, affinity);\n      this.owner.borderRightStyle.setState(value as BorderStyle | undefined, timing, affinity);\n      this.owner.borderBottomStyle.setState(value as BorderStyle | undefined, timing, affinity);\n      this.owner.borderLeftStyle.setState(value as BorderStyle | undefined, timing, affinity);\n    } else if (value.length === 1) {\n      this.owner.borderTopStyle.setState(value[0], timing, affinity);\n      this.owner.borderRightStyle.setState(value[0], timing, affinity);\n      this.owner.borderBottomStyle.setState(value[0], timing, affinity);\n      this.owner.borderLeftStyle.setState(value[0], timing, affinity);\n    } else if (value.length === 2) {\n      this.owner.borderTopStyle.setState(value[0], timing, affinity);\n      this.owner.borderRightStyle.setState(value[1], timing, affinity);\n      this.owner.borderBottomStyle.setState(value[0], timing, affinity);\n      this.owner.borderLeftStyle.setState(value[1], timing, affinity);\n    } else if (value.length === 3) {\n      this.owner.borderTopStyle.setState(value[0], timing, affinity);\n      this.owner.borderRightStyle.setState(value[1], timing, affinity);\n      this.owner.borderBottomStyle.setState(value[2], timing, affinity);\n      this.owner.borderLeftStyle.setState(value[1], timing, affinity);\n    } else if (value.length === 4) {\n      this.owner.borderTopStyle.setState(value[0], timing, affinity);\n      this.owner.borderRightStyle.setState(value[1], timing, affinity);\n      this.owner.borderBottomStyle.setState(value[2], timing, affinity);\n      this.owner.borderLeftStyle.setState(value[3], timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"borderTopStyle\", [StyleAnimator({\n  propertyNames: \"border-top-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderRightStyle\", [StyleAnimator({\n  propertyNames: \"border-right-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderBottomStyle\", [StyleAnimator({\n  propertyNames: \"border-bottom-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderLeftStyle\", [StyleAnimator({\n  propertyNames: \"border-left-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"borderWidth\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Length | null, Length | null, Length | null, Length | null] | Length | null {\n    const borderTopWidth = this.owner.borderTopWidth.value;\n    const borderRightWidth = this.owner.borderRightWidth.value;\n    const borderBottomWidth = this.owner.borderBottomWidth.value;\n    const borderLeftWidth = this.owner.borderLeftWidth.value;\n    if (Values.equal(borderTopWidth, borderRightWidth)\n        && Values.equal(borderRightWidth, borderBottomWidth)\n        && Values.equal(borderBottomWidth, borderLeftWidth)) {\n      return borderTopWidth;\n    }\n    return [borderTopWidth, borderRightWidth, borderBottomWidth, borderLeftWidth];\n  },\n  set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    let borderTopWidth: LengthOrLookLike | null;\n    let borderRightWidth: LengthOrLookLike | null;\n    let borderBottomWidth: LengthOrLookLike | null;\n    let borderLeftWidth: LengthOrLookLike | null;\n    if (!Array.isArray(value)) {\n      borderTopWidth = value as LengthOrLookLike | null;\n      borderRightWidth = value as LengthOrLookLike | null;\n      borderBottomWidth = value as LengthOrLookLike | null;\n      borderLeftWidth = value as LengthOrLookLike | null;\n    } else if (value.length === 1) {\n      borderTopWidth = value[0];\n      borderRightWidth = value[0];\n      borderBottomWidth = value[0];\n      borderLeftWidth = value[0];\n    } else if (value.length === 2) {\n      borderTopWidth = value[0];\n      borderRightWidth = value[1];\n      borderBottomWidth = value[0];\n      borderLeftWidth = value[1];\n    } else if (value.length === 3) {\n      borderTopWidth = value[0];\n      borderRightWidth = value[1];\n      borderBottomWidth = value[2];\n      borderLeftWidth = value[1];\n    } else if (value.length === 4) {\n      borderTopWidth = value[0];\n      borderRightWidth = value[1];\n      borderBottomWidth = value[2];\n      borderLeftWidth = value[3];\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n    if (borderTopWidth instanceof Look) {\n      this.owner.borderTopWidth.setLook(borderTopWidth, timing, affinity);\n    } else {\n      this.owner.borderTopWidth.setState(borderTopWidth, timing, affinity);\n    }\n    if (borderRightWidth instanceof Look) {\n      this.owner.borderRightWidth.setLook(borderRightWidth, timing, affinity);\n    } else {\n      this.owner.borderRightWidth.setState(borderRightWidth, timing, affinity);\n    }\n    if (borderBottomWidth instanceof Look) {\n      this.owner.borderBottomWidth.setLook(borderBottomWidth, timing, affinity);\n    } else {\n      this.owner.borderBottomWidth.setState(borderBottomWidth, timing, affinity);\n    }\n    if (borderLeftWidth instanceof Look) {\n      this.owner.borderLeftWidth.setLook(borderLeftWidth, timing, affinity);\n    } else {\n      this.owner.borderLeftWidth.setState(borderLeftWidth, timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"borderTopWidth\", [LengthStyleAnimator({\n  propertyNames: \"border-top-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderRightWidth\", [LengthStyleAnimator({\n  propertyNames: \"border-right-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderBottomWidth\", [LengthStyleAnimator({\n  propertyNames: \"border-bottom-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"borderLeftWidth\", [LengthStyleAnimator({\n  propertyNames: \"border-left-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"bottom\", [LengthStyleConstraintAnimator({\n  propertyNames: \"bottom\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctHeightUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"boxShadow\", [StyleAnimator({\n  propertyNames: \"box-shadow\",\n  valueType: BoxShadow,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"boxSizing\", [StyleAnimator({\n  propertyNames: \"box-sizing\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"color\", [StyleAnimator({\n  propertyNames: \"color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"cursor\", [StyleAnimator({\n  propertyNames: \"cursor\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"display\", [StyleAnimator({\n  propertyNames: \"display\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"filter\", [StyleAnimator({\n  propertyNames: \"filter\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"flexBasis\", [StyleAnimator({\n  propertyNames: \"flex-basis\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"flexDirection\", [StyleAnimator({\n  propertyNames: \"flex-direction\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"flexGrow\", [StyleAnimator({\n  propertyNames: \"flex-grow\",\n  valueType: Number,\n})]);\n\nStyleAttribute.defineGetter(\"flexShrink\", [StyleAnimator({\n  propertyNames: \"flex-shrink\",\n  valueType: Number,\n})]);\n\nStyleAttribute.defineGetter(\"flexWrap\", [StyleAnimator({\n  propertyNames: \"flex-wrap\",\n  valueType: Number,\n})]);\n\nStyleAttribute.defineGetter(\"font\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): Font | null;\n    set(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: FontLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): Font | null {\n    const style = this.owner.fontStyle.value;\n    const variant = this.owner.fontVariant.value;\n    const weight = this.owner.fontWeight.value;\n    const stretch = this.owner.fontStretch.value;\n    const size = this.owner.fontSize.value;\n    const height = this.owner.lineHeight.value;\n    const family = this.owner.fontFamily.value;\n    if (family === void 0) {\n      return null;\n    }\n    return Font.create(style, variant, weight, stretch, size, height, family);\n  },\n  set(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: FontLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: FontLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    if (value === null) {\n      this.owner.fontStyle.setState(void 0, timing, affinity);\n      this.owner.fontVariant.setState(void 0, timing, affinity);\n      this.owner.fontWeight.setState(void 0, timing, affinity);\n      this.owner.fontStretch.setState(void 0, timing, affinity);\n      this.owner.fontSize.setState(null, timing, affinity);\n      this.owner.lineHeight.setState(null, timing, affinity);\n      this.owner.fontFamily.setState(void 0, timing, affinity);\n      return;\n    }\n    value = Font.fromLike(value);\n    this.owner.fontStyle.setState(value.style, timing, affinity);\n    this.owner.fontVariant.setState(value.variant, timing, affinity);\n    this.owner.fontWeight.setState(value.weight, timing, affinity);\n    this.owner.fontStretch.setState(value.stretch, timing, affinity);\n    this.owner.fontSize.setState(value.size, timing, affinity);\n    this.owner.lineHeight.setState(value.height, timing, affinity);\n    this.owner.fontFamily.setState(value.family, timing, affinity);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"fontFamily\", [StyleAnimator({\n  propertyNames: \"font-family\",\n  valueType: FontFamily,\n})]);\n\nStyleAttribute.defineGetter(\"fontSize\", [LengthStyleAnimator({\n  propertyNames: \"font-size\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"fontStretch\", [StyleAnimator({\n  propertyNames: \"font-stretch\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"fontStyle\", [StyleAnimator({\n  propertyNames: \"font-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"fontVariant\", [StyleAnimator({\n  propertyNames: \"font-variant\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"fontWeight\", [StyleAnimator({\n  propertyNames: \"font-weight\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"height\", [LengthStyleConstraintAnimator({\n  propertyNames: \"height\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctHeightUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"justifyContent\", [StyleAnimator({\n  propertyNames: \"justify-content\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"left\", [LengthStyleConstraintAnimator({\n  propertyNames: \"left\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"lineHeight\", [LengthStyleAnimator({\n  propertyNames: \"line-height\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"margin\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Length | null, Length | null, Length | null, Length | null] | Length | null {\n    const marginTop = this.owner.marginTop.value;\n    const marginRight = this.owner.marginRight.value;\n    const marginBottom = this.owner.marginBottom.value;\n    const marginLeft = this.owner.marginLeft.value;\n    if (Values.equal(marginTop, marginRight)\n        && Values.equal(marginRight, marginBottom)\n        && Values.equal(marginBottom, marginLeft)) {\n      return marginTop;\n    }\n    return [marginTop, marginRight, marginBottom, marginLeft];\n  },\n  set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    let marginTop: LengthOrLookLike | null;\n    let marginRight: LengthOrLookLike | null;\n    let marginBottom: LengthOrLookLike | null;\n    let marginLeft: LengthOrLookLike | null;\n    if (!Array.isArray(value)) {\n      marginTop = value as LengthOrLookLike | null;\n      marginRight = value as LengthOrLookLike | null;\n      marginBottom = value as LengthOrLookLike | null;\n      marginLeft = value as LengthOrLookLike | null;\n    } else if (value.length === 1) {\n      marginTop = value[0];\n      marginRight = value[0];\n      marginBottom = value[0];\n      marginLeft = value[0];\n    } else if (value.length === 2) {\n      marginTop = value[0];\n      marginRight = value[1];\n      marginBottom = value[0];\n      marginLeft = value[1];\n    } else if (value.length === 3) {\n      marginTop = value[0];\n      marginRight = value[1];\n      marginBottom = value[2];\n      marginLeft = value[1];\n    } else if (value.length === 4) {\n      marginTop = value[0];\n      marginRight = value[1];\n      marginBottom = value[2];\n      marginLeft = value[3];\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n    if (marginTop instanceof Look) {\n      this.owner.marginTop.setLook(marginTop, timing, affinity);\n    } else {\n      this.owner.marginTop.setState(marginTop, timing, affinity);\n    }\n    if (marginRight instanceof Look) {\n      this.owner.marginRight.setLook(marginRight, timing, affinity);\n    } else {\n      this.owner.marginRight.setState(marginRight, timing, affinity);\n    }\n    if (marginBottom instanceof Look) {\n      this.owner.marginBottom.setLook(marginBottom, timing, affinity);\n    } else {\n      this.owner.marginBottom.setState(marginBottom, timing, affinity);\n    }\n    if (marginLeft instanceof Look) {\n      this.owner.marginLeft.setLook(marginLeft, timing, affinity);\n    } else {\n      this.owner.marginLeft.setState(marginLeft, timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"marginTop\", [LengthStyleConstraintAnimator({\n  propertyNames: \"margin-top\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"marginRight\", [LengthStyleConstraintAnimator({\n  propertyNames: \"margin-right\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"marginBottom\", [LengthStyleConstraintAnimator({\n  propertyNames: \"margin-bottom\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"marginLeft\", [LengthStyleConstraintAnimator({\n  propertyNames: \"margin-left\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"maxHeight\", [LengthStyleAnimator({\n  propertyNames: \"max-height\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"maxWidth\", [LengthStyleAnimator({\n  propertyNames: \"max-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"minHeight\", [LengthStyleAnimator({\n  propertyNames: \"min-height\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"minWidth\", [LengthStyleAnimator({\n  propertyNames: \"min-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"opacity\", [StyleAnimator({\n  propertyNames: \"opacity\",\n  valueType: Number,\n})]);\n\nStyleAttribute.defineGetter(\"order\", [StyleAnimator({\n  propertyNames: \"order\",\n  valueType: Number,\n})]);\n\nStyleAttribute.defineGetter(\"outlineColor\", [StyleAnimator({\n  propertyNames: \"outline-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"outlineOffset\", [LengthStyleAnimator({\n  propertyNames: \"outline-offset\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"outlineStyle\", [StyleAnimator({\n  propertyNames: \"outline-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"outlineWidth\", [LengthStyleAnimator({\n  propertyNames: \"outline-width\",\n  valueType: Length,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"overflow\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Overflow | undefined, Overflow | undefined] | Overflow | undefined;\n    set(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Overflow | undefined, Overflow | undefined] | Overflow | undefined {\n    const overflowX = this.owner.overflowX.value;\n    const overflowY = this.owner.overflowY.value;\n    if (overflowX === overflowY) {\n      return overflowX;\n    }\n    return [overflowX, overflowY];\n  },\n  set(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [Overflow | undefined, (Overflow | undefined)?] | Overflow | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    if (!Array.isArray(value)) {\n      this.owner.overflowX.setState(value as Overflow | undefined, timing, affinity);\n      this.owner.overflowY.setState(value as Overflow | undefined, timing, affinity);\n    } else if (value.length === 1) {\n      this.owner.overflowX.setState(value[0], timing, affinity);\n      this.owner.overflowY.setState(value[0], timing, affinity);\n    } else if (value.length === 2) {\n      this.owner.overflowX.setState(value[0], timing, affinity);\n      this.owner.overflowY.setState(value[1], timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"overflowX\", [StyleAnimator({\n  propertyNames: \"overflow-x\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"overflowY\", [StyleAnimator({\n  propertyNames: \"overflow-y\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"overflowScrolling\", [StyleAnimator({\n  propertyNames: \"-webkit-overflow-scrolling\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"overscrollBehavior\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined;\n    set(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined {\n    const overscrollBehaviorX = this.owner.overscrollBehaviorX.value;\n    const overscrollBehaviorY = this.owner.overscrollBehaviorY.value;\n    if (overscrollBehaviorX === overscrollBehaviorY) {\n      return overscrollBehaviorX;\n    }\n    return [overscrollBehaviorX, overscrollBehaviorY];\n  },\n  set(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [OverscrollBehavior | undefined, (OverscrollBehavior | undefined)?] | OverscrollBehavior | undefined, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    if (!Array.isArray(value)) {\n      this.owner.overscrollBehaviorX.setState(value as OverscrollBehavior | undefined, timing, affinity);\n      this.owner.overscrollBehaviorY.setState(value as OverscrollBehavior | undefined, timing, affinity);\n    } else if (value.length === 1) {\n      this.owner.overscrollBehaviorX.setState(value[0], timing, affinity);\n      this.owner.overscrollBehaviorY.setState(value[0], timing, affinity);\n    } else if (value.length === 2) {\n      this.owner.overscrollBehaviorX.setState(value[0], timing, affinity);\n      this.owner.overscrollBehaviorY.setState(value[1], timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"overscrollBehaviorX\", [StyleAnimator({\n  propertyNames: \"overscroll-behavior-x\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"overscrollBehaviorY\", [StyleAnimator({\n  propertyNames: \"overscroll-behavior-y\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"padding\", [Fastener<Fastener<StyleAttribute<unknown>> & {\n    get(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n    set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute;\n    setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void;\n  }>({\n  get(): [Length | null, Length | null, Length | null, Length | null] | Length | null {\n    const paddingTop = this.owner.paddingTop.value;\n    const paddingRight = this.owner.paddingRight.value;\n    const paddingBottom = this.owner.paddingBottom.value;\n    const paddingLeft = this.owner.paddingLeft.value;\n    if (Values.equal(paddingTop, paddingRight)\n        && Values.equal(paddingRight, paddingBottom)\n        && Values.equal(paddingBottom, paddingLeft)) {\n      return paddingTop;\n    }\n    return [paddingTop, paddingRight, paddingBottom, paddingLeft];\n  },\n  set(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Extrinsic);\n    return this.owner;\n  },\n  setIntrinsic(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing?: TimingLike | boolean | null): StyleAttribute {\n    this.setState(value, timing, Affinity.Intrinsic);\n    return this.owner;\n  },\n  setState(value: readonly [LengthOrLookLike | null, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?, (LengthOrLookLike | null)?] | LengthOrLookLike | null, timing: TimingLike | boolean | null | undefined, affinity: Affinity): void {\n    let paddingTop: LengthOrLookLike | null;\n    let paddingRight: LengthOrLookLike | null;\n    let paddingBottom: LengthOrLookLike | null;\n    let paddingLeft: LengthOrLookLike | null;\n    if (!Array.isArray(value)) {\n      paddingTop = value as LengthOrLookLike | null;\n      paddingRight = value as LengthOrLookLike | null;\n      paddingBottom = value as LengthOrLookLike | null;\n      paddingLeft = value as LengthOrLookLike | null;\n    } else if (value.length === 1) {\n      paddingTop = value[0];\n      paddingRight = value[0];\n      paddingBottom = value[0];\n      paddingLeft = value[0];\n    } else if (value.length === 2) {\n      paddingTop = value[0];\n      paddingRight = value[1];\n      paddingBottom = value[0];\n      paddingLeft = value[1];\n    } else if (value.length === 3) {\n      paddingTop = value[0];\n      paddingRight = value[1];\n      paddingBottom = value[2];\n      paddingLeft = value[1];\n    } else if (value.length === 4) {\n      paddingTop = value[0];\n      paddingRight = value[1];\n      paddingBottom = value[2];\n      paddingLeft = value[3];\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n    if (paddingTop instanceof Look) {\n      this.owner.paddingTop.setLook(paddingTop, timing, affinity);\n    } else {\n      this.owner.paddingTop.setState(paddingTop, timing, affinity);\n    }\n    if (paddingRight instanceof Look) {\n      this.owner.paddingRight.setLook(paddingRight, timing, affinity);\n    } else {\n      this.owner.paddingRight.setState(paddingRight, timing, affinity);\n    }\n    if (paddingBottom instanceof Look) {\n      this.owner.paddingBottom.setLook(paddingBottom, timing, affinity);\n    } else {\n      this.owner.paddingBottom.setState(paddingBottom, timing, affinity);\n    }\n    if (paddingLeft instanceof Look) {\n      this.owner.paddingLeft.setLook(paddingLeft, timing, affinity);\n    } else {\n      this.owner.paddingLeft.setState(paddingLeft, timing, affinity);\n    }\n  },\n})]);\n\nStyleAttribute.defineGetter(\"paddingTop\", [LengthStyleConstraintAnimator({\n  propertyNames: \"padding-top\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"paddingRight\", [LengthStyleConstraintAnimator({\n  propertyNames: \"padding-right\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"paddingBottom\", [LengthStyleConstraintAnimator({\n  propertyNames: \"padding-bottom\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"paddingLeft\", [LengthStyleConstraintAnimator({\n  propertyNames: \"padding-left\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"pointerEvents\", [StyleAnimator({\n  propertyNames: \"pointer-events\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"position\", [StyleAnimator({\n  propertyNames: \"position\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"right\", [LengthStyleConstraintAnimator({\n  propertyNames: \"right\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"textAlign\", [StyleAnimator({\n  propertyNames: \"text-align\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"textDecorationColor\", [StyleAnimator({\n  propertyNames: \"text-decoration-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"textDecorationLine\", [StyleAnimator({\n  propertyNames: \"text-decoration-line\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"textDecorationStyle\", [StyleAnimator({\n  propertyNames: \"text-decoration-style\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"textOverflow\", [StyleAnimator({\n  propertyNames: \"text-overflow\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"textTransform\", [StyleAnimator({\n  propertyNames: \"text-transform\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"top\", [LengthStyleConstraintAnimator({\n  propertyNames: \"top\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctHeightUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"touchAction\", [StyleAnimator({\n  propertyNames: \"touch-action\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"transform\", [StyleAnimator({\n  propertyNames: \"transform\",\n  valueType: Transform,\n  value: null,\n})]);\n\nStyleAttribute.defineGetter(\"userSelect\", [StyleAnimator({\n  propertyNames: [\"user-select\", \"-webkit-user-select\", \"-moz-user-select\", \"-ms-user-select\"],\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"verticalAlign\", [StyleAnimator({\n  propertyNames: \"vertical-align\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"visibility\", [StyleAnimator({\n  propertyNames: \"visibility\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"whiteSpace\", [StyleAnimator({\n  propertyNames: \"white-space\",\n  valueType: String,\n})]);\n\nStyleAttribute.defineGetter(\"width\", [LengthStyleConstraintAnimator({\n  propertyNames: \"width\",\n  valueType: Length,\n  value: null,\n  get pctUnit(): number {\n    return StyleAttribute.pctWidthUnit(this.owner.node);\n  },\n})]);\n\nStyleAttribute.defineGetter(\"zIndex\", [StyleAnimator({\n  propertyNames: \"z-index\",\n  valueType: Number,\n})]);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\n\n/** @public */\nexport interface CssScopeDescriptor<R, S extends CSSStyleSheet | CSSRule> extends FastenerDescriptor<R> {\n  extends?: Proto<CssScope<any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface CssScopeClass<F extends CssScope<any, any> = CssScope<any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface CssScope<R = any, S extends CSSStyleSheet | CSSRule = any> extends Fastener<R> {\n  /** @override */\n  get descriptorType(): Proto<CssScopeDescriptor<R, S>>;\n\n  /** @override */\n  get fastenerType(): Proto<CssScope<any, any>>;\n\n  /** @protected @override */\n  onUnbindInlet(inlet: Fastener<any, any, any>): void;\n\n  /** @override */\n  get parent(): CssScope<any, any> | null;\n\n  /** @internal */\n  readonly outlets: ReadonlySet<Fastener<any, any, any>> | null;\n\n  /** @internal @override */\n  attachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @override */\n  detachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @protected */\n  decohereOutlets(): void;\n\n  getOutletCss(outlet: Fastener<any, any, any>): CSSStyleSheet | CSSRule | null;\n\n  get inletCss(): CSSStyleSheet | CSSRule | null;\n\n  getInletCss(): CSSStyleSheet | CSSRule;\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): S | null;\n\n  readonly css: S | null;\n\n  getCss(): S;\n\n  setCss(css: S | null): S | null;\n\n  attachCss(css: S): S;\n\n  /** @protected */\n  initCss(css: S): void;\n\n  /** @protected */\n  willAttachCss(css: S): void;\n\n  /** @protected */\n  onAttachCss(css: S): void;\n\n  /** @protected */\n  didAttachCss(css: S): void;\n\n  detachCss(): S | null;\n\n  /** @protected */\n  deinitCss(css: S): void;\n\n  /** @protected */\n  willDetachCss(css: S): void;\n\n  /** @protected */\n  onDetachCss(css: S): void;\n\n  /** @protected */\n  didDetachCss(css: S): void;\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void;\n\n  /** @override */\n  recohere(t: number): void;\n}\n\n/** @public */\nexport const CssScope = (<R, S extends CSSStyleSheet | CSSRule, F extends CssScope<any, any>>() => Fastener.extend<CssScope<R, S>, CssScopeClass<F>>(\"CssScope\", {\n  get fastenerType(): Proto<CssScope<any, any>> {\n    return CssScope;\n  },\n\n  onUnbindInlet(inlet: Fastener<any, any, any>): void {\n    super.onUnbindInlet(inlet);\n    this.detachCss();\n  },\n\n  attachOutlet(outlet: Fastener<any, any, any>): void {\n    let outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      outlets = new Set<Fastener<any, any, any>>();\n      (this as Mutable<typeof this>).outlets = outlets;\n    }\n    outlets.add(outlet);\n  },\n\n  detachOutlet(outlet: Fastener<any, any, any>): void {\n    const outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      return;\n    }\n    outlets.delete(outlet);\n  },\n\n  decohereOutlets(): void {\n    const outlets = this.outlets;\n    if (outlets !== null) {\n      for (const outlet of outlets) {\n        outlet.decohere(this);\n      }\n    }\n  },\n\n  getOutletCss(outlet: Fastener<any, any, any>): CSSStyleSheet | CSSRule | null {\n    return this.css;\n  },\n\n  get inletCss(): CSSStyleSheet | CSSRule | null {\n    const inlet = this.inlet;\n    return inlet instanceof CssScope ? inlet.getOutletCss(this) : null;\n  },\n\n  getInletCss(): CSSStyleSheet | CSSRule {\n    const inletCss = this.inletCss;\n    if (inletCss === void 0 || inletCss === null) {\n      let message = inletCss + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"inlet css\";\n      throw new TypeError(message);\n    }\n    return inletCss;\n  },\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): S | null {\n    return null;\n  },\n\n  getCss(): S {\n    const css = this.css;\n    if (css === null) {\n      let message = css + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"css\";\n      throw new TypeError(message);\n    }\n    return css;\n  },\n\n  setCss(newCss: S  | null): S | null {\n    const oldCss = this.css;\n    if (oldCss === newCss) {\n      this.setCoherent(true);\n      return oldCss;\n    } else if (oldCss !== null) {\n      (this as Mutable<typeof this>).css = null;\n      this.willDetachCss(oldCss);\n      this.onDetachCss(oldCss);\n      this.deinitCss(oldCss);\n      this.didDetachCss(oldCss);\n    }\n    if (newCss !== null) {\n      (this as Mutable<typeof this>).css = newCss;\n      this.willAttachCss(newCss);\n      this.onAttachCss(newCss);\n      this.initCss(newCss);\n      this.didAttachCss(newCss);\n    }\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldCss;\n  },\n\n  attachCss(newCss: S): S {\n    const oldCss = this.css;\n    if (oldCss === newCss) {\n      return newCss;\n    }\n    if (oldCss !== null) {\n      (this as Mutable<typeof this>).css = null;\n      this.willDetachCss(oldCss);\n      this.onDetachCss(oldCss);\n      this.deinitCss(oldCss);\n      this.didDetachCss(oldCss);\n    }\n    (this as Mutable<typeof this>).css = newCss;\n    this.willAttachCss(newCss);\n    this.onAttachCss(newCss);\n    this.initCss(newCss);\n    this.didAttachCss(newCss);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newCss;\n  },\n\n  initCss(css: S): void {\n    // hook\n  },\n\n  willAttachCss(css: S): void {\n    // hook\n  },\n\n  onAttachCss(css: S): void {\n    // hook\n  },\n\n  didAttachCss(css: S): void {\n    // hook\n  },\n\n  detachCss(): S | null {\n    const oldCss = this.css;\n    if (oldCss === null) {\n      return oldCss;\n    }\n    (this as Mutable<typeof this>).css = null;\n    this.willDetachCss(oldCss);\n    this.onDetachCss(oldCss);\n    this.deinitCss(oldCss);\n    this.didDetachCss(oldCss);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldCss;\n  },\n\n  deinitCss(css: S): void {\n    // hook\n  },\n\n  willDetachCss(css: S): void {\n    // hook\n  },\n\n  onDetachCss(css: S): void {\n    // hook\n  },\n\n  didDetachCss(css: S): void {\n    // hook\n  },\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void {\n    const outlets = this.outlets;\n    if (outlets === null) {\n      return;\n    }\n    for (const outlet of outlets) {\n      if (outlet instanceof CssScope) {\n        outlet.applyTheme(theme, mood, timing);\n      }\n    }\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof CssScope) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        const inletCss = inlet.getOutletCss(this);\n        if (inletCss !== null && this.css === null) {\n          this.setCss(this.transformInletCss(inletCss));\n        } else if (inletCss === null && this.css !== null) {\n          this.setCss(null);\n        } else {\n          this.setDerived(false);\n        }\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).outlets = null;\n    (fastener as Mutable<typeof fastener>).css = null;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {CssScopeDescriptor} from \"./CssScope\";\nimport type {CssScopeClass} from \"./CssScope\";\nimport {CssScope} from \"./CssScope\";\n\n/** @public */\nexport interface StyleSheetDescriptor<R> extends CssScopeDescriptor<R, CSSStyleSheet> {\n  extends?: Proto<StyleSheet<any>> | boolean | null;\n}\n\n/** @public */\nexport interface StyleSheetClass<F extends StyleSheet<any> = StyleSheet> extends CssScopeClass<F> {\n}\n\n/** @public */\nexport interface StyleSheet<R = any> extends CssScope<R, CSSStyleSheet> {\n  /** @override */\n  get descriptorType(): Proto<StyleSheetDescriptor<R>>;\n\n  /** @override */\n  get fastenerType(): Proto<StyleSheet<any>>;\n\n  /** @override */\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSStyleSheet | null;\n}\n\n/** @public */\nexport const StyleSheet = (<R, F extends StyleSheet<any>>() => CssScope.extend<StyleSheet<R>, StyleSheetClass<F>>(\"StyleSheet\", {\n  get fastenerType(): Proto<StyleSheet<any>> {\n    return StyleSheet;\n  },\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSStyleSheet | null {\n    if (inletCss instanceof CSSStyleSheet) {\n      return inletCss;\n    }\n    return null;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {CssScopeDescriptor} from \"./CssScope\";\nimport type {CssScopeClass} from \"./CssScope\";\nimport {CssScope} from \"./CssScope\";\n\n/** @public */\nexport interface CssRuleDescriptor<R, S extends CSSRule> extends CssScopeDescriptor<R, S> {\n  extends?: Proto<CssRule<any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface CssRuleClass<F extends CssRule<any, any> = CssRule> extends CssScopeClass<F> {\n}\n\n/** @public */\nexport interface CssRule<R = any, S extends CSSRule = any> extends CssScope<R, S> {\n  /** @override */\n  get descriptorType(): Proto<CssRuleDescriptor<R, S>>;\n\n  /** @override */\n  get fastenerType(): Proto<CssRule<any, any>>;\n\n  get selector(): string;\n\n  get cssText(): string;\n\n  /** @override */\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): S | null;\n\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): S | null;\n}\n\n/** @public */\nexport const CssRule = (<R, S extends CSSRule, F extends CssRule<any, any>>() => CssScope.extend<CssRule<R, S>, CssRuleClass<F>>(\"CssRule\", {\n  get fastenerType(): Proto<CssRule<any, any>> {\n    return CssRule;\n  },\n\n  selector: \"*\",\n\n  get cssText(): string {\n    return this.selector + \" {}\";\n  },\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): S | null {\n    if (inletCss instanceof CSSStyleSheet || inletCss instanceof CSSGroupingRule) {\n      return this.createRule(inletCss);\n    }\n    return null;\n  },\n\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): S | null {\n    const index = inletCss.insertRule(this.cssText);\n    return inletCss.cssRules.item(index) as S;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport type {ConstraintExpressionLike} from \"@swim/constraint\";\nimport type {ConstraintVariable} from \"@swim/constraint\";\nimport type {ConstraintProperty} from \"@swim/constraint\";\nimport type {ConstraintRelation} from \"@swim/constraint\";\nimport type {ConstraintStrengthLike} from \"@swim/constraint\";\nimport type {Constraint} from \"@swim/constraint\";\nimport {ConstraintScope} from \"@swim/constraint\";\nimport {ToStyleString} from \"@swim/style\";\nimport {ToCssValue} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeContext} from \"@swim/theme\";\nimport type {StyleContext} from \"./StyleContext\";\nimport {StyleAttribute} from \"./StyleAttribute\";\nimport type {CssRuleDescriptor} from \"./CssRule\";\nimport type {CssRuleClass} from \"./CssRule\";\nimport {CssRule} from \"./CssRule\";\n\n/** @public */\nexport interface StyleRuleDescriptor<R> extends CssRuleDescriptor<R, CSSStyleRule> {\n  extends?: Proto<StyleRule<any>> | boolean | null;\n}\n\n/** @public */\nexport interface StyleRuleClass<F extends StyleRule<any> = StyleRule> extends CssRuleClass<F> {\n}\n\n/** @public */\nexport interface StyleRule<R = any> extends CssRule<R, CSSStyleRule>, ConstraintScope, ThemeContext, StyleContext {\n  /** @override */\n  get descriptorType(): Proto<StyleRuleDescriptor<R>>;\n\n  /** @override */\n  get fastenerType(): Proto<StyleRule<any>>;\n\n  /** @override */\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSStyleRule | null;\n\n  /** @override */\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): CSSStyleRule | null;\n\n  /** @protected @override */\n  onAttachCss(css: CSSStyleRule): void;\n\n  /** @override */\n  get selector(): string;\n\n  readonly style: StyleAttribute<this>;\n\n  /** @override */\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined;\n\n  /** @override */\n  setStyle(propertyName: string, value: unknown, priority?: string): this;\n\n  /** @protected */\n  willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @override */\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation,\n             rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<any, number>;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @override */\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n\n  /** @override */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void;\n\n  /** @protected @override */\n  didMount(): void;\n}\n\n/** @public */\nexport const StyleRule = (<R, F extends StyleRule<any>>() => CssRule.extend<StyleRule<R>, StyleRuleClass<F>>(\"StyleRule\", {\n  get fastenerType(): Proto<StyleRule<any>> {\n    return StyleRule;\n  },\n\n  selector: \"*\",\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSStyleRule | null {\n    if (inletCss !== null) {\n      (inletCss as any).RANDOM_MARKER_ID = Math.random();\n    }\n    if (inletCss instanceof CSSStyleRule) {\n      return inletCss;\n    } else if (inletCss instanceof CSSStyleSheet || inletCss instanceof CSSGroupingRule) {\n      return this.createRule(inletCss);\n    }\n    return null;\n  },\n\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): CSSStyleRule | null {\n    const index = inletCss.insertRule(this.cssText);\n    const rule = inletCss.cssRules.item(index);\n    if (!(rule instanceof CSSStyleRule)) {\n      throw new TypeError(\"not a style rule: \" + rule);\n    }\n    return rule;\n  },\n\n  onAttachCss(css: CSSStyleRule): void {\n    if (this.mounted) {\n      this.style.applyStyles();\n    }\n  },\n\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined {\n    const css = this.css;\n    if (css === null) {\n      return void 0;\n    }\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      const style = css.styleMap;\n      if (typeof propertyNames === \"string\") {\n        return style.get(propertyNames);\n      }\n      for (let i = 0; i < propertyNames.length; i += 1) {\n        const value = style.get(propertyNames[i]!);\n        if (value !== void 0) {\n          return value;\n        }\n      }\n      return \"\";\n    }\n    const style = css.style;\n    if (typeof propertyNames === \"string\") {\n      return style.getPropertyValue(propertyNames);\n    }\n    for (let i = 0; i < propertyNames.length; i += 1) {\n      const value = style.getPropertyValue(propertyNames[i]!);\n      if (value.length !== 0) {\n        return value;\n      }\n    }\n    return \"\";\n  },\n\n  setStyle(propertyName: string, value: unknown, priority?: string): StyleRule {\n    const css = this.css;\n    if (css === null) {\n      return this;\n    }\n    this.willSetStyle(propertyName, value, priority);\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      if (value !== void 0 && value !== null) {\n        const cssValue = ToCssValue(value);\n        if (cssValue !== null) {\n          try {\n            css.styleMap.set(propertyName, cssValue);\n          } catch (e) {\n            // swallow\n          }\n        } else {\n          css.style.setProperty(propertyName, ToStyleString(value), priority);\n        }\n      } else {\n        try {\n          css.styleMap.delete(propertyName);\n        } catch (e) {\n          // swallow\n        }\n      }\n    } else if (value !== void 0 && value !== null) {\n      css.style.setProperty(propertyName, ToStyleString(value), priority);\n    } else {\n      css.style.removeProperty(propertyName);\n    }\n    this.onSetStyle(propertyName, value, priority);\n    this.didSetStyle(propertyName, value, priority);\n    return this;\n  },\n\n  willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  },\n\n  constraint(lhs: ConstraintExpressionLike, relation: ConstraintRelation,\n             rhs?: ConstraintExpressionLike, strength?: ConstraintStrengthLike): Constraint {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.constraint(lhs, relation, rhs, strength);\n  },\n\n  hasConstraint(constraint: Constraint): boolean {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.hasConstraint(constraint);\n  },\n\n  addConstraint(constraint: Constraint): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.addConstraint(constraint);\n  },\n\n  removeConstraint(constraint: Constraint): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.removeConstraint(constraint);\n  },\n\n  constraintVariable(name: string, value?: number, strength?: ConstraintStrengthLike): ConstraintProperty<any, number> {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.constraintVariable(name, value, strength);\n  },\n\n  hasConstraintVariable(constraintVariable: ConstraintVariable): boolean {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    return this.owner.hasConstraintVariable(constraintVariable);\n  },\n\n  addConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.addConstraintVariable(constraintVariable);\n  },\n\n  removeConstraintVariable(constraintVariable: ConstraintVariable): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.removeConstraintVariable(constraintVariable);\n  },\n\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void {\n    if (!ConstraintScope[Symbol.hasInstance](this.owner)) {\n      throw new Error(\"no constraint scope\");\n    }\n    this.owner.setConstraintVariable(constraintVariable, state);\n  },\n\n  getLook<T>(look: Look<T>, mood?: MoodVector<Feel> | null): T | undefined {\n    if (!ThemeContext[Symbol.hasInstance](this.owner)) {\n      return void 0;\n    }\n    return this.owner.getLook(look, mood);\n  },\n\n  getLookOr<T, E>(look: Look<T>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    if (ThemeContext[Symbol.hasInstance](this.owner)) {\n      if (arguments.length === 2) {\n        return this.owner.getLookOr(look, mood as E);\n      } else {\n        return this.owner.getLookOr(look, mood as MoodVector<Feel> | null, elseValue!);\n      }\n    } else if (arguments.length === 2) {\n      return mood as E;\n    }\n    return elseValue!;\n  },\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: TimingLike | boolean | null): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    } else if (timing === void 0 || timing === null || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!] as Fastener<any, any, any> | undefined;\n      if (fastener !== void 0 && \"applyTheme\" in (fastener as any)) {\n        (fastener as any).applyTheme(theme, mood, timing);\n      }\n    }\n    super.applyTheme(theme, mood, timing);\n  },\n\n  didMount(): void {\n    super.didMount();\n    if (this.css !== null) {\n      this.style.applyStyles();\n    }\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    fastener.initFasteners(StyleRule);\n    return fastener;\n  },\n}))();\n\nStyleRule.defineField(\"style\", [StyleAttribute({})]);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {CssRuleDescriptor} from \"./CssRule\";\nimport type {CssRuleClass} from \"./CssRule\";\nimport {CssRule} from \"./CssRule\";\n\n/** @public */\nexport interface MediaRuleDescriptor<R> extends CssRuleDescriptor<R, CSSMediaRule> {\n  extends?: Proto<MediaRule<any>> | boolean | null;\n}\n\n/** @public */\nexport interface MediaRuleClass<F extends MediaRule<any> = MediaRule> extends CssRuleClass<F> {\n}\n\n/** @public */\nexport interface MediaRule<R = any> extends CssRule<R, CSSMediaRule> {\n  /** @override */\n  get descriptorType(): Proto<MediaRuleDescriptor<R>>;\n\n  /** @override */\n  get fastenerType(): Proto<MediaRule<any>>;\n\n  get selector(): string;\n\n  /** @override */\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSMediaRule | null;\n\n  /** @override */\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): CSSMediaRule | null;\n}\n\n/** @public */\nexport const MediaRule = (<R, F extends MediaRule<any>>() => CssRule.extend<MediaRule<R>, MediaRuleClass<F>>(\"MediaRule\", {\n  get fastenerType(): Proto<MediaRule<any>> {\n    return MediaRule;\n  },\n\n  selector: \"@media\",\n\n  transformInletCss(inletCss: CSSStyleSheet | CSSRule | null): CSSMediaRule | null {\n    if (inletCss instanceof CSSMediaRule) {\n      return inletCss;\n    } else if (inletCss instanceof CSSStyleSheet || inletCss instanceof CSSGroupingRule) {\n      return this.createRule(inletCss);\n    }\n    return null;\n  },\n\n  createRule(inletCss: CSSStyleSheet | CSSGroupingRule): CSSMediaRule | null {\n    const index = inletCss.insertRule(this.cssText);\n    const rule = inletCss.cssRules.item(index);\n    if (!(rule instanceof CSSMediaRule)) {\n      throw new TypeError(\"not a media rule: \" + rule);\n    }\n    return rule;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\n\n/** @public */\nexport interface ClassList<R = any> extends Fastener<R> {\n  /** @override */\n  get fastenerType(): Proto<ClassList<any>>;\n\n  get value(): string;\n\n  get(): DOMTokenList;\n\n  set(classNames: readonly string[]): R;\n\n  setIntrinsic(classNames: readonly string[]): R;\n\n  contains(className: string): boolean;\n\n  add(...classNames: readonly string[]): R;\n\n  /** @protected */\n  willAdd(className: string): void;\n\n  /** @protected */\n  onAdd(className: string): void;\n\n  /** @protected */\n  didAdd(className: string): void;\n\n  remove(...classNames: readonly string[]): R;\n\n  /** @protected */\n  willRemove(className: string): void;\n\n  /** @protected */\n  onRemove(className: string): void;\n\n  /** @protected */\n  didRemove(className: string): void;\n\n  replace(oldClassName: string, newClassName: string): boolean;\n\n  toggle(className: string, force?: boolean): boolean;\n\n  forEach<T>(callback: (className: string, index: number, classList: ClassList<this>) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, className: string, index: number, classList: ClassList<this>) => T | void, thisArg: S): T | undefined;\n}\n\n/** @public */\nexport const ClassList = (<R, F extends ClassList<any>>() => Fastener.extend<ClassList<R>, FastenerClass<F>>(\"ClassList\", {\n  get fastenerType(): Proto<ClassList<any>> {\n    return ClassList;\n  },\n\n  get value(): string {\n    const classList = ((this.owner as any).node as Element).classList;\n    return classList.value;\n  },\n\n  get(): DOMTokenList {\n    return ((this.owner as any).node as Element).classList;\n  },\n\n  set(classNames: readonly string[]): R {\n    return this.add(...classNames);\n  },\n\n  setIntrinsic(classNames: readonly string[]): R {\n    return this.add(...classNames);\n  },\n\n  contains(className: string): boolean {\n    const classList = ((this.owner as any).node as Element).classList;\n    return classList.contains(className);\n  },\n\n  add(...classNames: readonly string[]): R {\n    const classList = ((this.owner as any).node as Element).classList;\n    for (let i = 0; i < classNames.length; i += 1) {\n      const className = classNames[i]!;\n      if (!classList.contains(className)) {\n        this.willAdd(className);\n        classList.add(className);\n        this.onAdd(className);\n        this.didAdd(className);\n      }\n    }\n    return this.owner;\n  },\n\n  willAdd(className: string): void {\n    // hook\n  },\n\n  onAdd(className: string): void {\n    // hook\n  },\n\n  didAdd(className: string): void {\n    // hook\n  },\n\n  remove(...classNames: readonly string[]): R {\n    const classList = ((this.owner as any).node as Element).classList;\n    for (let i = 0; i < classNames.length; i += 1) {\n      const className = classNames[i]!;\n      if (classList.contains(className)) {\n        this.willRemove(className);\n        classList.remove(className);\n        this.onRemove(className);\n        this.didRemove(className);\n      }\n    }\n    return this.owner;\n  },\n\n  willRemove(className: string): void {\n    // hook\n  },\n\n  onRemove(className: string): void {\n    // hook\n  },\n\n  didRemove(className: string): void {\n    // hook\n  },\n\n  replace(oldClassName: string, newClassName: string): boolean {\n    const classList = ((this.owner as any).node as Element).classList;\n    if (!classList.contains(oldClassName)) {\n      return false;\n    }\n\n    this.willRemove(oldClassName);\n    classList.remove(oldClassName);\n    this.onRemove(oldClassName);\n    this.didRemove(oldClassName);\n\n    this.willAdd(newClassName);\n    classList.add(newClassName);\n    this.onAdd(newClassName);\n    this.didAdd(newClassName);\n\n    return true;\n  },\n\n  toggle(className: string, state?: boolean): boolean {\n    const classList = ((this.owner as any).node as Element).classList;\n    if (state === true) {\n      if (!classList.contains(className)) {\n        this.willAdd(className);\n        classList.add(className);\n        this.onAdd(className);\n        this.didAdd(className);\n      }\n      return true;\n    } else if (state === false) {\n      if (classList.contains(className)) {\n        this.willRemove(className);\n        classList.remove(className);\n        this.onRemove(className);\n        this.didRemove(className);\n      }\n      return false;\n    } else if (!classList.contains(className)) {\n      this.willAdd(className);\n      classList.add(className);\n      this.onAdd(className);\n      this.didAdd(className);\n      return true;\n    } else {\n      this.willRemove(className);\n      classList.remove(className);\n      this.onRemove(className);\n      this.didRemove(className);\n      return false;\n    }\n  },\n\n  forEach<T, S>(callback: (this: S | undefined, className: string, index: number, classList: ClassList<any>) => T | void, thisArg?: S): T | undefined {\n    const classList = ((this.owner as any).node as Element).classList;\n    for (let i = 0; i < classList.length; i += 1) {\n      const className = classList[i]!;\n      const result = callback.call(thisArg, className, i, this);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {ViewFactory} from \"@swim/view\";\nimport type {ViewClass} from \"@swim/view\";\nimport type {ViewObserver} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {TextView} from \"./\"; // forward import\nimport {ElementView} from \"./\"; // forward import\nimport {HtmlView} from \"./\"; // forward import\nimport {SvgView} from \"./\"; // forward import\n\n/** @public */\nexport interface NodeViewFactory<V extends NodeView = NodeView> extends ViewFactory<V> {\n  fromNode(node: Node): V\n}\n\n/** @public */\nexport interface NodeViewClass<V extends NodeView = NodeView> extends ViewClass<V>, NodeViewFactory<V> {\n}\n\n/** @public */\nexport interface NodeViewConstructor<V extends NodeView = NodeView> extends NodeViewClass<V> {\n  new(node: Node): V;\n}\n\n/** @public */\nexport interface NodeViewObserver<V extends NodeView = NodeView> extends ViewObserver<V> {\n}\n\n/** @public */\nexport class NodeView extends View {\n  constructor(node: Node) {\n    super();\n    this.node = node;\n\n    if (NodeView.nodeMap.has(node)) {\n      throw new Error(node + \" already has an associated view\");\n    }\n    NodeView.nodeMap.set(node, this);\n  }\n\n  override likeType?(like: {create?(): View} | Node): void;\n\n  declare readonly observerType?: Class<NodeViewObserver>;\n\n  readonly node: Node;\n\n  override setChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(key: string, newChildFactory: F): View | null;\n  override setChild(key: string, newChild: View | LikeType<NodeView> | null): View | null;\n  override setChild(key: string, newChild: View | LikeType<NodeView> | null): View | null {\n    if (newChild instanceof Node) {\n      newChild = NodeView.fromNode(newChild);\n    } else if (newChild !== null) {\n      newChild = View.fromLike(newChild);\n    }\n    const oldChild = this.getChild(key);\n    let target: View | null;\n\n    if (oldChild !== null && newChild !== null && oldChild !== newChild) { // replace\n      newChild.remove();\n      target = oldChild.nextSibling;\n\n      if ((oldChild.flags & View.RemovingFlag) === 0) {\n        oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n        this.willRemoveChild(oldChild);\n        oldChild.detachParent(this);\n        this.removeChildMap(oldChild);\n        this.onRemoveChild(oldChild);\n        this.didRemoveChild(oldChild);\n        oldChild.setKey(void 0);\n        oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n      }\n\n      newChild.setFlags(newChild.flags | View.InsertingFlag);\n      newChild.setKey(oldChild.key);\n      this.willInsertChild(newChild, target);\n      if (newChild instanceof NodeView) {\n        if (oldChild instanceof NodeView) {\n          this.node.replaceChild(newChild.node, oldChild.node);\n        } else if (target !== null) {\n          let targetNode: Node | null = null;\n          let nextView: View | null = target;\n          do {\n            if (nextView instanceof NodeView) {\n              targetNode = nextView.node;\n              break;\n            }\n            nextView = nextView.nextSibling;\n          } while (nextView !== null);\n          this.node.insertBefore(newChild.node, targetNode);\n        } else {\n          this.node.appendChild(newChild.node);\n        }\n      } else if (oldChild instanceof NodeView) {\n        this.node.removeChild(oldChild.node);\n      }\n      this.insertChildMap(newChild);\n      newChild.attachParent(this, target);\n      this.onInsertChild(newChild, target);\n      this.didInsertChild(newChild, target);\n      newChild.cascadeInsert();\n      newChild.setFlags(newChild.flags & ~View.InsertingFlag);\n    } else if (newChild !== oldChild || newChild !== null && newChild.key !== key) {\n      if (oldChild !== null) { // remove\n        target = oldChild.nextSibling;\n        if ((oldChild.flags & View.RemovingFlag) === 0) {\n          oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n          this.willRemoveChild(oldChild);\n          oldChild.detachParent(this);\n          this.removeChildMap(oldChild);\n          if (oldChild instanceof NodeView) {\n            this.node.removeChild(oldChild.node);\n          }\n          this.onRemoveChild(oldChild);\n          this.didRemoveChild(oldChild);\n          oldChild.setKey(void 0);\n          oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n        }\n      } else {\n        target = null;\n      }\n\n      if (newChild !== null) { // insert\n        newChild.remove();\n\n        newChild.setFlags(newChild.flags | View.InsertingFlag);\n        newChild.setKey(key);\n        this.willInsertChild(newChild, target);\n        if (newChild instanceof NodeView) {\n          let targetNode: Node | null = null;\n          if (target !== null) {\n            let nextView: View | null = target;\n            do {\n              if (nextView instanceof NodeView) {\n                targetNode = nextView.node;\n                break;\n              }\n              nextView = nextView.nextSibling;\n            } while (nextView !== null);\n          }\n          this.node.insertBefore(newChild.node, targetNode);\n        }\n        this.insertChildMap(newChild);\n        newChild.attachParent(this, target);\n        this.onInsertChild(newChild, target);\n        this.didInsertChild(newChild, target);\n        newChild.cascadeInsert();\n        newChild.setFlags(newChild.flags & ~View.InsertingFlag);\n      }\n    }\n\n    return oldChild;\n  }\n\n  override appendChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override appendChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override appendChild(child: View | LikeType<NodeView>, key?: string): View;\n  override appendChild(child: View | LikeType<NodeView>, key?: string): View {\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromLike(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    child.setFlags(child.flags | View.InsertingFlag);\n    child.setKey(key);\n    this.willInsertChild(child, null);\n    if (child instanceof NodeView) {\n      this.node.appendChild(child.node);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, null);\n    this.onInsertChild(child, null);\n    this.didInsertChild(child, null);\n    child.cascadeInsert();\n    child.setFlags(child.flags & ~View.InsertingFlag);\n\n    return child;\n  }\n\n  override prependChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override prependChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override prependChild(child: View | LikeType<NodeView>, key?: string): View;\n  override prependChild(child: View | LikeType<NodeView>, key?: string): View {\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromLike(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n    const target = this.firstChild;\n\n    child.setFlags(child.flags | View.InsertingFlag);\n    child.setKey(key);\n    this.willInsertChild(child, target);\n    if (child instanceof NodeView) {\n      this.node.insertBefore(child.node, this.node.firstChild);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, target);\n    this.onInsertChild(child, target);\n    this.didInsertChild(child, target);\n    child.cascadeInsert();\n    child.setFlags(child.flags & ~View.InsertingFlag);\n\n    return child;\n  }\n\n  override insertChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, target: View | Node | null, key?: string): InstanceType<F>;\n  override insertChild<V extends View>(child: V | LikeType<V>, target: View | Node | null, key?: string): V;\n  override insertChild(child: View | LikeType<NodeView>, target: View | Node | null, key?: string): View;\n  override insertChild(child: View | LikeType<NodeView>, target: View | Node | null, key?: string): View {\n    if (target instanceof View && target.parent !== this || target instanceof Node && target.parentNode !== this.node) {\n      target = null;\n    }\n\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromLike(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    let targetView: View | null;\n    let targetNode: Node | null;\n    if (target instanceof Node) {\n      targetView = null;\n      targetNode = target;\n      let nextNode: Node | null = target;\n      do {\n        const nextView = NodeView.get(nextNode);\n        if (nextView !== null) {\n          targetView = nextView;\n          break;\n        }\n        nextNode = nextNode.nextSibling;\n      } while (nextNode !== null);\n    } else {\n      targetView = target;\n      targetNode = null;\n    }\n\n    child.setFlags(child.flags | View.InsertingFlag);\n    child.setKey(key);\n    this.willInsertChild(child, targetView);\n    if (child instanceof NodeView) {\n      if (targetNode === null && targetView !== null) {\n        let nextView: View | null = targetView;\n        do {\n          if (nextView instanceof NodeView) {\n            targetNode = nextView.node;\n            break;\n          }\n          nextView = nextView.nextSibling;\n        } while (nextView !== null);\n      }\n      this.node.insertBefore(child.node, targetNode);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, targetView);\n    this.onInsertChild(child, targetView);\n    this.didInsertChild(child, targetView);\n    child.cascadeInsert();\n    child.setFlags(child.flags & ~View.InsertingFlag);\n\n    return child;\n  }\n\n  injectChild<F extends Class<Instance<F, NodeView>> & Creatable<Instance<F, NodeView>>>(childFactory: F, target: NodeView | Node | null, key?: string): InstanceType<F>;\n  injectChild<V extends NodeView>(child: V | LikeType<V>, target: NodeView | Node | null, key?: string): V;\n  injectChild(child: NodeView | LikeType<NodeView>, target: NodeView | Node | null, key?: string): NodeView;\n  injectChild(child: NodeView | LikeType<NodeView>, target: NodeView | Node | null, key?: string): NodeView {\n    if (target instanceof View && target.parent !== this || target instanceof Node && target.parentNode !== this.node) {\n      throw new TypeError(\"\" + target);\n    }\n\n    child = NodeView.fromLike(child);\n\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    if (target instanceof Node) {\n      let nextNode: Node | null = target;\n      target = null;\n      do {\n        const nextView = NodeView.get(nextNode);\n        if (nextView !== null) {\n          target = nextView;\n          break;\n        }\n        nextNode = nextNode.nextSibling;\n      } while (nextNode !== null);\n    }\n\n    child.setFlags(child.flags | View.InsertingFlag);\n    child.setKey(key);\n    this.willInsertChild(child, target);\n    this.insertChildMap(child);\n    child.attachParent(this, target);\n    this.onInsertChild(child, target);\n    this.didInsertChild(child, target);\n    child.cascadeInsert();\n    child.setFlags(child.flags & ~View.InsertingFlag);\n\n    return child;\n  }\n\n  override replaceChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(newChildFactory: F, oldChild: View): View;\n  override replaceChild<V extends View>(newChild: View | LikeType<NodeView>, oldChild: V): V;\n  override replaceChild(newChild: View | LikeType<NodeView>, oldChild: View): View;\n  override replaceChild(newChild: View | LikeType<NodeView>, oldChild: View): View {\n    if (oldChild.parent !== this) {\n      throw new TypeError(\"\" + oldChild);\n    } else if (newChild instanceof Node) {\n      newChild = NodeView.fromNode(newChild);\n    } else {\n      newChild = View.fromLike(newChild);\n    }\n    if (newChild === oldChild) {\n      return oldChild;\n    }\n\n    newChild.remove();\n    const target = oldChild.nextSibling;\n\n    if ((oldChild.flags & View.RemovingFlag) === 0) {\n      oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n      this.willRemoveChild(oldChild);\n      oldChild.detachParent(this);\n      this.removeChildMap(oldChild);\n      this.onRemoveChild(oldChild);\n      this.didRemoveChild(oldChild);\n      oldChild.setKey(void 0);\n      oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n    }\n\n    newChild.setFlags(newChild.flags | View.InsertingFlag);\n    newChild.setKey(oldChild.key);\n    this.willInsertChild(newChild, target);\n    if (newChild instanceof NodeView) {\n      if (oldChild instanceof NodeView) {\n        this.node.replaceChild(newChild.node, oldChild.node);\n      } else if (target !== null) {\n        let targetNode: Node | null = null;\n        let nextView: View | null = target;\n        do {\n          if (nextView instanceof NodeView) {\n            targetNode = nextView.node;\n            break;\n          }\n          nextView = nextView.nextSibling;\n        } while (nextView !== null);\n        this.node.insertBefore(newChild.node, targetNode);\n      } else {\n        this.node.appendChild(newChild.node);\n      }\n    } else if (oldChild instanceof NodeView) {\n      this.node.removeChild(oldChild.node);\n    }\n    this.insertChildMap(newChild);\n    newChild.attachParent(this, target);\n    this.onInsertChild(newChild, target);\n    this.didInsertChild(newChild, target);\n    newChild.cascadeInsert();\n    newChild.setFlags(newChild.flags & ~View.InsertingFlag);\n\n    return oldChild;\n  }\n\n  override removeChild<V extends View | Node>(child: V): V;\n  override removeChild(key: string | View): View | null;\n  override removeChild(key: string | View | Node): View | Node | null;\n  override removeChild(key: string | View | Node): View | Node | null {\n    let child: View | null;\n    if (typeof key === \"string\") {\n      child = this.getChild(key);\n      if (child === null) {\n        return null;\n      }\n    } else if (key instanceof Node) {\n      if (key.parentNode !== this.node) {\n        throw new Error(\"not a child node\");\n      }\n      const view = NodeView.get(key);\n      if (view !== null) {\n        child = view;\n      } else {\n        this.node.removeChild(key);\n        return key;\n      }\n    } else {\n      child = key;\n      if (child.parent !== this) {\n        throw new Error(\"not a child\");\n      }\n    }\n\n    if ((child.flags & View.RemovingFlag) === 0) {\n      child.setFlags(child.flags | View.RemovingFlag);\n      this.willRemoveChild(child);\n      child.detachParent(this);\n      this.removeChildMap(child);\n      if (child instanceof NodeView) {\n        this.node.removeChild(child.node);\n      }\n      this.onRemoveChild(child);\n      this.didRemoveChild(child);\n      child.setKey(void 0);\n      child.setFlags(child.flags & ~View.RemovingFlag);\n    }\n\n    return child;\n  }\n\n  override removeChildren(): void {\n    let child: View | null;\n    while (child = this.lastChild, child !== null) {\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        throw new Error(\"inconsistent removeChildren\");\n      }\n      this.willRemoveChild(child);\n      child.detachParent(this);\n      this.removeChildMap(child);\n      if (child instanceof NodeView) {\n        this.node.removeChild(child.node);\n      }\n      this.onRemoveChild(child);\n      this.didRemoveChild(child);\n      child.setKey(void 0);\n      child.setFlags(child.flags & ~View.RemovingFlag);\n    }\n  }\n\n  override reinsertChild(child: View, target: View | null): void {\n    if (child.parent !== this) {\n      throw new Error(\"not a child\");\n    } else if (target !== null && target.parent !== this) {\n      throw new Error(\"reinsert target is not a child\");\n    } else if (child.nextSibling === target) {\n      return;\n    }\n\n    this.willReinsertChild(child, target);\n    if (child instanceof NodeView) {\n      this.node.removeChild(child.node);\n      this.node.insertBefore(child.node, target instanceof NodeView ? target.node : null);\n    }\n    child.reattachParent(target);\n    this.onReinsertChild(child, target);\n    this.didReinsertChild(child, target);\n  }\n\n  /** @internal */\n  static isRootView(node: Node): boolean {\n    do {\n      const parentNode: Node | null = node.parentNode;\n      if (parentNode === null) {\n        return true;\n      }\n      const parentView = NodeView.get(parentNode);\n      if (parentView !== null) {\n        return false;\n      }\n      node = parentNode;\n    } while (true);\n  }\n\n  /** @internal */\n  static isNodeMounted(node: Node): boolean {\n    let isConnected: boolean | undefined = node.isConnected;\n    if (typeof isConnected !== \"boolean\") {\n      const ownerDocument = node.ownerDocument;\n      if (ownerDocument === null) {\n        isConnected = false;\n      } else {\n        const position = ownerDocument.compareDocumentPosition(node);\n        isConnected = (position & node.DOCUMENT_POSITION_DISCONNECTED) === 0;\n      }\n    }\n    return isConnected;\n  }\n\n  /** @internal */\n  static mount(view: NodeView): void {\n    if (view.parent !== null) {\n      return;\n    }\n    const parentView = NodeView.get(view.node.parentNode);\n    if (parentView === null) {\n      view.mount();\n      return;\n    }\n    let targetView: View | null = null;\n    let targetNode = view.node.nextSibling;\n    while (targetNode !== null) {\n      targetView = NodeView.get(targetNode);\n      if (targetView !== null) {\n        break;\n      }\n      targetNode = targetNode.nextSibling;\n    }\n    view.setFlags(view.flags | View.InsertingFlag);\n    view.attachParent(parentView, targetView);\n    view.cascadeInsert();\n    view.setFlags(view.flags & ~View.InsertingFlag);\n  }\n\n  /** @internal */\n  override mount(): void {\n    if (this.mounted || !NodeView.isNodeMounted(this.node) || !NodeView.isRootView(this.node)) {\n      return;\n    }\n    this.setFlags(this.flags | View.InsertingFlag);\n    this.cascadeMount();\n    this.cascadeInsert();\n    this.setFlags(this.flags & ~View.InsertingFlag);\n  }\n\n  text(): string | undefined;\n  text(value: string | null | undefined): this;\n  text(value?: string | null | undefined): string | undefined | this {\n    if (arguments.length === 0) {\n      value = this.node.textContent;\n      if (value === null) {\n        value = void 0;\n      }\n      return value;\n    } else if (value === void 0) {\n      value = null;\n    }\n    this.node.textContent = value;\n    return this;\n  }\n\n  override get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  override get clientBounds(): R2Box {\n    const range = document.createRange();\n    range.selectNode(this.node);\n    const bounds = range.getBoundingClientRect();\n    range.detach();\n    return new R2Box(bounds.left, bounds.top, bounds.right, bounds.bottom);\n  }\n\n  override get pageBounds(): R2Box {\n    const range = document.createRange();\n    range.selectNode(this.node);\n    const bounds = range.getBoundingClientRect();\n    range.detach();\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    return new R2Box(bounds.left + scrollX, bounds.top + scrollY,\n                     bounds.right + scrollX, bounds.bottom + scrollY);\n  }\n\n  override dispatchEvent(event: Event): boolean {\n    return this.node.dispatchEvent(event);\n  }\n\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    this.node.addEventListener(type, listener, options);\n  }\n\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    this.node.removeEventListener(type, listener, options);\n  }\n\n  /** @internal */\n  static readonly nodeMap: WeakMap<Node, NodeView> = new WeakMap();\n\n  static get<S extends Class<Instance<S, NodeView>>>(this: S, node: Node | null | undefined): InstanceType<S> | null {\n    const view = node !== void 0 && node !== null ? NodeView.nodeMap.get(node) : void 0;\n    if (view === void 0) {\n      return null;\n    } else if (!(view instanceof this)) {\n      throw new TypeError(node + \" not an instance of \" + this.name);\n    }\n    return view;\n  }\n\n  static override fromLike<S extends Class<Instance<S, View>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (!(value instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value;\n    } else if (value instanceof Node) {\n      return (this as unknown as typeof NodeView).fromNode(value) as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromNode<S extends new (node: Node) => Instance<S, NodeView>>(this: S, node: Node): InstanceType<S>;\n  static fromNode(node: Node): NodeView;\n  static fromNode(node: Node): NodeView {\n    let view = this.get(node);\n    if (view === null) {\n      if (node instanceof HTMLElement) {\n        view = new HtmlView(node);\n      } else if (node instanceof SVGElement) {\n        view = new SvgView(node);\n      } else if (node instanceof Element) {\n        view = new ElementView(node);\n      } else if (node instanceof Text) {\n        view = new TextView(node);\n      } else {\n        view = new NodeView(node);\n      }\n      this.mount(view);\n    }\n    return view;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport {View} from \"@swim/view\";\nimport type {NodeViewConstructor} from \"./NodeView\";\nimport type {NodeViewObserver} from \"./NodeView\";\nimport {NodeView} from \"./NodeView\";\n\n/** @public */\nexport interface TextViewConstructor<V extends TextView = TextView> extends NodeViewConstructor<V> {\n  new(node: Text): V;\n}\n\n/** @public */\nexport interface TextViewObserver<V extends TextView = TextView> extends NodeViewObserver<V> {\n}\n\n/** @public */\nexport class TextView extends NodeView {\n  constructor(node: Text) {\n    super(node);\n  }\n\n  override likeType?(like: {create?(): View} | Node | string): void;\n\n  declare readonly observerType?: Class<TextViewObserver>;\n\n  declare readonly node: Text;\n\n  static override create<S extends new (node: Text) => Instance<S, TextView>>(this: S, text?: string): InstanceType<S>;\n  static override create(text?: string): TextView;\n  static override create(text?: string): TextView {\n    if (text === void 0) {\n      text = \"\";\n    }\n    const node = document.createTextNode(text);\n    return new this(node);\n  }\n\n  static override fromLike<S extends Class<Instance<S, View>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (!(value instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value;\n    } else if (value instanceof Text) {\n      return (this as unknown as typeof TextView).fromNode(value) as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else if (typeof value === \"string\") {\n      return (this as unknown as typeof TextView).create(value) as InstanceType<S>;\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromNode<S extends new (node: Text) => Instance<S, TextView>>(this: S, node: Text): InstanceType<S>;\n  static override fromNode(node: Text): TextView;\n  static override fromNode(node: Text): TextView {\n    let view = this.get(node);\n    if (view === null) {\n      view = new this(node);\n      this.mount(view);\n    }\n    return view;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {ThemeMatrix} from \"@swim/theme\";\nimport {Theme} from \"@swim/theme\";\nimport {ToAttributeString} from \"@swim/style\";\nimport {ToStyleString} from \"@swim/style\";\nimport {ToCssValue} from \"@swim/style\";\nimport {View} from \"@swim/view\";\nimport type {ViewportColorScheme} from \"@swim/view\";\nimport type {ViewportService} from \"@swim/view\";\nimport type {AttributeContext} from \"./AttributeContext\";\nimport {AttributeAnimator} from \"./AttributeAnimator\";\nimport type {StyleContext} from \"./StyleContext\";\nimport {StyleAttribute} from \"./StyleAttribute\";\nimport {ClassList} from \"./ClassList\";\nimport type {NodeViewFactory} from \"./NodeView\";\nimport type {NodeViewClass} from \"./NodeView\";\nimport type {NodeViewConstructor} from \"./NodeView\";\nimport type {NodeViewObserver} from \"./NodeView\";\nimport {NodeView} from \"./NodeView\";\nimport {HtmlView} from \"./\"; // forward import\nimport {SvgView} from \"./\"; // forward import\nimport {DomService} from \"./\"; // forward import\nimport type {ModalOptions} from \"./\"; // forward import\nimport {ModalView} from \"./\"; // forward import\nimport {ModalService} from \"./\"; // forward import\n\n/** @public */\nexport interface ElementAttributes<R = any> extends Fastener<R>, AttributeContext {\n  /** @override */\n  get fastenerType(): Proto<ElementAttributes<any>>;\n\n  get id(): AttributeAnimator<this, string | undefined>;\n\n  set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  set(properties: {[K in keyof ElementAttributes as ElementAttributes[K] extends {set(value: any): any} ? K : never]?: ElementAttributes[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  setIntrinsic<S>(this: S, properties: {[K in keyof S as S[K] extends {setIntrinsic(value: any): any} ? K : never]?: S[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  setIntrinsic(properties: {[K in keyof ElementAttributes as ElementAttributes[K] extends {setIntrinsic(value: any): any} ? K : never]?: ElementAttributes[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  /** @override */\n  getAttribute(attributeName: string): string | null;\n\n  /** @override */\n  setAttribute(attributeName: string, value: unknown): this;\n}\n\n/** @public */\nexport const ElementAttributes = (<R, F extends ElementAttributes<any>>() => Fastener.extend<ElementAttributes<R>, FastenerClass<F>>(\"ElementAttributes\", {\n  get fastenerType(): Proto<ElementAttributes<any>> {\n    return ElementAttributes;\n  },\n\n  set(properties: {[K in keyof ElementAttributes as ElementAttributes[K] extends {set(value: any): any} ? K : never]?: ElementAttributes[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R {\n    for (const key in properties) {\n      const value = properties[key as keyof typeof properties];\n      const property = (this as any)[key] as {set?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.set === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.set(value, timing);\n      } else {\n        property.set(value);\n      }\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(properties: {[K in keyof ElementAttributes as ElementAttributes[K] extends {setIntrinsic(value: any): any} ? K : never]?: ElementAttributes[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R {\n    for (const key in properties) {\n      const value = properties[key as keyof typeof properties];\n      const property = (this as any)[key] as {setIntrinsic?(value: any): any} | undefined;\n      if (property === void 0 || property === null) {\n        throw new Error(\"unknown property \" + key);\n      } else if (property.setIntrinsic === void 0) {\n        throw new Error(\"unsettable property \" + key);\n      } else if (property instanceof Animator) {\n        property.setIntrinsic(value, timing);\n      } else {\n        property.setIntrinsic(value);\n      }\n    }\n    return this.owner;\n  },\n\n  getAttribute(attributeName: string): string | null {\n    return (this.owner as AttributeContext).getAttribute(attributeName);\n  },\n\n  setAttribute(attributeName: string, value: unknown): ElementAttributes {\n    (this.owner as AttributeContext).setAttribute(attributeName, value);\n    return this;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    fastener.initFasteners(ElementAttributes);\n    return fastener;\n  },\n}))();\n\nElementAttributes.defineGetter(\"id\", [AttributeAnimator({\n  attributeName: \"id\",\n  valueType: String,\n})]);\n\n/** @public */\nexport interface ElementViewFactory<V extends ElementView = ElementView> extends NodeViewFactory<V> {\n  fromTag(tag: string): V;\n}\n\n/** @public */\nexport interface ElementViewClass<V extends ElementView = ElementView> extends NodeViewClass<V>, ElementViewFactory<V> {\n  readonly tag?: string;\n  readonly namespace?: string;\n}\n\n/** @public */\nexport interface ElementViewConstructor<V extends ElementView = ElementView> extends NodeViewConstructor<V>, ElementViewClass<V> {\n}\n\n/** @public */\nexport interface ElementViewObserver<V extends ElementView = ElementView> extends NodeViewObserver<V> {\n  viewWillSetAttribute?(name: string, value: unknown, view: V): void;\n\n  viewDidSetAttribute?(name: string, value: unknown, view: V): void;\n\n  viewWillSetStyle?(name: string, value: unknown, priority: string | undefined, view: V): void;\n\n  viewDidSetStyle?(name: string, value: unknown, priority: string | undefined, view: V): void;\n}\n\n/** @public */\nexport class ElementView extends NodeView implements AttributeContext, StyleContext {\n  constructor(node: Element) {\n    super(node);\n    this.willSetAttributeObservers = null;\n    this.didSetAttributeObservers = null;\n    this.willSetStyleObservers = null;\n    this.didSetStyleObservers = null;\n  }\n\n  override likeType?(like: {create?(): View} | Node | string): void;\n\n  declare readonly observerType?: Class<ElementViewObserver>;\n\n  declare readonly node: Element & ElementCSSInlineStyle;\n\n  @ElementAttributes({})\n  get attributes(): ElementAttributes<this> {\n    return ElementAttributes.getter();\n  }\n\n  /** @override */\n  getAttribute(attributeName: string): string | null {\n    return this.node.getAttribute(attributeName);\n  }\n\n  /** @override */\n  setAttribute(attributeName: string, value: unknown): this {\n    this.willSetAttribute(attributeName, value);\n    if (value !== void 0 && value !== null) {\n      this.node.setAttribute(attributeName, ToAttributeString(value));\n    } else {\n      this.node.removeAttribute(attributeName);\n    }\n    this.onSetAttribute(attributeName, value);\n    this.didSetAttribute(attributeName, value);\n    return this;\n  }\n\n  /** @internal */\n  protected willSetAttributeObservers: Set<Required<Pick<ElementViewObserver, \"viewWillSetAttribute\">>> | null;\n  protected willSetAttribute(attributeName: string, value: unknown): void {\n    const observers = this.willSetAttributeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillSetAttribute(attributeName, value, this);\n      }\n    }\n  }\n\n  protected onSetAttribute(attributeName: string, value: unknown): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didSetAttributeObservers: Set<Required<Pick<ElementViewObserver, \"viewDidSetAttribute\">>> | null;\n  protected didSetAttribute(attributeName: string, value: unknown): void {\n    const observers = this.didSetAttributeObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidSetAttribute(attributeName, value, this);\n      }\n    }\n  }\n\n  @StyleAttribute({})\n  get style(): StyleAttribute<this> {\n    return StyleAttribute.getter();\n  }\n\n  getStyle(propertyNames: string | readonly string[]): CSSStyleValue | string | undefined {\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      const style = this.node.attributeStyleMap;\n      if (typeof propertyNames === \"string\") {\n        try {\n          return style.get(propertyNames);\n        } catch (e) {\n          return void 0;\n        }\n      } else {\n        for (let i = 0; i < propertyNames.length; i += 1) {\n          const value = style.get(propertyNames[i]!);\n          if (value !== void 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    } else {\n      const style = this.node.style;\n      if (typeof propertyNames === \"string\") {\n        return style.getPropertyValue(propertyNames);\n      } else {\n        for (let i = 0; i < propertyNames.length; i += 1) {\n          const value = style.getPropertyValue(propertyNames[i]!);\n          if (value.length !== 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    }\n  }\n\n  setStyle(propertyName: string, value: unknown, priority?: string): this {\n    this.willSetStyle(propertyName, value, priority);\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      if (value !== void 0 && value !== null) {\n        const cssValue = ToCssValue(value);\n        if (cssValue !== null) {\n          try {\n            this.node.attributeStyleMap.set(propertyName, cssValue);\n          } catch (e) {\n            // swallow\n          }\n        } else {\n          this.node.style.setProperty(propertyName, ToStyleString(value), priority);\n        }\n      } else {\n        try {\n          this.node.attributeStyleMap.delete(propertyName);\n        } catch (e) {\n          // swallow\n        }\n      }\n    } else {\n      if (value !== void 0 && value !== null) {\n        this.node.style.setProperty(propertyName, ToStyleString(value), priority);\n      } else {\n        this.node.style.removeProperty(propertyName);\n      }\n    }\n    this.onSetStyle(propertyName, value, priority);\n    this.didSetStyle(propertyName, value, priority);\n    return this;\n  }\n\n  /** @internal */\n  protected willSetStyleObservers: Set<Required<Pick<ElementViewObserver, \"viewWillSetStyle\">>> | null;\n  protected willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    const observers = this.willSetStyleObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewWillSetStyle(propertyName, value, priority, this);\n      }\n    }\n  }\n\n  protected onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  }\n\n  /** @internal */\n  protected didSetStyleObservers: Set<Required<Pick<ElementViewObserver, \"viewDidSetStyle\">>> | null;\n  protected didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    const observers = this.didSetStyleObservers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        observer.viewDidSetStyle(propertyName, value, priority, this);\n      }\n    }\n  }\n\n  @ClassList({})\n  get classList(): ClassList<this> {\n    return ClassList.getter();\n  }\n\n  protected detectTheme(): void {\n    let themeName = this.node.getAttribute(\"swim-theme\");\n    if (themeName === \"\") {\n      themeName = \"auto\";\n    }\n    if (themeName === null) {\n      return;\n    }\n    let theme: ThemeMatrix | undefined;\n    if (themeName === \"auto\") {\n      const viewportService = this.viewport.getService();\n      const colorScheme = viewportService.colorScheme.value;\n      if (colorScheme === \"dark\") {\n        theme = Theme.dark;\n      } else {\n        theme = Theme.light;\n      }\n    } else if (themeName.indexOf('.') < 0) {\n      theme = (Theme as any)[themeName];\n    } else {\n      theme = DomService.eval(themeName) as ThemeMatrix | undefined;\n    }\n    if (!(theme instanceof ThemeMatrix)) {\n      throw new TypeError(\"unknown swim-theme: \" + themeName);\n    }\n    this.theme.set(theme);\n  }\n\n  @Provider({\n    extends: true,\n    observes: true,\n    serviceDidSetViewportColorScheme(colorScheme: ViewportColorScheme): void {\n      this.owner.detectTheme();\n    },\n  })\n  override get viewport(): Provider<this, ViewportService> & NodeView[\"viewport\"] & Observes<ViewportService> {\n    return Provider.getter();\n  }\n\n  @Provider({\n    get serviceType(): typeof DomService { // avoid static forward reference\n      return DomService;\n    },\n    mountRootService(service: DomService,): void {\n      super.mountRootService(service);\n      service.roots.addView(this.owner);\n    },\n    unmountRootService(service: DomService): void {\n      super.unmountService(service);\n      service.roots.removeView(this.owner);\n    },\n  })\n  get dom(): Provider<this, DomService> {\n    return Provider.getter();\n  }\n\n  @Provider({\n    get serviceType(): typeof ModalService { // avoid static forward reference\n      return ModalService;\n    },\n    present(modalView?: ModalView, options?: ModalOptions): void {\n      if (modalView === void 0 && ModalView[Symbol.hasInstance](this.owner)) {\n        modalView = this.owner;\n      }\n      if (modalView !== void 0) {\n        this.getService().presentModal(modalView, options);\n      }\n    },\n    dismiss(modalView?: ModalView): void {\n      if (modalView === void 0 && ModalView[Symbol.hasInstance](this.owner)) {\n        modalView = this.owner;\n      }\n      if (modalView !== void 0) {\n        this.getService().dismissModal(modalView);\n      }\n    },\n    toggle(modalView?: ModalView, options?: ModalOptions): void {\n      if (modalView === void 0 && ModalView[Symbol.hasInstance](this.owner)) {\n        modalView = this.owner;\n      }\n      if (modalView !== void 0) {\n        this.getService().toggleModal(modalView, options);\n      }\n    },\n  })\n  get modal(): Provider<this, ModalService> & {\n    present(modalView?: ModalView, options?: ModalOptions): void,\n    dismiss(modalView?: ModalView): void,\n    toggle(modalView?: ModalView): void,\n  } {\n    return Provider.getter();\n  }\n\n  override get clientBounds(): R2Box {\n    const bounds = this.node.getBoundingClientRect();\n    return new R2Box(bounds.left, bounds.top, bounds.right, bounds.bottom);\n  }\n\n  override get pageBounds(): R2Box {\n    const bounds = this.node.getBoundingClientRect();\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    return new R2Box(bounds.left + scrollX, bounds.top + scrollY,\n                     bounds.right + scrollX, bounds.bottom + scrollY);\n  }\n\n  override addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, event: ElementEventMap[K]) => unknown, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    this.node.addEventListener(type, listener, options);\n  }\n\n  override removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, event: ElementEventMap[K]) => unknown, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    this.node.removeEventListener(type, listener, options);\n  }\n\n  protected override onObserve(observer: Observes<this>): void {\n    super.onObserve(observer);\n    if (observer.viewWillSetAttribute !== void 0) {\n      if (this.willSetAttributeObservers === null) {\n        this.willSetAttributeObservers = new Set();\n      }\n      this.willSetAttributeObservers.add(observer as Required<Pick<ElementViewObserver, \"viewWillSetAttribute\">>);\n    }\n    if (observer.viewDidSetAttribute !== void 0) {\n      if (this.didSetAttributeObservers === null) {\n        this.didSetAttributeObservers = new Set();\n      }\n      this.didSetAttributeObservers.add(observer as Required<Pick<ElementViewObserver, \"viewDidSetAttribute\">>);\n    }\n    if (observer.viewWillSetStyle !== void 0) {\n      if (this.willSetStyleObservers === null) {\n        this.willSetStyleObservers = new Set();\n      }\n      this.willSetStyleObservers.add(observer as Required<Pick<ElementViewObserver, \"viewWillSetStyle\">>);\n    }\n    if (observer.viewDidSetStyle !== void 0) {\n      if (this.didSetStyleObservers === null) {\n        this.didSetStyleObservers = new Set();\n      }\n      this.didSetStyleObservers.add(observer as Required<Pick<ElementViewObserver, \"viewDidSetStyle\">>);\n    }\n  }\n\n  protected override onUnobserve(observer: Observes<this>): void {\n    super.onUnobserve(observer);\n    if (observer.viewWillSetAttribute !== void 0 && this.willSetAttributeObservers !== null) {\n      this.willSetAttributeObservers.delete(observer as Required<Pick<ElementViewObserver, \"viewWillSetAttribute\">>);\n    }\n    if (observer.viewDidSetAttribute !== void 0 && this.didSetAttributeObservers !== null) {\n      this.didSetAttributeObservers.delete(observer as Required<Pick<ElementViewObserver, \"viewDidSetAttribute\">>);\n    }\n    if (observer.viewWillSetStyle !== void 0 && this.willSetStyleObservers !== null) {\n      this.willSetStyleObservers.delete(observer as Required<Pick<ElementViewObserver, \"viewWillSetStyle\">>);\n    }\n    if (observer.viewDidSetStyle !== void 0 && this.didSetStyleObservers !== null) {\n      this.didSetStyleObservers.delete(observer as Required<Pick<ElementViewObserver, \"viewDidSetStyle\">>);\n    }\n  }\n\n  protected override onMount(): void {\n    super.onMount();\n    if (this.node.hasAttribute(\"swim-theme\")) {\n      this.detectTheme();\n      this.viewport.getService().observe(this.viewport);\n    }\n  }\n\n  protected override onUnmount(): void {\n    super.onUnmount();\n    if (this.node.hasAttribute(\"swim-theme\")) {\n      this.viewport.getService().unobserve(this.viewport);\n    }\n  }\n\n  /** @internal */\n  static readonly tag?: string;\n\n  /** @internal */\n  static readonly namespace?: string;\n\n  static override create<S extends Class<Instance<S, ElementView>>>(this: S): InstanceType<S>;\n  static override create(): ElementView;\n  static override create(): ElementView {\n    let tag = this.tag;\n    if (tag === void 0) {\n      tag = \"div\";\n    }\n    return this.fromTag(tag);\n  }\n\n  static override fromLike<S extends Class<Instance<S, View>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (!(value instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value;\n    } else if (value instanceof Element) {\n      return (this as unknown as typeof ElementView).fromNode(value) as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else if (typeof value === \"string\") {\n      return (this as unknown as typeof ElementView).fromTag(value) as InstanceType<S>;\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromNode<S extends new (node: Element) => Instance<S, ElementView>>(this: S, node: Element): InstanceType<S>;\n  static override fromNode(node: Element): ElementView;\n  static override fromNode(node: Element): ElementView {\n    let view = this.get(node);\n    if (view === null) {\n      if (node instanceof HTMLElement) {\n        view = new HtmlView(node);\n      } else if (node instanceof SVGElement) {\n        view = new SvgView(node);\n      } else {\n        view = new ElementView(node);\n      }\n      this.mount(view);\n    }\n    return view;\n  }\n\n  static fromTag<S extends Class<Instance<S, ElementView>>>(this: S, tag: string, namespace?: string): InstanceType<S>;\n  static fromTag(tag: string, namespace?: string): ElementView;\n  static fromTag(tag: string, namespace?: string): ElementView {\n    if (namespace === void 0) {\n      if (tag === \"svg\") {\n        namespace = SvgView.namespace;\n      }\n    }\n    let node: Element;\n    if (namespace !== void 0) {\n      node = document.createElementNS(namespace, tag);\n    } else {\n      node = document.createElement(tag);\n    }\n    return this.fromNode(node);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {__runInitializers} from \"tslib\";\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Transform} from \"@swim/math\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {AttributeAnimator} from \"./AttributeAnimator\";\nimport {ElementAttributes} from \"./ElementView\";\nimport type {ElementViewFactory} from \"./ElementView\";\nimport type {ElementViewClass} from \"./ElementView\";\nimport type {ElementViewConstructor} from \"./ElementView\";\nimport type {ElementViewObserver} from \"./ElementView\";\nimport {ElementView} from \"./ElementView\";\nimport {StyleView} from \"./\"; // forward import\nimport {SvgView} from \"./\"; // forward import\n\n/** @public */\nexport interface HtmlAttributes<R = any> extends ElementAttributes<R> {\n  get autocomplete(): AttributeAnimator<this, string | undefined>;\n\n  get checked(): AttributeAnimator<this, boolean | undefined>;\n\n  get colspan(): AttributeAnimator<this, number | undefined>;\n\n  get disabled(): AttributeAnimator<this, boolean | undefined>;\n\n  get href(): AttributeAnimator<this, string | undefined>;\n\n  get placeholder(): AttributeAnimator<this, string | undefined>;\n\n  get rowspan(): AttributeAnimator<this, number | undefined>;\n\n  get selected(): AttributeAnimator<this, boolean | undefined>;\n\n  get title(): AttributeAnimator<this, string | undefined>;\n\n  get type(): AttributeAnimator<this, string | undefined>;\n\n  get value(): AttributeAnimator<this, string | undefined>;\n\n  /** @override */\n  set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  /** @override */\n  set(properties: {[K in keyof HtmlAttributes as HtmlAttributes[K] extends {set(value: any): any} ? K : never]?: HtmlAttributes[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  /** @override */\n  setIntrinsic<S>(this: S, properties: {[K in keyof S as S[K] extends {setIntrinsic(value: any): any} ? K : never]?: S[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  /** @override */\n  setIntrinsic(properties: {[K in keyof HtmlAttributes as HtmlAttributes[K] extends {setIntrinsic(value: any): any} ? K : never]?: HtmlAttributes[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n}\n\n/** @public */\nexport const HtmlAttributes = (<R, F extends HtmlAttributes<any>>() => ElementAttributes.extend<HtmlAttributes<R>, FastenerClass<F>>(\"HtmlAttributes\", {\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    fastener.initFasteners(HtmlAttributes);\n    return fastener;\n  },\n}))();\n\nHtmlAttributes.defineGetter(\"autocomplete\", [AttributeAnimator({\n  attributeName: \"autocomplete\",\n  valueType: String,\n})]);\n\nHtmlAttributes.defineGetter(\"checked\", [AttributeAnimator({\n  attributeName: \"checked\",\n  valueType: Boolean,\n})]);\n\nHtmlAttributes.defineGetter(\"colspan\", [AttributeAnimator({\n  attributeName: \"colspan\",\n  valueType: Number,\n})]);\n\nHtmlAttributes.defineGetter(\"disabled\", [AttributeAnimator({\n  attributeName: \"disabled\",\n  valueType: Boolean,\n})]);\n\nHtmlAttributes.defineGetter(\"href\", [AttributeAnimator({\n  attributeName: \"href\",\n  valueType: String,\n})]);\n\nHtmlAttributes.defineGetter(\"placeholder\", [AttributeAnimator({\n  attributeName: \"placeholder\",\n  valueType: String,\n})]);\n\nHtmlAttributes.defineGetter(\"rowspan\", [AttributeAnimator({\n  attributeName: \"rowspan\",\n  valueType: Number,\n})]);\n\nHtmlAttributes.defineGetter(\"selected\", [AttributeAnimator({\n  attributeName: \"selected\",\n  valueType: Boolean,\n})]);\n\nHtmlAttributes.defineGetter(\"title\", [AttributeAnimator({\n  attributeName: \"title\",\n  valueType: String,\n})]);\n\nHtmlAttributes.defineGetter(\"type\", [AttributeAnimator({\n  attributeName: \"type\",\n  valueType: String,\n})]);\n\nHtmlAttributes.defineGetter(\"value\", [AttributeAnimator({\n  attributeName: \"value\",\n  valueType: String,\n})]);\n\n/** @public */\nexport interface HtmlViewTagMap {\n  a: HtmlView;\n  abbr: HtmlView;\n  address: HtmlView;\n  area: HtmlView;\n  article: HtmlView;\n  aside: HtmlView;\n  audio: HtmlView;\n  b: HtmlView;\n  base: HtmlView;\n  bdi: HtmlView;\n  bdo: HtmlView;\n  blockquote: HtmlView;\n  body: HtmlView;\n  br: HtmlView;\n  button: HtmlView;\n  canvas: HtmlView;\n  caption: HtmlView;\n  cite: HtmlView;\n  code: HtmlView;\n  col: HtmlView;\n  colgroup: HtmlView;\n  data: HtmlView;\n  datalist: HtmlView;\n  dd: HtmlView;\n  del: HtmlView;\n  details: HtmlView;\n  dfn: HtmlView;\n  dialog: HtmlView;\n  div: HtmlView;\n  dl: HtmlView;\n  dt: HtmlView;\n  em: HtmlView;\n  embed: HtmlView;\n  fieldset: HtmlView;\n  figcaption: HtmlView;\n  figure: HtmlView;\n  footer: HtmlView;\n  form: HtmlView;\n  h1: HtmlView;\n  h2: HtmlView;\n  h3: HtmlView;\n  h4: HtmlView;\n  h5: HtmlView;\n  h6: HtmlView;\n  head: HtmlView;\n  header: HtmlView;\n  hr: HtmlView;\n  html: HtmlView;\n  i: HtmlView;\n  iframe: HtmlView;\n  img: HtmlView;\n  input: HtmlView;\n  ins: HtmlView;\n  kbd: HtmlView;\n  label: HtmlView;\n  legend: HtmlView;\n  li: HtmlView;\n  link: HtmlView;\n  main: HtmlView;\n  map: HtmlView;\n  mark: HtmlView;\n  meta: HtmlView;\n  meter: HtmlView;\n  nav: HtmlView;\n  noscript: HtmlView;\n  object: HtmlView;\n  ol: HtmlView;\n  optgroup: HtmlView;\n  option: HtmlView;\n  output: HtmlView;\n  p: HtmlView;\n  param: HtmlView;\n  picture: HtmlView;\n  pre: HtmlView;\n  progress: HtmlView;\n  q: HtmlView;\n  rb: HtmlView;\n  rp: HtmlView;\n  rt: HtmlView;\n  rtc: HtmlView;\n  ruby: HtmlView;\n  s: HtmlView;\n  samp: HtmlView;\n  script: HtmlView;\n  section: HtmlView;\n  select: HtmlView;\n  small: HtmlView;\n  slot: HtmlView;\n  source: HtmlView;\n  span: HtmlView;\n  strong: HtmlView;\n  style: StyleView;\n  sub: HtmlView;\n  summary: HtmlView;\n  sup: HtmlView;\n  table: HtmlView;\n  tbody: HtmlView;\n  td: HtmlView;\n  template: HtmlView;\n  textarea: HtmlView;\n  tfoot: HtmlView;\n  th: HtmlView;\n  thead: HtmlView;\n  time: HtmlView;\n  title: HtmlView;\n  tr: HtmlView;\n  track: HtmlView;\n  u: HtmlView;\n  ul: HtmlView;\n  var: HtmlView;\n  video: HtmlView;\n  wbr: HtmlView;\n}\n\n/** @public */\nexport interface HtmlViewFactory<V extends HtmlView = HtmlView> extends ElementViewFactory<V> {\n}\n\n/** @public */\nexport interface HtmlViewClass<V extends HtmlView = HtmlView> extends ElementViewClass<V>, HtmlViewFactory<V> {\n  readonly tag: string;\n}\n\n/** @public */\nexport interface HtmlViewConstructor<V extends HtmlView = HtmlView> extends ElementViewConstructor<V>, HtmlViewClass<V> {\n  readonly tag: string;\n}\n\n/** @public */\nexport interface HtmlViewObserver<V extends HtmlView = HtmlView> extends ElementViewObserver<V> {\n}\n\n/** @public */\nexport class HtmlView extends ElementView {\n  constructor(node: HTMLElement) {\n    super(node);\n  }\n\n  override likeType?(like: {create?(): View} | Node | keyof HtmlViewTagMap): void;\n\n  declare readonly observerType?: Class<HtmlViewObserver>;\n\n  declare readonly node: HTMLElement;\n\n  @HtmlAttributes({})\n  override get attributes(): HtmlAttributes<this> {\n    return HtmlAttributes.getter();\n  }\n\n  override setChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(key: string, newChildFactory: F): View | null;\n  override setChild(key: string, newChild: View | LikeType<HtmlView> | null): View | null;\n  override setChild(key: string, newChild: View | LikeType<HtmlView> | null): View | null {\n    if (typeof newChild === \"string\") {\n      newChild = HtmlView.fromTag(newChild);\n    }\n    return super.setChild(key, newChild);\n  }\n\n  override appendChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override appendChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override appendChild<K extends keyof HtmlViewTagMap>(tag: K, key?: string): HtmlViewTagMap[K];\n  override appendChild(child: View | LikeType<HtmlView>, key?: string): View;\n  override appendChild(child: View | LikeType<HtmlView>, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override prependChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override prependChild<K extends keyof HtmlViewTagMap>(tag: K, key?: string): HtmlViewTagMap[K];\n  override prependChild(child: View | LikeType<HtmlView>, key?: string): View;\n  override prependChild(child: View | LikeType<HtmlView>, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, target: View | Node | null, key?: string): InstanceType<F>;\n  override insertChild<V extends View>(child: V | LikeType<V>, target: View | Node | null, key?: string): V;\n  override insertChild<K extends keyof HtmlViewTagMap>(tag: K, target: View | Node | null, key?: string): HtmlViewTagMap[K];\n  override insertChild(child: View | LikeType<HtmlView>, target: View | Node | null, key?: string): View;\n  override insertChild(child: View | LikeType<HtmlView>, target: View | Node | null, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(newChildFactory: F, oldChild: View): View;\n  override replaceChild<V extends View>(newChild: View | LikeType<HtmlView>, oldChild: V): V;\n  override replaceChild(newChild: View | LikeType<HtmlView>, oldChild: View): View;\n  override replaceChild(newChild: View | LikeType<HtmlView>, oldChild: View): View {\n    if (typeof newChild === \"string\") {\n      newChild = HtmlView.fromTag(newChild);\n    }\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.node.hasAttribute(\"swim-theme\")) {\n      this.applyRootTheme(theme, mood, timing);\n    }\n  }\n\n  /** @internal */\n  applyRootTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const font = theme.getOr(Look.font, Mood.ambient, null);\n    if (font !== null) {\n      if (font.style !== void 0) {\n        this.style.fontStyle.setState(font.style, void 0, Affinity.Transient);\n      }\n      if (font.variant !== void 0) {\n        this.style.fontVariant.setState(font.variant, void 0, Affinity.Transient);\n      }\n      if (font.weight !== void 0) {\n        this.style.fontWeight.setState(font.weight, void 0, Affinity.Transient);\n      }\n      if (font.stretch !== void 0) {\n        this.style.fontStretch.setState(font.stretch, void 0, Affinity.Transient);\n      }\n      if (font.size !== null) {\n        this.style.fontSize.setState(font.size, void 0, Affinity.Transient);\n      }\n      if (font.height !== null) {\n        this.style.lineHeight.setState(font.height, void 0, Affinity.Transient);\n      }\n      this.style.fontFamily.setState(font.family, void 0, Affinity.Transient);\n    }\n    this.style.backgroundColor.setIntrinsic(theme.getOr(Look.backgroundColor, Mood.ambient, null), timing);\n    this.style.color.setIntrinsic(theme.getOr(Look.textColor, Mood.ambient, null), timing);\n  }\n\n  /** @internal */\n  static isPositioned(element: HTMLElement): boolean {\n    const style = window.getComputedStyle(element);\n    return style.position === \"relative\" || style.position === \"absolute\";\n  }\n\n  isPositioned(): boolean {\n    return HtmlView.isPositioned(this.node);\n  }\n\n  /** @internal */\n  static parentTransform(element: HTMLElement): Transform {\n    if (HtmlView.isPositioned(element)) {\n      const dx = element.offsetLeft;\n      const dy = element.offsetTop;\n      if (dx !== 0 || dy !== 0) {\n        return Transform.translate(-dx, -dy);\n      }\n    }\n    return Transform.identity();\n  }\n\n  /** @internal */\n  static pageTransform(element: HTMLElement): Transform {\n    const parentNode = element.parentNode;\n    if (parentNode instanceof HTMLElement) {\n      return HtmlView.pageTransform(parentNode).transform(HtmlView.parentTransform(element));\n    }\n    return Transform.identity();\n  }\n\n  override get parentTransform(): Transform {\n    const transform = this.style.transform.value;\n    if (transform !== null) {\n      return transform;\n    } else if (this.isPositioned()) {\n      const dx = this.node.offsetLeft;\n      const dy = this.node.offsetTop;\n      if (dx !== 0 || dy !== 0) {\n        return Transform.translate(-dx, -dy);\n      }\n    }\n    return Transform.identity();\n  }\n\n  override get pageTransform(): Transform {\n    const parentView = this.parent;\n    if (parentView !== null) {\n      return parentView.pageTransform.transform(this.parentTransform);\n    }\n    const parentNode = this.node.parentNode;\n    if (parentNode instanceof HTMLElement) {\n      return HtmlView.pageTransform(parentNode).transform(this.parentTransform);\n    }\n    return Transform.identity();\n  }\n\n  override addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, event: HTMLElementEventMap[K]) => unknown, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    this.node.addEventListener(type, listener, options);\n  }\n\n  override removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, event: HTMLElementEventMap[K]) => unknown, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    this.node.removeEventListener(type, listener, options);\n  }\n\n  static override readonly tag: string = \"div\";\n\n  static override create<S extends Class<Instance<S, HtmlView>>>(this: S): InstanceType<S>;\n  static override create(): HtmlView;\n  static override create(): HtmlView {\n    return this.fromTag(this.tag);\n  }\n\n  static override fromLike<S extends Class<Instance<S, View>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (!(value instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value;\n    } else if (value instanceof HTMLElement) {\n      return (this as unknown as typeof HtmlView).fromNode(value) as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else if (typeof value === \"string\") {\n      return (this as unknown as typeof HtmlView).fromTag(value) as InstanceType<S>;\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromNode<S extends new (node: HTMLElement) => Instance<S, HtmlView>>(this: S, node: HTMLElement): InstanceType<S>;\n  static override fromNode(node: HTMLElement): HtmlView;\n  static override fromNode(node: HTMLElement): HtmlView {\n    let view = this.get(node);\n    if (view === null) {\n      view = new this(node);\n      this.mount(view);\n    }\n    return view;\n  }\n\n  static override fromTag(tag: \"style\"): StyleView;\n  static override fromTag(tag: \"svg\"): SvgView;\n  static override fromTag<S extends Class<Instance<S, HtmlView>>>(this: S, tag: string): InstanceType<S>;\n  static override fromTag(tag: string): HtmlView;\n  static override fromTag(tag: string): ElementView {\n    if (tag === \"style\" && this !== StyleView) {\n      return StyleView.create();\n    } else if (tag === \"svg\") {\n      return SvgView.create();\n    }\n    const node = document.createElement(tag);\n    return this.fromNode(node);\n  }\n\n  static forTag<S extends Class<Instance<S, HtmlView>>>(this: S, tag: string): HtmlViewFactory<InstanceType<S>>;\n  static forTag(tag: string): HtmlViewFactory;\n  static forTag(tag: string): HtmlViewFactory {\n    if (tag === this.tag) {\n      return this;\n    }\n    return new HtmlViewTagFactory(this, tag);\n  }\n}\n\n/** @internal */\nexport class HtmlViewTagFactory<V extends HtmlView> implements HtmlViewFactory<V> {\n  constructor(factory: HtmlViewFactory<V>, tag: string) {\n    this.factory = factory;\n    this.tag = tag;\n  }\n\n  /** @internal */\n  readonly factory: HtmlViewFactory<V>;\n\n  readonly tag: string;\n\n  create(): V {\n    return this.fromTag(this.tag);\n  }\n\n  fromLike(value: V | LikeType<V>): V {\n    return this.factory.fromLike(value);\n  }\n\n  fromNode(node: HTMLElement): V {\n    return this.factory.fromNode(node);\n  }\n\n  fromTag(tag: string): V {\n    const node = document.createElement(tag);\n    return this.fromNode(node);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {StyleContext} from \"./StyleContext\";\nimport {StyleSheet} from \"./StyleSheet\";\nimport type {HtmlViewObserver} from \"./HtmlView\";\nimport {HtmlView} from \"./HtmlView\";\n\n/** @public */\nexport interface StyleViewObserver<V extends StyleView = StyleView> extends HtmlViewObserver<V> {\n}\n\n/** @public */\nexport class StyleView extends HtmlView implements StyleContext {\n  constructor(node: HTMLStyleElement) {\n    super(node);\n  }\n\n  declare readonly observerType?: Class<StyleViewObserver>;\n\n  declare readonly node: HTMLStyleElement;\n\n  @StyleSheet({})\n  readonly sheet!: StyleSheet<this>;\n\n  protected override onMount(): void {\n    super.onMount();\n    this.sheet.attachCss(this.node.sheet!);\n  }\n\n  protected override onUnmount(): void {\n    this.sheet.detachCss();\n    super.onUnmount();\n  }\n\n  /** @internal */\n  static override readonly tag: string = \"style\";\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Creatable} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {View} from \"@swim/view\";\nimport {AttributeAnimator} from \"./AttributeAnimator\";\nimport type {AlignmentBaseline} from \"./csstypes\";\nimport type {CssCursor} from \"./csstypes\";\nimport type {FillRule} from \"./csstypes\";\nimport type {StrokeLinecap} from \"./csstypes\";\nimport type {StrokeLinejoin} from \"./csstypes\";\nimport type {SvgPointerEvents} from \"./csstypes\";\nimport type {TextAnchor} from \"./csstypes\";\nimport {ElementAttributes} from \"./ElementView\";\nimport type {ElementViewFactory} from \"./ElementView\";\nimport type {ElementViewClass} from \"./ElementView\";\nimport type {ElementViewConstructor} from \"./ElementView\";\nimport type {ElementViewObserver} from \"./ElementView\";\nimport {ElementView} from \"./ElementView\";\n\n/** @public */\nexport interface SvgAttributes<R = any> extends ElementAttributes<R> {\n  get alignmentBaseline(): AttributeAnimator<this, AlignmentBaseline | undefined>;\n\n  get clipPath(): AttributeAnimator<this, string | undefined>;\n\n  get cursor(): AttributeAnimator<this, CssCursor | undefined>;\n\n  get cx(): AttributeAnimator<this, number | undefined>;\n\n  get cy(): AttributeAnimator<this, number | undefined>;\n\n  get d(): AttributeAnimator<this, string | undefined>;\n\n  get dx(): AttributeAnimator<this, Length | null>;\n\n  get dy(): AttributeAnimator<this, Length | null>;\n\n  get edgeMode(): AttributeAnimator<this, string | undefined>;\n\n  get fill(): AttributeAnimator<this, Color | null>;\n\n  get fillOpacity(): AttributeAnimator<this, number | undefined>;\n\n  get fillRule(): AttributeAnimator<this, FillRule | undefined>;\n\n  get floodColor(): AttributeAnimator<this, Color | null>;\n\n  get floodOpacity(): AttributeAnimator<this, number | undefined>;\n\n  get height(): AttributeAnimator<this, Length | null>;\n\n  get in(): AttributeAnimator<this, string | undefined>;\n\n  get in2(): AttributeAnimator<this, string | undefined>;\n\n  get lengthAdjust(): AttributeAnimator<this, \"spacing\" | \"spacingAndGlyphs\" | undefined>;\n\n  get mode(): AttributeAnimator<this, string | undefined>;\n\n  get opacity(): AttributeAnimator<this, number | undefined>;\n\n  get pointerEvents(): AttributeAnimator<this, SvgPointerEvents | undefined>;\n\n  get points(): AttributeAnimator<this, string | undefined>;\n\n  get preserveAspectRatio(): AttributeAnimator<this, boolean | undefined>;\n\n  get r(): AttributeAnimator<this, number | undefined>;\n\n  get result(): AttributeAnimator<this, string | undefined>;\n\n  get stdDeviation(): AttributeAnimator<this, number | undefined>;\n\n  get stroke(): AttributeAnimator<this, Color | null>;\n\n  get strokeDasharray(): AttributeAnimator<this, string | undefined>;\n\n  get strokeDashoffset(): AttributeAnimator<this, number | undefined>;\n\n  get strokeLinecap(): AttributeAnimator<this, StrokeLinecap | undefined>;\n\n  get strokeLinejoin(): AttributeAnimator<this, StrokeLinejoin | undefined>;\n\n  get strokeMiterlimit(): AttributeAnimator<this, number | undefined>;\n\n  get strokeOpacity(): AttributeAnimator<this, number | undefined>;\n\n  get strokeWidth(): AttributeAnimator<this, number | undefined>;\n\n  get textAnchor(): AttributeAnimator<this, TextAnchor | undefined>;\n\n  get textLength(): AttributeAnimator<this, Length | null>;\n\n  get transform(): AttributeAnimator<this, Transform | null>;\n\n  get type(): AttributeAnimator<this, string | undefined>;\n\n  get values(): AttributeAnimator<this, string | undefined>;\n\n  get viewBox(): AttributeAnimator<this, string | undefined>;\n\n  get width(): AttributeAnimator<this, Length | null>;\n\n  get x(): AttributeAnimator<this, number | undefined>;\n\n  get x1(): AttributeAnimator<this, number | undefined>;\n\n  get x2(): AttributeAnimator<this, number | undefined>;\n\n  get y(): AttributeAnimator<this, number | undefined>;\n\n  get y1(): AttributeAnimator<this, number | undefined>;\n\n  get y2(): AttributeAnimator<this, number | undefined>;\n\n  /** @override */\n  set<S>(this: S, properties: {[K in keyof S as S[K] extends {set(value: any): any} ? K : never]?: S[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  /** @override */\n  set(properties: {[K in keyof SvgAttributes as SvgAttributes[K] extends {set(value: any): any} ? K : never]?: SvgAttributes[K] extends {set(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n\n  /** @override */\n  setIntrinsic<S>(this: S, properties: {[K in keyof S as S[K] extends {setIntrinsic(value: any): any} ? K : never]?: S[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n  /** @override */\n  setIntrinsic(properties: {[K in keyof SvgAttributes as SvgAttributes[K] extends {setIntrinsic(value: any): any} ? K : never]?: SvgAttributes[K] extends {setIntrinsic(value: infer T): any} ? T : never}, timing?: TimingLike | boolean | null): R;\n}\n\n/** @public */\nexport const SvgAttributes = (<R, F extends SvgAttributes<any>>() => ElementAttributes.extend<SvgAttributes<R>, FastenerClass<F>>(\"SvgAttributes\", {\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    fastener.initFasteners(SvgAttributes);\n    return fastener;\n  },\n}))();\n\nSvgAttributes.defineGetter(\"alignmentBaseline\", [AttributeAnimator({\n  attributeName: \"alignment-baseline\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"clipPath\", [AttributeAnimator({\n  attributeName: \"clip-path\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"cursor\", [AttributeAnimator({\n  attributeName: \"cursor\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"cx\", [AttributeAnimator({\n  attributeName: \"cx\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"cy\", [AttributeAnimator({\n  attributeName: \"cy\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"d\", [AttributeAnimator({\n  attributeName: \"d\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"dx\", [AttributeAnimator({\n  attributeName: \"dx\",\n  valueType: Length,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"dy\", [AttributeAnimator({\n  attributeName: \"dy\",\n  valueType: Length,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"edgeMode\", [AttributeAnimator({\n  attributeName: \"edgeMode\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"fill\", [AttributeAnimator({\n  attributeName: \"fill\",\n  valueType: Color,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"fillOpacity\", [AttributeAnimator({\n  attributeName: \"fill-opacity\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"fillRule\", [AttributeAnimator({\n  attributeName: \"fill-rule\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"floodColor\", [AttributeAnimator({\n  attributeName: \"flood-color\",\n  valueType: Color,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"floodOpacity\", [AttributeAnimator({\n  attributeName: \"flood-opacity\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"height\", [AttributeAnimator({\n  attributeName: \"height\",\n  valueType: Length,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"in\", [AttributeAnimator({\n  attributeName: \"in\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"in2\", [AttributeAnimator({\n  attributeName: \"in2\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"lengthAdjust\", [AttributeAnimator({\n  attributeName: \"lengthAdjust\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"mode\", [AttributeAnimator({\n  attributeName: \"mode\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"opacity\", [AttributeAnimator({\n  attributeName: \"opacity\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"pointerEvents\", [AttributeAnimator({\n  attributeName: \"pointer-events\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"points\", [AttributeAnimator({\n  attributeName: \"points\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"preserveAspectRatio\", [AttributeAnimator({\n  attributeName: \"preserveAspectRatio\",\n  valueType: Boolean,\n})]);\n\nSvgAttributes.defineGetter(\"r\", [AttributeAnimator({\n  attributeName: \"r\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"result\", [AttributeAnimator({\n  attributeName: \"result\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"stdDeviation\", [AttributeAnimator({\n  attributeName: \"stdDeviation\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"stroke\", [AttributeAnimator({\n  attributeName: \"stroke\",\n  valueType: Color,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"strokeDasharray\", [AttributeAnimator({\n  attributeName: \"stroke-dasharray\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"strokeDashoffset\", [AttributeAnimator({\n  attributeName: \"stroke-dashoffset\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"strokeLinecap\", [AttributeAnimator({\n  attributeName: \"stroke-linecap\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"strokeLinejoin\", [AttributeAnimator({\n  attributeName: \"stroke-linejoin\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"strokeMiterlimit\", [AttributeAnimator({\n  attributeName: \"stroke-miterlimit\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"strokeOpacity\", [AttributeAnimator({\n  attributeName: \"stroke-opacity\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"strokeWidth\", [AttributeAnimator({\n  attributeName: \"stroke-width\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"textAnchor\", [AttributeAnimator({\n  attributeName: \"text-anchor\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"textLength\", [AttributeAnimator({\n  attributeName: \"textLength\",\n  valueType: Length,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"transform\", [AttributeAnimator({\n  attributeName: \"transform\",\n  valueType: Transform,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"type\", [AttributeAnimator({\n  attributeName: \"type\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"values\", [AttributeAnimator({\n  attributeName: \"values\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"viewBox\", [AttributeAnimator({\n  attributeName: \"viewBox\",\n  valueType: String,\n})]);\n\nSvgAttributes.defineGetter(\"width\", [AttributeAnimator({\n  attributeName: \"width\",\n  valueType: Length,\n  value: null,\n})]);\n\nSvgAttributes.defineGetter(\"x\", [AttributeAnimator({\n  attributeName: \"x\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"x1\", [AttributeAnimator({\n  attributeName: \"x1\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"x2\", [AttributeAnimator({\n  attributeName: \"x2\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"y\", [AttributeAnimator({\n  attributeName: \"y\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"y1\", [AttributeAnimator({\n  attributeName: \"y1\",\n  valueType: Number,\n})]);\n\nSvgAttributes.defineGetter(\"y2\", [AttributeAnimator({\n  attributeName: \"y2\",\n  valueType: Number,\n})]);\n\n/** @public */\nexport interface SvgViewTagMap {\n  a: SvgView;\n  animate: SvgView;\n  animateMotion: SvgView;\n  animateTransform: SvgView;\n  audio: SvgView;\n  canvas: SvgView;\n  circle: SvgView;\n  clipPath: SvgView;\n  defs: SvgView;\n  desc: SvgView;\n  discard: SvgView;\n  ellipse: SvgView;\n  feBlend: SvgView;\n  feColorMatrix: SvgView;\n  feComponentTransfer: SvgView;\n  feComposite: SvgView;\n  feConvolveMatrix: SvgView;\n  feDiffuseLighting: SvgView;\n  feDisplacementMap: SvgView;\n  feDistantLight: SvgView;\n  feDropShadow: SvgView;\n  feFlood: SvgView;\n  feFuncA: SvgView;\n  feFuncB: SvgView;\n  feFuncG: SvgView;\n  feFuncR: SvgView;\n  feGaussianBlur: SvgView;\n  feImage: SvgView;\n  feMerge: SvgView;\n  feMergeNode: SvgView;\n  feMorphology: SvgView;\n  feOffset: SvgView;\n  fePointLight: SvgView;\n  feSpecularLighting: SvgView;\n  feSpotLight: SvgView;\n  feTile: SvgView;\n  feTurbulence: SvgView;\n  filter: SvgView;\n  foreignObject: SvgView;\n  g: SvgView;\n  iframe: SvgView;\n  image: SvgView;\n  line: SvgView;\n  linearGradient: SvgView;\n  marker: SvgView;\n  mask: SvgView;\n  metadata: SvgView;\n  mpath: SvgView;\n  path: SvgView;\n  pattern: SvgView;\n  polygon: SvgView;\n  polyline: SvgView;\n  radialGradient: SvgView;\n  rect: SvgView;\n  script: SvgView;\n  set: SvgView;\n  stop: SvgView;\n  style: SvgView;\n  svg: SvgView;\n  switch: SvgView;\n  symbol: SvgView;\n  text: SvgView;\n  textPath: SvgView;\n  title: SvgView;\n  tspan: SvgView;\n  unknown: SvgView;\n  use: SvgView;\n  video: SvgView;\n  view: SvgView;\n}\n\n/** @public */\nexport interface SvgViewFactory<V extends SvgView = SvgView> extends ElementViewFactory<V> {\n}\n\n/** @public */\nexport interface SvgViewClass<V extends SvgView = SvgView> extends ElementViewClass<V>, SvgViewFactory<V> {\n  readonly tag: string;\n  readonly namespace: string;\n}\n\n/** @public */\nexport interface SvgViewConstructor<V extends SvgView = SvgView> extends ElementViewConstructor<V>, SvgViewClass<V> {\n  readonly tag: string;\n  readonly namespace: string;\n}\n\n/** @public */\nexport interface SvgViewObserver<V extends SvgView = SvgView> extends ElementViewObserver<V> {\n}\n\n/** @public */\nexport class SvgView extends ElementView {\n  constructor(node: SVGElement) {\n    super(node);\n  }\n\n  override likeType?(like: {create?(): View} | Node | keyof SvgViewTagMap): void;\n\n  declare readonly observerType?: Class<SvgViewObserver>;\n\n  declare readonly node: SVGElement;\n\n  @SvgAttributes({})\n  override get attributes(): SvgAttributes<this> {\n    return SvgAttributes.getter();\n  }\n\n  override setChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(key: string, newChildFactory: F): View | null;\n  override setChild(key: string, newChild: View | LikeType<SvgView> | null): View | null;\n  override setChild(key: string, newChild: View | LikeType<SvgView> | null): View | null {\n    if (typeof newChild === \"string\") {\n      newChild = SvgView.fromTag(newChild);\n    }\n    return super.setChild(key, newChild);\n  }\n\n  override appendChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override appendChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override appendChild<K extends keyof SvgViewTagMap>(tag: K, key?: string): SvgViewTagMap[K];\n  override appendChild(child: View | LikeType<SvgView>, key?: string): View;\n  override appendChild(child: View | LikeType<SvgView>, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override prependChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override prependChild<K extends keyof SvgViewTagMap>(tag: K, key?: string): SvgViewTagMap[K];\n  override prependChild(child: View | LikeType<SvgView>, key?: string): View;\n  override prependChild(child: View | LikeType<SvgView>, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, target: View | Node | null, key?: string): InstanceType<F>;\n  override insertChild<V extends View>(child: V | LikeType<V>, target: View | Node | null, key?: string): V;\n  override insertChild<K extends keyof SvgViewTagMap>(tag: K, target: View | Node | null, key?: string): SvgViewTagMap[K];\n  override insertChild(child: View | LikeType<SvgView>, target: View | Node | null, key?: string): View;\n  override insertChild(child: View | LikeType<SvgView>, target: View | Node | null, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(newChildFactory: F, oldChild: View): View;\n  override replaceChild<V extends View>(newChild: View | LikeType<SvgView>, oldChild: V): V;\n  override replaceChild(newChild: View | LikeType<SvgView>, oldChild: View): View;\n  override replaceChild(newChild: View | LikeType<SvgView>, oldChild: View): View {\n    if (typeof newChild === \"string\") {\n      newChild = SvgView.fromTag(newChild);\n    }\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  override get parentTransform(): Transform {\n    const transform = this.attributes.transform.value;\n    return transform !== null ? transform : Transform.identity();\n  }\n\n  override addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, event: SVGElementEventMap[K]) => unknown, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    this.node.addEventListener(type, listener, options);\n  }\n\n  override removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, event: SVGElementEventMap[K]) => unknown, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    this.node.removeEventListener(type, listener, options);\n  }\n\n  static override readonly tag: string = \"svg\";\n\n  static override readonly namespace: string = \"http://www.w3.org/2000/svg\";\n\n  static override create<S extends Class<Instance<S, SvgView>>>(this: S): InstanceType<S>;\n  static override create(): SvgView;\n  static override create(): SvgView {\n    return this.fromTag(this.tag);\n  }\n\n  static override fromLike<S extends Class<Instance<S, View>>>(this: S, value: InstanceType<S> | LikeType<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (!(value instanceof this)) {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n      return value;\n    } else if (value instanceof SVGElement) {\n      return (this as unknown as typeof SvgView).fromNode(value) as InstanceType<S>;\n    } else if (Creatable[Symbol.hasInstance](value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else if (typeof value === \"string\") {\n      return (this as unknown as typeof SvgView).fromTag(value) as InstanceType<S>;\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromNode<S extends new (node: SVGElement) => Instance<S, SvgView>>(this: S, node: SVGElement): InstanceType<S>;\n  static override fromNode(node: SVGElement): SvgView;\n  static override fromNode(node: SVGElement): SvgView {\n    let view = this.get(node);\n    if (view === null) {\n      view = new this(node);\n      this.mount(view);\n    }\n    return view;\n  }\n\n  static override fromTag<S extends Class<Instance<S, SvgView>>>(this: S, tag: string): InstanceType<S>;\n  static override fromTag(tag: string): SvgView;\n  static override fromTag(tag: string): SvgView {\n    const node = document.createElementNS(this.namespace, tag) as SVGElement;\n    return this.fromNode(node);\n  }\n\n  static forTag<S extends Class<Instance<S, SvgView>>>(this: S, tag: string): SvgViewFactory<InstanceType<S>>;\n  static forTag(tag: string): SvgViewFactory;\n  static forTag(tag: string): SvgViewFactory {\n    if (tag === this.tag) {\n      return this;\n    }\n    return new SvgViewTagFactory(this, tag);\n  }\n}\n\n/** @internal */\nexport class SvgViewTagFactory<V extends SvgView> implements SvgViewFactory<V> {\n  constructor(factory: SvgViewFactory<V>, tag: string) {\n    this.factory = factory;\n    this.tag = tag;\n  }\n\n  /** @internal */\n  readonly factory: SvgViewFactory<V>;\n\n  readonly tag: string;\n\n  get namespace(): string {\n    return SvgView.namespace;\n  }\n\n  create(): V {\n    return this.fromTag(this.tag);\n  }\n\n  fromLike(value: V | LikeType<V>): V {\n    return this.factory.fromLike(value);\n  }\n\n  fromNode(node: SVGElement): V {\n    return this.factory.fromNode(node);\n  }\n\n  fromTag(tag: string): V {\n    const node = document.createElementNS(this.namespace, tag) as SVGElement;\n    return this.fromNode(node);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport {ViewSet} from \"@swim/view\";\nimport {NodeView} from \"./NodeView\";\nimport type {TextView} from \"./TextView\";\nimport {ElementView} from \"./ElementView\";\nimport {HtmlView} from \"./HtmlView\";\nimport {SvgView} from \"./SvgView\";\n\n/** @public */\nexport interface DomServiceObserver<S extends DomService = DomService> extends ServiceObserver<S> {\n  serviceWillAttachRoot?(rootView: ElementView, service: S): void;\n\n  serviceDidAttachRoot?(rootView: ElementView, service: S): void;\n\n  serviceWillDetachRoot?(rootView: ElementView, service: S): void;\n\n  serviceDidDetachRoot?(rootView: ElementView, service: S): void;\n}\n\n/** @public */\nexport class DomService extends Service {\n  /** @override */\n  declare readonly observerType?: Class<DomServiceObserver>;\n\n  @ViewSet({\n    initView(rootView: ElementView): void {\n      if (rootView.node.hasAttribute(\"swim-app\")) {\n        this.owner.materializeView(rootView);\n      }\n    },\n    willAttachView(rootView: ElementView): void {\n      this.owner.callObservers(\"serviceWillAttachRoot\", rootView, this.owner);\n    },\n    didAttachView(rootView: ElementView): void {\n      this.owner.callObservers(\"serviceDidAttachRoot\", rootView, this.owner);\n    },\n    willDetachView(rootView: ElementView): void {\n      this.owner.callObservers(\"serviceWillDetachRoot\", rootView, this.owner);\n    },\n    didDetachView(rootView: ElementView): void {\n      this.owner.callObservers(\"serviceDidDetachRoot\", rootView, this.owner);\n    },\n  })\n  readonly roots!: ViewSet<this, ElementView>;\n\n  materializeView(parentView: NodeView): void {\n    const childNodes = parentView.node.childNodes;\n    for (let i = 0; i < childNodes.length; i += 1) {\n      const childNode = childNodes[i]!;\n      const childView = this.materializeNode(parentView, childNode);\n      if (childView !== null) {\n        this.materializeView(childView);\n      }\n    }\n  }\n\n  materializeNode(parentView: NodeView, childNode: Node): NodeView | null {\n    const childView = NodeView.get(childNode);\n    if (childView !== null) {\n      return childView;\n    } else if (childNode instanceof Element) {\n      return this.materializeElement(parentView, childNode);\n    } else if (childNode instanceof Text) {\n      return this.materializeText(parentView, childNode);\n    }\n    return null;\n  }\n\n  materializeElement(parentView: NodeView, childNode: Element): ElementView | null {\n    let viewClass: typeof ElementView | undefined;\n    const viewClassName = childNode.getAttribute(\"swim-view\");\n    if (viewClassName !== null) {\n      viewClass = DomService.eval(viewClassName) as typeof ElementView | undefined;\n      if (typeof viewClass !== \"function\") {\n        throw new TypeError(viewClassName);\n      }\n    }\n    if (viewClass === void 0) {\n      if (childNode instanceof HTMLElement) {\n        viewClass = HtmlView;\n      } else if (childNode instanceof SVGElement) {\n        viewClass = SvgView;\n      } else {\n        viewClass = ElementView;\n      }\n    }\n    const childView = new viewClass(childNode);\n    const key = childNode.getAttribute(\"key\");\n    parentView.injectChild(childView, null, key !== null ? key : void 0);\n    return childView;\n  }\n\n  materializeText(parentView: NodeView, childNode: Text): TextView | null {\n    return null;\n  }\n\n  static boot(): ElementView[] {\n    const views: ElementView[] = [];\n    const nodes = document.querySelectorAll(\"[swim-app]\");\n    for (let i = 0; i < nodes.length; i += 1) {\n      const node = nodes[i];\n      if (node instanceof HTMLElement) {\n        const view = DomService.bootElement(node);\n        views.push(view);\n      }\n    }\n    return views;\n  }\n\n  static bootElement(node: Element): ElementView {\n    let view = ElementView.get(node);\n    if (view !== null) {\n      return view;\n    }\n    let viewClass: typeof ElementView | undefined;\n    const viewClassName = node.getAttribute(\"swim-app\");\n    if (viewClassName !== null && viewClassName !== \"\") {\n      viewClass = DomService.eval(viewClassName) as typeof ElementView | undefined;\n      if (typeof viewClass !== \"function\") {\n        throw new TypeError(viewClassName);\n      }\n    }\n    if (viewClass === void 0) {\n      if (node instanceof HTMLElement) {\n        viewClass = HtmlView;\n      } else if (node instanceof SVGElement) {\n        viewClass = SvgView;\n      } else {\n        viewClass = ElementView;\n      }\n    }\n    view = new viewClass(node);\n    viewClass.mount(view);\n    return view;\n  }\n\n  /** @internal */\n  static eval(qname: string): unknown {\n    let value: any = typeof globalThis !== \"undefined\" ? globalThis\n                   : typeof self !== \"undefined\" ? self\n                   : typeof window !== \"undefined\" ? window\n                   : typeof global !== \"undefined\" ? global\n                   : void 0;\n    const idents = qname.split(\".\");\n    for (let i = 0; typeof value === \"object\" && value !== null && i < idents.length; i += 1) {\n      const ident = idents[i]!;\n      value = value[ident];\n    }\n    return value;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Property} from \"@swim/component\";\nimport type {Presence} from \"@swim/style\";\nimport type {PresenceAnimator} from \"@swim/style\";\nimport type {ElementViewObserver} from \"./ElementView\";\nimport {ElementView} from \"./ElementView\";\n\n/** @public */\nexport interface ModalOptions {\n  modal?: boolean;\n  multi?: boolean;\n}\n\n/** @public */\nexport interface ModalViewObserver<V extends ModalView = ModalView> extends ElementViewObserver<V> {\n  viewWillPresent?(view: V): void;\n\n  viewDidPresent?(view: V): void;\n\n  viewWillDismiss?(view: V): void;\n\n  viewDidDismiss?(view: V): void;\n\n  viewDidSetPresence?(presence: Presence, view: V): void;\n\n  viewDidSetModality?(modality: number, view: V): void;\n}\n\n/** @public */\nexport interface ModalView extends ElementView {\n  /** @override */\n  readonly observerType?: Class<ModalViewObserver<any>>;\n\n  readonly presence: PresenceAnimator<this, Presence>;\n\n  readonly modality: Property<this, number>;\n}\n\n/** @public */\nexport const ModalView = {\n  [Symbol.hasInstance](instance: unknown): instance is ModalView {\n    return instance instanceof ElementView\n        && \"presence\" in instance\n        && \"modality\" in instance;\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {ElementView} from \"./ElementView\";\nimport type {ModalOptions} from \"./ModalView\";\nimport type {ModalView} from \"./ModalView\";\n\n/** @public */\nexport interface ModalServiceObserver<S extends ModalService = ModalService> extends ServiceObserver<S> {\n  serviceWillAttachModal?(modalView: ModalView, service: S): void;\n\n  serviceDidAttachModal?(modalView: ModalView, service: S): void;\n\n  serviceWillDetachModal?(modalView: ModalView, service: S): void;\n\n  serviceDidDetachModal?(modalView: ModalView, service: S): void;\n\n  serviceWillPresentModal?(modalView: ModalView, service: S): void;\n\n  serviceDidPresentModal?(modalView: ModalView, service: S): void;\n\n  serviceWillDismissModal?(modalView: ModalView, service: S): void;\n\n  serviceDidDismissModal?(modalView: ModalView, service: S): void;\n\n  serviceDidSetModality?(newModality: number, oldModality: number, service: S): void;\n}\n\n/** @public */\nexport class ModalService extends Service {\n  /** @override */\n  declare readonly observerType?: Class<ModalServiceObserver>;\n\n  @ViewRef({\n    viewType: ElementView,\n  })\n  readonly matte!: ViewRef<this, ElementView>;\n\n  @ViewSet({\n    observes: true,\n    get parentView(): ElementView | null {\n      const parentView = this.owner.matte.view;\n      if (parentView !== null) {\n        return parentView;\n      }\n      return ElementView.get(document.body);\n    },\n    insertChild(parent: View, child: ElementView, target: View | null, key: string | undefined): void {\n      super.insertChild(parent, child, target, key);\n      if (child.parent === null && !child.mounted) {\n        document.body.appendChild(child.node);\n        child.mount();\n      }\n    },\n    initView(modalView: ModalView): void {\n      this.owner.modality.update();\n    },\n    willAttachView(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceWillAttachModal\", modalView, this.owner);\n    },\n    didAttachView(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceDidAttachModal\", modalView, this.owner);\n    },\n    deinitView(modalView: ModalView): void {\n      this.owner.modality.update();\n    },\n    willDetachView(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceWillDetachModal\", modalView, this.owner);\n    },\n    didDetachView(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceDidDetachModal\", modalView, this.owner);\n    },\n    viewWillPresent(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceWillPresentModal\", modalView, this.owner);\n    },\n    viewDidPresent(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceDidPresentModal\", modalView, this.owner);\n    },\n    viewWillDismiss(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceWillDismissModal\", modalView, this.owner);\n    },\n    viewDidDismiss(modalView: ModalView): void {\n      this.owner.callObservers(\"serviceDidDismissModal\", modalView, this.owner);\n      this.detachView(modalView);\n    },\n    viewDidSetModality(modality: number, modalView: ModalView): void {\n      this.owner.modality.update();\n    },\n  })\n  readonly modals!: ViewSet<this, ModalView> & Observes<ModalView>;\n\n  presentModal(modalView: ModalView, options: ModalOptions = {}): void {\n    if (!options.multi) {\n      this.dismissModals();\n    }\n    this.modals.insertView(null, modalView);\n    modalView.presence.present(true);\n  }\n\n  dismissModal(modalView: ModalView): void {\n    if (this.modals.hasView(modalView)) {\n      modalView.presence.dismiss(true);\n    }\n  }\n\n  dismissModals(): void {\n    const modalViews = this.modals.views;\n    for (const viewId in modalViews) {\n      const modalView = modalViews[viewId]!;\n      this.dismissModal(modalView);\n    }\n  }\n\n  displaceModals(): void {\n    const modalViews = this.modals.views;\n    for (const viewId in modalViews) {\n      const modalView = modalViews[viewId]!;\n      if (modalView.presence.presented) {\n        this.dismissModal(modalView);\n      }\n    }\n  }\n\n  toggleModal(modalView: ModalView, options?: ModalOptions): void {\n    const presence = modalView.presence.value;\n    if (presence.dismissed || presence.dismissing) {\n      this.presentModal(modalView, options);\n    } else if (presence.presented || presence.presenting) {\n      this.dismissModal(modalView);\n    }\n  }\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    update(): void {\n      if (!this.hasAffinity(Affinity.Intrinsic)) {\n        return;\n      }\n      let modality = 0;\n      const modalViews = this.owner.modals.views;\n      for (const viewId in modalViews) {\n        const modalView = modalViews[viewId]!;\n        modality = Math.min(Math.max(modality, modalView.modality.value), 1);\n      }\n      this.setIntrinsic(modality);\n    },\n    didSetValue(newModality: number, oldModality: number): void {\n      this.owner.callObservers(\"serviceDidSetModality\", newModality, oldModality, this.owner);\n    },\n  })\n  readonly modality!: Property<this, number> & {\n    /** @internal */\n    update(): void,\n  };\n\n  @EventHandler({\n    eventType: \"click\",\n    target: typeof document !== \"undefined\" ? document : null,\n    handle(event: Event): void {\n      this.owner.displaceModals();\n    },\n  })\n  readonly fallthrough!: EventHandler<this>;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport type GraphicsRendererLike = GraphicsRenderer | GraphicsRendererType;\n\n/** @public */\nexport type GraphicsRendererType = \"canvas\" | \"webgl\";\n\n/** @public */\nexport abstract class GraphicsRenderer {\n  likeType?(like: GraphicsRendererType): void;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport type {R2Box} from \"@swim/math\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\n\n/** @public */\nexport interface Graphics {\n  render(renderer: GraphicsRenderer, frame: R2Box): void;\n}\n\n/** @public */\nexport const Graphics = {\n  [Symbol.hasInstance](instance: unknown): instance is Graphics {\n    return Objects.hasAllKeys<Graphics>(instance, \"render\");\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport type {ViewFlags} from \"@swim/view\";\nimport type {ViewObserver} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsEvent} from \"./GraphicsEvent\";\nimport type {GraphicsEventHandler} from \"./GraphicsEvent\";\nimport {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasView} from \"./\"; // forward import\nimport {SpriteService} from \"./\"; // forward import\n\n/** @public */\nexport interface GraphicsViewEventMap {\n  \"auxclick\": MouseEvent;\n  \"click\": MouseEvent;\n  \"contextmenu\": MouseEvent;\n  \"dblclick\": MouseEvent;\n  \"mousedown\": MouseEvent;\n  \"mouseenter\": MouseEvent;\n  \"mouseleave\": MouseEvent;\n  \"mousemove\": MouseEvent;\n  \"mouseout\": MouseEvent;\n  \"mouseover\": MouseEvent;\n  \"mouseup\": MouseEvent;\n  \"pointercancel\": PointerEvent;\n  \"pointerdown\": PointerEvent;\n  \"pointerenter\": PointerEvent;\n  \"pointerleave\": PointerEvent;\n  \"pointermove\": PointerEvent;\n  \"pointerout\": PointerEvent;\n  \"pointerover\": PointerEvent;\n  \"pointerup\": PointerEvent;\n  \"touchcancel\": TouchEvent;\n  \"touchend\": TouchEvent;\n  \"touchmove\": TouchEvent;\n  \"touchstart\": TouchEvent;\n  \"wheel\": WheelEvent;\n}\n\n/** @public */\nexport interface GraphicsViewObserver<V extends GraphicsView = GraphicsView> extends ViewObserver<V> {\n}\n\n/** @public */\nexport class GraphicsView extends View {\n  constructor() {\n    super();\n    this.ownViewFrame = null;\n    this.eventHandlers = null;\n  }\n\n  declare readonly observerType?: Class<GraphicsViewObserver>;\n\n  @Property({\n    valueType: GraphicsRenderer,\n    value: null,\n    inherits: true,\n  })\n  readonly renderer!: Property<this, GraphicsRenderer | null>;\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsAnimate) === 0) {\n      processFlags &= ~View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  protected renderViewOutline(viewBox: R2Box, context: CanvasContext, outlineColor: Color, outlineWidth: number): void {\n    if (!viewBox.isDefined()) {\n      return;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.moveTo(viewBox.xMin, viewBox.yMin);\n    context.lineTo(viewBox.xMin, viewBox.yMax);\n    context.lineTo(viewBox.xMax, viewBox.yMax);\n    context.lineTo(viewBox.xMax, viewBox.yMin);\n    context.closePath();\n    context.lineWidth = outlineWidth;\n    context.strokeStyle = outlineColor.toString();\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  @Provider({\n    get serviceType(): typeof SpriteService { // avoid static forward reference\n      return SpriteService;\n    },\n  })\n  get sprites(): Provider<this, SpriteService> {\n    return Provider.getter();\n  }\n\n  /** @internal */\n  readonly ownViewFrame: R2Box | null;\n\n  /**\n   * The parent-specified view-coordinate bounding box in which this view\n   * should layout and render graphics.\n   */\n  get viewFrame(): R2Box {\n    let viewFrame = this.ownViewFrame;\n    if (viewFrame === null) {\n      viewFrame = this.deriveViewFrame();\n    }\n    return viewFrame;\n  }\n\n  /**\n   * Sets the view-coordinate bounding box in which this view should layout\n   * and render graphics. Should only be invoked by the view's parent view.\n   */\n  setViewFrame(viewFrame: R2Box | null): void {\n    (this as Mutable<this>).ownViewFrame = viewFrame;\n  }\n\n  protected deriveViewFrame(): R2Box {\n    const parent = this.parent;\n    if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n      return parent.viewFrame;\n    }\n    return R2Box.undefined();\n  }\n\n  cullViewFrame(viewFrame: R2Box = this.viewFrame): void {\n    this.setCulled(!viewFrame.intersects(this.viewBounds));\n  }\n\n  /**\n   * The self-defined view-coordinate bounding box surrounding all graphics\n   * this view could possibly render. Views with view bounds that don't\n   * overlap their view frames may be culled from rendering and hit testing.\n   */\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  get ownViewBounds(): R2Box | null {\n    return null;\n  }\n\n  deriveViewBounds(): R2Box {\n    let viewBounds: R2Box | undefined;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView && !child.hidden && !child.unbounded) {\n        const childViewBounds = child.viewBounds;\n        if (childViewBounds.isDefined()) {\n          if (viewBounds !== void 0) {\n            viewBounds = viewBounds.union(childViewBounds);\n          } else {\n            viewBounds = childViewBounds;\n          }\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (viewBounds === void 0) {\n      viewBounds = this.viewFrame;\n    }\n    return viewBounds;\n  }\n\n  /**\n   * The self-defined view-coordinate bounding box surrounding all hit regions\n   * in this view.\n   */\n  get hitBounds(): R2Box {\n    return this.viewBounds;\n  }\n\n  deriveHitBounds(): R2Box {\n    let hitBounds: R2Box | undefined;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView && !child.hidden && !child.intangible) {\n        const childHitBounds = child.hitBounds;\n        if (hitBounds === void 0) {\n          hitBounds = childHitBounds;\n        } else {\n          hitBounds = hitBounds.union(childHitBounds);\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (hitBounds === void 0) {\n      hitBounds = this.viewBounds;\n    }\n    return hitBounds;\n  }\n\n  cascadeHitTest(x: number, y: number): GraphicsView | null {\n    if (this.hidden || this.culled || this.intangible || !this.hitBounds.contains(x, y)) {\n      return null;\n    }\n    let hit = this.hitTestChildren(x, y);\n    if (hit === null) {\n      hit = this.hitTest(x, y);\n    }\n    return hit;\n  }\n\n  protected hitTest(x: number, y: number): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestChildren(x: number, y: number): GraphicsView | null {\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView) {\n        const hit = this.hitTestChild(child, x, y);\n        if (hit !== null) {\n          return hit;\n        }\n      }\n      child = child.nextSibling;\n    }\n    return null;\n  }\n\n  protected hitTestChild(child: GraphicsView, x: number, y: number): GraphicsView | null {\n    return child.cascadeHitTest(x, y);\n  }\n\n  override get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  override get clientBounds(): R2Box {\n    const inverseClientTransform = this.clientTransform.inverse();\n    return this.viewBounds.transform(inverseClientTransform);\n  }\n\n  override get popoverFrame(): R2Box {\n    const inversePageTransform = this.pageTransform.inverse();\n    return this.viewBounds.transform(inversePageTransform);\n  }\n\n  /** @internal */\n  readonly eventHandlers: {[type: string]: GraphicsEventHandler[] | undefined} | null;\n\n  override addEventListener<K extends keyof GraphicsViewEventMap>(type: K, listener: (this: this, event: GraphicsViewEventMap[K]) => unknown, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void;\n  override addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): void {\n    let eventHandlers = this.eventHandlers;\n    if (eventHandlers === null) {\n      eventHandlers = {};\n      (this as Mutable<this>).eventHandlers = eventHandlers;\n    }\n    let handlers = eventHandlers[type];\n    const capture = typeof options === \"boolean\" ? options : typeof options === \"object\" && options !== null && options.capture || false;\n    const passive = options && typeof options === \"object\" && options.passive || false;\n    const once = options && typeof options === \"object\" && options.once || false;\n    let handler: GraphicsEventHandler | undefined;\n    if (handlers === void 0) {\n      handler = {listener, capture, passive, once};\n      handlers = [handler];\n      eventHandlers[type] = handlers;\n      return;\n    }\n    const n = handlers.length;\n    let i = 0;\n    while (i < n) {\n      handler = handlers[i]!;\n      if (handler.listener === listener && handler.capture === capture) {\n        break;\n      }\n      i += 1;\n    }\n    if (i < n) {\n      handler!.passive = passive;\n      handler!.once = once;\n    } else {\n      handler = {listener, capture, passive, once};\n      handlers.push(handler);\n    }\n  }\n\n  override removeEventListener<K extends keyof GraphicsViewEventMap>(type: K, listener: (this: View, event: GraphicsViewEventMap[K]) => unknown, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void;\n  override removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): void {\n    const eventHandlers = this.eventHandlers;\n    if (eventHandlers === null) {\n      return;\n    }\n    const handlers = eventHandlers[type];\n    if (handlers === void 0) {\n      return;\n    }\n    const capture = typeof options === \"boolean\" ? options : typeof options === \"object\" && options !== null && options.capture || false;\n    const n = handlers.length;\n    let i = 0;\n    while (i < n) {\n      const handler = handlers[i]!;\n      if (handler.listener === listener && handler.capture === capture) {\n        handlers.splice(i, 1);\n        if (handlers.length === 0) {\n          delete eventHandlers[type];\n        }\n        break;\n      }\n      i += 1;\n    }\n  }\n\n  /** @internal */\n  handleEvent(event: GraphicsEvent): void {\n    const type = event.type;\n    const eventHandlers = this.eventHandlers;\n    if (eventHandlers === null) {\n      return;\n    }\n    const handlers = eventHandlers[type];\n    if (handlers === void 0) {\n      return;\n    }\n    let i = 0;\n    while (i < handlers.length) {\n      const handler = handlers[i]!;\n      if (!handler.capture) {\n        const listener = handler.listener;\n        if (typeof listener === \"function\") {\n          if (typeof listener.call === \"function\") {\n            listener.call(this, event);\n          } else {\n            listener(event);\n          }\n        } else if (typeof listener === \"object\" && listener !== null) {\n          listener.handleEvent(event);\n        }\n        if (handler.once) {\n          handlers.splice(i, 1);\n          continue;\n        }\n      }\n      i += 1;\n    }\n    if (handlers.length === 0) {\n      delete eventHandlers[type];\n    }\n  }\n\n  /**\n   * Invokes event handlers registered with this `View` before propagating the\n   * `event` up the view hierarchy. Returns a `View`, without invoking any\n   * registered event handlers, on which `dispatchEvent` should be called to\n   * continue event propagation.\n   * @internal\n   */\n  bubbleEvent(event: GraphicsEvent): View | null {\n    this.handleEvent(event);\n    if (!event.bubbles || event.cancelBubble) {\n      return null;\n    }\n    const parent = this.parent;\n    if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n      return parent.bubbleEvent(event);\n    }\n    return parent;\n  }\n\n  override dispatchEvent(event: GraphicsEvent): boolean {\n    event.targetView = this;\n    const next = this.bubbleEvent(event);\n    if (next === null) {\n      return !event.cancelBubble;\n    }\n    return next.dispatchEvent(event);\n  }\n\n  static override readonly UncullFlags: ViewFlags = View.UncullFlags | View.NeedsRender;\n  static override readonly UnhideFlags: ViewFlags = View.UnhideFlags | View.NeedsRender;\n  static override readonly InsertChildFlags: ViewFlags = View.InsertChildFlags | View.NeedsRender;\n  static override readonly RemoveChildFlags: ViewFlags = View.RemoveChildFlags | View.NeedsRender;\n}\nObject.defineProperty(GraphicsView.prototype, \"viewBounds\", {\n  get(this: GraphicsView): R2Box {\n    return this.viewFrame;\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Transform} from \"@swim/math\";\nimport {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\n\n/** @public */\nexport abstract class DrawingRenderer extends GraphicsRenderer {\n  abstract readonly context: DrawingContext;\n\n  abstract readonly transform: Transform;\n\n  abstract readonly pixelRatio: number;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Format} from \"@swim/codec\";\nimport type {DrawingContext} from \"./DrawingContext\";\n\n/** @public */\nexport class PathContext implements DrawingContext {\n  constructor() {\n    this.precision = -1;\n    this.x0 = NaN;\n    this.y0 = NaN;\n    this.x1 = NaN;\n    this.y1 = NaN;\n    this.d = \"\";\n  }\n\n  readonly precision!: number;\n\n  setPrecision(precision: number): void {\n    (this as Mutable<this>).precision = precision;\n  }\n\n  /** @internal */\n  get anglePrecision(): number {\n    const precision = this.precision;\n    return precision > 0 ? Math.max(5, precision) : precision;\n  }\n\n  /** @internal */\n  x0: number;\n  /** @internal */\n  y0: number;\n  /** @internal */\n  x1: number;\n  /** @internal */\n  y1: number;\n  /** @internal */\n  d: string;\n\n  moveTo(x: number, y: number): void {\n    this.d += \"M\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x0 = x;\n    this.y0 = y;\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  lineTo(x: number, y: number): void {\n    this.d += \"L\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    this.d += \"Q\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision)\n            + \",\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    this.d += \"C\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision)\n            + \",\" + Format.decimal(x2, this.precision)\n            + \",\" + Format.decimal(y2, this.precision)\n            + \",\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    const x0 = this.x1;\n    const y0 = this.y1;\n    const x21 = x2 - x1;\n    const y21 = y2 - y1;\n    const x01 = x0 - x1;\n    const y01 = y0 - y1;\n    const l01_2 = x01 * x01 + y01 * y01;\n\n    if (r < 0) {\n      throw new Error(\"negative radius: \" + r);\n    } else if (isNaN(this.x1)) {\n      // empty path\n      this.d += \"M\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    } else if (!(l01_2 > PathContext.Epsilon)) {\n      // coincident endpoints\n    } else if (!(Math.abs(y01 * x21 - y21 * x01) > PathContext.Epsilon) || r === 0) {\n      // colinear control points\n      this.d += \"L\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    } else {\n      const x20 = x2 - x0;\n      const y20 = y2 - y0;\n      const l21_2 = x21 * x21 + y21 * y21;\n      const l20_2 = x20 * x20 + y20 * y20;\n      const l21 = Math.sqrt(l21_2);\n      const l01 = Math.sqrt(l01_2);\n      const l = r * Math.tan((Math.PI - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2);\n      const t01 = l / l01;\n      const t21 = l / l21;\n      if (Math.abs(t01 - 1) > PathContext.Epsilon) {\n        // line to start tangent\n        this.d += \"L\" + Format.decimal(x1 + t01 * x01, this.precision)\n                + \",\" + Format.decimal(y1 + t01 * y01, this.precision);\n      }\n      x1 = x1 + t21 * x21;\n      y1 = y1 + t21 * y21;\n      const rs = Format.decimal(r, this.precision);\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",0\"\n              + \",\" + (y01 * x20 > x01 * y20 ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    }\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw: boolean = false): void {\n    const dx = r * Math.cos(a0);\n    const dy = r * Math.sin(a0);\n    const x0 = cx + dx;\n    const y0 = cy + dy;\n    const cw = 1 ^ +ccw;\n    let da = ccw ? a0 - a1 : a1 - a0;\n\n    if (r < 0) {\n      throw new Error(\"negative radius: \" + r);\n    } else if (isNaN(this.x1)) {\n      // empty path\n      this.d += \"M\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n    } else if (Math.abs(this.x1 - x0) > PathContext.Epsilon || Math.abs(this.y1 - y0) > PathContext.Epsilon) {\n      // line to start point\n      this.d += \"L\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n    }\n\n    if (r === 0) {\n      return;\n    } else if (da < 0) {\n      // reverse direction\n      da = da % (2 * Math.PI) + 2 * Math.PI;\n    }\n\n    const rs = Format.decimal(r, this.precision);\n    if (da > 2 * Math.PI - PathContext.Epsilon) {\n      // complete circle\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",1\"\n              + \",\" + (cw ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n      this.x1 = x0;\n      this.y1 = y0;\n    } else if (da > PathContext.Epsilon) {\n      // non-zero arc angle\n      const x1 = cx + r * Math.cos(a1);\n      const y1 = cy + r * Math.sin(a1);\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",\" + (da >= Math.PI ? \"1\" : \"0\")\n              + \",\" + (cw ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    }\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this.d += \"M\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision)\n            + \"h\" + Format.decimal(w, this.precision)\n            + \"v\" + Format.decimal(h, this.precision)\n            + \"h\" + Format.decimal(-w, this.precision)\n            + \"Z\";\n    this.x0 = x;\n    this.y0 = y;\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw: boolean = false): void {\n    const cosPhi = Math.cos(phi);\n    const sinPhi = Math.sin(phi);\n    const cosA1 = Math.cos(a1);\n    const sinA1 = Math.sin(a1);\n    const x1 = cosPhi * rx * cosA1 - sinPhi * ry * sinA1 + cx;\n    const y1 = sinPhi * rx * cosA1 + cosPhi * ry * sinA1 + cy;\n    const da = a1 - a0;\n    const large = Math.abs(da) > Math.PI;\n    const sweep = !ccw;\n    this.d += \"A\" + Format.decimal(rx, this.precision)\n            + \",\" + Format.decimal(ry, this.precision)\n            + \",\" + Format.decimal(phi, this.anglePrecision)\n            + \",\" + (large ? \"1\" : \"0\")\n            + \",\" + (sweep ? \"1\" : \"0\")\n            + \",\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision);\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  closePath(): void {\n    if (isNaN(this.x1)) {\n      return;\n    }\n    this.d += \"Z\";\n    this.x1 = this.x0;\n    this.y1 = this.y0;\n  }\n\n  toString(): string {\n    return this.d;\n  }\n\n  /** @internal */\n  static Epsilon: number = 1e-6;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Transform} from \"@swim/math\";\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PathContext} from \"./PathContext\";\n\n/** @public */\nexport class PathRenderer extends DrawingRenderer {\n  constructor(context: PathContext) {\n    super();\n    this.context = context;\n  }\n\n  readonly context: PathContext;\n\n  override get transform(): Transform {\n    return Transform.identity();\n  }\n\n  override get pixelRatio(): number {\n    return 1;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PaintingContext} from \"./PaintingContext\";\n\n/** @public */\nexport abstract class PaintingRenderer extends DrawingRenderer {\n  abstract override readonly context: PaintingContext;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {NodeView} from \"@swim/dom\";\nimport {SvgView} from \"@swim/dom\";\nimport {PathContext} from \"./PathContext\";\nimport type {PaintingFillRule} from \"./PaintingContext\";\nimport type {PaintingContext} from \"./PaintingContext\";\n\n/** @public */\nexport class SvgContext implements PaintingContext {\n  constructor(view: SvgView) {\n    this.view = view;\n    this.precision = -1;\n    this.pathContext = null;\n    this.pathView = null;\n    this.pathFlags = 0;\n    this.globalAlpha = 1;\n    this.globalCompositeOperation = \"source-over\";\n    this.fillStyle = \"\";\n    this.strokeStyle = \"\";\n    this.lineWidth = 1;\n    this.lineCap = \"butt\";\n    this.lineJoin = \"miter\";\n    this.miterLimit = 10;\n    this.lineDashOffset = 0;\n    this.lineDash = [];\n  }\n\n  readonly view: SvgView;\n\n  readonly precision: number;\n\n  setPrecision(precision: number): void {\n    (this as Mutable<this>).precision = precision;\n  }\n\n  /** @internal */\n  readonly pathContext: PathContext | null;\n\n  protected getPathContext(): PathContext {\n    const pathContext = this.pathContext;\n    if (pathContext === null) {\n      throw new Error(\"no path\");\n    }\n    return pathContext;\n  }\n\n  protected getOrCreatePathContext(): PathContext {\n    let pathContext = this.pathContext;\n    if (pathContext === null) {\n      pathContext = this.createPathContext();\n      (this as Mutable<this>).pathContext = pathContext;\n      if (this.pathView === null || this.pathFlags !== 0) {\n        this.finalizePath();\n        const pathView = this.nextPathView();\n        this.setPathView(pathView);\n      }\n      this.setPathFlags(0);\n    }\n    return pathContext;\n  }\n\n  protected createPathContext(): PathContext {\n    const pathContext = new PathContext();\n    pathContext.setPrecision(this.precision);\n    return pathContext;\n  }\n\n  /** @internal */\n  readonly pathView: SvgView | null;\n\n  /** @internal */\n  setPathView(pathView: SvgView | null): void {\n    (this as Mutable<this>).pathView = pathView;\n  }\n\n  /** @internal */\n  nextPathView(): SvgView | null {\n    const pathView = this.pathView;\n    if (pathView === null) {\n      return null;\n    }\n    let nextNode = pathView.node.nextSibling;\n    while (nextNode !== null) {\n      if (nextNode instanceof SVGPathElement) {\n        return SvgView.fromNode(nextNode);\n      }\n      nextNode = nextNode.nextSibling;\n    }\n    return null;\n  }\n\n  /** @internal */\n  finalizePath(): void {\n    const pathView = this.pathView;\n    if (pathView === null) {\n      return;\n    }\n    const pathFlags = this.pathFlags;\n    if ((pathFlags & SvgContext.FillFlag) === 0) {\n      pathView.attributes.fill.setIntrinsic(null);\n    }\n    if ((pathFlags & SvgContext.FillRuleFlag) === 0) {\n      pathView.attributes.fillRule.setIntrinsic(void 0);\n    }\n    if ((pathFlags & SvgContext.StrokeFlag) === 0) {\n      pathView.attributes.stroke.setIntrinsic(null);\n    }\n    if ((pathFlags & SvgContext.PathFlag) === 0) {\n      pathView.attributes.d.setIntrinsic(void 0);\n    }\n  }\n\n  /** @internal */\n  readonly pathFlags: number;\n\n  /** @internal */\n  setPathFlags(pathFlags: number): void {\n    (this as Mutable<this>).pathFlags = pathFlags;\n  }\n\n  globalAlpha: number;\n\n  globalCompositeOperation: string;\n\n  fillStyle: string | CanvasGradient | CanvasPattern;\n\n  strokeStyle: string | CanvasGradient | CanvasPattern;\n\n  lineWidth: number;\n\n  lineCap: CanvasLineCap;\n\n  lineJoin: CanvasLineJoin;\n\n  miterLimit: number;\n\n  lineDashOffset: number;\n\n  /** @internal */\n  lineDash: number[];\n\n  getLineDash(): number[] {\n    return this.lineDash;\n  }\n\n  setLineDash(segments: number[]): void {\n    this.lineDash = segments;\n  }\n\n  beginPath(): void {\n    (this as Mutable<this>).pathContext = null;\n  }\n\n  moveTo(x: number, y: number): void {\n    this.getOrCreatePathContext().moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    this.getPathContext().lineTo(x, y);\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    this.getPathContext().quadraticCurveTo(x1, y1, x, y);\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    this.getPathContext().bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    this.getPathContext().arcTo(x1, y1, x2, y2, r);\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw?: boolean): void {\n    this.getOrCreatePathContext().arc(cx, cy, r, a0, a1, ccw);\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw?: boolean): void {\n    this.getOrCreatePathContext().ellipse(cx, cy, rx, ry, phi, a0, a1, ccw);\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this.getOrCreatePathContext().rect(x, y, w, h);\n  }\n\n  closePath(): void {\n    const pathContext = this.pathContext;\n    if (pathContext !== null) {\n      pathContext.closePath();\n    }\n  }\n\n  fill(fillRule?: PaintingFillRule): void {\n    const fillStyle = this.fillStyle;\n    if (typeof fillStyle !== \"string\") {\n      throw new Error(\"unsupported fill style: \" + fillStyle);\n    }\n    let pathView = this.pathView;\n    if (pathView !== null && (this.pathFlags & SvgContext.FillFlag) !== 0) {\n      this.finalizePath();\n      pathView = this.nextPathView();\n      this.setPathView(pathView);\n    }\n    let created = false;\n    if (pathView === null) {\n      pathView = SvgView.fromTag(\"path\");\n      this.setPathView(pathView);\n      created = true;\n    }\n    pathView.attributes.fill.setIntrinsic(fillStyle);\n    pathView.attributes.fillOpacity.setIntrinsic(this.globalAlpha !== 1 ? this.globalAlpha : void 0);\n    this.setPathFlags(this.pathFlags | SvgContext.FillFlag);\n    if (fillRule !== void 0) {\n      pathView.attributes.fillRule.setIntrinsic(fillRule);\n      this.setPathFlags(this.pathFlags | SvgContext.FillRuleFlag);\n    }\n    if ((this.pathFlags & SvgContext.PathFlag) === 0) {\n      const pathString = this.getPathContext().toString();\n      pathView.attributes.d.setIntrinsic(pathString);\n      this.setPathFlags(this.pathFlags | SvgContext.PathFlag);\n    }\n    if (created) {\n      this.view.appendChild(pathView);\n    }\n  }\n\n  stroke(): void {\n    const strokeStyle = this.strokeStyle;\n    const lineWidth = this.lineWidth;\n    if (typeof strokeStyle !== \"string\" || lineWidth === 0 || !isFinite(lineWidth)) {\n      throw new Error(\"unsupported stroke style: \" + strokeStyle);\n    }\n    let pathView = this.pathView;\n    if (pathView !== null && (this.pathFlags & SvgContext.StrokeFlag) !== 0) {\n      this.finalizePath();\n      pathView = this.nextPathView();\n      this.setPathView(pathView);\n    }\n    let created = false;\n    if (pathView === null) {\n      pathView = SvgView.fromTag(\"path\");\n      this.setPathView(pathView);\n      created = true;\n    }\n    pathView.attributes.setIntrinsic({\n      stroke: strokeStyle,\n      strokeWidth: lineWidth,\n      strokeLinecap: this.lineCap,\n      strokeLinejoin: this.lineJoin,\n      strokeOpacity: this.globalAlpha !== 1 ? this.globalAlpha : void 0,\n      strokeMiterlimit: this.lineJoin === \"miter\" ? this.miterLimit : void 0,\n    });\n    if (this.lineDash.length !== 0) {\n      let dash = \"\";\n      for (let i = 0; i < this.lineDash.length; i += 1) {\n        if (i !== 0) {\n          dash += \" \";\n        }\n        dash += this.lineDash[i];\n      }\n      pathView.attributes.setIntrinsic({\n        strokeDasharray: dash,\n        strokeDashoffset: this.lineDashOffset !== 0 ? this.lineDashOffset : void 0,\n      });\n    } else {\n      pathView.attributes.setIntrinsic({\n        strokeDasharray: void 0,\n        strokeDashoffset: void 0,\n      });\n    }\n    this.setPathFlags(this.pathFlags | SvgContext.StrokeFlag);\n    if ((this.pathFlags & SvgContext.PathFlag) === 0) {\n      const pathString = this.getPathContext().toString();\n      pathView.attributes.d.setIntrinsic(pathString);\n      this.setPathFlags(this.pathFlags | SvgContext.PathFlag);\n    }\n    if (created) {\n      this.view.appendChild(pathView);\n    }\n  }\n\n  beginSvg(): void {\n    let pathView: SvgView | null = null;\n    let nextNode = this.view.node.firstChild;\n    while (nextNode !== null) {\n      if (nextNode instanceof SVGPathElement) {\n        pathView = SvgView.fromNode(nextNode);\n        break;\n      }\n      nextNode = nextNode.nextSibling;\n    }\n    this.setPathView(pathView);\n    this.setPathFlags(0);\n  }\n\n  finalizeSvg(): void {\n    let pathView = this.pathView;\n    if (pathView === null) {\n      return;\n    }\n    let nextNode = pathView.node.nextSibling;\n    if (pathView.attributes.fill.state === null && pathView.attributes.stroke.state === null) {\n      (this as Mutable<this>).pathView = null;\n      pathView.remove();\n    }\n    pathView = null;\n    while (nextNode !== null) {\n      const nextView = NodeView.get(nextNode);\n      nextNode = nextNode.nextSibling;\n      if (nextView !== null) {\n        nextView.remove();\n      }\n    }\n  }\n\n  /** @internal */\n  static readonly FillFlag: number = 1 << 0;\n  /** @internal */\n  static readonly FillRuleFlag: number = 1 << 1;\n  /** @internal */\n  static readonly StrokeFlag: number = 1 << 2;\n  /** @internal */\n  static readonly PathFlag: number = 1 << 3;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Transform} from \"@swim/math\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport type {SvgContext} from \"./SvgContext\";\n\n/** @public */\nexport class SvgRenderer extends PaintingRenderer {\n  constructor(context: SvgContext) {\n    super();\n    this.context = context;\n  }\n\n  override readonly context: SvgContext;\n\n  override get transform(): Transform {\n    return Transform.identity();\n  }\n\n  override get pixelRatio(): number {\n    return 1;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Transform} from \"@swim/math\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport type {CanvasContext} from \"./CanvasContext\";\n\n/** @public */\nexport class CanvasRenderer extends PaintingRenderer {\n  constructor(context: CanvasContext, transform: Transform, pixelRatio: number) {\n    super();\n    this.context = context;\n    this.transform = transform;\n    this.pixelRatio = pixelRatio;\n  }\n\n  override readonly context: CanvasContext;\n\n  override readonly transform: Transform;\n\n  setTransform(transform: Transform): void {\n    (this as Mutable<this>).transform = transform;\n  }\n\n  override readonly pixelRatio: number;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {WebGLContext} from \"./WebGLContext\";\n\n/** @public */\nexport class WebGLRenderer extends GraphicsRenderer {\n  constructor(context: WebGLContext, pixelRatio?: number) {\n    super();\n    this.context = context;\n    this.pixelRatio = pixelRatio !== void 0 ? pixelRatio : window.devicePixelRatio || 1;\n  }\n\n  readonly context: WebGLContext;\n\n  readonly pixelRatio: number;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Box} from \"@swim/math\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport type {CanvasRenderer} from \"./CanvasRenderer\";\nimport type {SpriteSheet} from \"./SpriteSheet\";\n\n/** @public */\nexport class Sprite {\n  /** @internal */\n  constructor(sheet: SpriteSheet, rowIndex: number, colIndex: number) {\n    this.sheet = sheet;\n    this.rowIndex = rowIndex;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly sheet: SpriteSheet;\n\n  /** @internal */\n  readonly rowIndex: number;\n\n  /** @internal */\n  readonly colIndex: number;\n\n  get width(): number {\n    return this.sheet.spriteWidth;\n  }\n\n  get height(): number {\n    return this.sheet.spriteHeight;\n  }\n\n  get pixelRatio(): number {\n    return this.sheet.pixelRatio;\n  }\n\n  getRenderer(): CanvasRenderer {\n    return this.sheet.getSpriteRenderer(this.rowIndex, this.colIndex);\n  }\n\n  clear(): void {\n    return this.sheet.clearSprite(this.rowIndex, this.colIndex);\n  }\n\n  draw(context: CanvasContext, frame: R2Box): void {\n    this.sheet.drawSprite(context, frame, this.rowIndex, this.colIndex);\n  }\n\n  release(): void {\n    this.sheet.releaseSprite(this);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Sprite} from \"./Sprite\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./\"; // forward import\n\n/** @public */\nexport class SpriteSheet {\n  constructor(spriteWidth: number, spriteHeight: number,\n              canvasWidth: number, canvasHeight: number, pixelRatio: number) {\n    const rowCount = Math.floor(canvasHeight / spriteHeight);\n    const colCount = Math.floor(canvasWidth / spriteWidth);\n    const spriteCount = rowCount * colCount;\n    const sprites = new Array<Sprite>(spriteCount);\n    const freeSprites = new Array<Sprite>(spriteCount);\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvasWidth * pixelRatio;\n    canvas.height = canvasHeight * pixelRatio;\n    canvas.style.width = canvasWidth + \"px\";\n    canvas.style.height = canvasHeight + \"px\";\n    const context = canvas.getContext(\"2d\")!;\n    const renderer = new CanvasRenderer(context, Transform.identity(), pixelRatio);\n\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.sprites = sprites;\n    this.freeSprites = freeSprites;\n    this.canvas = canvas;\n    this.renderer = renderer;\n    this.nextSheet = null;\n\n    this.createSprites(sprites, rowCount, colCount);\n\n    for (let k = 0; k < spriteCount; k += 1) {\n      freeSprites[k] = sprites[spriteCount - k - 1]!;\n    }\n  }\n\n  protected createSprites(sprites: Sprite[], rowCount: number, colCount: number): void {\n    let k = 0;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      for (let colIndex = 0; colIndex < colCount; colIndex += 1) {\n        const sprite = this.createSprite(rowIndex, colIndex);\n        sprites[k] = sprite;\n        k += 1;\n      }\n    }\n  }\n\n  protected createSprite(rowIndex: number, colIndex: number): Sprite {\n    return new Sprite(this, rowIndex, colIndex);\n  }\n\n  readonly spriteWidth: number;\n\n  readonly spriteHeight: number;\n\n  readonly sprites: readonly Sprite[];\n\n  /** @internal */\n  readonly freeSprites: Sprite[];\n\n  readonly canvas: HTMLCanvasElement;\n\n  readonly renderer: CanvasRenderer;\n\n  /** @internal */\n  nextSheet: SpriteSheet | null;\n\n  get pixelRatio(): number {\n    return this.renderer.pixelRatio;\n  }\n\n  get canvasWidth(): number {\n    return this.canvas.width / this.pixelRatio;\n  }\n\n  get canvasHeight(): number {\n    return this.canvas.height / this.pixelRatio;\n  }\n\n  get rowCount(): number {\n    return Math.floor(this.canvasHeight / this.spriteHeight);\n  }\n\n  get colCount(): number {\n    return Math.floor(this.canvasWidth / this.spriteWidth);\n  }\n\n  get spriteCount(): number {\n    return this.rowCount * this.colCount;\n  }\n\n  get freeCount(): number {\n    return this.freeSprites.length;\n  }\n\n  /** @internal */\n  static acquireNextFreeSheet(sheet: SpriteSheet): SpriteSheet | null {\n    do {\n      const nextSheet = sheet.nextSheet;\n      if (nextSheet === null) {\n        return null;\n      } else if (nextSheet.freeCount !== 0) {\n        sheet.nextSheet = nextSheet.nextSheet;\n        nextSheet.nextSheet = null;\n        return nextSheet;\n      } else {\n        sheet = nextSheet;\n      }\n    } while (true);\n  }\n\n  acquireSprite(): Sprite | null {\n    const sprite = this.freeSprites.pop();\n    return sprite !== void 0 ? sprite : null;\n  }\n\n  /** @internal */\n  releaseSprite(sprite: Sprite): void {\n    // assert(sprite.sheet === this);\n    // assert(this.freeSprites.indexOf(sprite) < 0);\n    this.clearSprite(sprite.rowIndex, sprite.colIndex);\n    this.freeSprites.push(sprite);\n  }\n\n  /** @internal */\n  clearSprite(rowIndex: number, colIndex: number): void {\n    const renderer = this.getSpriteRenderer(rowIndex, colIndex);\n    renderer.context.clearRect(0, 0, this.spriteWidth, this.spriteHeight);\n  }\n\n  /** @internal */\n  getSpriteRenderer(rowIndex: number, colIndex: number): CanvasRenderer {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const pixelRatio = renderer.pixelRatio;\n    const dx = rowIndex * this.spriteWidth * pixelRatio;\n    const dy = colIndex * this.spriteHeight * pixelRatio;\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, dx, dy);\n    renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, dx, dy));\n    return renderer;\n  }\n\n  /** @internal */\n  drawSprite(context: CanvasContext, frame: R2Box, rowIndex: number, colIndex: number): void {\n    const spritePixelRatio = this.renderer.pixelRatio;\n    const spriteWidth = this.spriteWidth * spritePixelRatio;\n    const spriteHeight = this.spriteHeight * spritePixelRatio;\n    const spriteX = rowIndex * spriteWidth;\n    const spriteY = colIndex * spriteHeight;\n    context.drawImage(this.canvas, spriteX, spriteY, spriteWidth, spriteHeight,\n                      frame.x, frame.y, this.spriteWidth, this.spriteHeight);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Service} from \"@swim/component\";\nimport type {Sprite} from \"./Sprite\";\nimport {SpriteSheet} from \"./SpriteSheet\";\n\n/** @public */\nexport class SpriteService extends Service {\n  constructor(canvasWidth?: number, canvasHeight?: number, pixelRatio?: number,\n              minSizeClass?: number, maxSizeClass?: number) {\n    super();\n    if (pixelRatio === void 0) {\n      pixelRatio = window.devicePixelRatio || 1;\n    }\n    if (canvasWidth === void 0) {\n      canvasWidth = Math.floor(SpriteService.TextureWidth / pixelRatio);\n    }\n    if (canvasHeight === void 0) {\n      canvasHeight = Math.floor(SpriteService.TextureHeight / pixelRatio);\n    }\n    if (maxSizeClass === void 0) {\n      maxSizeClass = Math.floor(Math.log2(Math.min(canvasWidth, canvasHeight) / 4));\n    }\n    if (minSizeClass === void 0) {\n      minSizeClass = Math.min(4, maxSizeClass);\n    }\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.minSizeClass = minSizeClass;\n    this.maxSizeClass = maxSizeClass;\n    this.pixelRatio = pixelRatio;\n\n    const slabCount = maxSizeClass - minSizeClass + 1;\n    const slabs = new Array<SpriteSheet | null>(slabCount);\n    for (let i = 0; i < slabCount; i += 1) {\n      slabs[i] = null;\n    }\n    this.slabs = slabs;\n  }\n\n  readonly canvasWidth: number;\n\n  readonly canvasHeight: number;\n\n  readonly pixelRatio: number;\n\n  readonly minSizeClass: number;\n\n  readonly maxSizeClass: number;\n\n  readonly slabs: readonly (SpriteSheet | null)[];\n\n  /** @internal */\n  protected createSlab(sizeClass: number): SpriteSheet {\n    const spriteSize = 1 << sizeClass;\n    return new SpriteSheet(spriteSize, spriteSize, this.canvasWidth, this.canvasHeight, this.pixelRatio);\n  }\n\n  /** @internal */\n  getFreeSlab(sizeClass: number): SpriteSheet | null {\n    sizeClass = Math.max(this.minSizeClass, sizeClass);\n    if (sizeClass > this.maxSizeClass) {\n      return null;\n    }\n    const index = sizeClass - this.minSizeClass;\n    const slabs = this.slabs as Array<SpriteSheet | null>;\n    let slab: SpriteSheet | null = slabs[index]!;\n    if (slab === null) {\n      slab = this.createSlab(sizeClass);\n      slabs[index] = slab;\n    } else if (slab.freeCount === 0) {\n      let freeSlab = SpriteSheet.acquireNextFreeSheet(slab);\n      if (freeSlab === null) {\n        freeSlab = this.createSlab(sizeClass);\n      }\n      freeSlab.nextSheet = slab;\n      slab = freeSlab;\n      slabs[index] = slab;\n    }\n    return slab;\n  }\n\n  /** @internal */\n  protected createSheet(width: number, height: number): SpriteSheet {\n    return new SpriteSheet(width, height, width, height, this.pixelRatio);\n  }\n\n  /** @internal */\n  getFreeSheet(width: number, height: number): SpriteSheet {\n    const widthClass = Math.ceil(Math.log2(width));\n    const heightClass = Math.ceil(Math.log2(height));\n    const sizeClass = Math.max(widthClass, heightClass);\n    let sheet = this.getFreeSlab(sizeClass);\n    if (sheet === null) {\n      sheet = this.createSheet(width, height);\n    }\n    return sheet;\n  }\n\n  acquireSprite(width: number, height: number): Sprite {\n    const sheet = this.getFreeSheet(width, height);\n    const sprite = sheet.acquireSprite()!;\n    // assert(sprite !== null);\n    return sprite;\n  }\n\n  /** @internal */\n  static readonly TextureWidth: number = 512;\n  /** @internal */\n  static readonly TextureHeight: number = 512;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {GraphicsEvent} from \"./GraphicsEvent\";\nimport type {GraphicsMouseEventInit} from \"./GraphicsEvent\";\nimport type {GraphicsMouseEvent} from \"./GraphicsEvent\";\nimport type {GraphicsPointerEventInit} from \"./GraphicsEvent\";\nimport type {GraphicsPointerEvent} from \"./GraphicsEvent\";\nimport type {GraphicsTouchInit} from \"./GraphicsEvent\";\nimport type {GraphicsTouch} from \"./GraphicsEvent\";\nimport type {GraphicsTouchEvent} from \"./GraphicsEvent\";\nimport type {GraphicsRendererLike} from \"./GraphicsRenderer\";\nimport type {GraphicsRendererType} from \"./GraphicsRenderer\";\nimport {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport {WebGLRenderer} from \"./WebGLRenderer\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport {SpriteService} from \"./SpriteService\";\n\n/** @internal */\nexport type CanvasFlags = number;\n\n/** @public */\nexport interface CanvasViewObserver<V extends CanvasView = CanvasView> extends HtmlViewObserver<V> {\n}\n\n/** @public */\nexport class CanvasView extends HtmlView {\n  constructor(node: HTMLCanvasElement) {\n    super(node);\n    this.viewFrame = R2Box.undefined();\n    this.mouse = null;\n    this.pointers = null;\n    this.touches = null;\n\n    this.style.setIntrinsic({\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n    });\n  }\n\n  declare readonly observerType?: Class<CanvasViewObserver>;\n\n  declare readonly node: HTMLCanvasElement;\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    updateFlags |= View.NeedsRender | View.NeedsComposite;\n    this.setFlags(this.flags | (View.NeedsRender | View.NeedsComposite));\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.ProcessMask) !== 0) {\n      this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n    }\n    return processFlags;\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeCanvas(this.node);\n    this.resetRenderer();\n    this.requireUpdate(View.NeedsLayout | View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override onScroll(): void {\n    super.onScroll();\n    this.setCulled(!this.intersectsViewport());\n  }\n\n  protected override didDisplay(displayFlags: ViewFlags): void {\n    this.detectHitTargets();\n    super.didDisplay(displayFlags);\n  }\n\n  protected override onRender(): void {\n    this.clearCanvas();\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    displayFlags |= View.NeedsRender | View.NeedsComposite;\n    return displayFlags;\n  }\n\n  @Provider({\n    serviceType: SpriteService,\n    inherits: false,\n    createService(): SpriteService {\n      return new SpriteService();\n    },\n  })\n  get sprites(): Provider<this, SpriteService> {\n    return Provider.getter();\n  }\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  @Property({\n    valueType: GraphicsRenderer,\n    inherits: true,\n    initValue(): GraphicsRenderer | null {\n      return this.owner.createRenderer();\n    },\n    didSetValue(renderer: GraphicsRenderer | null): void {\n      this.owner.resetRenderer();\n    },\n    fromLike(renderer: GraphicsRendererLike | null): GraphicsRenderer | null {\n      if (typeof renderer === \"string\") {\n        renderer = this.owner.createRenderer(renderer as GraphicsRendererType);\n      }\n      return renderer;\n    },\n  })\n  readonly renderer!: Property<this, GraphicsRenderer | null>;\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.node.getContext(\"2d\");\n      if (context === null) {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n      const pixelRatio = this.pixelRatio;\n      const transform = Transform.affine(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return new CanvasRenderer(context, transform, pixelRatio);\n    } else if (rendererType === \"webgl\") {\n      const context = this.node.getContext(\"webgl\");\n      if (context === null) {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n      return new WebGLRenderer(context, this.pixelRatio);\n    }\n    throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n  }\n\n  /** @internal */\n  readonly viewFrame: R2Box;\n\n  setViewFrame(viewFrame: R2Box | null): void {\n    // nop\n  }\n\n  get viewBounds(): R2Box {\n    return this.viewFrame;\n  }\n\n  get hitBounds(): R2Box {\n    return this.viewFrame;\n  }\n\n  cascadeHitTest(x: number, y: number): GraphicsView | null {\n    if (this.hidden || this.culled || this.intangible || !this.hitBounds.contains(x, y)) {\n      return null;\n    }\n    let hit = this.hitTestChildren(x, y);\n    if (hit === null) {\n      hit = this.hitTest(x, y);\n    }\n    return hit;\n  }\n\n  protected hitTest(x: number, y: number): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestChildren(x: number, y: number): GraphicsView | null {\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView) {\n        const hit = this.hitTestChild(child, x, y);\n        if (hit !== null) {\n          return hit;\n        }\n      }\n      child = child.nextSibling;\n    }\n    return null;\n  }\n\n  protected hitTestChild(childView: GraphicsView, x: number, y: number): GraphicsView | null {\n    return childView.cascadeHitTest(x, y);\n  }\n\n  /** @internal */\n  protected detectHitTargets(clientBounds?: R2Box): void {\n    if (this.mouseEvents.value) {\n      const mouse = this.mouse;\n      if (mouse !== null) {\n        if (clientBounds === void 0) {\n          clientBounds = this.clientBounds;\n        }\n        this.detectMouseTarget(mouse, this.clientBounds);\n      }\n    }\n    if (this.pointerEvents.value) {\n      const pointers = this.pointers;\n      for (const id in pointers) {\n        const pointer = pointers[id]!;\n        if (clientBounds === void 0) {\n          clientBounds = this.clientBounds;\n        }\n        this.detectPointerTarget(pointer, clientBounds);\n      }\n    }\n  }\n\n  setEventTarget(eventTarget: EventTarget | null): void {\n    if (eventTarget === null) {\n      eventTarget = this;\n    }\n\n    this.click.setTarget(eventTarget);\n    this.dblclick.setTarget(eventTarget);\n    this.contextmenu.setTarget(eventTarget);\n    this.wheel.setTarget(eventTarget);\n\n    this.mouseenter.setTarget(eventTarget);\n    this.mouseleave.setTarget(eventTarget);\n    this.mousedown.setTarget(eventTarget);\n\n    this.pointerenter.setTarget(eventTarget);\n    this.pointerleave.setTarget(eventTarget);\n    this.pointerdown.setTarget(eventTarget);\n\n    this.touchstart.setTarget(eventTarget);\n    this.touchmove.setTarget(eventTarget);\n    this.touchend.setTarget(eventTarget);\n    this.touchcancel.setTarget(eventTarget);\n  }\n\n  @Property({\n    valueType: Boolean,\n    value: true,\n    didSetValue(clickEvents: boolean): void {\n      this.owner.click.enabled = clickEvents;\n      this.owner.dblclick.enabled = clickEvents;\n      this.owner.contextmenu.enabled = clickEvents;\n    },\n  })\n  readonly clickEvents!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(wheelEvents: boolean): void {\n      this.owner.wheel.enabled = wheelEvents;\n    },\n  })\n  readonly wheelEvents!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(mouseEvents: boolean): void {\n      this.owner.mouseenter.enabled = mouseEvents;\n      this.owner.mouseleave.enabled = mouseEvents;\n      this.owner.mousedown.enabled = mouseEvents;\n    },\n  })\n  readonly mouseEvents!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(pointerEvents: boolean): void {\n      this.owner.pointerenter.enabled = pointerEvents;\n      this.owner.pointerleave.enabled = pointerEvents;\n      this.owner.pointerdown.enabled = pointerEvents;\n    },\n  })\n  readonly pointerEvents!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(touchEvents: boolean): void {\n      this.owner.touchstart.enabled = touchEvents;\n    },\n  })\n  readonly touchEvents!: Property<this, boolean>;\n\n  /** @internal */\n  handleEvent(event: GraphicsEvent): void {\n    // nop\n  }\n\n  /** @internal */\n  bubbleEvent(event: GraphicsEvent): View | null {\n    this.handleEvent(event);\n    return this;\n  }\n\n  /** @internal */\n  fireEvent(event: GraphicsEvent, clientX: number, clientY: number): GraphicsView | null {\n    const clientBounds = this.clientBounds;\n    if (!clientBounds.contains(clientX, clientY)) {\n      return null;\n    }\n    const x = clientX - clientBounds.x;\n    const y = clientY - clientBounds.y;\n    const hit = this.cascadeHitTest(x, y);\n    if (hit === null) {\n      return null;\n    }\n    event.targetView = hit;\n    hit.bubbleEvent(event);\n    return hit;\n  }\n\n  /** @internal */\n  readonly mouse: GraphicsMouseEventInit | null;\n\n  /** @internal */\n  protected updateMouse(mouse: GraphicsMouseEventInit, event: MouseEvent): void {\n    mouse.button = event.button;\n    mouse.buttons = event.buttons;\n    mouse.altKey = event.altKey;\n    mouse.ctrlKey = event.ctrlKey;\n    mouse.metaKey = event.metaKey;\n    mouse.shiftKey = event.shiftKey;\n\n    mouse.clientX = event.clientX;\n    mouse.clientY = event.clientY;\n    mouse.screenX = event.screenX;\n    mouse.screenY = event.screenY;\n    mouse.movementX = event.movementX;\n    mouse.movementY = event.movementY;\n\n    mouse.view = event.view;\n    mouse.detail = event.detail;\n    mouse.relatedTarget = event.relatedTarget;\n  }\n\n  /** @internal */\n  protected fireMouseEvent(event: MouseEvent): GraphicsView | null {\n    return this.fireEvent(event, event.clientX, event.clientY);\n  }\n\n  @EventHandler({\n    eventType: \"click\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.clickEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      const mouse = this.owner.mouse;\n      if (mouse !== null) {\n        this.owner.updateMouse(mouse, event);\n      }\n      this.owner.fireMouseEvent(event);\n    },\n  })\n  readonly click!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"dblclick\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.clickEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      const mouse = this.owner.mouse;\n      if (mouse !== null) {\n        this.owner.updateMouse(mouse, event);\n      }\n      this.owner.fireMouseEvent(event);\n    },\n  })\n  readonly dblclick!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"contextmenu\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.clickEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      const mouse = this.owner.mouse;\n      if (mouse !== null) {\n        this.owner.updateMouse(mouse, event);\n      }\n      this.owner.fireMouseEvent(event);\n    },\n  })\n  readonly contextmenu!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"wheel\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.wheelEvents.value;\n    },\n    handle(event: WheelEvent): void {\n      const mouse = this.owner.mouse;\n      if (mouse !== null) {\n        this.owner.updateMouse(mouse, event);\n      }\n      this.owner.fireMouseEvent(event);\n    },\n  })\n  readonly wheel!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"mouseenter\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.mouseEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      let mouse = this.owner.mouse;\n      if (mouse === null) {\n        mouse = {};\n        (this.owner as Mutable<CanvasView>).mouse = mouse;\n      }\n      this.owner.mousemove.enabled = true;\n      this.owner.updateMouse(mouse, event);\n    },\n  })\n  readonly mouseenter!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"mouseleave\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.mouseEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      (this.owner as Mutable<CanvasView>).mouse = null;\n      this.owner.mousemove.enabled = false;\n    },\n  })\n  readonly mouseleave!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"mousedown\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.mouseEvents.value;\n    },\n    handle(event: MouseEvent): void {\n      let mouse = this.owner.mouse;\n      if (mouse === null) {\n        mouse = {};\n        (this.owner as Mutable<CanvasView>).mouse = mouse;\n      }\n      this.owner.mouseup.enabled = true;\n      this.owner.updateMouse(mouse, event);\n      this.owner.fireMouseEvent(event);\n    },\n  })\n  readonly mousedown!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"mousemove\",\n    enabled: false,\n    initTarget(): EventTarget | null {\n      return document.body;\n    },\n    handle(event: MouseEvent): void {\n      let mouse = this.owner.mouse;\n      if (mouse === null) {\n        mouse = {};\n        (this.owner as Mutable<CanvasView>).mouse = mouse;\n      }\n      this.owner.updateMouse(mouse, event);\n      let oldTargetView = mouse.targetView as GraphicsView | null | undefined;\n      if (oldTargetView === void 0) {\n        oldTargetView = null;\n      }\n      const newTargetView = this.owner.fireMouseEvent(event);\n      if (newTargetView !== oldTargetView) {\n        this.owner.onMouseTargetChange(mouse, newTargetView, oldTargetView);\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly mousemove!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"mouseup\",\n    enabled: false,\n    initTarget(): EventTarget | null {\n      return document.body;\n    },\n    handle(event: MouseEvent): void {\n      const mouse = this.owner.mouse;\n      if (mouse !== null) {\n        this.owner.updateMouse(mouse, event);\n      }\n      this.owner.fireMouseEvent(event);\n      this.owner.mouseup.enabled = false;\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly mouseup!: EventHandler<this>;\n\n  /** @internal */\n  protected onMouseTargetChange(mouse: GraphicsMouseEventInit, newTargetView: GraphicsView | null,\n                                oldTargetView: GraphicsView | null): void {\n    mouse.bubbles = true;\n    let commonAncestorView: GraphicsView | null = null;\n    if (oldTargetView !== null && newTargetView !== null) {\n      commonAncestorView = oldTargetView.commonAncestor(newTargetView) as GraphicsView | null;\n    }\n    if (oldTargetView !== null) {\n      const outEvent = new MouseEvent(\"mouseout\", mouse) as GraphicsMouseEvent;\n      outEvent.targetView = oldTargetView;\n      outEvent.relatedTargetView = newTargetView;\n      oldTargetView.bubbleEvent(outEvent);\n      let leaveView: GraphicsView | null = oldTargetView;\n      do {\n        const leaveEvent = new MouseEvent(\"mouseleave\", {\n          bubbles: false,\n          ...mouse,\n        }) as GraphicsMouseEvent;\n        leaveEvent.targetView = leaveView;\n        leaveEvent.relatedTargetView = newTargetView;\n        leaveView.handleEvent(leaveEvent);\n        leaveView = leaveView.parent as GraphicsView | null;\n      } while (leaveView instanceof GraphicsView && leaveView !== commonAncestorView);\n    }\n    mouse.targetView = newTargetView !== null ? newTargetView : void 0;\n    if (newTargetView !== null) {\n      const overEvent = new MouseEvent(\"mouseover\", mouse) as GraphicsMouseEvent;\n      overEvent.targetView = newTargetView;\n      overEvent.relatedTargetView = oldTargetView;\n      newTargetView.bubbleEvent(overEvent);\n      let enterView: GraphicsView | null = newTargetView;\n      do {\n        const enterEvent = new MouseEvent(\"mouseenter\", {\n          bubbles: false,\n          ...mouse,\n        }) as GraphicsMouseEvent;\n        enterEvent.targetView = enterView;\n        enterEvent.relatedTargetView = oldTargetView;\n        enterView.handleEvent(enterEvent);\n        enterView = enterView.parent as GraphicsView | null;\n      } while (enterView instanceof GraphicsView && enterView !== commonAncestorView);\n    }\n  }\n\n  /** @internal */\n  protected detectMouseTarget(mouse: GraphicsMouseEventInit, clientBounds: R2Box): void {\n    const clientX = mouse.clientX!;\n    const clientY = mouse.clientY!;\n    if (clientBounds.contains(clientX, clientY)) {\n      const x = clientX - clientBounds.x;\n      const y = clientY - clientBounds.y;\n      let oldTargetView = mouse.targetView as GraphicsView | null | undefined;\n      if (oldTargetView === void 0) {\n        oldTargetView = null;\n      }\n      const newTargetView = this.cascadeHitTest(x, y);\n      if (newTargetView !== oldTargetView) {\n        this.onMouseTargetChange(mouse, newTargetView, oldTargetView);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly pointers: {[id: string]: GraphicsPointerEventInit | undefined} | null;\n\n  /** @internal */\n  protected updatePointer(pointer: GraphicsPointerEventInit, event: PointerEvent): void {\n    pointer.pointerId = event.pointerId;\n    pointer.pointerType = event.pointerType;\n    pointer.isPrimary = event.isPrimary;\n\n    pointer.button = event.button;\n    pointer.buttons = event.buttons;\n    pointer.altKey = event.altKey;\n    pointer.ctrlKey = event.ctrlKey;\n    pointer.metaKey = event.metaKey;\n    pointer.shiftKey = event.shiftKey;\n\n    pointer.clientX = event.clientX;\n    pointer.clientY = event.clientY;\n    pointer.screenX = event.screenX;\n    pointer.screenY = event.screenY;\n    pointer.movementX = event.movementX;\n    pointer.movementY = event.movementY;\n\n    pointer.width = event.width;\n    pointer.height = event.height;\n    pointer.tiltX = event.tiltX;\n    pointer.tiltY = event.tiltY;\n    pointer.twist = event.twist;\n    pointer.pressure = event.pressure;\n    pointer.tangentialPressure = event.tangentialPressure;\n\n    pointer.view = event.view;\n    pointer.detail = event.detail;\n    pointer.relatedTarget = event.relatedTarget;\n  }\n\n  /** @internal */\n  protected firePointerEvent(event: PointerEvent): GraphicsView | null {\n    return this.fireEvent(event, event.clientX, event.clientY);\n  }\n\n  @EventHandler({\n    eventType: \"pointerenter\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.pointerEvents.value;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      let pointer = pointers[id];\n      if (pointer === void 0) {\n        pointer = {};\n        pointers[id] = pointer;\n      }\n      this.owner.pointermove.enabled = true;\n      this.owner.pointerup.enabled = true;\n      this.owner.pointercancel.enabled = true;\n      this.owner.updatePointer(pointer, event);\n    },\n  })\n  readonly pointerenter!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"pointerleave\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.pointerEvents.value;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      const pointer = pointers[id];\n      if (pointer !== void 0) {\n        if (pointer.targetView !== void 0) {\n          this.owner.onPointerTargetChange(pointer, null, pointer.targetView as GraphicsView);\n        }\n        delete pointers[id];\n        if (Object.keys(pointers).length === 0) {\n          this.owner.pointermove.enabled = false;\n          this.owner.pointerup.enabled = false;\n          this.owner.pointercancel.enabled = false;\n        }\n      }\n    },\n  })\n  readonly pointerleave!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"pointerdown\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.pointerEvents.value;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      let pointer = pointers[id];\n      if (pointer === void 0) {\n        pointer = {};\n        pointers[id] = pointer;\n      }\n      this.owner.pointermove.enabled = true;\n      this.owner.pointerup.enabled = true;\n      this.owner.pointercancel.enabled = true;\n      this.owner.updatePointer(pointer, event);\n      this.owner.firePointerEvent(event);\n    },\n  })\n  readonly pointerdown!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"pointermove\",\n    enabled: false,\n    initTarget(): EventTarget | null {\n      return document.body;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      let pointer = pointers[id];\n      if (pointer === void 0) {\n        pointer = {};\n        pointers[id] = pointer;\n      }\n      this.owner.pointermove.enabled = true;\n      this.owner.pointerup.enabled = true;\n      this.owner.pointercancel.enabled = true;\n      this.owner.updatePointer(pointer, event);\n      let oldTargetView = pointer.targetView as GraphicsView | null | undefined;\n      if (oldTargetView === void 0) {\n        oldTargetView = null;\n      }\n      const newTargetView = this.owner.firePointerEvent(event);\n      if (newTargetView !== oldTargetView) {\n        this.owner.onPointerTargetChange(pointer, newTargetView, oldTargetView);\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly pointermove!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"pointerup\",\n    enabled: false,\n    initTarget(): EventTarget | null {\n      return document.body;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      const pointer = pointers[id];\n      if (pointer !== void 0) {\n        this.owner.updatePointer(pointer, event);\n      }\n      this.owner.firePointerEvent(event);\n      if (pointer !== void 0 && event.pointerType !== \"mouse\") {\n        if (pointer.targetView !== void 0) {\n          this.owner.onPointerTargetChange(pointer, null, pointer.targetView as GraphicsView);\n        }\n        delete pointers[id];\n        if (Object.keys(pointers).length === 0) {\n          this.owner.pointermove.enabled = false;\n          this.owner.pointerup.enabled = false;\n          this.owner.pointercancel.enabled = false;\n        }\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly pointerup!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"pointercancel\",\n    enabled: false,\n    initTarget(): EventTarget | null {\n      return document.body;\n    },\n    handle(event: PointerEvent): void {\n      const id = \"\" + event.pointerId;\n      let pointers = this.owner.pointers;\n      if (pointers === null) {\n        pointers = {};\n        (this.owner as Mutable<CanvasView>).pointers = pointers;\n      }\n      const pointer = pointers[id];\n      if (pointer !== void 0) {\n        this.owner.updatePointer(pointer, event);\n      }\n      this.owner.firePointerEvent(event);\n      if (pointer !== void 0 && event.pointerType !== \"mouse\") {\n        if (pointer.targetView !== void 0) {\n          this.owner.onPointerTargetChange(pointer, null, pointer.targetView as GraphicsView);\n        }\n        delete pointers[id];\n        if (Object.keys(pointers).length === 0) {\n          this.owner.pointermove.enabled = false;\n          this.owner.pointerup.enabled = false;\n          this.owner.pointercancel.enabled = false;\n        }\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly pointercancel!: EventHandler<this>;\n\n  /** @internal */\n  protected onPointerTargetChange(pointer: GraphicsPointerEventInit, newTargetView: GraphicsView | null,\n                                  oldTargetView: GraphicsView | null): void {\n    pointer.bubbles = true;\n    let commonAncestorView: GraphicsView | null = null;\n    if (oldTargetView !== null && newTargetView !== null) {\n      commonAncestorView = oldTargetView.commonAncestor(newTargetView) as GraphicsView | null;\n    }\n    if (oldTargetView !== null) {\n      const outEvent = new PointerEvent(\"pointerout\", pointer) as GraphicsPointerEvent;\n      outEvent.targetView = oldTargetView;\n      outEvent.relatedTargetView = newTargetView;\n      oldTargetView.bubbleEvent(outEvent);\n      let leaveView: GraphicsView | null = oldTargetView;\n      do {\n        const leaveEvent = new PointerEvent(\"pointerleave\", {\n          bubbles: false,\n          ...pointer,\n        }) as GraphicsPointerEvent;\n        leaveEvent.targetView = leaveView;\n        leaveEvent.relatedTargetView = newTargetView;\n        leaveView.handleEvent(leaveEvent);\n        leaveView = leaveView.parent as GraphicsView | null;\n      } while (leaveView instanceof GraphicsView && leaveView !== commonAncestorView);\n    }\n    pointer.targetView = newTargetView !== null ? newTargetView : void 0;\n    if (newTargetView !== null) {\n      const overEvent = new PointerEvent(\"pointerover\", pointer) as GraphicsPointerEvent;\n      overEvent.targetView = newTargetView;\n      overEvent.relatedTargetView = oldTargetView;\n      newTargetView.bubbleEvent(overEvent);\n      let enterView: GraphicsView | null = newTargetView;\n      do {\n        const enterEvent = new PointerEvent(\"pointerenter\", {\n          bubbles: false,\n          ...pointer,\n        }) as GraphicsPointerEvent;\n        enterEvent.targetView = enterView;\n        enterEvent.relatedTargetView = oldTargetView;\n        enterView.handleEvent(enterEvent);\n        enterView = enterView.parent as GraphicsView | null;\n      } while (enterView instanceof GraphicsView && enterView !== commonAncestorView);\n    }\n  }\n\n  /** @internal */\n  protected detectPointerTarget(pointer: GraphicsPointerEventInit, clientBounds: R2Box): void {\n    const clientX = pointer.clientX!;\n    const clientY = pointer.clientY!;\n    if (clientBounds.contains(clientX, clientY)) {\n      const x = clientX - clientBounds.x;\n      const y = clientY - clientBounds.y;\n      let oldTargetView = pointer.targetView as GraphicsView | null | undefined;\n      if (oldTargetView === void 0) {\n        oldTargetView = null;\n      }\n      const newTargetView = this.cascadeHitTest(x, y);\n      if (newTargetView !== oldTargetView) {\n        this.onPointerTargetChange(pointer, newTargetView, oldTargetView);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly touches: {[id: string]: GraphicsTouchInit | undefined} | null;\n\n  /** @internal */\n  protected updateTouch(touch: GraphicsTouchInit, event: Touch): void {\n    touch.clientX = event.clientX;\n    touch.clientY = event.clientY;\n    touch.screenX = event.screenX;\n    touch.screenY = event.screenY;\n    touch.pageX = event.pageX;\n    touch.pageY = event.pageY;\n\n    touch.radiusX = event.radiusX;\n    touch.radiusY = event.radiusY;\n    touch.rotationAngle = event.rotationAngle;\n    touch.force = event.force;\n  }\n\n  /** @internal */\n  protected fireTouchEvent(type: string, originalEvent: TouchEvent): void {\n    const changedTouches = originalEvent.changedTouches;\n    const dispatched: GraphicsView[] = [];\n    for (let i = 0; i < changedTouches.length; i += 1) {\n      const changedTouch = changedTouches[i]! as GraphicsTouch;\n      const targetView = changedTouch.targetView as GraphicsView | undefined;\n      if (targetView !== void 0 && dispatched.indexOf(targetView) < 0) {\n        const startEvent: GraphicsTouchEvent = new TouchEvent(type, {\n          changedTouches: changedTouches as unknown as Touch[],\n          targetTouches: originalEvent.targetTouches as unknown as Touch[],\n          touches: originalEvent.touches as unknown as Touch[],\n          bubbles: true,\n        });\n        startEvent.targetView = targetView;\n        const targetViewTouches: Touch[] = [changedTouch];\n        for (let j = i + 1; j < changedTouches.length; j += 1) {\n          const nextTouch = changedTouches[j]! as GraphicsTouch;\n          if (nextTouch.targetView === targetView) {\n            targetViewTouches.push(nextTouch);\n          }\n        }\n\n        const touchDocument = document as Document & {createTouchList?(...touches: Touch[]): TouchList};\n        if (touchDocument.createTouchList !== void 0) {\n          startEvent.targetViewTouches = touchDocument.createTouchList(...targetViewTouches);\n        } else {\n          (targetViewTouches as unknown as TouchList).item = function (index: number): Touch {\n            return targetViewTouches[index]!;\n          };\n          startEvent.targetViewTouches = targetViewTouches as unknown as TouchList;\n        }\n        targetView.bubbleEvent(startEvent);\n        dispatched.push(targetView);\n      }\n    }\n  }\n\n  @EventHandler({\n    eventType: \"touchstart\",\n    bindsOwner: true,\n    enabled: false,\n    init(): void {\n      this.enabled = this.owner.touchEvents.value;\n    },\n    handle(event: TouchEvent): void {\n      let clientBounds: R2Box | undefined;\n      let touches = this.owner.touches;\n      if (touches === null) {\n        touches = {};\n        (this.owner as Mutable<CanvasView>).touches = touches;\n      }\n      const changedTouches = event.changedTouches;\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        let touch = touches[id];\n        if (touch === void 0) {\n          touch = {\n            identifier: changedTouch.identifier,\n            target: changedTouch.target,\n          };\n          touches[id] = touch;\n        }\n        this.owner.touchmove.enabled = true;\n        this.owner.touchend.enabled = true;\n        this.owner.touchcancel.enabled = true;\n        this.owner.updateTouch(touch, changedTouch);\n        const clientX = touch.clientX!;\n        const clientY = touch.clientY!;\n        if (clientBounds === void 0) {\n          clientBounds = this.owner.clientBounds;\n        }\n        if (clientBounds.contains(clientX, clientY)) {\n          const x = clientX - clientBounds.x;\n          const y = clientY - clientBounds.y;\n          const hit = this.owner.cascadeHitTest(x, y);\n          if (hit !== null) {\n            touch.targetView = hit;\n            changedTouch.targetView = hit;\n          }\n        }\n      }\n      this.owner.fireTouchEvent(\"touchstart\", event);\n    },\n  })\n  readonly touchstart!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"touchmove\",\n    bindsOwner: true,\n    enabled: false,\n    handle(event: TouchEvent): void {\n      let touches = this.owner.touches;\n      if (touches === null) {\n        touches = {};\n        (this.owner as Mutable<CanvasView>).touches = touches;\n      }\n      const changedTouches = event.changedTouches;\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        let touch = touches[id];\n        if (touch === void 0) {\n          touch = {\n            identifier: changedTouch.identifier,\n            target: changedTouch.target,\n          };\n          touches[id] = touch;\n        }\n        this.owner.updateTouch(touch, changedTouch);\n        changedTouch.targetView = touch.targetView;\n      }\n      this.owner.fireTouchEvent(\"touchmove\", event);\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly touchmove!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"touchend\",\n    bindsOwner: true,\n    enabled: false,\n    handle(event: TouchEvent): void {\n      let touches = this.owner.touches;\n      if (touches === null) {\n        touches = {};\n        (this.owner as Mutable<CanvasView>).touches = touches;\n      }\n      const changedTouches = event.changedTouches;\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        let touch = touches[id];\n        if (touch === void 0) {\n          touch = {\n            identifier: changedTouch.identifier,\n            target: changedTouch.target,\n          };\n          touches[id] = touch;\n        }\n        this.owner.updateTouch(touch, changedTouch);\n        changedTouch.targetView = touch.targetView;\n      }\n      this.owner.fireTouchEvent(\"touchend\", event);\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        delete touches[id];\n        if (Object.keys(touches).length === 0) {\n          this.owner.touchmove.enabled = false;\n          this.owner.touchend.enabled = false;\n          this.owner.touchcancel.enabled = false;\n        }\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly touchend!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"touchcancel\",\n    bindsOwner: true,\n    enabled: false,\n    handle(event: TouchEvent): void {\n      let touches = this.owner.touches;\n      if (touches === null) {\n        touches = {};\n        (this.owner as Mutable<CanvasView>).touches = touches;\n      }\n      const changedTouches = event.changedTouches;\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        let touch = touches[id];\n        if (touch === void 0) {\n          touch = {\n            identifier: changedTouch.identifier,\n            target: changedTouch.target,\n          };\n          touches[id] = touch;\n        }\n        this.owner.updateTouch(touch, changedTouch);\n        changedTouch.targetView = touch.targetView;\n      }\n      this.owner.fireTouchEvent(\"touchcancel\", event);\n      for (let i = 0; i < changedTouches.length; i += 1) {\n        const changedTouch = changedTouches[i] as GraphicsTouch;\n        const id = \"\" + changedTouch.identifier;\n        delete touches[id];\n        if (Object.keys(touches).length === 0) {\n          this.owner.touchmove.enabled = false;\n          this.owner.touchend.enabled = false;\n          this.owner.touchcancel.enabled = false;\n        }\n      }\n    },\n    didUnmount(): void {\n      this.enabled = false;\n      super.didUnmount();\n    },\n  })\n  readonly touchcancel!: EventHandler<this>;\n\n  protected resizeCanvas(canvas: HTMLCanvasElement): void {\n    let width: number;\n    let height: number;\n    let pixelRatio: number;\n    let parentNode = canvas.parentNode;\n    if (parentNode instanceof HTMLElement) {\n      do {\n        width = Math.floor(parentNode.offsetWidth);\n        height = Math.floor(parentNode.offsetHeight);\n        if (width !== 0 && height !== 0) {\n          break;\n        } else if ((width === 0 || height === 0) && HtmlView.isPositioned(parentNode)) {\n          this.requireUpdate(View.NeedsResize); // view might not yet have been laid out\n        }\n        parentNode = parentNode.parentNode;\n      } while (parentNode instanceof HTMLElement);\n      pixelRatio = this.pixelRatio;\n      canvas.width = width * pixelRatio;\n      canvas.height = height * pixelRatio;\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n    } else {\n      width = Math.floor(canvas.width);\n      height = Math.floor(canvas.height);\n      pixelRatio = 1;\n    }\n    (this as Mutable<this>).viewFrame = new R2Box(0, 0, width, height);\n  }\n\n  clearCanvas(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const frame = this.viewFrame;\n      renderer.context.clearRect(0, 0, frame.width, frame.height);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  resetRenderer(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    } else if (renderer instanceof WebGLRenderer) {\n      const frame = this.viewFrame;\n      renderer.context.viewport(0, 0, frame.width, frame.height);\n    }\n  }\n\n  /** @internal */\n  static override readonly tag: string = \"canvas\";\n\n  static override readonly UncullFlags: ViewFlags = HtmlView.UncullFlags | View.NeedsRender | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = HtmlView.UnhideFlags | View.NeedsRender | View.NeedsComposite;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsRendererLike} from \"./GraphicsRenderer\";\nimport type {GraphicsRendererType} from \"./GraphicsRenderer\";\nimport {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport {WebGLRenderer} from \"./WebGLRenderer\";\nimport type {CanvasCompositeOperation} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\n\n/** @public */\nexport class RasterView extends GraphicsView {\n  constructor() {\n    super();\n    this.canvas = this.createCanvas();\n    this.ownRasterFrame = null;\n    (this.renderer as Mutable<typeof this.renderer>).value = this.createRenderer();\n  }\n\n  @ThemeConstraintAnimator({valueType: Number, value: 1, updateFlags: View.NeedsComposite})\n  readonly opacity!: ThemeConstraintAnimator<this, number>;\n\n  @Property({valueType: String, value: \"source-over\", updateFlags: View.NeedsComposite})\n  readonly compositeOperation!: Property<this, CanvasCompositeOperation>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  /** @internal */\n  readonly canvas: HTMLCanvasElement;\n\n  @Property({\n    valueType: GraphicsRenderer,\n    value: null,\n    inherits: \"renderer\",\n  })\n  readonly compositor!: Property<this, GraphicsRenderer | null>;\n\n  @Property({\n    extends: true,\n    inherits: false,\n    updateFlags: View.NeedsRender | View.NeedsComposite,\n    fromLike(renderer: GraphicsRendererLike | null): GraphicsRenderer | null {\n      if (typeof renderer === \"string\") {\n        renderer = this.owner.createRenderer(renderer as GraphicsRendererType);\n      }\n      return renderer;\n    },\n  })\n  override readonly renderer!: Property<this, GraphicsRenderer | null>;\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.canvas.getContext(\"2d\");\n      if (context === null) {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n      return new CanvasRenderer(context, Transform.identity(), this.pixelRatio);\n    } else if (rendererType === \"webgl\") {\n      const context = this.canvas.getContext(\"webgl\");\n      if (context === null) {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n      return new WebGLRenderer(context, this.pixelRatio);\n    }\n    throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n  }\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    const rasterFlags = updateFlags & (View.NeedsRender | View.NeedsComposite);\n    if (rasterFlags !== 0) {\n      updateFlags |= View.NeedsComposite;\n      this.setFlags(this.flags | View.NeedsDisplay | View.NeedsComposite | rasterFlags);\n    }\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.ProcessMask) === 0 && (processFlags & View.NeedsResize) === 0) {\n      processFlags = 0;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.DisplayMask) !== 0) {\n      displayFlags |= View.NeedsComposite;\n    } else if ((displayFlags & View.NeedsComposite) !== 0) {\n      displayFlags = View.NeedsDisplay | View.NeedsComposite;\n    } else {\n      displayFlags = 0;\n    }\n    return displayFlags;\n  }\n\n  protected override onRender(): void {\n    const rasterFrame = this.rasterFrame;\n    this.resizeCanvas(this.canvas, rasterFrame);\n    this.resetRenderer(rasterFrame);\n    this.clearCanvas(rasterFrame);\n    super.onRender();\n  }\n\n  protected override didComposite(): void {\n    this.compositeImage();\n    super.didComposite();\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  /** @internal */\n  readonly ownRasterFrame: R2Box | null;\n\n  get rasterFrame(): R2Box {\n    let rasterFrame = this.ownRasterFrame;\n    if (rasterFrame === null) {\n      rasterFrame = this.deriveRasterFrame();\n    }\n    return rasterFrame;\n  }\n\n  /** @internal */\n  setRasterFrame(rasterFrame: R2Box | null): void {\n    (this as Mutable<this>).ownRasterFrame = rasterFrame;\n  }\n\n  protected deriveRasterFrame(): R2Box {\n    return this.viewBounds;\n  }\n\n  protected createCanvas(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n  }\n\n  protected resizeCanvas(canvas: HTMLCanvasElement, rasterFrame: R2Box): void {\n    const pixelRatio = this.pixelRatio;\n    const newWidth = rasterFrame.width;\n    const newHeight = rasterFrame.height;\n    const newCanvasWidth = newWidth * pixelRatio;\n    const newCanvasHeight = newHeight * pixelRatio;\n    const oldCanvasWidth = canvas.width;\n    const oldCanvasHeight = canvas.height;\n    if (newCanvasWidth !== oldCanvasWidth || newCanvasHeight !== oldCanvasHeight) {\n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n      canvas.style.width = newWidth + \"px\";\n      canvas.style.height = newHeight + \"px\";\n    }\n  }\n\n  protected clearCanvas(rasterFrame: R2Box): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      renderer.context.clearRect(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  protected resetRenderer(rasterFrame: R2Box): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      const dx = rasterFrame.xMin * pixelRatio;\n      const dy = rasterFrame.yMin * pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, -dx, -dy);\n      renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, -dx, -dy));\n    } else if (renderer instanceof WebGLRenderer) {\n      renderer.context.viewport(rasterFrame.x, rasterFrame.y, rasterFrame.xMax, rasterFrame.yMax);\n    }\n  }\n\n  protected compositeImage(): void {\n    const compositor = this.compositor.value;\n    if (compositor instanceof CanvasRenderer) {\n      const context = compositor.context;\n      const rasterFrame = this.rasterFrame;\n      const canvas = this.canvas;\n      if (rasterFrame.isDefined() && rasterFrame.width !== 0 && rasterFrame.height !== 0 &&\n          canvas.width !== 0 && canvas.height !== 0) {\n        const globalAlpha = context.globalAlpha;\n        const globalCompositeOperation = context.globalCompositeOperation;\n        context.globalAlpha = this.opacity.getValue();\n        context.globalCompositeOperation = this.compositeOperation.getValue();\n        context.drawImage(canvas, rasterFrame.x, rasterFrame.y, rasterFrame.width, rasterFrame.height);\n        context.globalAlpha = globalAlpha;\n        context.globalCompositeOperation = globalCompositeOperation;\n      }\n    }\n  }\n\n  static override readonly MountFlags: ViewFlags = GraphicsView.MountFlags | View.NeedsComposite;\n  static override readonly UncullFlags: ViewFlags = GraphicsView.UncullFlags | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = GraphicsView.UnhideFlags | View.NeedsComposite;\n}\nObject.defineProperty(RasterView.prototype, \"viewBounds\", {\n  get(this: RasterView): R2Box {\n    return this.deriveViewBounds();\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsView} from \"./GraphicsView\";\n\n/** @public */\nexport interface FillView extends GraphicsView {\n  readonly fill: ThemeAnimator<this, Color | null>;\n}\n\n/** @public */\nexport const FillView = {\n  [Symbol.hasInstance](instance: unknown): instance is FillView {\n    return instance instanceof GraphicsView\n        && \"fill\" in instance;\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsView} from \"./GraphicsView\";\n\n/** @public */\nexport interface StrokeView extends GraphicsView {\n  readonly stroke: ThemeAnimator<this, Color | null>;\n\n  readonly strokeWidth: ThemeAnimator<this, Length | null>;\n}\n\n/** @public */\nexport const StrokeView = {\n  [Symbol.hasInstance](instance: unknown): instance is StrokeView {\n    return instance instanceof GraphicsView\n        && \"stroke\" in instance\n        && \"strokeWidth\" in instance;\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport type {Graphics} from \"./Graphics\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {PathContext} from \"./PathContext\";\nimport {PathRenderer} from \"./PathRenderer\";\n\n/** @public */\nexport type RectLike = Rect | RectInit;\n\n/** @public */\nexport interface RectInit {\n  x: LengthLike;\n  y: LengthLike;\n  width: LengthLike;\n  height: LengthLike;\n}\n\n/** @public */\nexport class Rect implements Graphics, Equals, Debug {\n  constructor(x: Length, y: Length, width: Length, height: Length) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  readonly x: Length;\n\n  withX(x: LengthLike): Rect {\n    x = Length.fromLike(x);\n    if (this.x.equals(x)) {\n      return this;\n    }\n    return this.copy(x, this.y, this.width, this.height);\n  }\n\n  readonly y: Length;\n\n  withY(y: LengthLike): Rect {\n    y = Length.fromLike(y);\n    if (this.y.equals(y)) {\n      return this;\n    }\n    return this.copy(this.x, y, this.width, this.height);\n  }\n\n  readonly width: Length;\n\n  withWidth(width: LengthLike): Rect {\n    width = Length.fromLike(width);\n    if (this.width.equals(width)) {\n      return this;\n    }\n    return this.copy(this.x, this.y, width, this.height);\n  }\n\n  readonly height: Length;\n\n  withHeight(height: LengthLike): Rect {\n    height = Length.fromLike(height);\n    if (this.height.equals(height)) {\n      return this;\n    }\n    return this.copy(this.x, this.y, this.width, height);\n  }\n\n  render(): string;\n  render(renderer: GraphicsRenderer, frame?: R2Box): void;\n  render(renderer?: GraphicsRenderer, frame?: R2Box): string | void {\n    if (renderer === void 0) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      this.draw(context, frame);\n      return context.toString();\n    } else if (renderer instanceof PathRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: DrawingContext, frame: R2Box | null = null): void {\n    this.renderRect(context, frame);\n  }\n\n  protected renderRect(context: DrawingContext, frame: R2Box | null): void {\n    context.rect(this.x.pxValue(), this.y.pxValue(),\n                 this.width.pxValue(), this.height.pxValue());\n  }\n\n  protected copy(x: Length, y: Length, width: Length, height: Length): Rect {\n    return new Rect(x, y, width, height);\n  }\n\n  toLike(): RectInit {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Rect) {\n      return this.x.equals(that.x) && this.y.equals(that.y)\n          && this.width.equals(that.width) && this.height.equals(that.height);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Rect\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.x).write(\", \").debug(this.y).write(\", \")\n                   .debug(this.width).write(\", \").debug(this.height).write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(x: LengthLike, y: LengthLike, width: LengthLike, height: LengthLike): Rect {\n    x = Length.fromLike(x);\n    y = Length.fromLike(y);\n    width = Length.fromLike(width);\n    height = Length.fromLike(height);\n    return new Rect(x, y, width, height);\n  }\n\n  static fromLike<T extends RectLike | null | undefined>(value: T): Rect | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Rect) {\n      return value as Rect | Uninitable<T>;\n    } else if (typeof value === \"object\") {\n      return Rect.create(value.x, value.y, value.width, value.height);\n    }\n    throw new TypeError(\"\" + value);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {TimingLike} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport type {FillView} from \"./FillView\";\nimport type {StrokeView} from \"./StrokeView\";\nimport type {RectInit} from \"./Rect\";\nimport {Rect} from \"./Rect\";\n\n/** @public */\nexport class RectView extends GraphicsView implements FillView, StrokeView {\n  @Animator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly x!: Animator<this, Length>;\n\n  @Animator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly y!: Animator<this, Length>;\n\n  @Animator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly width!: Animator<this, Length>;\n\n  @Animator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly height!: Animator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  get value(): Rect {\n    return new Rect(this.x.getValue(), this.y.getValue(), this.width.getValue(), this.height.getValue());\n  }\n\n  get state(): Rect {\n    return new Rect(this.x.getState(), this.y.getState(), this.width.getState(), this.height.getState());\n  }\n\n  setState(rect: Rect | RectInit, timing?: TimingLike | boolean): void {\n    if (rect instanceof Rect) {\n      rect = rect.toLike();\n    }\n    if (rect.x !== void 0) {\n      this.x.setState(rect.x, timing);\n    }\n    if (rect.y !== void 0) {\n      this.y.setState(rect.y, timing);\n    }\n    if (rect.width !== void 0) {\n      this.width.setState(rect.width, timing);\n    }\n    if (rect.height !== void 0) {\n      this.height.setState(rect.height, timing);\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderRect(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderRect(context: PaintingContext, frame: R2Box): void {\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.rect(x, y, width, height);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestRect(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestRect(hx: number, hy: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n    context.beginPath();\n    context.rect(x, y, width, height);\n\n    if (this.fill.value !== null && context.isPointInPath(hx, hy)) {\n      return this;\n    }\n    let strokeWidth: Length | null;\n    if (this.stroke.value === null || (strokeWidth = this.strokeWidth.value) === null) {\n      return null;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    const size = Math.min(frame.width, frame.height);\n    context.lineWidth = strokeWidth.pxValue(size);\n    const pointInStroke = context.isPointInStroke(hx, hy);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n}\nObject.defineProperty(RectView.prototype, \"viewBounds\", {\n  get(this: RectView): R2Box {\n    const frame = this.viewFrame;\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n    return new R2Box(x, y, x + width, y + height);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport type {AngleLike} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {Graphics} from \"./Graphics\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {PathContext} from \"./PathContext\";\nimport {PathRenderer} from \"./PathRenderer\";\n\n/** @public */\nexport type ArcLike = Arc | ArcInit;\n\n/** @public */\nexport interface ArcInit {\n  center?: R2Point;\n  innerRadius?: LengthLike;\n  outerRadius?: LengthLike;\n  startAngle?: AngleLike;\n  sweepAngle?: AngleLike;\n  padAngle?: AngleLike;\n  padRadius?: LengthLike | null;\n  cornerRadius?: LengthLike;\n}\n\n/** @public */\nexport class Arc implements Graphics, Equals, Debug {\n  constructor(center: R2Point, innerRadius: Length, outerRadius: Length, startAngle: Angle,\n              sweepAngle: Angle, padAngle: Angle, padRadius: Length | null, cornerRadius: Length) {\n    this.center = center;\n    this.innerRadius = innerRadius;\n    this.outerRadius = outerRadius;\n    this.startAngle = startAngle;\n    this.sweepAngle = sweepAngle;\n    this.padAngle = padAngle;\n    this.padRadius = padRadius;\n    this.cornerRadius = cornerRadius;\n  }\n\n  readonly center: R2Point;\n\n  withCenter(center: R2PointLike): Arc {\n    center = R2Point.fromLike(center);\n    if (this.center.equals(center)) {\n      return this;\n    }\n    return this.copy(center, this.innerRadius, this.outerRadius, this.startAngle,\n                     this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly innerRadius: Length;\n\n  withInnerRadius(innerRadius: LengthLike): Arc {\n    innerRadius = Length.fromLike(innerRadius);\n    if (this.innerRadius.equals(innerRadius)) {\n      return this;\n    }\n    return this.copy(this.center, innerRadius, this.outerRadius, this.startAngle,\n                     this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly outerRadius: Length;\n\n  withOuterRadius(outerRadius: LengthLike): Arc {\n    outerRadius = Length.fromLike(outerRadius);\n    if (this.outerRadius.equals(outerRadius)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, outerRadius, this.startAngle,\n                     this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly startAngle: Angle;\n\n  withStartAngle(startAngle: AngleLike): Arc {\n    startAngle = Angle.fromLike(startAngle);\n    if (this.startAngle.equals(startAngle)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, this.outerRadius, startAngle,\n                     this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly sweepAngle: Angle;\n\n  withSweepAngle(sweepAngle: AngleLike): Arc {\n    sweepAngle = Angle.fromLike(sweepAngle);\n    if (this.sweepAngle.equals(sweepAngle)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                     sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly padAngle: Angle;\n\n  withPadAngle(padAngle: AngleLike): Arc {\n    padAngle = Angle.fromLike(padAngle);\n    if (this.padAngle.equals(padAngle)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                     this.sweepAngle, padAngle, this.padRadius, this.cornerRadius);\n  }\n\n  readonly padRadius: Length | null;\n\n  withPadRadius(padRadius: LengthLike | null): Arc {\n    if (padRadius !== null) {\n      padRadius = Length.fromLike(padRadius);\n    }\n    if (Equals(this.padRadius, padRadius)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                     this.sweepAngle, this.padAngle, padRadius, this.cornerRadius);\n  }\n\n  readonly cornerRadius: Length;\n\n  withCornerRadius(cornerRadius: LengthLike): Arc {\n    cornerRadius = Length.fromLike(cornerRadius);\n    if (this.cornerRadius.equals(cornerRadius)) {\n      return this;\n    }\n    return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                     this.sweepAngle, this.padAngle, this.padRadius, cornerRadius);\n  }\n\n  render(): string;\n  render(renderer: GraphicsRenderer, frame?: R2Box): void;\n  render(renderer?: GraphicsRenderer, frame?: R2Box): string | void {\n    if (renderer === void 0) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      this.draw(context, frame);\n      return context.toString();\n    } else if (renderer instanceof PathRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: DrawingContext, frame?: R2Box): void {\n    this.renderArc(context, frame);\n  }\n\n  protected renderArc(context: DrawingContext, frame: R2Box | undefined): void {\n    let size: number | undefined;\n    if (frame !== void 0) {\n      size = Math.min(frame.width, frame.height);\n    }\n\n    const center = this.center;\n    const cx = center.x;\n    const cy = center.y;\n    let r0 = this.innerRadius.pxValue(size);\n    let r1 = this.outerRadius.pxValue(size);\n    const a0 = this.startAngle.radValue();\n    const da = this.sweepAngle.radValue();\n    const a1 = a0 + da;\n    const cw = da >= 0;\n\n    if (r1 < r0) {\n      // swap inner and outer radii\n      const r = r1;\n      r1 = r0;\n      r0 = r;\n    }\n\n    if (!(r1 > Arc.Epsilon)) {\n      // degenerate point\n      context.moveTo(cx, cy);\n    } else if (da > 2 * Math.PI - Arc.Epsilon) {\n      // full circle or annulus\n      context.moveTo(cx + r1 * Math.cos(a0), cy + r1 * Math.sin(a0));\n      context.arc(cx, cy, r1, a0, a1, !cw);\n      if (r0 > Arc.Epsilon) {\n        context.moveTo(cx + r0 * Math.cos(a1), cy + r0 * Math.sin(a1));\n        context.arc(cx, cy, r0, a1, a0, cw);\n      }\n    } else {\n      // circular or annular sector\n      let a01 = a0;\n      let a11 = a1;\n      let a00 = a0;\n      let a10 = a1;\n      let da0 = da;\n      let da1 = da;\n      const ap = (this.padAngle.radValue()) / 2;\n      const rp = +(ap > Arc.Epsilon) && (this.padRadius !== null ? this.padRadius.pxValue(size) : Math.sqrt(r0 * r0 + r1 * r1));\n      const rc = Math.min(Math.abs(r1 - r0) / 2, this.cornerRadius.pxValue(size));\n      let rc0 = rc;\n      let rc1 = rc;\n\n      if (rp > Arc.Epsilon) {\n        // apply padding\n        let p0 = Math.asin(rp / r0 * Math.sin(ap));\n        let p1 = Math.asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > Arc.Epsilon) {\n          p0 *= cw ? 1 : -1;\n          a00 += p0;\n          a10 -= p0;\n        } else {\n          da0 = 0;\n          a00 = a10 = (a0 + a1) / 2;\n        }\n        if ((da1 -= p1 * 2) > Arc.Epsilon) {\n          p1 *= cw ? 1 : -1;\n          a01 += p1;\n          a11 -= p1;\n        } else {\n          da1 = 0;\n          a01 = a11 = (a0 + a1) / 2;\n        }\n      }\n\n      let x00: number | undefined;\n      let y00: number | undefined;\n      const x01 = r1 * Math.cos(a01);\n      const y01 = r1 * Math.sin(a01);\n      const x10 = r0 * Math.cos(a10);\n      const y10 = r0 * Math.sin(a10);\n      let x11: number | undefined;\n      let y11: number | undefined;\n\n      if (rc > Arc.Epsilon) {\n        // rounded corners\n        x11 = r1 * Math.cos(a11);\n        y11 = r1 * Math.sin(a11);\n        x00 = r0 * Math.cos(a00);\n        y00 = r0 * Math.sin(a00);\n\n        if (da < Math.PI) {\n          // limit corner radius to sector angle\n          const oc = da0 > Arc.Epsilon ? Arc.intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10];\n          const ax = x01 - oc[0]!;\n          const ay = y01 - oc[1]!;\n          const bx = x11 - oc[0]!;\n          const by = y11 - oc[1]!;\n          const kc = 1 / Math.sin(0.5 * Math.acos((ax * bx + ay * by) /\n                                                  (Math.sqrt(ax * ax + ay * ay) *\n                                                   Math.sqrt(bx * bx + by * by))));\n          const lc = Math.sqrt(oc[0]! * oc[0]! + oc[1]! * oc[1]!);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      if (!(da1 > Arc.Epsilon)) {\n        // collapsed sector\n        context.moveTo(cx + x01, cy + y01);\n      } else if (rc1 > Arc.Epsilon) {\n        // rounded outer corners\n        const t0 = Arc.cornerTangents(x00!, y00!, x01, y01, r1, rc1, cw);\n        const t1 = Arc.cornerTangents(x11!, y11!, x10, y10, r1, rc1, cw);\n\n        context.moveTo(cx + t0.cx + t0.x01, cy + t0.cy + t0.y01);\n\n        if (rc1 < rc) {\n          // draw merged outer corners\n          context.arc(cx + t0.cx, cy + t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n        } else {\n          // draw outer corners and arc\n          context.arc(cx + t0.cx, cy + t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(cx, cy, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11),\n                      Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(cx + t1.cx, cy + t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      } else {\n        // draw outer circular arc\n        context.moveTo(cx + x01, cy + y01);\n        context.arc(cx, cy, r1, a01, a11, !cw);\n      }\n\n      if (!(r0 > Arc.Epsilon) || !(da0 > Arc.Epsilon)) {\n        // collapsed sector\n        context.lineTo(cx + x10, cy + y10);\n      } else if (rc0 > Arc.Epsilon) {\n        // rounded inner corners\n        const t0 = Arc.cornerTangents(x10, y10, x11!, y11!, r0, -rc0, cw);\n        const t1 = Arc.cornerTangents(x01, y01, x00!, y00!, r0, -rc0, cw);\n\n        context.lineTo(cx + t0.cx + t0.x01, cy + t0.cy + t0.y01);\n\n        if (rc0 < rc) {\n          // draw merged inner corners\n          context.arc(cx + t0.cx, cy + t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n        } else {\n          // draw inner corners and arc\n          context.arc(cx + t0.cx, cy + t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(cx, cy, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11),\n                      Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(cx + t1.cx, cy + t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      } else {\n        // draw inner circular arc\n        context.arc(cx, cy, r0, a10, a00, cw);\n      }\n    }\n\n    context.closePath();\n  }\n\n  protected copy(center: R2Point, innerRadius: Length, outerRadius: Length, startAngle: Angle,\n                 sweepAngle: Angle, padAngle: Angle, padRadius: Length | null, cornerRadius: Length): Arc {\n    return new Arc(center, innerRadius, outerRadius, startAngle, sweepAngle, padAngle, padRadius, cornerRadius);\n  }\n\n  toLike(): ArcInit {\n    return {\n      center: this.center,\n      innerRadius: this.innerRadius,\n      outerRadius: this.outerRadius,\n      startAngle: this.startAngle,\n      sweepAngle: this.sweepAngle,\n      padAngle: this.padAngle,\n      padRadius: this.padRadius,\n      cornerRadius: this.cornerRadius,\n    };\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Arc) {\n      return this.center.equals(that.center)\n          && this.innerRadius.equals(that.innerRadius)\n          && this.outerRadius.equals(that.outerRadius)\n          && this.startAngle.equals(that.startAngle)\n          && this.sweepAngle.equals(that.sweepAngle)\n          && this.padAngle.equals(that.padAngle)\n          && Equals(this.padRadius, that.padRadius)\n          && this.cornerRadius.equals(that.cornerRadius);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Arc\").write(46/*'.'*/).write(\"create\").write(40/*'('*/).write(41/*')'*/);\n    if (this.center.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"center\").write(40/*'('*/).debug(this.center).write(41/*')'*/);\n    }\n    if (this.innerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"innerRadius\").write(40/*'('*/).debug(this.innerRadius).write(41/*')'*/);\n    }\n    if (this.outerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"outerRadius\").write(40/*'('*/).debug(this.outerRadius).write(41/*')'*/);\n    }\n    if (this.startAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"startAngle\").write(40/*'('*/).debug(this.startAngle).write(41/*')'*/);\n    }\n    if (this.sweepAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"sweepAngle\").write(40/*'('*/).debug(this.sweepAngle).write(41/*')'*/);\n    }\n    if (this.padAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"padAngle\").write(40/*'('*/).debug(this.padAngle).write(41/*')'*/);\n    }\n    if (this.padRadius !== null) {\n      output = output.write(46/*'.'*/).write(\"padRadius\").write(40/*'('*/).debug(this.padRadius).write(41/*')'*/);\n    }\n    if (this.cornerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"cornerRadius\").write(40/*'('*/).debug(this.cornerRadius).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(center: R2PointLike = R2Point.origin(),\n                innerRadius: LengthLike = Length.zero(),\n                outerRadius: LengthLike = Length.zero(),\n                startAngle: AngleLike = Angle.zero(),\n                sweepAngle: AngleLike = Angle.zero(),\n                padAngle: AngleLike = Angle.zero(),\n                padRadius: LengthLike | null = null,\n                cornerRadius: LengthLike = Length.zero()): Arc {\n    center = R2Point.fromLike(center);\n    innerRadius = Length.fromLike(innerRadius);\n    outerRadius = Length.fromLike(outerRadius);\n    startAngle = Angle.fromLike(startAngle);\n    sweepAngle = Angle.fromLike(sweepAngle);\n    padAngle = Angle.fromLike(padAngle);\n    padRadius = padRadius !== null ? Length.fromLike(padRadius) : null;\n    cornerRadius = Length.fromLike(cornerRadius);\n    return new Arc(center, innerRadius, outerRadius, startAngle,\n                   sweepAngle, padAngle, padRadius, cornerRadius);\n  }\n\n  static fromLike<T extends ArcLike | null | undefined>(value: T): Arc | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof Arc) {\n      return value as Arc | Uninitable<T>;\n    } else if (typeof value === \"object\") {\n      return Arc.create(value.center, value.innerRadius, value.outerRadius, value.startAngle,\n                        value.sweepAngle, value.padAngle, value.padRadius, value.cornerRadius);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  private static intersect(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number,\n                           x3: number, y3: number): [number, number] {\n    const x10 = x1 - x0;\n    const y10 = y1 - y0;\n    const x32 = x3 - x2;\n    const y32 = y3 - y2;\n    const t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  private static cornerTangents(x0: number, y0: number, x1: number, y1: number, r1: number, rc: number, cw: boolean)\n                             : {cx: number, cy: number, x01: number, y01: number, x11: number, y11: number} {\n    // http://mathworld.wolfram.com/Circle-LineIntersection.html\n    const x01 = x0 - x1;\n    const y01 = y0 - y1;\n    const lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01);\n    const ox = lo * y01;\n    const oy = -lo * x01;\n    const x11 = x0 + ox;\n    const y11 = y0 + oy;\n    const x10 = x1 + ox;\n    const y10 = y1 + oy;\n    const x00 = (x11 + x10) / 2;\n    const y00 = (y11 + y10) / 2;\n    const dx = x10 - x11;\n    const dy = y10 - y11;\n    const d2 = dx * dx + dy * dy;\n    const r = r1 - rc;\n    const D = x11 * y10 - x10 * y11;\n    const d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D));\n    let cx0 = (D * dy - dx * d) / d2;\n    let cy0 = (-D * dx - dy * d) / d2;\n    const cx1 = (D * dy + dx * d) / d2;\n    const cy1 = (-D * dx + dy * d) / d2;\n    const dx0 = cx0 - x00;\n    const dy0 = cy0 - y00;\n    const dx1 = cx1 - x00;\n    const dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n      // pick closest intersection\n      cx0 = cx1;\n      cy0 = cy1;\n    }\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1),\n    };\n  }\n\n  /** @internal */\n  static Epsilon: number = 1e-12;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {TimingLike} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport type {FillView} from \"./FillView\";\nimport type {StrokeView} from \"./StrokeView\";\nimport type {ArcInit} from \"./Arc\";\nimport {Arc} from \"./Arc\";\n\n/** @public */\nexport class ArcView extends GraphicsView implements FillView, StrokeView {\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly yAlign!: Animator<this, number>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  get value(): Arc {\n    return new Arc(this.center.value, this.innerRadius.value, this.outerRadius.value,\n                   this.startAngle.value, this.sweepAngle.value, this.padAngle.value,\n                   this.padRadius.value, this.cornerRadius.value);\n  }\n\n  get state(): Arc {\n    return new Arc(this.center.state, this.innerRadius.state, this.outerRadius.state,\n                   this.startAngle.state, this.sweepAngle.state, this.padAngle.state,\n                   this.padRadius.state, this.cornerRadius.state);\n  }\n\n  setState(arc: Arc | ArcInit, timing?: TimingLike | boolean): void {\n    if (arc instanceof Arc) {\n      arc = arc.toLike();\n    }\n    if (arc.center !== void 0) {\n      this.center.setState(arc.center, timing);\n    }\n    if (arc.innerRadius !== void 0) {\n      this.innerRadius.setState(arc.innerRadius, timing);\n    }\n    if (arc.outerRadius !== void 0) {\n      this.outerRadius.setState(arc.outerRadius, timing);\n    }\n    if (arc.startAngle !== void 0) {\n      this.startAngle.setState(arc.startAngle, timing);\n    }\n    if (arc.sweepAngle !== void 0) {\n      this.sweepAngle.setState(arc.sweepAngle, timing);\n    }\n    if (arc.padAngle !== void 0) {\n      this.padAngle.setState(arc.padAngle, timing);\n    }\n    if (arc.padRadius !== void 0) {\n      this.padRadius.setState(arc.padRadius, timing);\n    }\n    if (arc.cornerRadius !== void 0) {\n      this.cornerRadius.setState(arc.cornerRadius, timing);\n    }\n  }\n\n  protected layoutArc(): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const viewFrame = this.viewFrame;\n      const cx = viewFrame.xMin + viewFrame.width * this.xAlign.getValue();\n      const cy = viewFrame.yMin + viewFrame.height * this.yAlign.getValue();\n      this.center.setIntrinsic(new R2Point(cx, cy));\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.layoutArc();\n      this.renderArc(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderArc(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const arc = this.value;\n    context.beginPath();\n    arc.draw(context, frame);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  override get popoverFrame(): R2Box {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const center = this.center.getValue();\n    const px = inversePageTransform.transformX(center.x, center.y);\n    const py = inversePageTransform.transformY(center.x, center.y);\n    const r = (this.innerRadius.getValue().pxValue(size) + this.outerRadius.getValue().pxValue(size)) / 2;\n    const a = this.startAngle.getValue().radValue() + this.sweepAngle.getValue().radValue() / 2;\n    const x = px + r * Math.cos(a);\n    const y = py + r * Math.sin(a);\n    return new R2Box(x, y, x, y);\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      this.layoutArc();\n      return this.hitTestArc(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestArc(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const arc = this.value;\n    context.beginPath();\n    arc.draw(context, frame);\n\n    let strokeWidth: Length | null;\n    if (this.fill.value !== null && context.isPointInPath(x, y)) {\n      return this;\n    } else if (this.stroke.value === null || (strokeWidth = this.strokeWidth.value) === null) {\n      return null;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    const size = Math.min(frame.width, frame.height);\n    context.lineWidth = strokeWidth.pxValue(size);\n    const pointInStroke = context.isPointInStroke(x, y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n}\nObject.defineProperty(ArcView.prototype, \"viewBounds\", {\n  get(this: ArcView): R2Box {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const center = this.center.getValue();\n    const radius = this.outerRadius.getValue().pxValue(size);\n    return new R2Box(center.x - radius, center.y - radius,\n                     center.x + radius, center.y + radius);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Point} from \"@swim/math\";\nimport type {Font} from \"@swim/style\";\nimport type {Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsView} from \"./GraphicsView\";\n\n/** @public */\nexport interface TypesetView extends GraphicsView {\n  readonly font: ThemeAnimator<this, Font | null>;\n\n  readonly textAlign: ThemeAnimator<this, CanvasTextAlign | undefined>;\n\n  readonly textBaseline: ThemeAnimator<this, CanvasTextBaseline | undefined>;\n\n  readonly textOrigin: ThemeAnimator<this, R2Point | null>;\n\n  readonly textColor: ThemeAnimator<this, Color | null>;\n}\n\n/** @public */\nexport const TypesetView = {\n  [Symbol.hasInstance](instance: unknown): instance is TypesetView {\n    return instance instanceof GraphicsView\n          && \"font\" in instance\n          && \"textAlign\" in instance\n          && \"textBaseline\" in instance\n          && \"textOrigin\" in instance\n          && \"textColor\" in instance;\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport type {FontLike} from \"@swim/style\";\nimport {Font} from \"@swim/style\";\nimport type {ColorLike} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {Graphics} from \"./Graphics\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\n\n/** @public */\nexport type TextRunLike = TextRun | TextRunInit | string;\n\n/** @public */\nexport interface TextRunInit {\n  text: string;\n  font?: FontLike;\n  textAlign?: CanvasTextAlign;\n  textBaseline?: CanvasTextBaseline;\n  textOrigin?: R2PointLike;\n  textColor?: ColorLike;\n}\n\n/** @public */\nexport class TextRun implements Graphics, Equals, Debug {\n  constructor(text: string, font: Font | null, textAlign: CanvasTextAlign | null,\n              textBaseline: CanvasTextBaseline | null, textOrigin: R2Point | null,\n              textColor: Color | null) {\n    this.text = text;\n    this.font = font;\n    this.textAlign = textAlign;\n    this.textBaseline = textBaseline;\n    this.textOrigin = textOrigin;\n    this.textColor = textColor;\n  }\n\n  readonly text: string;\n\n  withText(text: string): TextRun {\n    if (this.text === text) {\n      return this;\n    }\n    return this.copy(text, this.font, this.textAlign,\n                     this.textBaseline, this.textOrigin, this.textColor);\n  }\n\n  readonly font: Font | null;\n\n  withFont(font: FontLike | null): TextRun {\n    font = Font.fromLike(font);\n    if (this.font === font) {\n      return this;\n    }\n    return this.copy(this.text, font, this.textAlign,\n                     this.textBaseline, this.textOrigin, this.textColor);\n  }\n\n  readonly textAlign: CanvasTextAlign | null;\n\n  withTextAlign(textAlign: CanvasTextAlign | null): TextRun {\n    if (this.textAlign === textAlign) {\n      return this;\n    }\n    return this.copy(this.text, this.font, textAlign,\n                     this.textBaseline, this.textOrigin, this.textColor);\n  }\n\n  readonly textBaseline: CanvasTextBaseline | null;\n\n  withTextBaseline(textBaseline: CanvasTextBaseline | null): TextRun {\n    if (this.textBaseline === textBaseline) {\n      return this;\n    }\n    return this.copy(this.text, this.font, this.textAlign,\n                     textBaseline, this.textOrigin, this.textColor);\n  }\n\n  readonly textOrigin: R2Point | null;\n\n  withTextOrigin(textOrigin: R2PointLike | null): TextRun | null {\n    textOrigin = R2Point.fromLike(textOrigin);\n    if (Equals(this.textOrigin, textOrigin)) {\n      return this;\n    }\n    return this.copy(this.text, this.font, this.textAlign,\n                     this.textBaseline, textOrigin, this.textColor);\n  }\n\n  readonly textColor: Color | null;\n\n  withTextColor(textColor: ColorLike | null): TextRun {\n    textColor = Color.fromLike(textColor);\n    if (Equals(this.textColor, textColor)) {\n      return this;\n    }\n    return this.copy(this.text, this.font, this.textAlign,\n                     this.textBaseline, this.textOrigin, textColor);\n  }\n\n  render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof CanvasRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: CanvasContext, frame: R2Box): void {\n    this.renderText(context, frame);\n  }\n\n  protected renderText(context: CanvasContext, frame: R2Box): void {\n    // save\n    const contextFont = context.font;\n    const contextTextAlign = context.textAlign;\n    const contextTextBaseline = context.textBaseline;\n    const contextFillStyle = context.fillStyle;\n\n    if (this.font !== null) {\n      context.font = this.font.toString();\n    }\n    if (this.textAlign !== null) {\n      context.textAlign = this.textAlign;\n    }\n    if (this.textBaseline !== null) {\n      context.textBaseline = this.textBaseline;\n    }\n    if (this.textColor !== null) {\n      context.fillStyle = this.textColor.toString();\n    }\n    let textOrigin = this.textOrigin;\n    if (textOrigin === null) {\n      textOrigin = R2Point.origin();\n    }\n    context.fillText(this.text, textOrigin.x, textOrigin.y);\n\n    // restore\n    context.font = contextFont;\n    context.textAlign = contextTextAlign;\n    context.textBaseline = contextTextBaseline;\n    context.fillStyle = contextFillStyle;\n  }\n\n  protected copy(text: string, font: Font | null, textAlign: CanvasTextAlign | null,\n                 textBaseline: CanvasTextBaseline | null, textOrigin: R2Point | null,\n                 textColor: Color | null): TextRun {\n    return new TextRun(text, font, textAlign, textBaseline, textOrigin, textColor);\n  }\n\n  toLike(): TextRunInit {\n    const init: TextRunInit = {text: this.text};\n    init.text = this.text;\n    if (this.font !== null) {\n      init.font = this.font;\n    }\n    if (this.font !== null) {\n      init.font = this.font;\n    }\n    if (this.textAlign !== null) {\n      init.textAlign = this.textAlign;\n    }\n    if (this.textBaseline !== null) {\n      init.textBaseline = this.textBaseline;\n    }\n    if (this.textOrigin !== null) {\n      init.textOrigin = this.textOrigin;\n    }\n    if (this.textColor !== null) {\n      init.textColor = this.textColor;\n    }\n    return init;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TextRun) {\n      return this.text === that.text\n          && Equals(this.font, that.font)\n          && this.textAlign === that.textAlign\n          && this.textBaseline === that.textBaseline\n          && Equals(this.textOrigin, that.textOrigin)\n          && Equals(this.textColor, that.textColor);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"TextRun\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.text).write(41/*')'*/);\n    if (this.font !== null) {\n      output = output.write(46/*'.'*/).write(\"font\").write(40/*'('*/).debug(this.font).write(41/*')'*/);\n    }\n    if (this.textAlign !== null) {\n      output = output.write(46/*'.'*/).write(\"textAlign\").write(40/*'('*/).debug(this.textAlign).write(41/*')'*/);\n    }\n    if (this.textBaseline !== null) {\n      output = output.write(46/*'.'*/).write(\"textBaseline\").write(40/*'('*/).debug(this.textBaseline).write(41/*')'*/);\n    }\n    if (this.textOrigin !== null) {\n      output = output.write(46/*'.'*/).write(\"textOrigin\").write(40/*'('*/).debug(this.textOrigin).write(41/*')'*/);\n    }\n    if (this.textColor !== null) {\n      output = output.write(46/*'.'*/).write(\"textColor\").write(40/*'('*/).debug(this.textColor).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(text: string,\n                font: FontLike | null = null,\n                textAlign: CanvasTextAlign | null = null,\n                textBaseline: CanvasTextBaseline | null = null,\n                textOrigin: R2PointLike | null = null,\n                textColor: ColorLike | null = null): TextRun {\n    font = Font.fromLike(font);\n    textOrigin = R2Point.fromLike(textOrigin);\n    textColor = Color.fromLike(textColor);\n    return new TextRun(text, font, textAlign, textBaseline, textOrigin, textColor);\n  }\n\n  static fromLike<T extends TextRunLike | null | undefined>(value: T): TextRun | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof TextRun) {\n      return value as TextRun | Uninitable<T>;\n    } else if (typeof value === \"string\") {\n      return TextRun.create(value);\n    } else if (typeof value === \"object\") {\n      return TextRun.create(value.text, value.font, value.textAlign, value.textBaseline,\n                            value.textOrigin, value.textColor);\n    }\n    throw new TypeError(\"\" + value);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {TimingLike} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {R2Point} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport type {CanvasContext} from \"./CanvasContext\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport type {TypesetView} from \"./TypesetView\";\nimport type {TextRunInit} from \"./TextRun\";\nimport {TextRun} from \"./TextRun\";\n\n/** @public */\nexport class TextRunView extends GraphicsView implements TypesetView {\n  @Animator({valueType: String, value: \"\", updateFlags: View.NeedsRender})\n  readonly text!: Animator<this, string>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: String, inherits: true, updateFlags: View.NeedsRender})\n  readonly textAlign!: ThemeAnimator<this, CanvasTextAlign | undefined>;\n\n  @ThemeAnimator({valueType: String, inherits: true, updateFlags: View.NeedsRender})\n  readonly textBaseline!: ThemeAnimator<this, CanvasTextBaseline | undefined>;\n\n  @ThemeAnimator({valueType: R2Point, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly textOrigin!: ThemeAnimator<this, R2Point | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  get value(): TextRun {\n    return new TextRun(this.text.getValue(), this.font.getValue(), this.textAlign.getValue(),\n                       this.textBaseline.getValue(), this.textOrigin.getValue(), this.textColor.getValue());\n  }\n\n  get state(): TextRun {\n    return new TextRun(this.text.getState(), this.font.getState(), this.textAlign.getState(),\n                       this.textBaseline.getState(), this.textOrigin.getState(), this.textColor.getState());\n  }\n\n  setState(run: TextRun | TextRunInit | string, timing?: TimingLike | boolean): void {\n    if (typeof run === \"string\") {\n      this.text.setState(run, timing);\n    } else {\n      if (run instanceof TextRun) {\n        run = run.toLike();\n      }\n      if (run.text !== void 0) {\n        this.text.setState(run.text, timing);\n      }\n      if (run.font !== void 0) {\n        this.font.setState(run.font, timing);\n      }\n      if (run.textAlign !== void 0) {\n        this.textAlign.setState(run.textAlign, timing);\n      }\n      if (run.textBaseline !== void 0) {\n        this.textBaseline.setState(run.textBaseline, timing);\n      }\n      if (run.textOrigin !== void 0) {\n        this.textOrigin.setState(run.textOrigin, timing);\n      }\n      if (run.textColor !== void 0) {\n        this.textColor.setState(run.textColor, timing);\n      }\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderText(renderer.context);\n    }\n  }\n\n  protected renderText(context: CanvasContext): void {\n    // save\n    const contextFont = context.font;\n    const contextTextAlign = context.textAlign;\n    const contextTextBaseline = context.textBaseline;\n    const contextFillStyle = context.fillStyle;\n\n    const font = this.font.value;\n    if (font !== null) {\n      context.font = font.toString();\n    }\n    const textAlign = this.textAlign.value;\n    if (textAlign !== void 0) {\n      context.textAlign = textAlign;\n    }\n    const textBaseline = this.textBaseline.value;\n    if (textBaseline !== void 0) {\n      context.textBaseline = textBaseline;\n    }\n    const textColor = this.textColor.value;\n    if (textColor !== null) {\n      context.fillStyle = textColor.toString();\n    }\n    let textOrigin = this.textOrigin.value;\n    if (textOrigin === null) {\n      textOrigin = R2Point.origin();\n    }\n    context.fillText(this.text.getValue(), textOrigin.x, textOrigin.y);\n\n    // restore\n    context.font = contextFont;\n    context.textAlign = contextTextAlign;\n    context.textBaseline = contextTextBaseline;\n    context.fillStyle = contextFillStyle;\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {Murmur3} from \"@swim/util\";\nimport {Numbers} from \"@swim/util\";\nimport {Constructors} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {HashCode} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\n\n/** @public */\nexport type IconLayoutLike = IconLayout | IconLayoutInit;\n\n/** @public */\nexport const IconLayoutLike = {\n  [Symbol.hasInstance](instance: unknown): instance is IconLayoutLike {\n    return instance instanceof IconLayout\n        || IconLayoutInit[Symbol.hasInstance](instance);\n  },\n};\n\n/** @public */\nexport interface IconLayoutInit {\n  /** @internal */\n  readonly typeid?: \"IconLayoutInit\";\n  width: LengthLike;\n  height: LengthLike;\n  xAlign?: number;\n  yAlign?: number;\n}\n\n/** @public */\nexport const IconLayoutInit = {\n  [Symbol.hasInstance](instance: unknown): instance is IconLayoutInit {\n    return Objects.hasAllKeys<IconLayoutInit>(instance, \"width\", \"height\");\n  },\n};\n\n/** @public */\nexport class IconLayout implements Interpolate<IconLayout>, Equivalent, HashCode, Debug {\n  constructor(width: Length, height: Length, xAlign: number, yAlign: number) {\n    this.width = width;\n    this.height = height;\n    this.xAlign = xAlign;\n    this.yAlign = yAlign;\n  }\n\n  /** @internal */\n  declare readonly typeid?: \"IconLayout\";\n\n  likeType?(like: IconLayoutInit): void;\n\n  readonly width: Length;\n\n  withWidth(width: LengthLike): IconLayout {\n    width = Length.fromLike(width);\n    if (width.equals(this.width)) {\n      return this;\n    }\n    return this.copy(width, this.height, this.xAlign, this.yAlign);\n  }\n\n  readonly height: Length;\n\n  withHeight(height: LengthLike): IconLayout {\n    height = Length.fromLike(height);\n    if (height.equals(this.height)) {\n      return this;\n    }\n    return this.copy(this.width, height, this.xAlign, this.yAlign);\n  }\n\n  withSize(width: LengthLike, height: LengthLike): IconLayout {\n    width = Length.fromLike(width);\n    height = Length.fromLike(height);\n    if (width.equals(this.width) && height.equals(this.height)) {\n      return this;\n    }\n    return this.copy(width, height, this.xAlign, this.yAlign);\n  }\n\n  readonly xAlign: number;\n\n  withXAlign(xAlign: number): IconLayout {\n    if (xAlign === this.xAlign) {\n      return this;\n    }\n    return this.copy(this.width, this.height, xAlign, this.yAlign);\n  }\n\n  readonly yAlign: number;\n\n  withYAlign(yAlign: number): IconLayout {\n    if (yAlign === this.yAlign) {\n      return this;\n    }\n    return this.copy(this.width, this.height, this.xAlign, yAlign);\n  }\n\n  withAlign(xAlign: number, yAlign: number): IconLayout {\n    if (xAlign === this.xAlign && yAlign === this.yAlign) {\n      return this;\n    }\n    return this.copy(this.width, this.height, xAlign, yAlign);\n  }\n\n  toLike(): IconLayoutInit {\n    return {\n      width: this.width,\n      height: this.height,\n      xAlign: this.xAlign,\n      yAlign: this.yAlign,\n    };\n  }\n\n  protected copy(width: Length, height: Length, xAlign: number, yAlign: number): IconLayout {\n    return new IconLayout(width, height, xAlign, yAlign);\n  }\n\n  /** @override */\n  interpolateTo(that: IconLayout): Interpolator<IconLayout>;\n  interpolateTo(that: unknown): Interpolator<IconLayout> | null;\n  interpolateTo(that: unknown): Interpolator<IconLayout> | null {\n    if (that instanceof IconLayout) {\n      return IconLayoutInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof IconLayout) {\n      return this.width.equivalentTo(that.width, epsilon)\n          && this.height.equivalentTo(that.height, epsilon)\n          && Numbers.equivalent(this.xAlign, that.xAlign, epsilon)\n          && Numbers.equivalent(this.yAlign, that.yAlign, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof IconLayout) {\n      return this.width.equals(that.width) && this.height.equals(that.height)\n          && this.xAlign === that.xAlign && this.yAlign === that.yAlign;\n    }\n    return false;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(IconLayout), this.width.hashCode()), this.height.hashCode()),\n        Numbers.hash(this.xAlign)), Numbers.hash(this.yAlign)));\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"IconLayout\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n                   .debug(this.width).write(\", \").debug(this.height).write(\", \")\n                   .debug(this.xAlign).write(\", \").debug(this.yAlign).write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(width: LengthLike, height: LengthLike, xAlign?: number, yAlign?: number): IconLayout {\n    width = Length.fromLike(width);\n    height = Length.fromLike(height);\n    if (xAlign === void 0) {\n      xAlign = 0.5;\n    }\n    if (yAlign === void 0) {\n      yAlign = 0.5;\n    }\n    return new IconLayout(width, height, xAlign, yAlign);\n  }\n\n  static fromLike<T extends IconLayoutLike | null | undefined>(value: T): IconLayout | Uninitable<T> {\n    if (value === void 0 || value === null || value instanceof IconLayout) {\n      return value as IconLayout | Uninitable<T>;\n    } else if (IconLayoutInit[Symbol.hasInstance](value)) {\n      return IconLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: IconLayoutInit): IconLayout {\n    const width = Length.fromLike(init.width);\n    const height = Length.fromLike(init.height);\n    let xAlign = init.xAlign;\n    let yAlign = init.yAlign;\n    if (xAlign === void 0) {\n      xAlign = 0.5;\n    }\n    if (yAlign === void 0) {\n      yAlign = 0.5;\n    }\n    return new IconLayout(width, height, xAlign, yAlign);\n  }\n}\n\n/** @internal */\nexport const IconLayoutInterpolator = (function (_super: typeof Interpolator) {\n  const IconLayoutInterpolator = function (l0: IconLayout, l1: IconLayout): Interpolator<IconLayout> {\n    const interpolator = function (u: number): IconLayout {\n      const l0 = interpolator[0];\n      const l1 = interpolator[1];\n      const width = Length.of(l0.width.value + u * (l1.width.value - l0.width.value), l1.width.units);\n      const height = Length.of(l0.height.value + u * (l1.height.value - l0.height.value), l1.height.units);\n      const xAlign = l0.xAlign + u * (l1.xAlign - l0.xAlign);\n      const yAlign = l0.yAlign + u * (l1.yAlign - l0.yAlign);\n      return new IconLayout(width, height, xAlign, yAlign);\n    } as Interpolator<IconLayout>;\n    Object.setPrototypeOf(interpolator, IconLayoutInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = l0.width.units === l1.width.units && l0.height.units === l1.height.units\n                                                      ? l0 : new IconLayout(l0.width.to(l1.width.units), l0.height.to(l1.height.units), l0.xAlign, l0.yAlign);\n    (interpolator as Mutable<typeof interpolator>)[1] = l1;\n    return interpolator;\n  } as {\n    (l0: IconLayout, l1: IconLayout): Interpolator<IconLayout>;\n\n    /** @internal */\n    prototype: Interpolator<IconLayout>;\n  };\n\n  IconLayoutInterpolator.prototype = Object.create(_super.prototype);\n  IconLayoutInterpolator.prototype.constructor = IconLayoutInterpolator;\n\n  return IconLayoutInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Box} from \"@swim/math\";\nimport type {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {Graphics} from \"./Graphics\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport type {PaintingContext} from \"./PaintingContext\";\n\n/** @public */\nexport abstract class Icon implements Graphics {\n  abstract readonly moodModifier: MoodMatrix | null;\n\n  abstract withMoodModifier(moodModifier: MoodMatrix | null): Icon;\n\n  abstract modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): Icon;\n\n  abstract isThemed(): boolean;\n\n  abstract withTheme(theme: ThemeMatrix, mood: MoodVector): Icon;\n\n  abstract render(renderer: GraphicsRenderer, frame: R2Box): void;\n\n  abstract paint(context: PaintingContext, frame: R2Box): void;\n\n  abstract draw(context: DrawingContext, frame: R2Box): void;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Color} from \"@swim/style\";\nimport type {Look} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {Icon} from \"./Icon\";\n\n/** @public */\nexport abstract class FilledIcon extends Icon {\n  abstract readonly fillColor: Color | null;\n\n  abstract withFillColor(fillColor: Color | null): FilledIcon;\n\n  abstract readonly fillLook: Look<Color> | null;\n\n  abstract withFillLook(fillLook: Look<Color> | null): FilledIcon;\n\n  abstract override withMoodModifier(moodModifier: MoodMatrix | null): FilledIcon;\n\n  abstract override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): FilledIcon;\n\n  abstract override withTheme(theme: ThemeMatrix, mood: MoodVector): FilledIcon;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {R2PathLike} from \"@swim/math\";\nimport {R2Path} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PaintingFillRule} from \"./PaintingContext\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\n\n/** @public */\nexport class VectorIcon extends FilledIcon implements Interpolate<VectorIcon>, Equals, Equivalent, Debug {\n  constructor(path: R2Path, fillRule: PaintingFillRule, fillColor: Color | null,\n              fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.path = path;\n    this.fillRule = fillRule;\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  readonly path: R2Path;\n\n  readonly fillRule: PaintingFillRule;\n\n  withFillRule(fillRule: PaintingFillRule): VectorIcon {\n    if (Equals(this.fillRule, fillRule)) {\n      return this;\n    }\n    return this.copy(this.path, fillRule, this.fillColor,\n                     this.fillLook, this.moodModifier);\n  }\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): VectorIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    }\n    return this.copy(this.path, this.fillRule, fillColor,\n                     this.fillLook, this.moodModifier);\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): VectorIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    }\n    return this.copy(this.path, this.fillRule, this.fillColor,\n                     fillLook, this.moodModifier);\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): VectorIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    }\n    return this.copy(this.path, this.fillRule, this.fillColor,\n                     this.fillLook, moodModifier);\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): VectorIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (newMoodModifier.equals(oldMoodModifier)) {\n      return this;\n    }\n    return this.withMoodModifier(newMoodModifier);\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): VectorIcon {\n    const fillLook = this.fillLook;\n    if (fillLook === null) {\n      return this;\n    }\n    const moodModifier = this.moodModifier;\n    if (moodModifier !== null) {\n      mood = moodModifier.timesCol(mood, true);\n    }\n    return this.withFillColor(theme.getOr(fillLook, mood, null));\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.globalAlpha = this.fillColor.alpha();\n      context.fillStyle = this.fillColor.toHexString();\n    }\n    context.fill(this.fillRule);\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const transform = Transform.scale(frame.width, frame.height).translate(frame.x, frame.y);\n    this.path.transformDraw(context, transform);\n  }\n\n  protected copy(path: R2Path, fillRule: PaintingFillRule, fillColor: Color | null,\n                 fillLook: Look<Color> | null, moodModifier: MoodMatrix | null): VectorIcon {\n    return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n  }\n\n  /** @override */\n  interpolateTo(that: VectorIcon): Interpolator<VectorIcon>;\n  interpolateTo(that: unknown): Interpolator<VectorIcon> | null;\n  interpolateTo(that: unknown): Interpolator<VectorIcon> | null {\n    if (that instanceof VectorIcon) {\n      return VectorIconInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIcon) {\n      return this.path.equivalentTo(that.path, epsilon)\n          && this.fillRule === that.fillRule\n          && Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIcon) {\n      return this.path.equals(that.path)\n          && this.fillRule === that.fillRule\n          && Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"VectorIcon\").write(40/*'('*/)\n                   .debug(this.path).write(\", \")\n                   .debug(this.fillRule).write(\", \")\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(width: number, height: number, path: R2PathLike,\n                fillRule?: PaintingFillRule): VectorIcon {\n    path = R2Path.fromLike(path);\n    if (width !== 1 || height !== 1) {\n      path = path.transform(Transform.scale(1 / width, 1 / height));\n    }\n    if (fillRule === void 0) {\n      fillRule = \"nonzero\";\n    }\n    return new VectorIcon(path, fillRule, null, Look.iconColor, null);\n  }\n}\n\n/** @internal */\nexport interface VectorIconInterpolator extends Interpolator<VectorIcon> {\n  /** @internal */\n  readonly path: R2Path;\n\n  /** @internal */\n  readonly fillRule: PaintingFillRule;\n\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: VectorIcon;\n\n  readonly 1: VectorIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const VectorIconInterpolator = (function (_super: typeof Interpolator) {\n  const VectorIconInterpolator = function (i0: VectorIcon, i1: VectorIcon): VectorIconInterpolator {\n    const interpolator = function (u: number): VectorIcon {\n      const path = interpolator.path;\n      const fillRule = interpolator.fillRule;\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    } as VectorIconInterpolator;\n    Object.setPrototypeOf(interpolator, VectorIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).path = i1.path;\n    (interpolator as Mutable<typeof interpolator>).fillRule = i1.fillRule;\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: VectorIcon, i1: VectorIcon): VectorIconInterpolator;\n\n    /** @internal */\n    prototype: VectorIconInterpolator;\n  };\n\n  VectorIconInterpolator.prototype = Object.create(_super.prototype);\n  VectorIconInterpolator.prototype.constructor = VectorIconInterpolator;\n\n  Object.defineProperty(VectorIconInterpolator.prototype, 0, {\n    get(this: VectorIconInterpolator): VectorIcon {\n      const path = this.path;\n      const fillRule = this.fillRule;\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(VectorIconInterpolator.prototype, 1, {\n    get(this: VectorIconInterpolator): VectorIcon {\n      const path = this.path;\n      const fillRule = this.fillRule;\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  VectorIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIconInterpolator) {\n      return this.path.equals(that.path)\n          && this.fillRule === that.fillRule\n          && this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return VectorIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\n\n/** @public */\nexport class CircleIcon extends FilledIcon implements Interpolate<CircleIcon>, Equals, Equivalent, Debug {\n  constructor(fillColor: Color | null, fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): CircleIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    }\n    return this.copy(fillColor, this.fillLook, this.moodModifier);\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): CircleIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    }\n    return this.copy(this.fillColor, fillLook, this.moodModifier);\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): CircleIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    }\n    return this.copy(this.fillColor, this.fillLook, moodModifier);\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): CircleIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (newMoodModifier.equals(oldMoodModifier)) {\n      return this;\n    }\n    return this.withMoodModifier(newMoodModifier);\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): CircleIcon {\n    const fillLook = this.fillLook;\n    if (fillLook === null) {\n      return this;\n    }\n    const moodModifier = this.moodModifier;\n    if (moodModifier !== null) {\n      mood = moodModifier.timesCol(mood, true);\n    }\n    return this.withFillColor(theme.getOr(fillLook, mood, null));\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.globalAlpha = this.fillColor.alpha();\n      context.fillStyle = this.fillColor.toHexString();\n    }\n    context.fill();\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const centerX = (frame.xMin + frame.xMax) / 2;\n    const centerY = (frame.yMin + frame.yMax) / 2;\n    const width = frame.width;\n    const height = frame.height;\n    const radius = Math.min(width, height) / 2;\n    context.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    context.closePath();\n  }\n\n  protected copy(fillColor: Color | null, fillLook: Look<Color> | null,\n                 moodModifier: MoodMatrix | null): CircleIcon {\n    return new CircleIcon(fillColor, fillLook, moodModifier);\n  }\n\n  /** @override */\n  interpolateTo(that: CircleIcon): Interpolator<CircleIcon>;\n  interpolateTo(that: unknown): Interpolator<CircleIcon> | null;\n  interpolateTo(that: unknown): Interpolator<CircleIcon> | null {\n    if (that instanceof CircleIcon) {\n      return CircleIconInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIcon) {\n      return Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIcon) {\n      return Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"CircleIcon\").write(40/*'('*/)\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(): CircleIcon {\n    return new CircleIcon(null, Look.accentColor, null);\n  }\n}\n\n/** @internal */\nexport interface CircleIconInterpolator extends Interpolator<CircleIcon> {\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: CircleIcon;\n\n  readonly 1: CircleIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const CircleIconInterpolator = (function (_super: typeof Interpolator) {\n  const CircleIconInterpolator = function (i0: CircleIcon, i1: CircleIcon): CircleIconInterpolator {\n    const interpolator = function (u: number): CircleIcon {\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    } as CircleIconInterpolator;\n    Object.setPrototypeOf(interpolator, CircleIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: CircleIcon, i1: CircleIcon): CircleIconInterpolator;\n\n    /** @internal */\n    prototype: CircleIconInterpolator;\n  };\n\n  CircleIconInterpolator.prototype = Object.create(_super.prototype);\n  CircleIconInterpolator.prototype.constructor = CircleIconInterpolator;\n\n  Object.defineProperty(CircleIconInterpolator.prototype, 0, {\n    get(this: CircleIconInterpolator): CircleIcon {\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(CircleIconInterpolator.prototype, 1, {\n    get(this: CircleIconInterpolator): CircleIcon {\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  CircleIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIconInterpolator) {\n      return this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return CircleIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {AngleLike} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\n\n/** @public */\nexport class PolygonIcon extends FilledIcon implements Interpolate<PolygonIcon>, Equals, Equivalent, Debug {\n  constructor(sides: number, rotation: Angle, fillColor: Color | null,\n              fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.sides = sides;\n    this.rotation = rotation;\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  readonly sides: number;\n\n  readonly rotation: Angle;\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): PolygonIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    }\n    return this.copy(this.sides, this.rotation, fillColor,\n                     this.fillLook, this.moodModifier);\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): PolygonIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    }\n    return this.copy(this.sides, this.rotation, this.fillColor,\n                     fillLook, this.moodModifier);\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): PolygonIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    }\n    return this.copy(this.sides, this.rotation, this.fillColor,\n                     this.fillLook, moodModifier);\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): PolygonIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (newMoodModifier.equals(oldMoodModifier)) {\n      return this;\n    }\n    return this.withMoodModifier(newMoodModifier);\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): PolygonIcon {\n    const fillLook = this.fillLook;\n    if (fillLook === null) {\n      return this;\n    }\n    const moodModifier = this.moodModifier;\n    if (moodModifier !== null) {\n      mood = moodModifier.timesCol(mood, true);\n    }\n    return this.withFillColor(theme.getOr(fillLook, mood, null));\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.globalAlpha = this.fillColor.alpha();\n      context.fillStyle = this.fillColor.toHexString();\n    }\n    context.fill();\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const sides = this.sides;\n    if (sides < 3) {\n      return;\n    }\n    const centerX = (frame.xMin + frame.xMax) / 2;\n    const centerY = (frame.yMin + frame.yMax) / 2;\n    const width = frame.width;\n    const height = frame.height;\n    const radius = Math.min(width, height) / 2;\n    const sector = 2 * Math.PI / sides;\n    let angle = this.rotation.radValue();\n    context.moveTo(centerX + radius * Math.cos(angle),\n                   centerY + radius * Math.sin(angle));\n    angle += sector;\n    for (let i = 1; i < sides; i += 1) {\n      context.lineTo(centerX + radius * Math.cos(angle),\n                     centerY + radius * Math.sin(angle));\n      angle += sector;\n    }\n    context.closePath();\n  }\n\n  protected copy(sides: number, rotation: Angle, fillColor: Color | null,\n                 fillLook: Look<Color> | null, moodModifier: MoodMatrix | null): PolygonIcon {\n    return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n  }\n\n  /** @override */\n  interpolateTo(that: PolygonIcon): Interpolator<PolygonIcon>;\n  interpolateTo(that: unknown): Interpolator<PolygonIcon> | null;\n  interpolateTo(that: unknown): Interpolator<PolygonIcon> | null {\n    if (that instanceof PolygonIcon) {\n      return PolygonIconInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIcon) {\n      return this.sides === that.sides\n          && this.rotation.equivalentTo(that.rotation, epsilon)\n          && Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIcon) {\n      return this.sides === that.sides\n          && this.rotation.equals(that.rotation)\n          && Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"PolygonIcon\").write(40/*'('*/)\n                   .debug(this.sides).write(\", \")\n                   .debug(this.rotation).write(\", \")\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(sides: number, rotation?: AngleLike): PolygonIcon {\n    if (rotation !== void 0) {\n      rotation = Angle.fromLike(rotation);\n    } else {\n      rotation = Angle.zero();\n    }\n    return new PolygonIcon(sides, rotation, null, Look.accentColor, null);\n  }\n}\n\n/** @internal */\nexport interface PolygonIconInterpolator extends Interpolator<PolygonIcon> {\n  /** @internal */\n  readonly sides: number;\n\n  /** @internal */\n  readonly rotationInterpolator: Interpolator<Angle>;\n\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: PolygonIcon;\n\n  readonly 1: PolygonIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const PolygonIconInterpolator = (function (_super: typeof Interpolator) {\n  const PolygonIconInterpolator = function (i0: PolygonIcon, i1: PolygonIcon): PolygonIconInterpolator {\n    const interpolator = function (u: number): PolygonIcon {\n      const sides = interpolator.sides;\n      const rotation = interpolator.rotationInterpolator(u);\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    } as PolygonIconInterpolator;\n    Object.setPrototypeOf(interpolator, PolygonIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).sides = i1.sides;\n    (interpolator as Mutable<typeof interpolator>).rotationInterpolator = i0.rotation.interpolateTo(i1.rotation);\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: PolygonIcon, i1: PolygonIcon): PolygonIconInterpolator;\n\n    /** @internal */\n    prototype: PolygonIconInterpolator;\n  };\n\n  PolygonIconInterpolator.prototype = Object.create(_super.prototype);\n  PolygonIconInterpolator.prototype.constructor = PolygonIconInterpolator;\n\n  Object.defineProperty(PolygonIconInterpolator.prototype, 0, {\n    get(this: PolygonIconInterpolator): PolygonIcon {\n      const sides = this.sides;\n      const rotation = this.rotationInterpolator[0];\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PolygonIconInterpolator.prototype, 1, {\n    get(this: PolygonIconInterpolator): PolygonIcon {\n      const sides = this.sides;\n      const rotation = this.rotationInterpolator[1];\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  PolygonIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIconInterpolator) {\n      return this.sides === that.sides\n          && this.rotationInterpolator.equals(that.rotationInterpolator)\n          && this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return PolygonIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport {R2Box} from \"@swim/math\";\nimport {Feel} from \"@swim/theme\";\nimport type {MoodVectorUpdates} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport {MoodMatrix} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\nimport {DrawingRenderer} from \"./DrawingRenderer\";\nimport type {PaintingContext} from \"./PaintingContext\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport {Icon} from \"./Icon\";\n\n/** @public */\nexport class EnclosedIcon extends Icon implements Interpolate<EnclosedIcon>, Equals, Equivalent, Debug {\n  constructor(outer: Icon | null, inner: Icon | null, innerScale: number, moodModifier: MoodMatrix | null,\n              outerMoodModifier: MoodMatrix | null, innerMoodModifier: MoodMatrix | null) {\n    super();\n    this.outer = outer;\n    this.inner = inner;\n    this.innerScale = innerScale;\n    this.moodModifier = moodModifier;\n    this.outerMoodModifier = outerMoodModifier;\n    this.innerMoodModifier = innerMoodModifier;\n  }\n\n  readonly outer: Icon | null;\n\n  withOuter(outer: Icon | null): EnclosedIcon {\n    if (this.outer === outer) {\n      return this;\n    }\n    return this.copy(outer, this.inner, this.innerScale, this.moodModifier,\n                     this.outerMoodModifier, this.innerMoodModifier);\n  }\n\n  readonly inner: Icon | null;\n\n  withInner(inner: Icon | null): EnclosedIcon {\n    if (this.inner === inner) {\n      return this;\n    }\n    return this.copy(this.outer, inner, this.innerScale, this.moodModifier,\n                     this.outerMoodModifier, this.innerMoodModifier);\n  }\n\n  readonly innerScale: number;\n\n  withInnerScale(innerScale: number): EnclosedIcon {\n    if (this.innerScale === innerScale) {\n      return this;\n    }\n    return this.copy(this.outer, this.inner, innerScale, this.moodModifier,\n                     this.outerMoodModifier, this.innerMoodModifier);\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    }\n    return this.copy(this.outer, this.inner, this.innerScale, moodModifier,\n                     this.outerMoodModifier, this.innerMoodModifier);\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (newMoodModifier.equals(oldMoodModifier)) {\n      return this;\n    }\n    return this.withMoodModifier(newMoodModifier);\n  }\n\n  /** @internal */\n  readonly outerMoodModifier: MoodMatrix | null;\n\n  withOuterMoodModifier(outerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.outerMoodModifier, outerMoodModifier)) {\n      return this;\n    }\n    return this.copy(this.outer, this.inner, this.innerScale, this.moodModifier,\n                     outerMoodModifier, this.innerMoodModifier);\n  }\n\n  modifyOuterMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldOuterMoodModifier = this.outerMoodModifier;\n    if (oldOuterMoodModifier === null) {\n      oldOuterMoodModifier = MoodMatrix.empty();\n    }\n    const newOuterMoodModifier = oldOuterMoodModifier.updatedCol(feel, updates, true);\n    if (newOuterMoodModifier.equals(oldOuterMoodModifier)) {\n      return this;\n    }\n    return this.withOuterMoodModifier(newOuterMoodModifier);\n  }\n\n  /** @internal */\n  readonly innerMoodModifier: MoodMatrix | null;\n\n  withInnerMoodModifier(innerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.innerMoodModifier, innerMoodModifier)) {\n      return this;\n    }\n    return this.copy(this.outer, this.inner, this.innerScale, this.moodModifier,\n                     this.outerMoodModifier, innerMoodModifier);\n  }\n\n  modifyInnerMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldInnerMoodModifier = this.innerMoodModifier;\n    if (oldInnerMoodModifier === null) {\n      oldInnerMoodModifier = MoodMatrix.empty();\n    }\n    const newInnerMoodModifier = oldInnerMoodModifier.updatedCol(feel, updates, true);\n    if (newInnerMoodModifier.equals(oldInnerMoodModifier)) {\n      return this;\n    }\n    return this.withInnerMoodModifier(newInnerMoodModifier);\n  }\n\n  override isThemed(): boolean {\n    const outer = this.outer;\n    const inner = this.inner;\n    return (outer === null || outer.isThemed())\n        && (inner === null || inner.isThemed());\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): EnclosedIcon {\n    const moodModifier = this.moodModifier;\n    const outerMoodModifier = this.outerMoodModifier;\n    const innerMoodModifier = this.innerMoodModifier;\n\n    let modifiedMood = mood;\n    if (moodModifier !== null) {\n      modifiedMood = moodModifier.timesCol(modifiedMood, true);\n    }\n\n    const oldOuter = this.outer;\n    let newOuter: Icon | null;\n    if (oldOuter === null) {\n      newOuter = null;\n    } else {\n      let outerMood = modifiedMood;\n      if (outerMoodModifier !== null) {\n        outerMood = outerMoodModifier.timesCol(outerMood, true);\n      }\n      newOuter = oldOuter.withTheme(theme, outerMood);\n    }\n\n    const oldInner = this.inner;\n    let newInner: Icon | null;\n    if (oldInner === null) {\n      newInner = null;\n    } else {\n      let innerMood = modifiedMood;\n      if (innerMoodModifier !== null) {\n        innerMood = innerMoodModifier.timesCol(innerMood, true);\n      }\n      newInner = oldInner.withTheme(theme, innerMood);\n    }\n\n    if (newOuter === oldOuter && newInner === oldInner) {\n      return this;\n    }\n    return this.copy(newOuter, newInner, this.innerScale, moodModifier,\n                     outerMoodModifier, innerMoodModifier);\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    const outer = this.outer;\n    if (outer !== null) {\n      outer.paint(context, this.outerFrame(frame));\n    }\n    const inner = this.inner;\n    if (inner !== null) {\n      inner.paint(context, this.innerFrame(frame));\n    }\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const outer = this.outer;\n    if (outer !== null) {\n      outer.draw(context, this.outerFrame(frame));\n    }\n    const inner = this.inner;\n    if (inner !== null) {\n      inner.draw(context, this.innerFrame(frame));\n    }\n  }\n\n  outerFrame(frame: R2Box): R2Box {\n    return frame;\n  }\n\n  innerFrame(frame: R2Box): R2Box {\n    let {xMin, xMax, yMin, yMax} = frame;\n    let width = xMax - xMin;\n    let height = yMax - yMin;\n    const innerScale = this.innerScale;\n    if (innerScale !== 1) {\n      const cx = (xMin + xMax) / 2;\n      const cy = (yMin + yMax) / 2;\n      width = width * innerScale;\n      height = height * innerScale;\n      xMin = cx - width / 2;\n      yMin = cy - height / 2;\n      xMax = cx + width / 2;\n      yMax = cy + height / 2;\n    }\n    if (width > height) {\n      const ex = (width - height) / 2;\n      xMin += ex;\n      xMax -= ex;\n    } else if (width < height) {\n      const ey = (height - width) / 2;\n      yMin += ey;\n      yMax -= ey;\n    }\n    if (width === height && innerScale === 1) {\n      return frame;\n    }\n    return new R2Box(xMin, yMin, xMax, yMax);\n  }\n\n  protected copy(outer: Icon | null, inner: Icon | null, innerScale: number, moodModifier: MoodMatrix | null,\n                 outerMoodModifier: MoodMatrix | null, innerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, innerScale, moodModifier, outerMoodModifier, innerMoodModifier);\n  }\n\n  /** @override */\n  interpolateTo(that: EnclosedIcon): Interpolator<EnclosedIcon>;\n  interpolateTo(that: unknown): Interpolator<EnclosedIcon> | null;\n  interpolateTo(that: unknown): Interpolator<EnclosedIcon> | null {\n    if (that instanceof EnclosedIcon) {\n      return EnclosedIconInterpolator(this, that);\n    }\n    return null;\n  }\n\n  /** @override */\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIcon) {\n      return Equivalent(this.outer, that.outer, epsilon)\n          && Equivalent(this.inner, that.inner, epsilon)\n          && Equivalent(this.innerScale, that.innerScale, epsilon)\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon)\n          && Equivalent(this.outerMoodModifier, that.outerMoodModifier, epsilon)\n          && Equivalent(this.innerMoodModifier, that.innerMoodModifier, epsilon);\n    }\n    return false;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIcon) {\n      return Equals(this.outer, that.outer)\n          && Equals(this.inner, that.inner)\n          && Equals(this.innerScale, that.innerScale)\n          && Equals(this.moodModifier, that.moodModifier)\n          && Equals(this.outerMoodModifier, that.outerMoodModifier)\n          && Equals(this.innerMoodModifier, that.innerMoodModifier);\n    }\n    return false;\n  }\n\n  /** @override */\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"EnclosedIcon\").write(40/*'('*/)\n                   .debug(this.outer).write(\", \")\n                   .debug(this.inner).write(\", \")\n                   .debug(this.innerScale).write(\", \")\n                   .debug(this.moodModifier).write(\", \")\n                   .debug(this.outerMoodModifier).write(\", \")\n                   .debug(this.innerMoodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  /** @override */\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(outer: Icon | null, inner: Icon | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, 1, null, null, null);\n  }\n\n  static embossed(outer: Icon | null, inner: Icon | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, 1, null, null, EnclosedIcon.embossedMoodModifier);\n  }\n\n  @Lazy\n  static get embossedMoodModifier(): MoodMatrix {\n    return MoodMatrix.empty().updatedCol(Feel.default, [[Feel.embossed, 1]], true);\n  }\n}\n\n/** @internal */\nexport interface EnclosedIconInterpolator extends Interpolator<EnclosedIcon> {\n  /** @internal */\n  readonly outerInterpolator: Interpolator<Icon | null>;\n\n  /** @internal */\n  readonly innerInterpolator: Interpolator<Icon | null>;\n\n  /** @internal */\n  readonly innerScaleInterpolator: Interpolator<number>;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  /** @internal */\n  readonly outerMoodModifier: MoodMatrix | null;\n\n  /** @internal */\n  readonly innerMoodModifier: MoodMatrix | null;\n\n  readonly 0: EnclosedIcon;\n\n  readonly 1: EnclosedIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const EnclosedIconInterpolator = (function (_super: typeof Interpolator) {\n  const EnclosedIconInterpolator = function (i0: EnclosedIcon, i1: EnclosedIcon): EnclosedIconInterpolator {\n    const interpolator = function (u: number): EnclosedIcon {\n      const outer = interpolator.outerInterpolator(u);\n      const inner = interpolator.innerInterpolator(u);\n      const innerScale = interpolator.innerScaleInterpolator(u);\n      const moodModifier = interpolator.moodModifier;\n      const outerMoodModifier = interpolator.outerMoodModifier;\n      const innerMoodModifier = interpolator.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    } as EnclosedIconInterpolator;\n    Object.setPrototypeOf(interpolator, EnclosedIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).outerInterpolator = Interpolator(i0.outer, i1.outer);\n    (interpolator as Mutable<typeof interpolator>).innerInterpolator = Interpolator(i0.inner, i1.inner);\n    (interpolator as Mutable<typeof interpolator>).innerScaleInterpolator = Interpolator(i0.innerScale, i1.innerScale);\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    (interpolator as Mutable<typeof interpolator>).outerMoodModifier = i1.outerMoodModifier;\n    (interpolator as Mutable<typeof interpolator>).innerMoodModifier = i1.innerMoodModifier;\n    return interpolator;\n  } as {\n    (i0: EnclosedIcon, i1: EnclosedIcon): EnclosedIconInterpolator;\n\n    /** @internal */\n    prototype: EnclosedIconInterpolator;\n  };\n\n  EnclosedIconInterpolator.prototype = Object.create(_super.prototype);\n  EnclosedIconInterpolator.prototype.constructor = EnclosedIconInterpolator;\n\n  Object.defineProperty(EnclosedIconInterpolator.prototype, 0, {\n    get(this: EnclosedIconInterpolator): EnclosedIcon {\n      const outer = this.outerInterpolator[0];\n      const inner = this.innerInterpolator[0];\n      const innerScale = this.innerScaleInterpolator[0];\n      const moodModifier = this.moodModifier;\n      const outerMoodModifier = this.outerMoodModifier;\n      const innerMoodModifier = this.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(EnclosedIconInterpolator.prototype, 1, {\n    get(this: EnclosedIconInterpolator): EnclosedIcon {\n      const outer = this.outerInterpolator[1];\n      const inner = this.innerInterpolator[1];\n      const innerScale = this.innerScaleInterpolator[1];\n      const moodModifier = this.moodModifier;\n      const outerMoodModifier = this.outerMoodModifier;\n      const innerMoodModifier = this.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    },\n    configurable: true,\n  });\n\n  EnclosedIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIconInterpolator) {\n      return this.outerInterpolator.equals(that.outerInterpolator)\n          && this.innerInterpolator.equals(that.innerInterpolator)\n          && this.innerScaleInterpolator.equals(that.innerScaleInterpolator)\n          && Equals(this.moodModifier, that.moodModifier)\n          && Equals(this.outerMoodModifier, that.outerMoodModifier)\n          && Equals(this.innerMoodModifier, that.innerMoodModifier);\n    }\n    return false;\n  };\n\n  return EnclosedIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Animator} from \"@swim/component\";\nimport type {Color} from \"@swim/style\";\nimport type {ThemeAnimatorClass} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {Graphics} from \"./Graphics\";\nimport type {IconLayout} from \"./IconLayout\";\nimport {Icon} from \"./Icon\";\nimport {FilledIcon} from \"./FilledIcon\";\n\n/** @public */\nexport interface IconView extends View {\n  readonly iconLayout: Animator<this, IconLayout | null>;\n\n  readonly iconColor: ThemeAnimator<this, Color | null>;\n\n  readonly graphics: ThemeAnimator<this, Graphics | null>;\n}\n\n/** @public */\nexport const IconView = {\n  [Symbol.hasInstance](instance: unknown): instance is IconView {\n    return instance instanceof View\n        && \"iconLayout\" in instance\n        && \"iconColor\" in instance\n        && \"graphics\" in instance;\n  },\n};\n\n/** @internal */\nexport const IconGraphicsAnimator = (<R, A extends ThemeAnimator<any, any, any>>() => ThemeAnimator.extend<ThemeAnimator<R, Graphics | null>, ThemeAnimatorClass<A>>(\"IconGraphicsAnimator\", {\n  valueType: Graphics,\n\n  deriveValue(graphics: Graphics | null): Graphics | null {\n    const iconView = this.owner;\n    if (!IconView[Symbol.hasInstance](iconView) || !(graphics instanceof Icon)) {\n      return graphics;\n    }\n    const iconColor = iconView.iconColor.state;\n    if (iconColor !== null && graphics instanceof FilledIcon && graphics.fillLook !== iconView.iconColor.look) {\n      graphics = graphics.withFillColor(iconColor);\n    }\n    return graphics;\n  },\n\n  transformState(graphics: Graphics | null): Graphics | null {\n    const iconView = this.owner;\n    if (!IconView[Symbol.hasInstance](iconView) || !(graphics instanceof Icon)) {\n      return graphics;\n    }\n    const iconColor = iconView.iconColor.state;\n    if (iconColor !== null && graphics instanceof FilledIcon) {\n      graphics = graphics.withFillColor(iconColor);\n    } else {\n      const theme = iconView.theme.value;\n      const mood = iconView.mood.value;\n      if (theme !== null && mood !== null) {\n        graphics = graphics.withTheme(theme, mood);\n      }\n    }\n    return graphics;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {Graphics} from \"./Graphics\";\nimport {GraphicsView} from \"./GraphicsView\";\nimport {PaintingRenderer} from \"./PaintingRenderer\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport {IconLayout} from \"./IconLayout\";\nimport {Icon} from \"./Icon\";\nimport type {IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconView\";\n\n/** @public */\nexport class GraphicsIconView extends GraphicsView implements IconView {\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsRender})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsRender,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsRender,\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderIcon(renderer, this.viewBounds);\n    }\n  }\n\n  protected renderIcon(renderer: PaintingRenderer, frame: R2Box): void {\n    const graphics = this.graphics.value;\n    if (graphics !== null) {\n      const context = renderer.context;\n      context.beginPath();\n      graphics.render(renderer, frame);\n    }\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestIcon(x, y, renderer, this.viewBounds);\n    }\n    return null;\n  }\n\n  protected hitTestIcon(x: number, y: number, renderer: CanvasRenderer, frame: R2Box): GraphicsView | null {\n    // TODO: icon hit test mode\n    if (this.hitBounds.contains(x, y)) {\n      return this;\n    }\n    //const graphics = this.graphics.value;\n    //if (graphics !== null) {\n    //  const context = renderer.context;\n    //  graphics.render(renderer, frame);\n    //  const p = renderer.transform.transform(x, y);\n    //  if (context.isPointInPath(p.x, p.y)) {\n    //    return this;\n    //  }\n    //}\n    return null;\n  }\n}\nObject.defineProperty(GraphicsIconView.prototype, \"viewBounds\", {\n  get(this: GraphicsIconView): R2Box {\n    const viewFrame = this.viewFrame;\n    const viewWidth = viewFrame.width;\n    const viewHeight = viewFrame.height;\n    const viewSize = Math.min(viewWidth, viewHeight);\n    const iconLayout = this.iconLayout.value;\n    const iconWidth = iconLayout !== null ? iconLayout.width.pxValue(viewSize) : viewSize;\n    const iconHeight = iconLayout !== null ? iconLayout.height.pxValue(viewSize) : viewSize;\n    const xAlign = iconLayout !== null ? iconLayout.xAlign : 0.5;\n    const yAlign = iconLayout !== null ? iconLayout.yAlign : 0.5;\n    const x = viewFrame.x + (viewWidth - iconWidth) * xAlign;\n    const y = viewFrame.y + (viewHeight - iconHeight) * yAlign;\n    return new R2Box(x, y, x + iconWidth, y + iconHeight);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {SvgView} from \"@swim/dom\";\nimport {Graphics} from \"./Graphics\";\nimport {SvgContext} from \"./SvgContext\";\nimport {SvgRenderer} from \"./SvgRenderer\";\nimport {IconLayout} from \"./IconLayout\";\nimport {Icon} from \"./Icon\";\nimport type {IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconView\";\n\n/** @public */\nexport class SvgIconView extends SvgView implements IconView {\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsLayout})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.renderIcon();\n  }\n\n  protected renderIcon(): void {\n    const context = new SvgContext(this);\n    context.setPrecision(3);\n    context.beginSvg();\n    const graphics = this.graphics.value;\n    if (graphics !== null) {\n      const frame = this.iconBounds;\n      if (frame.isDefined() && frame.width > 0 && frame.height > 0) {\n        context.beginPath();\n        const renderer = new SvgRenderer(context);\n        graphics.render(renderer, frame);\n      }\n    }\n    context.finalizeSvg();\n  }\n\n  get iconBounds(): R2Box {\n    let viewportElement = this.node.viewportElement;\n    if (viewportElement === null) {\n      viewportElement = this.node;\n    }\n    if (!(viewportElement instanceof SVGSVGElement)) {\n      return R2Box.undefined();\n    }\n    const viewBox = viewportElement.viewBox.animVal;\n    const viewWidth = viewBox.width;\n    const viewHeight = viewBox.height;\n    const viewSize = Math.min(viewWidth, viewHeight);\n    const iconLayout = this.iconLayout.value;\n    const iconWidth = iconLayout !== null ? iconLayout.width.pxValue(viewSize) : viewSize;\n    const iconHeight = iconLayout !== null ? iconLayout.height.pxValue(viewSize) : viewSize;\n    const xAlign = iconLayout !== null ? iconLayout.xAlign : 0.5;\n    const yAlign = iconLayout !== null ? iconLayout.yAlign : 0.5;\n    const x = viewBox.x + (viewWidth - iconWidth) * xAlign;\n    const y = viewBox.y + (viewHeight - iconHeight) * yAlign;\n    return new R2Box(x, y, x + iconWidth, y + iconHeight);\n  }\n\n  static override readonly MountFlags: ViewFlags = SvgView.MountFlags | View.NeedsAnimate;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {Graphics} from \"./Graphics\";\nimport {IconLayout} from \"./IconLayout\";\nimport {Icon} from \"./Icon\";\nimport type {IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconView\";\nimport {SvgIconView} from \"./SvgIconView\";\n\n/** @public */\nexport class HtmlIconView extends HtmlView implements IconView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initIcon();\n  }\n\n  protected initIcon(): void {\n    this.style.position.setIntrinsic(\"relative\");\n  }\n\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsLayout})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  @ViewRef({\n    viewType: SvgIconView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n    initView(svgView: SvgIconView): void {\n      svgView.style.position.set(\"absolute\");\n      svgView.iconLayout.setInherits(true);\n      svgView.iconColor.setInherits(true);\n      svgView.graphics.setInherits(true);\n    },\n  })\n  readonly svg!: ViewRef<this, SvgIconView>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const svgView = this.svg.view;\n    if (svgView === null || !svgView.attributes.width.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.height.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.viewBox.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const width = this.style.width.pxValue();\n    const height = this.style.height.pxValue();\n    svgView.attributes.setIntrinsic({\n      width, height,\n      viewBox: \"0 0 \" + width + \" \" + height,\n    });\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {FromLike} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerTemplate} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {ComponentFlags} from \"@swim/component\";\nimport type {ComponentObserver} from \"@swim/component\";\nimport {Component} from \"@swim/component\";\nimport type {ValueLike} from \"@swim/structure\";\nimport {Value} from \"@swim/structure\";\nimport type {UriLike} from \"@swim/uri\";\nimport {Uri} from \"@swim/uri\";\nimport type {WarpDownlinkModel} from \"@swim/client\";\nimport {WarpDownlink} from \"@swim/client\";\nimport {EventDownlink} from \"@swim/client\";\nimport {ValueDownlink} from \"@swim/client\";\nimport {ListDownlink} from \"@swim/client\";\nimport {MapDownlink} from \"@swim/client\";\nimport {WarpRef} from \"@swim/client\";\nimport {WarpClient} from \"@swim/client\";\nimport {ModelRelation} from \"@swim/model\";\nimport {TraitRelation} from \"@swim/model\";\nimport {ControllerRelation} from \"./\"; // forward import\nimport {TraitViewRef} from \"./\"; // forward import\nimport {ExecutorService} from \"./\"; // forward import\n\n/** @public */\nexport type ControllerFlags = ComponentFlags;\n\n/** @public */\nexport interface ControllerFactory<C extends Controller = Controller> extends Creatable<C>, FromLike<C> {\n}\n\n/** @public */\nexport interface ControllerClass<C extends Controller = Controller> extends Function, ControllerFactory<C> {\n  readonly prototype: C;\n}\n\n/** @public */\nexport interface ControllerConstructor<C extends Controller = Controller> extends ControllerClass<C> {\n  new(): C;\n}\n\n/** @public */\nexport interface ControllerObserver<C extends Controller = Controller> extends ComponentObserver<C> {\n  controllerWillAttachParent?(parent: Controller, controller: C): void;\n\n  controllerDidAttachParent?(parent: Controller, controller: C): void;\n\n  controllerWillDetachParent?(parent: Controller, controller: C): void;\n\n  controllerDidDetachParent?(parent: Controller, controller: C): void;\n\n  controllerWillInsertChild?(child: Controller, target: Controller | null, controller: C): void;\n\n  controllerDidInsertChild?(child: Controller, target: Controller | null, controller: C): void;\n\n  controllerWillRemoveChild?(child: Controller, controller: C): void;\n\n  controllerDidRemoveChild?(child: Controller, controller: C): void;\n\n  controllerWillReinsertChild?(child: Controller, target: Controller | null, controller: C): void;\n\n  controllerDidReinsertChild?(child: Controller, target: Controller | null, controller: C): void;\n\n  controllerWillMount?(controller: Controller): void;\n\n  controllerDidMount?(controller: Controller): void;\n\n  controllerWillUnmount?(controller: Controller): void;\n\n  controllerDidUnmount?(controller: Controller): void;\n\n  controllerWillResolve?(controller: C): void;\n\n  controllerDidResolve?(controller: C): void;\n\n  controllerWillGenerate?(controller: C): void;\n\n  controllerDidGenerate?(controller: C): void;\n\n  controllerWillAssemble?(controller: C): void;\n\n  controllerDidAssemble?(controller: C): void;\n\n  controllerWillRevise?(controller: C): void;\n\n  controllerDidRevise?(controller: C): void;\n\n  controllerWillCompute?(controller: C): void;\n\n  controllerDidCompute?(controller: C): void;\n\n  controllerWillStartConsuming?(controller: C): void;\n\n  controllerDidStartConsuming?(controller: C): void;\n\n  controllerWillStopConsuming?(controller: C): void;\n\n  controllerDidStopConsuming?(controller: C): void;\n}\n\n/** @public */\nexport class Controller extends Component<Controller> implements Consumable, WarpRef {\n  constructor() {\n    super();\n    this.consumers = null;\n  }\n\n  /** @override */\n  declare readonly observerType?: Class<ControllerObserver>;\n\n  override get componentType(): Class<Controller> {\n    return Controller;\n  }\n\n  protected override willAttachParent(parent: Controller): void {\n    this.callObservers(\"controllerWillAttachParent\", parent, this);\n  }\n\n  protected override onAttachParent(parent: Controller): void {\n    // hook\n  }\n\n  protected override didAttachParent(parent: Controller): void {\n    this.callObservers(\"controllerDidAttachParent\", parent, this);\n  }\n\n  protected override willDetachParent(parent: Controller): void {\n    this.callObservers(\"controllerWillDetachParent\", parent, this);\n  }\n\n  protected override onDetachParent(parent: Controller): void {\n    // hook\n  }\n\n  protected override didDetachParent(parent: Controller): void {\n    this.callObservers(\"controllerDidDetachParent\", parent, this);\n  }\n\n  protected override willInsertChild(child: Controller, target: Controller | null): void {\n    super.willInsertChild(child, target);\n    this.callObservers(\"controllerWillInsertChild\", child, target, this);\n  }\n\n  protected override onInsertChild(child: Controller, target: Controller | null): void {\n    super.onInsertChild(child, target);\n  }\n\n  protected override didInsertChild(child: Controller, target: Controller | null): void {\n    this.callObservers(\"controllerDidInsertChild\", child, target, this);\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ControllerFlags): void {\n    if ((this.flags & Controller.MountedFlag) === 0) {\n      return;\n    } else if (updateFlags === void 0) {\n      updateFlags = 0;\n    }\n    updateFlags |= this.flags & Controller.UpdateMask;\n    if ((updateFlags & Controller.CompileMask) !== 0) {\n      this.cascadeCompile(updateFlags);\n    }\n  }\n\n  protected override willRemoveChild(child: Controller): void {\n    super.willRemoveChild(child);\n    this.callObservers(\"controllerWillRemoveChild\", child, this);\n  }\n\n  protected override onRemoveChild(child: Controller): void {\n    super.onRemoveChild(child);\n  }\n\n  protected override didRemoveChild(child: Controller): void {\n    this.callObservers(\"controllerDidRemoveChild\", child, this);\n    super.didRemoveChild(child);\n  }\n\n  protected override willReinsertChild(child: Controller, target: Controller | null): void {\n    super.willReinsertChild(child, target);\n    this.callObservers(\"controllerWillReinsertChild\", child, target, this);\n  }\n\n  protected override onReinsertChild(child: Controller, target: Controller | null): void {\n    super.onReinsertChild(child, target);\n  }\n\n  protected override didReinsertChild(child: Controller, target: Controller | null): void {\n    this.callObservers(\"controllerDidReinsertChild\", child, target, this);\n    super.didReinsertChild(child, target);\n  }\n\n  protected override willMount(): void {\n    super.willMount();\n    this.callObservers(\"controllerWillMount\", this);\n  }\n\n  protected override didMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & Controller.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Controller.NeedsRevise);\n    }\n\n    this.mountFasteners();\n\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n\n    this.callObservers(\"controllerDidMount\", this);\n    super.didMount();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    this.callObservers(\"controllerWillUnmount\", this);\n\n    this.stopConsuming();\n  }\n\n  protected override didUnmount(): void {\n    this.callObservers(\"controllerDidUnmount\", this);\n    super.didUnmount();\n  }\n\n  override requireUpdate(updateFlags: ControllerFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & Controller.UpdateMask;\n    if (deltaUpdateFlags === 0) {\n      return;\n    }\n    this.setFlags(flags | deltaUpdateFlags);\n    this.requestUpdate(this, deltaUpdateFlags, immediate);\n  }\n\n  protected needsUpdate(updateFlags: ControllerFlags, immediate: boolean): ControllerFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Controller, updateFlags: ControllerFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Controller.UpdateMask;\n    if ((updateFlags & Controller.CompileMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsCompile;\n    }\n    if ((updateFlags & Controller.ExecuteMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsExecute;\n    }\n    if (deltaUpdateFlags === 0 && !immediate) {\n      return;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    const parent = this.parent;\n    if (parent !== null) {\n      parent.requestUpdate(target, updateFlags, immediate);\n    } else if (this.mounted) {\n      const updaterService = this.updater.service;\n      if (updaterService !== null) {\n        updaterService.requestUpdate(target, updateFlags, immediate);\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & Controller.UpdatingMask) !== 0;\n  }\n\n  get compiling(): boolean {\n    return (this.flags & Controller.CompilingFlag) !== 0;\n  }\n\n  protected needsCompile(compileFlags: ControllerFlags): ControllerFlags {\n    return compileFlags;\n  }\n\n  cascadeCompile(compileFlags: ControllerFlags): void {\n    try {\n      compileFlags &= ~Controller.NeedsCompile;\n      compileFlags |= this.flags & Controller.UpdateMask;\n      compileFlags = this.needsCompile(compileFlags);\n      if ((compileFlags & Controller.CompileMask) === 0) {\n        return;\n      }\n      let cascadeFlags = compileFlags;\n      this.setFlags(this.flags & ~Controller.NeedsCompile | Controller.CompilingFlag);\n      this.willCompile(cascadeFlags);\n      if (((this.flags | compileFlags) & Controller.NeedsResolve) !== 0) {\n        cascadeFlags |= Controller.NeedsResolve;\n        this.setFlags(this.flags & ~Controller.NeedsResolve);\n        this.willResolve();\n      }\n      if (((this.flags | compileFlags) & Controller.NeedsGenerate) !== 0) {\n        cascadeFlags |= Controller.NeedsGenerate;\n        this.setFlags(this.flags & ~Controller.NeedsGenerate);\n        this.willGenerate();\n      }\n      if (((this.flags | compileFlags) & Controller.NeedsAssemble) !== 0) {\n        cascadeFlags |= Controller.NeedsAssemble;\n        this.setFlags(this.flags & ~Controller.NeedsAssemble);\n        this.willAssemble();\n      }\n\n      this.onCompile(cascadeFlags);\n      if ((cascadeFlags & Controller.NeedsResolve) !== 0) {\n        this.onResolve();\n      }\n      if ((cascadeFlags & Controller.NeedsGenerate) !== 0) {\n        this.onGenerate();\n      }\n      if ((cascadeFlags & Controller.NeedsAssemble) !== 0) {\n        this.onAssemble();\n      }\n\n      if ((cascadeFlags & Controller.CompileMask) !== 0) {\n        this.compileChildren(cascadeFlags, this.compileChild);\n      }\n\n      if ((cascadeFlags & Controller.NeedsAssemble) !== 0) {\n        this.didAssemble();\n      }\n      if ((cascadeFlags & Controller.NeedsGenerate) !== 0) {\n        this.didGenerate();\n      }\n      if ((cascadeFlags & Controller.NeedsResolve) !== 0) {\n        this.didResolve();\n      }\n      this.didCompile(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~Controller.CompilingFlag);\n    }\n  }\n\n  protected willCompile(compileFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected onCompile(compileFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected didCompile(compileFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected willResolve(): void {\n    this.callObservers(\"controllerWillResolve\", this);\n  }\n\n  protected onResolve(): void {\n    // hook\n  }\n\n  protected didResolve(): void {\n    this.callObservers(\"controllerDidResolve\", this);\n  }\n\n  protected willGenerate(): void {\n    this.callObservers(\"controllerWillGenerate\", this);\n  }\n\n  protected onGenerate(): void {\n    // hook\n  }\n\n  protected didGenerate(): void {\n    this.callObservers(\"controllerDidGenerate\", this);\n  }\n\n  protected willAssemble(): void {\n    this.callObservers(\"controllerWillAssemble\", this);\n  }\n\n  protected onAssemble(): void {\n    // hook\n  }\n\n  protected didAssemble(): void {\n    this.callObservers(\"controllerDidAssemble\", this);\n  }\n\n  protected compileChildren(compileFlags: ControllerFlags, compileChild: (this: this, child: Controller, compileFlags: ControllerFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      compileChild.call(this, child, compileFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent compile pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected compileChild(child: Controller, compileFlags: ControllerFlags): void {\n    child.cascadeCompile(compileFlags);\n  }\n\n  get executing(): boolean {\n    return (this.flags & Controller.ExecutingFlag) !== 0;\n  }\n\n  protected needsExecute(executeFlags: ControllerFlags): ControllerFlags {\n    return executeFlags;\n  }\n\n  cascadeExecute(executeFlags: ControllerFlags): void {\n    try {\n      executeFlags &= ~Controller.NeedsExecute;\n      executeFlags |= this.flags & Controller.UpdateMask;\n      executeFlags = this.needsExecute(executeFlags);\n      if ((executeFlags & Controller.ExecuteMask) === 0) {\n        return;\n      }\n      let cascadeFlags = executeFlags;\n      this.setFlags(this.flags & ~Controller.NeedsExecute | Controller.ExecutingFlag);\n      this.willExecute(cascadeFlags);\n      if (((this.flags | executeFlags) & Controller.NeedsRevise) !== 0) {\n        cascadeFlags |= Controller.NeedsRevise;\n        this.setFlags(this.flags & ~Controller.NeedsRevise);\n        this.willRevise();\n      }\n      if (((this.flags | executeFlags) & Controller.NeedsCompute) !== 0) {\n        cascadeFlags |= Controller.NeedsCompute;\n        this.setFlags(this.flags & ~Controller.NeedsCompute);\n        this.willCompute();\n      }\n\n      this.onExecute(cascadeFlags);\n      if ((cascadeFlags & Controller.NeedsRevise) !== 0) {\n        this.onRevise();\n      }\n      if ((cascadeFlags & Controller.NeedsCompute) !== 0) {\n        this.onCompute();\n      }\n\n      if ((cascadeFlags & Controller.ExecuteMask) !== 0) {\n        this.executeChildren(cascadeFlags, this.executeChild);\n      }\n\n      if ((cascadeFlags & Controller.NeedsCompute) !== 0) {\n        this.didCompute();\n      }\n      if ((cascadeFlags & Controller.NeedsRevise) !== 0) {\n        this.didRevise();\n      }\n      this.didExecute(cascadeFlags);\n    } finally {\n      this.setFlags(this.flags & ~Controller.ExecutingFlag);\n    }\n  }\n\n  protected willExecute(executeFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected onExecute(executeFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected didExecute(executeFlags: ControllerFlags): void {\n    // hook\n  }\n\n  protected willRevise(): void {\n    this.callObservers(\"controllerWillRevise\", this);\n  }\n\n  protected onRevise(): void {\n    this.recohereFasteners(this.updateTime);\n  }\n\n  protected didRevise(): void {\n    this.callObservers(\"controllerDidRevise\", this);\n  }\n\n  protected willCompute(): void {\n    this.callObservers(\"controllerWillCompute\", this);\n  }\n\n  protected onCompute(): void {\n    // hook\n  }\n\n  protected didCompute(): void {\n    this.callObservers(\"controllerDidCompute\", this);\n  }\n\n  protected executeChildren(executeFlags: ControllerFlags, executeChild: (this: this, child: Controller, executeFlags: ControllerFlags) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      executeChild.call(this, child, executeFlags);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent execute pass\");\n      }\n      child = next;\n    }\n  }\n\n  /** @internal */\n  protected executeChild(child: Controller, executeFlags: ControllerFlags): void {\n    child.cascadeExecute(executeFlags);\n  }\n\n  protected override bindFastener(fastener: Fastener): void {\n    super.bindFastener(fastener);\n    if (this.consuming) {\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ControllerRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitViewRef && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: Controller, target: Controller | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ControllerRelation) {\n      fastener.bindController(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: Controller): void {\n    if (fastener instanceof ControllerRelation) {\n      fastener.unbindController(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal */\n  protected override enqueueFastener(fastener: Fastener): void {\n    super.enqueueFastener(fastener);\n    this.requireUpdate(Controller.NeedsRevise);\n  }\n\n  /** @internal */\n  override recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent === null || decoherent.length === 0) {\n      return;\n    } else if (t === void 0) {\n      t = performance.now();\n    }\n    let coherentDownlinkProps = false;\n    (this as Mutable<this>).coherentTime = t;\n    (this as Mutable<this>).decoherent = null;\n    (this as Mutable<this>).recohering = decoherent;\n    try {\n      for (let i = 0; i < decoherent.length; i += 1) {\n        const fastener = decoherent[i]!;\n        if (fastener instanceof WarpDownlink && !coherentDownlinkProps) {\n          coherentDownlinkProps = true;\n          this.hostUri.recohere(t);\n          this.nodeUri.recohere(t);\n          this.laneUri.recohere(t);\n        }\n        fastener.recohere(t);\n      }\n    } finally {\n      (this as Mutable<this>).recohering = null;\n    }\n  }\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  }\n\n  protected willConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didConsume(consumer: Consumer): void {\n    // hook\n  }\n\n  /** @override */\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  }\n\n  protected willUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected onUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  protected didUnconsume(consumer: Consumer): void {\n    // hook\n  }\n\n  get consuming(): boolean {\n    return (this.flags & Controller.ConsumingFlag) !== 0;\n  }\n\n  get startConsumingFlags(): ControllerFlags {\n    return (this.constructor as typeof Controller).StartConsumingFlags;\n  }\n\n  protected startConsuming(): void {\n    if ((this.flags & Controller.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | Controller.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  }\n\n  protected willStartConsuming(): void {\n    this.callObservers(\"controllerWillStartConsuming\", this);\n  }\n\n  protected onStartConsuming(): void {\n    this.requireUpdate(this.startConsumingFlags);\n    this.startConsumingFasteners();\n  }\n\n  protected didStartConsuming(): void {\n    this.callObservers(\"controllerDidStartConsuming\", this);\n  }\n\n  get stopConsumingFlags(): ControllerFlags {\n    return (this.constructor as typeof Controller).StopConsumingFlags;\n  }\n\n  protected stopConsuming(): void {\n    if ((this.flags & Controller.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~Controller.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  }\n\n  protected willStopConsuming(): void {\n    this.callObservers(\"controllerWillStopConsuming\", this);\n  }\n\n  protected onStopConsuming(): void {\n    this.requireUpdate(this.stopConsumingFlags);\n    this.stopConsumingFasteners();\n  }\n\n  protected didStopConsuming(): void {\n    this.callObservers(\"controllerDidStopConsuming\", this);\n  }\n\n  /** @internal */\n  protected startConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ControllerRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitViewRef && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFasteners(): void {\n    const metaclass = FastenerContextMetaclass.get(this);\n    if (metaclass === null) {\n      return;\n    }\n    const fastenerSlots = metaclass.slots;\n    for (let i = 0; i < fastenerSlots.length; i += 1) {\n      const fastener = this[fastenerSlots[i]!];\n      if (fastener instanceof WarpDownlink && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof ControllerRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof TraitViewRef && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof TraitRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      } else if (fastener instanceof ModelRelation && fastener.consumed === true) {\n        fastener.unconsume(this);\n      }\n    }\n  }\n\n  get updateTime(): number {\n    return this.updater.getService().updateTime;\n  }\n\n  @Provider({\n    get serviceType(): typeof ExecutorService { // avoid static forward reference\n      return ExecutorService;\n    },\n    mountRootService(service: ExecutorService): void {\n      super.mountRootService(service);\n      service.roots.addController(this.owner);\n    },\n    unmountRootService(service: ExecutorService): void {\n      super.unmountRootService(service);\n      service.roots.removeController(this.owner);\n    },\n  })\n  readonly updater!: Provider<this, ExecutorService>;\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ControllerFlags {\n      return Controller.NeedsRevise;\n    },\n  })\n  get hostUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ControllerFlags {\n      return Controller.NeedsRevise;\n    },\n  })\n  get nodeUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  @Property({\n    valueType: Uri,\n    value: null,\n    inherits: true,\n    get updateFlags(): ControllerFlags {\n      return Controller.NeedsRevise;\n    },\n  })\n  get laneUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  /** @override */\n  downlink(template?: FastenerTemplate<EventDownlink<WarpRef>>): EventDownlink<WarpRef> {\n    let downlinkClass = EventDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlink\", template) as typeof EventDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkValue<V = Value>(template?: FastenerTemplate<ValueDownlink<WarpRef, V>>): ValueDownlink<WarpRef, V> {\n    let downlinkClass = ValueDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkValue\", template) as typeof ValueDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkList<V = Value>(template?: FastenerTemplate<ListDownlink<WarpRef, V>>): ListDownlink<WarpRef, V> {\n    let downlinkClass = ListDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkList\", template) as typeof ListDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  downlinkMap<K = Value, V = Value>(template?: FastenerTemplate<MapDownlink<WarpRef, K, V>>): MapDownlink<WarpRef, K, V> {\n    let downlinkClass = MapDownlink;\n    if (template !== void 0) {\n      downlinkClass = downlinkClass.define(\"downlinkMap\", template) as typeof MapDownlink;\n    }\n    return downlinkClass.create(this);\n  }\n\n  /** @override */\n  command(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(nodeUri: UriLike, laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(laneUri: UriLike, body: ValueLike): void;\n  /** @override */\n  command(body: ValueLike): void;\n  command(hostUri: UriLike | ValueLike, nodeUri?: UriLike | ValueLike, laneUri?: UriLike | ValueLike, body?: ValueLike): void {\n    if (nodeUri === void 0) {\n      body = Value.fromLike(hostUri as ValueLike);\n      laneUri = this.laneUri.getValue();\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (laneUri === void 0) {\n      body = Value.fromLike(nodeUri as ValueLike);\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = this.nodeUri.getValue();\n      hostUri = this.hostUri.value;\n    } else if (body === void 0) {\n      body = Value.fromLike(laneUri as ValueLike);\n      laneUri = Uri.fromLike(nodeUri as UriLike);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = this.hostUri.value;\n    } else {\n      body = Value.fromLike(body);\n      laneUri = Uri.fromLike(laneUri as UriLike);\n      nodeUri = Uri.fromLike(nodeUri as UriLike);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    if (hostUri === null) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.command(hostUri, nodeUri, laneUri, body);\n  }\n\n  /** @override */\n  authenticate(hostUri: UriLike, credentials: ValueLike): void;\n  /** @override */\n  authenticate(credentials: ValueLike): void;\n  authenticate(hostUri: UriLike | ValueLike, credentials?: ValueLike): void {\n    if (credentials === void 0) {\n      credentials = Value.fromLike(hostUri as ValueLike);\n      hostUri = this.hostUri.getValue();\n    } else {\n      credentials = Value.fromLike(credentials);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const warpRef = this.warpRef.value;\n    warpRef.authenticate(hostUri, credentials);\n  }\n\n  /** @override */\n  hostRef(hostUri: UriLike): WarpRef {\n    hostUri = Uri.fromLike(hostUri);\n    const childRef = new Controller();\n    childRef.hostUri.set(hostUri);\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  nodeRef(hostUri: UriLike, nodeUri: UriLike): WarpRef;\n  /** @override */\n  nodeRef(nodeUri: UriLike): WarpRef;\n  nodeRef(hostUri: UriLike | undefined, nodeUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Controller();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @override */\n  laneRef(hostUri: UriLike, nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(nodeUri: UriLike, laneUri: UriLike): WarpRef;\n  /** @override */\n  laneRef(laneUri: UriLike): WarpRef;\n  laneRef(hostUri: UriLike | undefined, nodeUri?: UriLike, laneUri?: UriLike): WarpRef {\n    if (nodeUri === void 0) {\n      laneUri = Uri.fromLike(hostUri as UriLike);\n      nodeUri = void 0;\n      hostUri = void 0;\n    } else if (laneUri === void 0) {\n      laneUri = Uri.fromLike(nodeUri);\n      nodeUri = Uri.fromLike(hostUri as UriLike);\n      hostUri = nodeUri.endpoint();\n      if (hostUri.isDefined()) {\n        nodeUri = hostUri.unresolve(nodeUri);\n      } else {\n        hostUri = void 0;\n      }\n    } else {\n      laneUri = Uri.fromLike(laneUri);\n      nodeUri = Uri.fromLike(nodeUri);\n      hostUri = Uri.fromLike(hostUri as UriLike);\n    }\n    const childRef = new Controller();\n    if (hostUri !== void 0) {\n      childRef.hostUri.set(hostUri);\n    }\n    if (nodeUri !== void 0) {\n      childRef.nodeUri.set(nodeUri);\n    }\n    if (laneUri !== void 0) {\n      childRef.laneUri.set(laneUri);\n    }\n    this.appendChild(childRef);\n    return childRef;\n  }\n\n  /** @internal @override */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): WarpDownlinkModel | null {\n    const warpRef = this.warpRef.value;\n    return warpRef.getDownlink(hostUri, nodeUri, laneUri);\n  }\n\n  /** @internal @override */\n  openDownlink(downlink: WarpDownlinkModel): void {\n    const warpRef = this.warpRef.value;\n    warpRef.openDownlink(downlink);\n  }\n\n  @Property({\n    valueType: WarpRef,\n    inherits: true,\n    get updateFlags(): ControllerFlags {\n      return Controller.NeedsRevise;\n    },\n    initValue(): WarpRef {\n      return WarpClient.global();\n    },\n    equalValues(newValue: WarpRef, oldValue: WarpRef): boolean {\n      return newValue === oldValue;\n    },\n  })\n  get warpRef(): Property<this, WarpRef> {\n    return Property.getter();\n  }\n\n  /** @internal */\n  static override uid: () => string = (function () {\n    let nextId = 1;\n    return function uid(): string {\n      const id = ~~nextId;\n      nextId += 1;\n      return \"controller\" + id;\n    };\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ControllerFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly InsertingFlag: ControllerFlags = Component.InsertingFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ControllerFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly CompilingFlag: ControllerFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly ExecutingFlag: ControllerFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly ConsumingFlag: ControllerFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly UpdatingMask: ControllerFlags = this.CompilingFlag\n                                                | this.ExecutingFlag;\n  /** @internal */\n  static readonly StatusMask: ControllerFlags = this.MountedFlag\n                                              | this.InsertingFlag\n                                              | this.RemovingFlag\n                                              | this.CompilingFlag\n                                              | this.ExecutingFlag;\n\n  static readonly NeedsCompile: ControllerFlags = 1 << (Component.FlagShift + 3);\n  static readonly NeedsResolve: ControllerFlags = 1 << (Component.FlagShift + 4);\n  static readonly NeedsGenerate: ControllerFlags = 1 << (Component.FlagShift + 5);\n  static readonly NeedsAssemble: ControllerFlags = 1 << (Component.FlagShift + 6);\n  /** @internal */\n  static readonly CompileMask: ControllerFlags = this.NeedsCompile\n                                               | this.NeedsResolve\n                                               | this.NeedsGenerate\n                                               | this.NeedsAssemble;\n\n  static readonly NeedsExecute: ControllerFlags = 1 << (Component.FlagShift + 7);\n  static readonly NeedsRevise: ControllerFlags = 1 << (Component.FlagShift + 8);\n  static readonly NeedsCompute: ControllerFlags = 1 << (Component.FlagShift + 9);\n  /** @internal */\n  static readonly ExecuteMask: ControllerFlags = this.NeedsExecute\n                                               | this.NeedsRevise\n                                               | this.NeedsCompute;\n\n  /** @internal */\n  static readonly UpdateMask: ControllerFlags = this.CompileMask\n                                              | this.ExecuteMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 10;\n  /** @internal */\n  static override readonly FlagMask: ControllerFlags = (1 << this.FlagShift) - 1;\n\n  static override readonly MountFlags: ControllerFlags = 0;\n  static override readonly InsertChildFlags: ControllerFlags = 0;\n  static override readonly RemoveChildFlags: ControllerFlags = 0;\n  static override readonly ReinsertChildFlags: ControllerFlags = 0;\n  static readonly StartConsumingFlags: ControllerFlags = 0;\n  static readonly StopConsumingFlags: ControllerFlags = 0;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {ControllerFactory} from \"./Controller\";\nimport {Controller} from \"./Controller\";\n\n/** @public */\nexport interface ControllerRelationDescriptor<R, C extends Controller> extends FastenerDescriptor<R> {\n  extends?: Proto<ControllerRelation<any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface ControllerRelationClass<F extends ControllerRelation<any, any, any> = ControllerRelation<any, any, any>> extends FastenerClass<F> {\n  /** @internal */\n  readonly ConsumingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ControllerRelation<R = any, C extends Controller = Controller, I extends any[] = [C | null]> extends Fastener<R, C | null, I>, Consumable {\n  /** @override */\n  get descriptorType(): Proto<ControllerRelationDescriptor<R, C>>;\n\n  /** @override */\n  get fastenerType(): Proto<ControllerRelation<any, any, any>>;\n\n  get consumed(): boolean;\n\n  get controllerType(): ControllerFactory<C> | null;\n\n  get observes(): boolean;\n\n  /** @override */\n  get parent(): ControllerRelation<any, C, any> | null;\n\n  /** @internal */\n  readonly outlets: ReadonlySet<Fastener<any, any, any>> | null;\n\n  /** @internal @override */\n  attachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @override */\n  detachOutlet(outlet: Fastener<any, any, any>): void;\n\n  /** @internal @protected */\n  decohereOutlets(): void;\n\n  /** @protected */\n  initController(controller: C): void;\n\n  /** @protected */\n  willAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  onAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  didAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  deinitController(controller: C): void;\n\n  /** @protected */\n  willDetachController(controller: C): void;\n\n  /** @protected */\n  onDetachController(controller: C): void;\n\n  /** @protected */\n  didDetachController(controller: C): void;\n\n  get parentController(): Controller | null;\n\n  /** @protected */\n  insertChild(parent: Controller, child: C, target: Controller | null, key: string | undefined): void;\n\n  /** @internal */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal */\n  unbindController(controller: Controller): void;\n\n  detectController(controller: Controller): C | null;\n\n  createController(): C;\n\n  /** @protected */\n  fromLike(value: C | LikeType<C>): C;\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void\n\n  /** @protected */\n  willConsume(consumer: Consumer): void;\n\n  /** @protected */\n  onConsume(consumer: Consumer): void;\n\n  /** @protected */\n  didConsume(consumer: Consumer): void;\n\n  /** @override */\n  unconsume(consumer: Consumer): void\n\n  /** @protected */\n  willUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  onUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  didUnconsume(consumer: Consumer): void;\n\n  get consuming(): boolean;\n\n  /** @internal */\n  startConsuming(): void;\n\n  /** @protected */\n  willStartConsuming(): void;\n\n  /** @protected */\n  onStartConsuming(): void;\n\n  /** @protected */\n  didStartConsuming(): void;\n\n  /** @internal */\n  stopConsuming(): void;\n\n  /** @protected */\n  willStopConsuming(): void;\n\n  /** @protected */\n  onStopConsuming(): void;\n\n  /** @protected */\n  didStopConsuming(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const ControllerRelation = (<R, C extends Controller, I extends any[], F extends ControllerRelation<any, any, any>>() => Fastener.extend<ControllerRelation<R, C, I>, ControllerRelationClass<F>>(\"ControllerRelation\", {\n  get fastenerType(): Proto<ControllerRelation<any, any, any>> {\n    return ControllerRelation;\n  },\n\n  consumed: false,\n\n  controllerType: null,\n\n  observes: false,\n\n  attachOutlet(outlet: Fastener<any, any, any>): void {\n    let outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      outlets = new Set<Fastener<any, any, any>>();\n      (this as Mutable<typeof this>).outlets = outlets;\n    }\n    outlets.add(outlet);\n  },\n\n  detachOutlet(outlet: Fastener<any, any, any>): void {\n    const outlets = this.outlets as Set<Fastener<any, any, any>> | null;\n    if (outlets === null) {\n      return;\n    }\n    outlets.delete(outlet);\n  },\n\n  decohereOutlets(): void {\n    const outlets = this.outlets;\n    if (outlets === null) {\n      return;\n    }\n    for (const outlet of outlets) {\n      outlet.decohere(this);\n    }\n  },\n\n  initController(controller: C): void {\n    // hook\n  },\n\n  willAttachController(controller: C, target: Controller | null): void {\n    // hook\n  },\n\n  onAttachController(controller: C, target: Controller | null): void {\n    if (this.observes === true) {\n      controller.observe(this as Observes<C>);\n    }\n    if ((this.flags & ControllerRelation.ConsumingFlag) !== 0) {\n      controller.consume(this);\n    }\n  },\n\n  didAttachController(controller: C, target: Controller | null): void {\n    // hook\n  },\n\n  deinitController(controller: C): void {\n    // hook\n  },\n\n  willDetachController(controller: C): void {\n    // hook\n  },\n\n  onDetachController(controller: C): void {\n    if ((this.flags & ControllerRelation.ConsumingFlag) !== 0) {\n      controller.unconsume(this);\n    }\n    if (this.observes === true) {\n      controller.unobserve(this as Observes<C>);\n    }\n  },\n\n  didDetachController(controller: C): void {\n    // hook\n  },\n\n  get parentController(): Controller | null {\n    const owner = this.owner;\n    return owner instanceof Controller ? owner : null;\n  },\n\n  insertChild(parent: Controller, child: C, target: Controller | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  },\n\n  bindController(controller: Controller, target: Controller | null): void {\n    // hook\n  },\n\n  unbindController(controller: Controller): void {\n    // hook\n  },\n\n  detectController(controller: Controller): C | null {\n    return null;\n  },\n\n  createController(): C {\n    let controller: C | undefined;\n    const controllerType = this.controllerType;\n    if (controllerType !== null) {\n      controller = controllerType.create();\n    }\n    if (controller === void 0 || controller === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"controller\";\n      throw new Error(message);\n    }\n    return controller;\n  },\n\n  fromLike(value: C | LikeType<C>): C {\n    const controllerType = this.controllerType;\n    if (controllerType !== null) {\n      return controllerType.fromLike(value);\n    }\n    return Controller.fromLike(value) as C;\n  },\n\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<typeof this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  },\n\n  willConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  },\n\n  willUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  get consuming(): boolean {\n    return (this.flags & ControllerRelation.ConsumingFlag) !== 0;\n  },\n\n  startConsuming(): void {\n    if ((this.flags & ControllerRelation.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | ControllerRelation.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  },\n\n  willStartConsuming(): void {\n    // hook\n  },\n\n  onStartConsuming(): void {\n    // hook\n  },\n\n  didStartConsuming(): void {\n    // hook\n  },\n\n  stopConsuming(): void {\n    if ((this.flags & ControllerRelation.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~ControllerRelation.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  },\n\n  willStopConsuming(): void {\n    // hook\n  },\n\n  onStopConsuming(): void {\n    // hook\n  },\n\n  didStopConsuming(): void {\n    // hook\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n  },\n\n  onUnmount(): void {\n    super.onUnmount();\n    this.stopConsuming();\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).outlets = null;\n    (fastener as Mutable<typeof fastener>).consumers = null;\n    return fastener;\n  },\n\n  ConsumingFlag: 1 << (Fastener.FlagShift + 0),\n\n  FlagShift: Fastener.FlagShift + 1,\n  FlagMask: (1 << (Fastener.FlagShift + 1)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {FastenerContextMetaclass} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerRelationDescriptor} from \"./ControllerRelation\";\nimport type {ControllerRelationClass} from \"./ControllerRelation\";\nimport {ControllerRelation} from \"./ControllerRelation\";\n\n/** @public */\nexport interface ControllerRefDescriptor<R, C extends Controller> extends ControllerRelationDescriptor<R, C> {\n  extends?: Proto<ControllerRef<any, any, any>> | boolean | null;\n  controllerKey?: string | boolean;\n}\n\n/** @public */\nexport interface ControllerRefClass<F extends ControllerRef<any, any, any> = ControllerRef<any, any, any>> extends ControllerRelationClass<F> {\n  tryController<R, K extends keyof R, F extends R[K] = R[K]>(owner: R, fastenerName: K): (F extends {readonly controller: infer C | null} ? C | null : never) | null;\n}\n\n/** @public */\nexport interface ControllerRef<R = any, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerRelation<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<ControllerRefDescriptor<R, C>>;\n\n  /** @override */\n  get fastenerType(): Proto<ControllerRef<any, any, any>>;\n\n  /** @override */\n  get parent(): ControllerRef<any, C, any> | null;\n\n  get inletController(): C | null;\n\n  getInletController(): C;\n\n  get controllerKey(): string | undefined;\n\n  get(): C | null;\n\n  set(controller: C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(controller: C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  readonly controller: C | null;\n\n  getController(): C;\n\n  setController(controller: C | LikeType<C> | null, target?: Controller | null, key?: string): C | null;\n\n  attachController(controller?: C | LikeType<C> | null, target?: Controller | null): C;\n\n  detachController(): C | null;\n\n  insertController(parent?: Controller | null, controller?: C | LikeType<C>, target?: Controller | null, key?: string): C;\n\n  removeController(): C | null;\n\n  deleteController(): C | null;\n\n  /** @internal @override */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal @override */\n  unbindController(controller: Controller): void;\n\n  /** @override */\n  detectController(controller: Controller): C | null;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n}\n\n/** @public */\nexport const ControllerRef = (<R, C extends Controller, I extends any[], F extends ControllerRef<any, any, any>>() => ControllerRelation.extend<ControllerRef<R, C, I>, ControllerRefClass<F>>(\"ControllerRef\", {\n  get fastenerType(): Proto<ControllerRef<any, any, any>> {\n    return ControllerRef;\n  },\n\n  get inletController(): C | null {\n    const inlet = this.inlet;\n    return inlet instanceof ControllerRef ? inlet.controller : null;\n  },\n\n  getInletController(): C {\n    const inletController = this.inletController;\n    if (inletController === void 0 || inletController === null) {\n      let message = inletController + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"inlet controller\";\n      throw new TypeError(message);\n    }\n    return inletController;\n  },\n\n  get(): C | null {\n    return this.controller;\n  },\n\n  set(controller: C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (controller instanceof Fastener) {\n      this.bindInlet(controller);\n    } else {\n      this.setController(controller);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(controller: C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (controller instanceof Fastener) {\n      this.bindInlet(controller);\n    } else {\n      this.setController(controller);\n    }\n    return this.owner;\n  },\n\n  controllerKey: void 0,\n\n  getController(): C {\n    const controller = this.controller;\n    if (controller === null) {\n      let message = controller + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"controller\";\n      throw new TypeError(message);\n    }\n    return controller;\n  },\n\n  setController(newController: C  | null, target?: Controller | null, key?: string): C | null {\n    if (newController !== null) {\n      newController = this.fromLike(newController);\n    }\n    let oldController = this.controller;\n    if (oldController === newController) {\n      this.setCoherent(true);\n      return oldController;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let parent: Controller | null;\n    if (this.binds && (parent = this.parentController, parent !== null)) {\n      if (oldController !== null && oldController.parent === parent) {\n        if (target === null) {\n          target = oldController.nextSibling;\n        }\n        oldController.remove();\n      }\n      if (newController !== null) {\n        if (key === void 0) {\n          key = this.controllerKey;\n        }\n        this.insertChild(parent, newController, target, key);\n      }\n      oldController = this.controller;\n      if (oldController === newController) {\n        return oldController;\n      }\n    }\n    if (oldController !== null) {\n      (this as Mutable<typeof this>).controller = null;\n      this.willDetachController(oldController);\n      this.onDetachController(oldController);\n      this.deinitController(oldController);\n      this.didDetachController(oldController);\n    }\n    if (newController !== null) {\n      (this as Mutable<typeof this>).controller = newController;\n      this.willAttachController(newController, target);\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldController;\n  },\n\n  attachController(newController?: C | LikeType<C> | null, target?: Controller | null): C {\n    const oldController = this.controller;\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromLike(newController);\n    } else if (oldController === null) {\n      newController = this.createController();\n    } else {\n      newController = oldController;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldController === newController) {\n      return newController;\n    } else if (oldController !== null) {\n      (this as Mutable<typeof this>).controller = null;\n      this.willDetachController(oldController);\n      this.onDetachController(oldController);\n      this.deinitController(oldController);\n      this.didDetachController(oldController);\n    }\n    (this as Mutable<typeof this>).controller = newController;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newController;\n  },\n\n  detachController(): C | null {\n    const oldController = this.controller;\n    if (oldController === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).controller = null;\n    this.willDetachController(oldController);\n    this.onDetachController(oldController);\n    this.deinitController(oldController);\n    this.didDetachController(oldController);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldController;\n  },\n\n  insertController(parent?: Controller | null, newController?: C | LikeType<C>, target?: Controller | null, key?: string): C {\n    let oldController = this.controller;\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromLike(newController);\n    } else if (oldController === null) {\n      newController = this.createController();\n    } else {\n      newController = oldController;\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && oldController === newController && newController.parent !== null && parent === null && key === void 0) {\n      return newController;\n    }\n    if (parent === null) {\n      parent = this.parentController;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.controllerKey;\n    }\n    if (parent !== null && (newController.parent !== parent || newController.key !== key)) {\n      this.insertChild(parent, newController, target, key);\n    }\n    oldController = this.controller;\n    if (oldController === newController) {\n      return newController;\n    } else if (oldController !== null) {\n      (this as Mutable<typeof this>).controller = null;\n      this.willDetachController(oldController);\n      this.onDetachController(oldController);\n      this.deinitController(oldController);\n      this.didDetachController(oldController);\n      if (this.binds && parent !== null && oldController.parent === parent) {\n        oldController.remove();\n      }\n    }\n    (this as Mutable<typeof this>).controller = newController;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newController;\n  },\n\n  removeController(): C | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    controller.remove();\n    return controller;\n  },\n\n  deleteController(): C | null {\n    const controller = this.detachController();\n    if (controller === null) {\n      return null;\n    }\n    controller.remove();\n    return controller;\n  },\n\n  bindController(controller: Controller, target: Controller | null): void {\n    if (!this.binds || this.controller !== null) {\n      return;\n    }\n    const newController = this.detectController(controller);\n    if (newController === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).controller = newController;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindController(controller: Controller): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldController = this.detectController(controller);\n    if (oldController === null || this.controller !== oldController) {\n      return;\n    }\n    (this as Mutable<typeof this>).controller = null;\n    this.willDetachController(oldController);\n    this.onDetachController(oldController);\n    this.deinitController(oldController);\n    this.didDetachController(oldController);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectController(controller: Controller): C | null {\n    const key = this.controllerKey;\n    if (key !== void 0 && key === controller.key) {\n      return controller as C;\n    }\n    return null;\n  },\n\n  onStartConsuming(): void {\n    const controller = this.controller;\n    if (controller !== null) {\n      controller.consume(this);\n    }\n  },\n\n  onStopConsuming(): void {\n    const controller = this.controller;\n    if (controller !== null) {\n      controller.unconsume(this);\n    }\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ControllerRef) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setController(inlet.controller);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n},\n{\n  tryController<R, K extends keyof R, F extends R[K]>(owner: R, fastenerName: K): (F extends {readonly controller: infer C | null} ? C | null : never) | null {\n    const metaclass = FastenerContextMetaclass.get(owner);\n    const controllerRef = metaclass !== null ? metaclass.tryFastener(owner, fastenerName) : null;\n    return controllerRef instanceof ControllerRef ? controllerRef.controller : null;\n  },\n\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).controller = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ControllerRef<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const controllerKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"controllerKey\");\n    if (controllerKeyDescriptor !== void 0 && \"value\" in controllerKeyDescriptor) {\n      if (controllerKeyDescriptor.value === true) {\n        controllerKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"controllerKey\", controllerKeyDescriptor);\n      } else if (controllerKeyDescriptor.value === false) {\n        controllerKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"controllerKey\", controllerKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Comparator} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerRelationDescriptor} from \"./ControllerRelation\";\nimport type {ControllerRelationClass} from \"./ControllerRelation\";\nimport {ControllerRelation} from \"./ControllerRelation\";\n\n/** @public */\nexport interface ControllerSetDescriptor<R, C extends Controller> extends ControllerRelationDescriptor<R, C> {\n  extends?: Proto<ControllerSet<any, any, any>> | boolean | null;\n  ordered?: boolean;\n  sorted?: boolean;\n}\n\n/** @public */\nexport interface ControllerSetClass<F extends ControllerSet<any, any, any> = ControllerSet<any, any, any>> extends ControllerRelationClass<F> {\n  /** @internal */\n  readonly OrderedFlag: FastenerFlags;\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ControllerSet<R = any, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerRelation<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<ControllerSetDescriptor<R, C>>;\n\n  /** @override */\n  get fastenerType(): Proto<ControllerSet<any, any, any>>;\n\n  /** @override */\n  get parent(): ControllerSet<any, C, any> | null;\n\n  /** @internal @protected */\n  controllerKey(controller: C): string | undefined;\n\n  /** @internal */\n  readonly controllers: {readonly [controllerId: string]: C | undefined};\n\n  readonly controllerCount: number;\n\n  /** @internal */\n  insertControllerMap(newController: C, target: Controller | null): void;\n\n  /** @internal */\n  removeControllerMap(oldController: C): void;\n\n  hasController(controller: Controller): boolean;\n\n  addController(controller?: C | LikeType<C>, target?: Controller | null, key?: string): C;\n\n  addControllers(controllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void;\n\n  setControllers(controllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void;\n\n  attachController(controller?: C | LikeType<C> | null, target?: Controller | null): C;\n\n  attachControllers(controllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void;\n\n  detachController(controller: C): C | null;\n\n  detachControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void;\n\n  insertController(parent?: Controller | null, controller?: C | LikeType<C>, target?: Controller | null, key?: string): C;\n\n  insertControllers(parent: Controller | null, controllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void;\n\n  removeController(controller: C): C | null;\n\n  removeControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void;\n\n  deleteController(controller: C): C | null;\n\n  deleteControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void;\n\n  reinsertController(controller: C, target?: Controller | null): void;\n\n  /** @internal @override */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal @override */\n  unbindController(controller: Controller): void;\n\n  /** @override */\n  detectController(controller: Controller): C | null;\n\n  consumeControllers(consumer: Consumer): void;\n\n  unconsumeControllers(consumer: Consumer): void;\n\n  /** @protected @override */\n  onStartConsuming(): void;\n\n  /** @protected @override */\n  onStopConsuming(): void;\n\n  /** @override */\n  recohere(t: number): void;\n\n  get ordered(): boolean;\n\n  order(ordered?: boolean): this;\n\n  get sorted(): boolean;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Controller | null): void;\n\n  /** @protected */\n  onSort(parent: Controller | null): void;\n\n  /** @protected */\n  didSort(parent: Controller | null): void;\n\n  /** @internal */\n  sortChildren(parent: Controller, comparator?: Comparator<C>): void;\n\n  /** @internal */\n  getTargetChild(parent: Controller, child: C): Controller | null;\n\n  /** @internal */\n  compareChildren(a: Controller, b: Controller): number;\n\n  /** @internal */\n  compareTargetChild(a: Controller, b: Controller): number;\n\n  /** @protected */\n  compare(a: C, b: C): number;\n}\n\n/** @public */\nexport const ControllerSet = (<R, C extends Controller, I extends any[], F extends ControllerSet<any, any, any>>() => ControllerRelation.extend<ControllerSet<R, C, I>, ControllerSetClass<F>>(\"ControllerSet\", {\n  get fastenerType(): Proto<ControllerSet<any, any, any>> {\n    return ControllerSet;\n  },\n\n  controllerKey(controller: C): string | undefined {\n    return void 0;\n  },\n\n  insertControllerMap(newController: C, target: Controller | null): void {\n    const controllers = this.controllers as {[controllerId: string]: C | undefined};\n    if (target !== null && (this.flags & ControllerSet.OrderedFlag) !== 0) {\n      (this as Mutable<typeof this>).controllers = Objects.inserted(controllers, newController.uid, newController, target);\n    } else {\n      controllers[newController.uid] = newController;\n    }\n  },\n\n  removeControllerMap(oldController: C): void {\n    const controllers = this.controllers as {[controllerId: string]: C | undefined};\n    delete controllers[oldController.uid];\n  },\n\n  hasController(controller: Controller): boolean {\n    return this.controllers[controller.uid] !== void 0;\n  },\n\n  addController(newController?: C | LikeType<C>, target?: Controller | null, key?: string): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromLike(newController);\n    } else {\n      newController = this.createController();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: Controller | null;\n    if (this.binds && (parent = this.parentController, parent !== null)) {\n      if (target === null) {\n        if (newController.parent === parent) {\n          target = newController.nextSibling;\n        } else {\n          target = this.getTargetChild(parent, newController);\n        }\n      }\n      if (key === void 0) {\n        key = this.controllerKey(newController);\n      }\n      if (newController.parent !== parent || newController.nextSibling !== target || newController.key !== key) {\n        this.insertChild(parent, newController, target, key);\n      }\n    }\n    if (this.controllers[newController.uid] !== void 0) {\n      return newController;\n    }\n    this.insertControllerMap(newController, target);\n    (this as Mutable<typeof this>).controllerCount += 1;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newController;\n  },\n\n  addControllers(newControllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void {\n    for (const controllerId in newControllers) {\n      this.addController(newControllers[controllerId]!, target);\n    }\n  },\n\n  setControllers(newControllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void {\n    const binds = this.binds;\n    const parent = binds ? this.parentController : null;\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      if (newControllers[controllerId] === void 0) {\n        const oldController = this.detachController(controllers[controllerId]!);\n        if (oldController !== null && binds && parent !== null && oldController.parent === parent) {\n          oldController.remove();\n        }\n      }\n    }\n    if ((this.flags & ControllerSet.OrderedFlag) !== 0) {\n      const orderedControllers = new Array<C>();\n      for (const controllerId in newControllers) {\n        orderedControllers.push(newControllers[controllerId]!);\n      }\n      for (let i = 0, n = orderedControllers.length; i < n; i += 1) {\n        const newController = orderedControllers[i]!;\n        if (controllers[newController.uid] === void 0) {\n          const targetController = i < n + 1 ? orderedControllers[i + 1] : target;\n          this.addController(newController, targetController);\n        }\n      }\n    } else {\n      for (const controllerId in newControllers) {\n        if (controllers[controllerId] === void 0) {\n          this.addController(newControllers[controllerId]!, target);\n        }\n      }\n    }\n  },\n\n  attachController(newController?: C | LikeType<C> | null, target?: Controller | null): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromLike(newController);\n    } else {\n      newController = this.createController();\n    }\n    if (this.controllers[newController.uid] !== void 0) {\n      return newController;\n    } else if (target === void 0) {\n      target = null;\n    }\n    this.insertControllerMap(newController, target);\n    (this as Mutable<typeof this>).controllerCount += 1;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newController;\n  },\n\n  attachControllers(newControllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void {\n    for (const controllerId in newControllers) {\n      this.attachController(newControllers[controllerId]!, target);\n    }\n  },\n\n  detachController(oldController: C): C | null {\n    if (this.controllers[oldController.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).controllerCount -= 1;\n    this.removeControllerMap(oldController);\n    this.willDetachController(oldController);\n    this.onDetachController(oldController);\n    this.deinitController(oldController);\n    this.didDetachController(oldController);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return oldController;\n  },\n\n  detachControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void {\n    if (controllers === void 0) {\n      controllers = this.controllers;\n    }\n    for (const controllerId in controllers) {\n      this.detachController(controllers[controllerId]!);\n    }\n  },\n\n  insertController(parent?: Controller | null, newController?: C | LikeType<C>, target?: Controller | null, key?: string): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromLike(newController);\n    } else {\n      newController = this.createController();\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.binds && this.controllers[newController.uid] !== void 0 && newController.parent !== null && parent === null && key === void 0) {\n      return newController;\n    }\n    if (parent === null) {\n      parent = this.parentController;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.controllerKey(newController);\n    }\n    if (parent !== null && (newController.parent !== parent || newController.key !== key)) {\n      if (target === null) {\n        target = this.getTargetChild(parent, newController);\n      }\n      this.insertChild(parent, newController, target, key);\n    }\n    if (this.controllers[newController.uid] !== void 0) {\n      return newController;\n    }\n    this.insertControllerMap(newController, target);\n    (this as Mutable<typeof this>).controllerCount += 1;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n    return newController;\n  },\n\n  insertControllers(parent: Controller | null, newControllers: {readonly [controllerId: string]: C | undefined}, target?: Controller | null): void {\n    for (const controllerId in newControllers) {\n      this.insertController(parent, newControllers[controllerId]!, target);\n    }\n  },\n\n  removeController(controller: C): C | null {\n    if (!this.hasController(controller)) {\n      return null;\n    }\n    controller.remove();\n    return controller;\n  },\n\n  removeControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void {\n    if (controllers === void 0) {\n      controllers = this.controllers;\n    }\n    for (const controllerId in controllers) {\n      this.removeController(controllers[controllerId]!);\n    }\n  },\n\n  deleteController(controller: C): C | null {\n    const oldController = this.detachController(controller);\n    if (oldController === null) {\n      return null;\n    }\n    oldController.remove();\n    return oldController;\n  },\n\n  deleteControllers(controllers?: {readonly [controllerId: string]: C | undefined}): void {\n    if (controllers === void 0) {\n      controllers = this.controllers;\n    }\n    for (const controllerId in controllers) {\n      this.deleteController(controllers[controllerId]!);\n    }\n  },\n\n  reinsertController(controller: C, target?: Controller | null): void {\n    if (this.controllers[controller.uid] === void 0 || (target === void 0 && (this.flags & ControllerSet.SortedFlag) === 0)) {\n      return;\n    }\n    const parent = controller.parent;\n    if (parent === null) {\n      return;\n    } else if (target === void 0) {\n      target = this.getTargetChild(parent, controller);\n    }\n    parent.reinsertChild(controller, target);\n  },\n\n  bindController(controller: Controller, target: Controller | null): void {\n    if (!this.binds) {\n      return;\n    }\n    const newController = this.detectController(controller);\n    if (newController === null || this.controllers[newController.uid] !== void 0) {\n      return;\n    }\n    this.insertControllerMap(newController, target);\n    (this as Mutable<typeof this>).controllerCount += 1;\n    this.willAttachController(newController, target);\n    this.onAttachController(newController, target);\n    this.initController(newController);\n    this.didAttachController(newController, target);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  unbindController(controller: Controller): void {\n    if (!this.binds) {\n      return;\n    }\n    const oldController = this.detectController(controller);\n    if (oldController === null || this.controllers[oldController.uid] === void 0) {\n      return;\n    }\n    (this as Mutable<typeof this>).controllerCount -= 1;\n    this.removeControllerMap(oldController);\n    this.willDetachController(oldController);\n    this.onDetachController(oldController);\n    this.deinitController(oldController);\n    this.didDetachController(oldController);\n    this.setCoherent(true);\n    this.decohereOutlets();\n  },\n\n  detectController(controller: Controller): C | null {\n    if (typeof this.controllerType === \"function\" && controller instanceof this.controllerType) {\n      return controller as C;\n    }\n    return null;\n  },\n\n  consumeControllers(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      controller.consume(consumer);\n    }\n  },\n\n  unconsumeControllers(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      controller.unconsume(consumer);\n    }\n  },\n\n  onStartConsuming(): void {\n    this.consumeControllers(this);\n  },\n\n  onStopConsuming(): void {\n    this.unconsumeControllers(this);\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof ControllerSet) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setControllers(inlet.controllers);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  get ordered(): boolean {\n    return (this.flags & ControllerSet.OrderedFlag) !== 0;\n  },\n\n  order(ordered?: boolean): typeof this {\n    if (ordered === void 0) {\n      ordered = true;\n    }\n    if (ordered) {\n      this.setFlags(this.flags | ControllerSet.OrderedFlag);\n    } else {\n      this.setFlags(this.flags & ~ControllerSet.OrderedFlag);\n    }\n    return this;\n  },\n\n  get sorted(): boolean {\n    return (this.flags & ControllerSet.SortedFlag) !== 0;\n  },\n\n  sort(sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    if (sorted) {\n      const parent = this.parentController;\n      this.willSort(parent);\n      this.setFlags(this.flags | ControllerSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else {\n      this.setFlags(this.flags & ~ControllerSet.SortedFlag);\n    }\n    return this;\n  },\n\n  willSort(parent: Controller | null): void {\n    // hook\n  },\n\n  onSort(parent: Controller | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  },\n\n  didSort(parent: Controller | null): void {\n    // hook\n  },\n\n  sortChildren(parent: Controller, comparator?: Comparator<C>): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  },\n\n  getTargetChild(parent: Controller, child: C): Controller | null {\n    if ((this.flags & ControllerSet.SortedFlag) !== 0) {\n      return parent.getTargetChild(child, this.compareTargetChild.bind(this));\n    }\n    return null;\n  },\n\n  compareChildren(a: Controller, b: Controller): number {\n    const controllers = this.controllers;\n    const x = controllers[a.uid];\n    const y = controllers[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    }\n    return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n  },\n\n  compareTargetChild(a: C, b: Controller): number {\n    const controllers = this.controllers;\n    const y = controllers[b.uid];\n    if (y !== void 0) {\n      return this.compare(a, y);\n    }\n    return y !== void 0 ? -1 : 0;\n  },\n\n  compare(a: C, b: C): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).controllers = {};\n    (fastener as Mutable<typeof fastener>).controllerCount = 0;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ControllerSet<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    let flagsInit = fastenerPrototype.flagsInit;\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"ordered\")) {\n      if (fastenerPrototype.ordered) {\n        flagsInit |= ControllerSet.OrderedFlag;\n      } else {\n        flagsInit &= ~ControllerSet.OrderedFlag;\n      }\n      delete (fastenerPrototype as ControllerSetDescriptor<any, any>).ordered;\n    }\n    if (Object.prototype.hasOwnProperty.call(fastenerPrototype, \"sorted\")) {\n      if (fastenerPrototype.sorted) {\n        flagsInit |= ControllerSet.SortedFlag;\n      } else {\n        flagsInit &= ~ControllerSet.SortedFlag;\n      }\n      delete (fastenerPrototype as ControllerSetDescriptor<any, any>).sorted;\n    }\n    Object.defineProperty(fastenerPrototype, \"flagsInit\", {\n      value: flagsInit,\n      enumerable: true,\n      configurable: true,\n    });\n  },\n\n  OrderedFlag: 1 << (ControllerRelation.FlagShift + 0),\n  SortedFlag: 1 << (ControllerRelation.FlagShift + 1),\n\n  FlagShift: ControllerRelation.FlagShift + 2,\n  FlagMask: (1 << (ControllerRelation.FlagShift + 2)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Consumable} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {FastenerFlags} from \"@swim/component\";\nimport type {FastenerDescriptor} from \"@swim/component\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport {Model} from \"@swim/model\";\nimport type {TraitFactory} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ViewFactory} from \"@swim/view\";\nimport {View} from \"@swim/view\";\n\n/** @public */\nexport interface TraitViewRefDescriptor<R, T extends Trait, V extends View> extends FastenerDescriptor<R> {\n  extends?: Proto<TraitViewRef<any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n  viewKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitViewRefClass<F extends TraitViewRef<any, any, any> = TraitViewRef<any, any, any>> extends FastenerClass<F> {\n  /** @internal */\n  readonly ConsumingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface TraitViewRef<R = any, T extends Trait = Trait, V extends View = View> extends Fastener<R>, Consumable {\n  /** @override */\n  get descriptorType(): Proto<TraitViewRefDescriptor<R, T, V>>;\n\n  /** @override */\n  get fastenerType(): Proto<TraitViewRef<any, any, any>>;\n\n  get consumed(): boolean | undefined;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get traitKey(): string | undefined;\n\n  get bindsTrait(): boolean;\n\n  get observesTrait(): boolean;\n\n  readonly trait: T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: T | LikeType<T> | null, target?: Trait | null, key?: string): T | null;\n\n  attachTrait(trait?: T | LikeType<T>, target?: Trait | null): T;\n\n  detachTrait(): T | null;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  insertTrait(model?: Model | null, trait?: T | LikeType<T> | null, target?: Trait | null, key?: string): T;\n\n  removeTrait(): T | null;\n\n  deleteTrait(): T | null;\n\n  get parentModel(): Model | null;\n\n  /** @protected */\n  insertChildTrait(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n\n  /** @internal */\n  bindModel(model: Model, targetModel: Model | null): void;\n\n  /** @internal */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal */\n  unbindTrait(trait: Trait): void;\n\n  detectTrait(trait: Trait): T | null;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  get viewType(): ViewFactory<V> | null;\n\n  get viewKey(): string | undefined;\n\n  get bindsView(): boolean;\n\n  get observesView(): boolean;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(view: V | LikeType<V> | null, target?: View | null, key?: string): V | null;\n\n  attachView(view?: V | LikeType<V> | null, target?: View | null): V;\n\n  detachView(): V | null;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  insertView(parent?: View | null, view?: V | LikeType<V> | null, target?: View | null, key?: string): V;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  get parentView(): View | null;\n\n  /** @protected */\n  insertChildView(parent: View, child: V, target: View | null, key: string | undefined): void;\n\n  /** @internal */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  createView(): V;\n\n  /** @internal @protected */\n  fromViewLike(value: V | LikeType<V>): V;\n\n  /** @override */\n  recohere(t: number): void;\n\n  /** @internal */\n  readonly consumers: ReadonlySet<Consumer> | null;\n\n  /** @override */\n  consume(consumer: Consumer): void\n\n  /** @protected */\n  willConsume(consumer: Consumer): void;\n\n  /** @protected */\n  onConsume(consumer: Consumer): void;\n\n  /** @protected */\n  didConsume(consumer: Consumer): void;\n\n  /** @override */\n  unconsume(consumer: Consumer): void\n\n  /** @protected */\n  willUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  onUnconsume(consumer: Consumer): void;\n\n  /** @protected */\n  didUnconsume(consumer: Consumer): void;\n\n  get consuming(): boolean;\n\n  /** @internal */\n  startConsuming(): void;\n\n  /** @protected */\n  willStartConsuming(): void;\n\n  /** @protected */\n  onStartConsuming(): void;\n\n  /** @protected */\n  didStartConsuming(): void;\n\n  /** @internal */\n  stopConsuming(): void;\n\n  /** @protected */\n  willStopConsuming(): void;\n\n  /** @protected */\n  onStopConsuming(): void;\n\n  /** @protected */\n  didStopConsuming(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n}\n\n/** @public */\nexport const TraitViewRef = (<R, T extends Trait, V extends View, F extends TraitViewRef<any, any, any>>() => Fastener.extend<TraitViewRef<R, T, V>, TraitViewRefClass<F>>(\"TraitViewRef\", {\n  get fastenerType(): Proto<TraitViewRef<any, any, any>> {\n    return TraitViewRef;\n  },\n\n  consumed: false,\n\n  traitType: null,\n\n  traitKey: void 0,\n\n  bindsTrait: false,\n\n  observesTrait: false,\n\n  getTrait(): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  },\n\n  setTrait(newTrait: T | LikeType<T> | null, target?: Trait | null, key?: string): T | null {\n    let oldTrait = this.trait;\n    if (newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    }\n    if (oldTrait === newTrait) {\n      return oldTrait;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let model: Model | null;\n    if (this.bindsTrait && (model = this.parentModel, model !== null)) {\n      if (oldTrait !== null && oldTrait.model === model) {\n        if (target === null) {\n          target = oldTrait.nextTrait;\n        }\n        oldTrait.remove();\n      }\n      if (newTrait !== null) {\n        if (key === void 0) {\n          key = this.traitKey;\n        }\n        this.insertChildTrait(model, newTrait, target, key);\n      }\n      oldTrait = this.trait;\n      if (oldTrait === newTrait) {\n        return oldTrait;\n      }\n    }\n    if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    if (newTrait !== null) {\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.willAttachTrait(newTrait, target);\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return oldTrait;\n  },\n\n  attachTrait(newTrait?: T | LikeType<T>, target?: Trait | null): T {\n    const oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    return newTrait;\n  },\n\n  detachTrait(): T | null {\n    const oldTrait = this.trait;\n    if (oldTrait === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n    return oldTrait;\n  },\n\n  initTrait(trait: T): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, target: Trait | null): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, target: Trait | null): void {\n    if (this.observesTrait) {\n      trait.observe(this as Observes<T>);\n    }\n    if ((this.flags & TraitViewRef.ConsumingFlag) !== 0) {\n      trait.consume(this);\n    }\n  },\n\n  didAttachTrait(trait: T, target: Trait | null): void {\n    // hook\n  },\n\n  deinitTrait(trait: T): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T): void {\n    if ((this.flags & TraitViewRef.ConsumingFlag) !== 0) {\n      trait.unconsume(this);\n    }\n    if (this.observesTrait) {\n      trait.unobserve(this as Observes<T>);\n    }\n  },\n\n  didDetachTrait(trait: T): void {\n    // hook\n  },\n\n  insertTrait(model?: Model | null, newTrait?: T | LikeType<T> | null, target?: Trait | null, key?: string): T {\n    let oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromTraitLike(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (model === void 0) {\n      model = null;\n    }\n    if (!this.bindsTrait && oldTrait === newTrait && newTrait.model !== null && model === null && key === void 0) {\n      return newTrait;\n    }\n    if (model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.traitKey;\n    }\n    if (model !== null && (newTrait.model !== model || newTrait.key !== key)) {\n      this.insertChildTrait(model, newTrait, target, key);\n    }\n    oldTrait = this.trait;\n    if (oldTrait === newTrait) {\n      return newTrait;\n    } else if (oldTrait !== null) {\n      (this as Mutable<typeof this>).trait = null;\n      this.willDetachTrait(oldTrait);\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n      if (this.bindsTrait && model !== null && oldTrait.parent === model) {\n        oldTrait.remove();\n      }\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n    return newTrait;\n  },\n\n  removeTrait(): T | null {\n    const trait = this.trait;\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  deleteTrait(): T | null {\n    const trait = this.detachTrait();\n    if (trait === null) {\n      return null;\n    }\n    trait.remove();\n    return trait;\n  },\n\n  get parentModel(): Model | null {\n    const owner = this.owner;\n    if (owner instanceof Model) {\n      return owner;\n    } else if (owner instanceof Trait) {\n      return owner.model;\n    }\n    return null;\n  },\n\n  insertChildTrait(model: Model, trait: T, target: Trait | null, key: string | undefined): void {\n    model.insertTrait(trait, target, key);\n  },\n\n  bindModel(model: Model, targetModel: Model | null): void {\n    if (!this.bindsTrait || this.trait !== null) {\n      return;\n    }\n    const newTrait = this.detectModel(model);\n    if (newTrait === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, null);\n    this.onAttachTrait(newTrait, null);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, null);\n  },\n\n  unbindModel(model: Model): void {\n    if (!this.bindsTrait) {\n      return;\n    }\n    const oldTrait = this.detectModel(model);\n    if (oldTrait === null || this.trait !== oldTrait) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n  },\n\n  detectModel(model: Model): T | null {\n    return null;\n  },\n\n  bindTrait(trait: Trait, target: Trait | null): void {\n    if (!this.bindsTrait || this.trait !== null) {\n      return;\n    }\n    const newTrait = this.detectTrait(trait);\n    if (newTrait === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = newTrait;\n    this.willAttachTrait(newTrait, target);\n    this.onAttachTrait(newTrait, target);\n    this.initTrait(newTrait);\n    this.didAttachTrait(newTrait, target);\n  },\n\n  unbindTrait(trait: Trait): void {\n    if (!this.bindsTrait) {\n      return;\n    }\n    const oldTrait = this.detectTrait(trait);\n    if (oldTrait === null || this.trait !== oldTrait) {\n      return;\n    }\n    (this as Mutable<typeof this>).trait = null;\n    this.willDetachTrait(oldTrait);\n    this.onDetachTrait(oldTrait);\n    this.deinitTrait(oldTrait);\n    this.didDetachTrait(oldTrait);\n  },\n\n  detectTrait(trait: Trait): T | null {\n    const key = this.traitKey;\n    if (key !== void 0 && key === trait.key) {\n      return trait as T;\n    }\n    return null;\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  viewType: null,\n\n  viewKey: void 0,\n\n  bindsView: false,\n\n  observesView: false,\n\n  getView(): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  },\n\n  setView(newView: V | LikeType<V> | null, target?: View | null, key?: string): V | null {\n    if (newView !== null) {\n      newView = this.fromViewLike(newView);\n    }\n    let oldView = this.view;\n    if (oldView === newView) {\n      return oldView;\n    } else if (target === void 0) {\n      target = null;\n    }\n    let parent: View | null;\n    if (this.bindsView && (parent = this.parentView, parent !== null)) {\n      if (oldView !== null && oldView.parent === parent) {\n        if (target === null) {\n          target = oldView.nextSibling;\n        }\n        oldView.remove();\n      }\n      if (newView !== null) {\n        if (key === void 0) {\n          key = this.viewKey;\n        }\n        this.insertChildView(parent, newView, target, key);\n      }\n      oldView = this.view;\n      if (oldView === newView) {\n        return oldView;\n      }\n    }\n    if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    if (newView !== null) {\n      (this as Mutable<typeof this>).view = newView;\n      this.willAttachView(newView, target);\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return oldView;\n  },\n\n  attachView(newView?: V | LikeType<V> | null, target?: View | null): V {\n    const oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    return newView;\n  },\n\n  detachView(): V | null {\n    const oldView = this.view;\n    if (oldView === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).view = null;\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    return oldView;\n  },\n\n  initView(view: V): void {\n    // hook\n  },\n\n  willAttachView(view: V, target: View | null): void {\n    // hook\n  },\n\n  onAttachView(view: V, target: View | null): void {\n    if (this.observesView) {\n      view.observe(this as Observes<V>);\n    }\n  },\n\n  didAttachView(view: V, target: View | null): void {\n    // hook\n  },\n\n  deinitView(view: V): void {\n    // hook\n  },\n\n  willDetachView(view: V): void {\n    // hook\n  },\n\n  onDetachView(view: V): void {\n    if (this.observesView) {\n      view.unobserve(this as Observes<V>);\n    }\n  },\n\n  didDetachView(view: V): void {\n    // hook\n  },\n\n  insertView(parent?: View | null, newView?: V | LikeType<V> | null, target?: View | null, key?: string): V {\n    let oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (!this.bindsView && oldView === newView && newView.parent !== null && parent === null && key === void 0) {\n      return newView;\n    }\n    if (parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.viewKey;\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      this.insertChildView(parent, newView, target, key);\n    }\n    oldView = this.view;\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n      if (this.bindsView && parent !== null && oldView.parent === parent) {\n        oldView.remove();\n      }\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n    return newView;\n  },\n\n  removeView(): V | null {\n    const view = this.view;\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  deleteView(): V | null {\n    const view = this.detachView();\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  get parentView(): View | null {\n    const owner = this.owner;\n    return owner instanceof View ? owner : null;\n  },\n\n  insertChildView(parent: View, child: V, target: View | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  },\n\n  bindView(view: View, target: View | null): void {\n    if (!this.bindsView || this.view !== null) {\n      return;\n    }\n    const newView = this.detectView(view);\n    if (newView === null) {\n      return;\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, target);\n    this.onAttachView(newView, target);\n    this.initView(newView);\n    this.didAttachView(newView, target);\n  },\n\n  unbindView(view: View): void {\n    if (!this.bindsView) {\n      return;\n    }\n    const oldView = this.detectView(view);\n    if (oldView === null || this.view !== oldView) {\n      return;\n    }\n    (this as Mutable<typeof this>).view = null;\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n  },\n\n  detectView(view: View): V | null {\n    const key = this.viewKey;\n    if (key !== void 0 && key === view.key) {\n      return view as V;\n    }\n    return null;\n  },\n\n  createView(): V {\n    let view: V | undefined;\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      view = viewType.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  },\n\n  fromViewLike(value: V | LikeType<V>): V {\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      return viewType.fromLike(value);\n    }\n    return View.fromLike(value) as V;\n  },\n\n  recohere(t: number): void {\n    this.setCoherentTime(t);\n    const inlet = this.inlet;\n    if (inlet instanceof TraitViewRef) {\n      this.setDerived((this.flags & Affinity.Mask) <= Math.min(inlet.flags & Affinity.Mask, Affinity.Intrinsic));\n      if ((this.flags & Fastener.DerivedFlag) !== 0) {\n        this.setTrait(inlet.trait);\n        this.setView(inlet.view);\n        this.setCoherent(true);\n      }\n    } else {\n      this.setDerived(false);\n    }\n  },\n\n  consume(consumer: Consumer): void {\n    let consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null) {\n      consumers = new Set<Consumer>();\n      (this as Mutable<typeof this>).consumers = consumers;\n    } else if (consumers.has(consumer)) {\n      return;\n    }\n    this.willConsume(consumer);\n    consumers.add(consumer);\n    this.onConsume(consumer);\n    this.didConsume(consumer);\n    if (consumers.size === 1 && this.mounted) {\n      this.startConsuming();\n    }\n  },\n\n  willConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didConsume(consumer: Consumer): void {\n    // hook\n  },\n\n  unconsume(consumer: Consumer): void {\n    const consumers = this.consumers as Set<Consumer> | null;\n    if (consumers === null || !consumers.has(consumer)) {\n      return;\n    }\n    this.willUnconsume(consumer);\n    consumers.delete(consumer);\n    this.onUnconsume(consumer);\n    this.didUnconsume(consumer);\n    if (consumers.size === 0) {\n      this.stopConsuming();\n    }\n  },\n\n  willUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  onUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  didUnconsume(consumer: Consumer): void {\n    // hook\n  },\n\n  get consuming(): boolean {\n    return (this.flags & TraitViewRef.ConsumingFlag) !== 0;\n  },\n\n  startConsuming(): void {\n    if ((this.flags & TraitViewRef.ConsumingFlag) !== 0) {\n      return;\n    }\n    this.willStartConsuming();\n    this.setFlags(this.flags | TraitViewRef.ConsumingFlag);\n    this.onStartConsuming();\n    this.didStartConsuming();\n  },\n\n  willStartConsuming(): void {\n    // hook\n  },\n\n  onStartConsuming(): void {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.consume(this);\n    }\n  },\n\n  didStartConsuming(): void {\n    // hook\n  },\n\n  stopConsuming(): void {\n    if ((this.flags & TraitViewRef.ConsumingFlag) === 0) {\n      return;\n    }\n    this.willStopConsuming();\n    this.setFlags(this.flags & ~TraitViewRef.ConsumingFlag);\n    this.onStopConsuming();\n    this.didStopConsuming();\n  },\n\n  willStopConsuming(): void {\n    // hook\n  },\n\n  onStopConsuming(): void {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.unconsume(this);\n    }\n  },\n\n  didStopConsuming(): void {\n    // hook\n  },\n\n  onMount(): void {\n    super.onMount();\n    if (this.consumers !== null && this.consumers.size !== 0) {\n      this.startConsuming();\n    }\n  },\n\n  onUnmount(): void {\n    super.onUnmount();\n    this.stopConsuming();\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).consumers = null;\n    (fastener as Mutable<typeof fastener>).trait = null;\n    (fastener as Mutable<typeof fastener>).view = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitViewRef<any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n\n    const viewKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"viewKey\");\n    if (viewKeyDescriptor !== void 0 && \"value\" in viewKeyDescriptor) {\n      if (viewKeyDescriptor.value === true) {\n        viewKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      } else if (viewKeyDescriptor.value === false) {\n        viewKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      }\n    }\n  },\n\n  ConsumingFlag: 1 << (Fastener.FlagShift + 0),\n\n  FlagShift: Fastener.FlagShift + 1,\n  FlagMask: (1 << (Fastener.FlagShift + 1)) - 1,\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {ViewFactory} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerRefDescriptor} from \"./ControllerRef\";\nimport type {ControllerRefClass} from \"./ControllerRef\";\nimport {ControllerRef} from \"./ControllerRef\";\n\n/** @public */\nexport interface ViewControllerRefDescriptor<R, V extends View, C extends Controller> extends ControllerRefDescriptor<R, C> {\n  extends?: Proto<ViewControllerRef<any, any, any, any>> | boolean | null;\n  viewKey?: string | boolean;\n}\n\n/** @public */\nexport interface ViewControllerRefClass<F extends ViewControllerRef<any, any, any, any> = ViewControllerRef<any, any, any, any>> extends ControllerRefClass<F> {\n}\n\n/** @public */\nexport interface ViewControllerRef<R = any, V extends View = View, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerRef<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<ViewControllerRefDescriptor<R, V, C>>;\n\n  set(viewOrController: V | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(viewOrController: V | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  get viewType(): ViewFactory<V> | null;\n\n  get viewKey(): string | undefined;\n\n  get observesView(): boolean;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(view: V | LikeType<V> | null, targetView?: View | null, controllerKey?: string): V | null;\n\n  attachView(view?: V | LikeType<V> | null, targetView?: View | null): V;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, targetView: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, targetView: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, targetView: View | null): void;\n\n  detachView(): V | null;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  insertView(controller?: C | null, view?: V | LikeType<V>, targetView?: View | null, controllerKey?: string): V;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  createView(): V;\n\n  /** @protected */\n  fromViewLike(value: V | LikeType<V>): V;\n\n  /** @protected */\n  detectControllerView(controller: Controller): V | null;\n\n  /** @protected */\n  insertControllerView(controller: C, view: V | null, targetView: View | null, viewKey: string | undefined): void;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  /** @override */\n  createController(view?: V): C;\n}\n\n/** @public */\nexport const ViewControllerRef = (<R, V extends View, C extends Controller, I extends any[], F extends ViewControllerRef<any, any, any, any>>() => ControllerRef.extend<ViewControllerRef<R, V, C, I>, ViewControllerRefClass<F>>(\"ViewControllerRef\", {\n  set(viewOrController: V | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (viewOrController instanceof Fastener) {\n      this.bindInlet(viewOrController);\n    } else if (viewOrController instanceof View) {\n      this.setView(viewOrController);\n    } else {\n      this.setController(viewOrController);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(viewOrController: V | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (viewOrController instanceof Fastener) {\n      this.bindInlet(viewOrController);\n    } else if (viewOrController instanceof View) {\n      this.setView(viewOrController);\n    } else {\n      this.setController(viewOrController);\n    }\n    return this.owner;\n  },\n\n  viewType: null,\n\n  viewKey: void 0,\n\n  observesView: false,\n\n  getView(): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  },\n\n  setView(newView: V | LikeType<V> | null, targetView?: View | null, controllerKey?: string): V | null {\n    if (newView !== null) {\n      newView = this.fromViewLike(newView);\n    }\n    let oldView = this.view;\n    if (oldView === newView) {\n      return oldView;\n    } else if (targetView === void 0) {\n      targetView = null;\n    }\n    let controller = this.controller;\n    if (controller === null && newView !== null) {\n      controller = this.createController(newView);\n      this.setController(controller, null, controllerKey);\n    }\n    if (controller !== null) {\n      if (oldView !== null) {\n        if (targetView === null) {\n          targetView = oldView.nextSibling;\n        }\n        oldView.remove();\n      }\n      if (newView !== null) {\n        this.insertControllerView(controller, newView, targetView, this.viewKey);\n      }\n      oldView = this.view;\n      if (oldView === newView) {\n        return oldView;\n      }\n    }\n    if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    if (newView !== null) {\n      (this as Mutable<typeof this>).view = newView;\n      this.willAttachView(newView, targetView);\n      this.onAttachView(newView, targetView);\n      this.initView(newView);\n      this.didAttachView(newView, targetView);\n    }\n    return oldView;\n  },\n\n  attachView(newView?: V | LikeType<V> | null, targetView?: View | null): V {\n    let oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    let controller = this.controller;\n    if (controller === null) {\n      controller = this.createController(newView);\n      this.attachController(controller);\n      oldView = this.view;\n    }\n    if (targetView === void 0) {\n      targetView = null;\n    }\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, targetView);\n    this.onAttachView(newView, targetView);\n    this.initView(newView);\n    this.didAttachView(newView, targetView);\n    return newView;\n  },\n\n  initView(view: V): void {\n    // hook\n  },\n\n  willAttachView(view: V, targetView: View | null): void {\n    // hook\n  },\n\n  onAttachView(view: V, targetView: View | null): void {\n    if (this.observesView) {\n      view.observe(this as Observes<V>);\n    }\n  },\n\n  didAttachView(view: V, targetView: View | null): void {\n    // hook\n  },\n\n  detachView(): V | null {\n    const oldView = this.view;\n    if (oldView === null) {\n      return null;\n    }\n    (this as Mutable<typeof this>).view = null;\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    return oldView;\n  },\n\n  deinitView(view: V): void {\n    // hook\n  },\n\n  willDetachView(view: V): void {\n    // hook\n  },\n\n  onDetachView(view: V): void {\n    if (this.observesView) {\n      view.unobserve(this as Observes<V>);\n    }\n  },\n\n  didDetachView(view: V): void {\n    // hook\n  },\n\n  insertView(controller?: C | null, newView?: V | LikeType<V>, targetView?: View | null, controllerKey?: string): V {\n    let oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (controller === void 0) {\n      controller = null;\n    }\n    if (oldView === newView && controller === null) {\n      return newView;\n    }\n    if (controller === null) {\n      controller = this.createController(newView);\n      this.insertController(null, controller);\n    }\n    if (targetView === void 0) {\n      targetView = null;\n    }\n    if (controller !== null) {\n      this.insertControllerView(controller, newView, targetView, this.viewKey);\n    }\n    oldView = this.view;\n    if (oldView === newView) {\n      return newView;\n    } else if (oldView !== null) {\n      (this as Mutable<typeof this>).view = null;\n      this.willDetachView(oldView);\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n      oldView.remove();\n    }\n    (this as Mutable<typeof this>).view = newView;\n    this.willAttachView(newView, targetView);\n    this.onAttachView(newView, targetView);\n    this.initView(newView);\n    this.didAttachView(newView, targetView);\n    return newView;\n  },\n\n  removeView(): V | null {\n    const view = this.view;\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  deleteView(): V | null {\n    const view = this.detachView();\n    if (view === null) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  createView(): V {\n    let view: V | undefined;\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      view = viewType.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  },\n\n  fromViewLike(value: V | LikeType<V>): V {\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      return viewType.fromLike(value);\n    }\n    return View.fromLike(value) as V;\n  },\n\n  detectControllerView(controller: Controller): V | null {\n    return null; // hook\n  },\n\n  insertControllerView(controller: C, view: V, targetView: View | null, viewKey: string | undefined): void {\n    // hook\n  },\n\n  onAttachController(controller: C, targetController: Controller | null): void {\n    const view = this.detectControllerView(controller);\n    if (view !== null) {\n      const targetView = targetController !== null ? this.detectControllerView(targetController) : null;\n      this.attachView(view, targetView);\n    }\n    super.onAttachController(controller, targetController);\n  },\n\n  onDetachController(controller: C): void {\n    super.onDetachController(controller);\n    const view = this.detectControllerView(controller);\n    if (view !== null && view === this.view) {\n      this.detachView();\n    }\n  },\n\n  createController(view?: V): C {\n    const controller = super.createController() as C;\n    if (view === void 0) {\n      view = this.createView();\n    }\n    this.insertControllerView(controller, view, null, this.viewKey);\n    return controller;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).view = null;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<ViewControllerRef<any, any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const viewKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"viewKey\");\n    if (viewKeyDescriptor !== void 0 && \"value\" in viewKeyDescriptor) {\n      if (viewKeyDescriptor.value === true) {\n        viewKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      } else if (viewKeyDescriptor.value === false) {\n        viewKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {ViewFactory} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerSetDescriptor} from \"./ControllerSet\";\nimport type {ControllerSetClass} from \"./ControllerSet\";\nimport {ControllerSet} from \"./ControllerSet\";\n\n/** @public */\nexport interface ViewControllerSetDescriptor<R, V extends View, C extends Controller> extends ControllerSetDescriptor<R, C> {\n  extends?: Proto<ViewControllerSet<any, any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface ViewControllerSetClass<F extends ViewControllerSet<any, any, any, any> = ViewControllerSet<any, any, any, any>> extends ControllerSetClass<F> {\n}\n\n/** @public */\nexport interface ViewControllerSet<R = any, V extends View = View, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerSet<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<ViewControllerSetDescriptor<R, V, C>>;\n\n  get viewType(): ViewFactory<V> | null;\n\n  /** @protected */\n  viewKey(view: V): string | undefined;\n\n  get observesView(): boolean;\n\n  /** @internal */\n  readonly viewControllers: {readonly [viewId: string]: C | undefined};\n\n  getViewController(view: V): C | null;\n\n  /** @protected */\n  associateViewController(view: V, controller: C): void;\n\n  /** @protected */\n  dissociateViewController(view: V, controller: C): void;\n\n  /** @internal */\n  readonly views: {readonly [viewId: string]: V | undefined};\n\n  readonly viewCount: number;\n\n  hasView(view: View): boolean;\n\n  addView(view?: V | LikeType<V>, targetController?: Controller | null, controllerKey?: string): V;\n\n  addViews(views: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void;\n\n  setViews(views: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void;\n\n  attachView(view?: V | LikeType<V> | null, targetController?: Controller | null): V;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, targetController: Controller | null): void;\n\n  /** @protected */\n  onAttachView(view: V, targetController: Controller | null): void;\n\n  /** @protected */\n  didAttachView(view: V, targetController: Controller | null): void;\n\n  attachViews(views: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void;\n\n  detachView(view: V): V | null;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  detachViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  insertView(parent?: Controller | null, view?: V | LikeType<V>, targetController?: Controller | null, controllerKey?: string): V;\n\n  insertViews(parent: Controller | null, views: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void;\n\n  removeView(view: V): V | null;\n\n  removeViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  deleteView(view: V): V | null;\n\n  deleteViews(views?: {readonly [viewId: string]: V | undefined}): void;\n\n  reinsertView(view: V, targetView?: V | null): void;\n\n  createView(): V;\n\n  /** @protected */\n  fromViewLike(value: V | LikeType<V>): V;\n\n  /** @protected */\n  detectControllerView(controller: Controller): V | null;\n\n  /** @protected */\n  insertControllerView(controller: C, view: V | null, targetView: View | null, viewKey: string | undefined): void;\n\n  /** @override */\n  detectController(controller: Controller): C | null;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  /** @override */\n  createController(view?: V): C;\n\n  /** @protected @override */\n  compare(a: C, b: C): number;\n\n  /** @protected */\n  compareViews(a: V, b: V): number;\n}\n\n/** @public */\nexport const ViewControllerSet = (<R, V extends View, C extends Controller, I extends any[], F extends ViewControllerSet<any, any, any, any>>() => ControllerSet.extend<ViewControllerSet<R, V, C, I>, ViewControllerSetClass<F>>(\"ViewControllerSet\", {\n  viewType: null,\n\n  viewKey(view: V): string | undefined {\n    return void 0;\n  },\n\n  observesView: false,\n\n  getViewController(view: V): C | null {\n    const controller = this.viewControllers[view.uid];\n    return controller !== void 0 ? controller : null;\n  },\n\n  associateViewController(view: V, controller: C): void {\n    const viewControllers = this.viewControllers as {[viewId: string]: C | undefined};\n    viewControllers[view.uid] = controller;\n  },\n\n  dissociateViewController(view: V, controller: C): void {\n    const viewControllers = this.viewControllers as {[viewId: string]: C | undefined};\n    delete viewControllers[view.uid];\n  },\n\n  hasView(view: View): boolean {\n    return this.views[view.uid] !== void 0;\n  },\n\n  addView(newView?: V | LikeType<V>, targetController?: Controller | null, controllerKey?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    let controller = this.getViewController(newView);\n    if (controller === null) {\n      controller = this.createController(newView);\n    }\n    this.addController(controller, targetController, controllerKey);\n    return newView;\n  },\n\n  addViews(newViews: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void {\n    for (const viewId in newViews) {\n      this.addView(newViews[viewId]!, targetController);\n    }\n  },\n\n  setViews(newViews: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void {\n    const views = this.views;\n    for (const viewId in views) {\n      if (newViews[viewId] === void 0) {\n        this.detachView(views[viewId]!);\n      }\n    }\n    for (const viewId in newViews) {\n      if (views[viewId] === void 0) {\n        this.attachView(newViews[viewId]!, targetController);\n      }\n    }\n  },\n\n  attachView(newView?: V | LikeType<V> | null, targetController?: Controller | null): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    const views = this.views as {[viewId: string]: V | undefined};\n    if (views[newView.uid] !== void 0) {\n      return newView;\n    }\n    views[newView.uid] = newView;\n    (this as Mutable<typeof this>).viewCount += 1;\n    if (targetController === void 0) {\n      targetController = null;\n    }\n    let controller = this.getViewController(newView);\n    if (controller === null) {\n      controller = this.createController(newView);\n    }\n    this.attachController(controller, targetController);\n    this.willAttachView(newView, targetController);\n    this.onAttachView(newView, targetController);\n    this.initView(newView);\n    this.didAttachView(newView, targetController);\n    return newView;\n  },\n\n  initView(view: V): void {\n    // hook\n  },\n\n  willAttachView(view: V, targetController: Controller | null): void {\n    // hook\n  },\n\n  onAttachView(view: V, targetController: Controller | null): void {\n    if (this.observesView) {\n      view.observe(this as Observes<V>);\n    }\n  },\n\n  didAttachView(view: V, targetController: Controller | null): void {\n    // hook\n  },\n\n  attachViews(newViews: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void {\n    for (const viewId in newViews) {\n      this.attachView(newViews[viewId]!, targetController);\n    }\n  },\n\n  detachView(oldView: V): V | null {\n    const views = this.views as {[viewId: string]: V | undefined};\n    if (views[oldView.uid] === void 0) {\n      return null;\n    }\n    (this as Mutable<typeof this>).viewCount -= 1;\n    delete views[oldView.uid];\n    this.willDetachView(oldView);\n    this.onDetachView(oldView);\n    this.deinitView(oldView);\n    this.didDetachView(oldView);\n    const controller = this.getViewController(oldView);\n    if (controller !== null) {\n      this.detachController(controller);\n    }\n    return oldView;\n  },\n\n  deinitView(view: V): void {\n    // hook\n  },\n\n  willDetachView(view: V): void {\n    // hook\n  },\n\n  onDetachView(view: V): void {\n    if (this.observesView) {\n      view.unobserve(this as Observes<V>);\n    }\n  },\n\n  didDetachView(view: V): void {\n    // hook\n  },\n\n  detachViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.detachView(views[viewId]!);\n    }\n  },\n\n  insertView(parent?: Controller | null, newView?: V | LikeType<V>, targetController?: Controller | null, controllerKey?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromViewLike(newView);\n    } else {\n      newView = this.createView();\n    }\n    let controller = this.getViewController(newView);\n    if (controller === null) {\n      controller = this.createController(newView);\n    }\n    this.insertController(parent, controller, targetController, controllerKey);\n    return newView;\n  },\n\n  insertViews(parent: Controller | null, newViews: {readonly [viewId: string]: V | undefined}, targetController?: Controller | null): void {\n    for (const viewId in newViews) {\n      this.insertView(parent, newViews[viewId]!, targetController);\n    }\n  },\n\n  removeView(view: V): V | null {\n    if (!this.hasView(view)) {\n      return null;\n    }\n    view.remove();\n    return view;\n  },\n\n  removeViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.removeView(views[viewId]!);\n    }\n  },\n\n  deleteView(view: V): V | null {\n    const oldView = this.detachView(view);\n    if (oldView === null) {\n      return null;\n    }\n    oldView.remove();\n    return oldView;\n  },\n\n  deleteViews(views?: {readonly [viewId: string]: V | undefined}): void {\n    if (views === void 0) {\n      views = this.views;\n    }\n    for (const viewId in views) {\n      this.deleteView(views[viewId]!);\n    }\n  },\n\n  reinsertView(view: V, targetView: V | null): void {\n    const controller = this.getViewController(view);\n    if (controller === null) {\n      return;\n    }\n    const targetController = targetView !== null ? this.getViewController(targetView) : null;\n    this.reinsertController(controller, targetController);\n  },\n\n  createView(): V {\n    let view: V | undefined;\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      view = viewType.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  },\n\n  fromViewLike(value: V | LikeType<V>): V {\n    const viewType = this.viewType;\n    if (viewType !== null) {\n      return viewType.fromLike(value);\n    }\n    return View.fromLike(value) as V;\n  },\n\n  detectControllerView(controller: Controller): V | null {\n    return null; // hook\n  },\n\n  insertControllerView(controller: C, view: V, targetView: View | null, viewKey: string | undefined): void {\n    // hook\n  },\n\n  detectController(controller: Controller): C | null {\n    if (this.detectControllerView(controller) !== null) {\n      return controller as C;\n    }\n    return null;\n  },\n\n  onAttachController(controller: C, targetController: Controller | null): void {\n    const view = this.detectControllerView(controller);\n    if (view !== null) {\n      this.associateViewController(view, controller);\n      this.attachView(view, targetController);\n    }\n    super.onAttachController(controller, targetController);\n  },\n\n  onDetachController(controller: C): void {\n    super.onDetachController(controller);\n    const view = this.detectControllerView(controller);\n    if (view !== null) {\n      this.detachView(view);\n      this.dissociateViewController(view, controller);\n    }\n  },\n\n  createController(view?: V): C {\n    const controller = super.createController() as C;\n    if (view === void 0) {\n      view = this.createView();\n    }\n    const viewKey = this.viewKey(view);\n    this.insertControllerView(controller, view, null, viewKey);\n    return controller;\n  },\n\n  compare(a: C, b: C): number {\n    const x = this.detectControllerView(a);\n    const y = this.detectControllerView(b);\n    if (x !== null && y !== null) {\n      return this.compareViews(x, y);\n    }\n    return x !== null ? 1 : y !== null ? -1 : 0;\n  },\n\n  compareViews(a: V, b: V): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).viewControllers = {};\n    (fastener as Mutable<typeof fastener>).views = {};\n    (fastener as Mutable<typeof fastener>).viewCount = 0;\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {TraitFactory} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {TraitRef} from \"@swim/model\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerRefDescriptor} from \"./ControllerRef\";\nimport type {ControllerRefClass} from \"./ControllerRef\";\nimport {ControllerRef} from \"./ControllerRef\";\n\n/** @public */\nexport interface TraitControllerRefDescriptor<R, T extends Trait, C extends Controller> extends ControllerRefDescriptor<R, C> {\n  extends?: Proto<TraitControllerRef<any, any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitControllerRefClass<F extends TraitControllerRef<any, any, any, any> = TraitControllerRef<any, any, any, any>> extends ControllerRefClass<F> {\n}\n\n/** @public */\nexport interface TraitControllerRef<R = any, T extends Trait = Trait, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerRef<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitControllerRefDescriptor<R, T, C>>;\n\n  getTraitRef(controller: C): TraitRef<any, T>;\n\n  /** @override */\n  set(traitOrController: T | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  /** @override */\n  setIntrinsic(traitOrController: T | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get traitKey(): string | undefined;\n\n  get trait(): T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: T | LikeType<T> | null, targetTrait?: Trait | null, key?: string): C | null;\n\n  attachTrait(trait?: T | LikeType<T> | null, targetTrait?: Trait | null): C;\n\n  /** @protected */\n  initTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  detachTrait(trait?: T): C | null;\n\n  /** @protected */\n  deinitTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  onDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  didDetachTrait(trait: T, controller: C): void;\n\n  insertTrait(parent?: Controller | null, trait?: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  removeTrait(trait: T | null): C | null;\n\n  deleteTrait(trait: T | null): C | null;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitControllerRef = (<R, T extends Trait, C extends Controller, I extends any[], F extends TraitControllerRef<any, any, any, any>>() => ControllerRef.extend<TraitControllerRef<R, T, C, I>, TraitControllerRefClass<F>>(\"TraitControllerRef\", {\n  getTraitRef(controller: C): TraitRef<any, T> {\n    throw new Error(\"missing implementation\");\n  },\n\n  set(traitOrController: T | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (traitOrController instanceof Fastener) {\n      this.bindInlet(traitOrController);\n    } else if (traitOrController instanceof Trait) {\n      this.setTrait(traitOrController);\n    } else {\n      this.setController(traitOrController);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(traitOrController: T | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (traitOrController instanceof Fastener) {\n      this.bindInlet(traitOrController);\n    } else if (traitOrController instanceof Trait) {\n      this.setTrait(traitOrController);\n    } else {\n      this.setController(traitOrController);\n    }\n    return this.owner;\n  },\n\n  traitType: null,\n\n  traitKey: void 0,\n\n  get trait(): T | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitRef = this.getTraitRef(controller);\n    return traitRef.trait;\n  },\n\n  getTrait(): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  },\n\n  setTrait(trait: T | LikeType<T> | null, targetTrait?: Trait | null, key?: string): C | null {\n    let controller = this.controller;\n    if (trait !== null) {\n      trait = this.fromTraitLike(trait);\n      if (controller === null) {\n        controller = this.createController(trait);\n      }\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(trait, targetTrait, this.traitKey);\n      this.setController(controller, null, key);\n    } else if (controller !== null) {\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(null);\n    }\n    return controller;\n  },\n\n  attachTrait(trait?: T | LikeType<T> | null, targetTrait?: Trait | null): C {\n    if (trait === void 0 || trait === null) {\n      trait = this.createTrait();\n    } else {\n      trait = this.fromTraitLike(trait);\n    }\n    let controller = this.controller;\n    if (controller === null) {\n      controller = this.createController(trait);\n    }\n    const traitRef = this.getTraitRef(controller);\n    traitRef.setTrait(trait, targetTrait, this.traitKey);\n    this.attachController(controller, null);\n    return controller;\n  },\n\n  initTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  detachTrait(trait?: T): C | null {\n    const controller = this.controller;\n    if (controller === null || this.getTraitRef(controller).trait !== trait) {\n      return null;\n    }\n    this.willDetachTrait(trait, controller);\n    this.onDetachTrait(trait, controller);\n    this.deinitTrait(trait, controller);\n    this.didDetachTrait(trait, controller);\n    return controller;\n  },\n\n  deinitTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  didDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  insertTrait(parent?: Controller | null, trait?: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    if (trait === void 0 || trait === null) {\n      trait = this.createTrait();\n    } else {\n      trait = this.fromTraitLike(trait);\n    }\n    let controller = this.controller;\n    if (controller === null) {\n      controller = this.createController(trait);\n    }\n    const traitRef = this.getTraitRef(controller);\n    traitRef.setTrait(trait, targetTrait, this.traitKey);\n    this.insertController(parent, controller);\n    return controller;\n  },\n\n  removeTrait(trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitRef = this.getTraitRef(controller);\n    if (traitRef.trait !== trait) {\n      return null;\n    }\n    controller.remove();\n    return controller;\n  },\n\n  deleteTrait(trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitRef = this.getTraitRef(controller);\n    if (traitRef.trait !== trait) {\n      return null;\n    }\n    controller.remove();\n    this.setController(null);\n    return controller;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  onAttachController(controller: C, targetController: Controller | null): void {\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      const targetTrait = targetController !== null ? this.getTraitRef(targetController as C).trait : null;\n      this.attachTrait(trait, targetTrait);\n    }\n    super.onAttachController(controller, targetController);\n  },\n\n  onDetachController(controller: C): void {\n    super.onDetachController(controller);\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      this.detachTrait(trait);\n    }\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitControllerRef<any, any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {TraitFactory} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {TraitRef} from \"@swim/model\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerSetDescriptor} from \"./ControllerSet\";\nimport type {ControllerSetClass} from \"./ControllerSet\";\nimport {ControllerSet} from \"./ControllerSet\";\n\n/** @public */\nexport interface TraitControllerSetDescriptor<R, T extends Trait, C extends Controller> extends ControllerSetDescriptor<R, C> {\n  extends?: Proto<TraitControllerSet<any, any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface TraitControllerSetClass<F extends TraitControllerSet<any, any, any, any> = TraitControllerSet<any, any, any, any>> extends ControllerSetClass<F> {\n}\n\n/** @public */\nexport interface TraitControllerSet<R = any, T extends Trait = Trait, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerSet<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitControllerSetDescriptor<R, T, C>>;\n\n  get traitType(): TraitFactory<T> | null;\n\n  getTraitRef(controller: C): TraitRef<any, T>;\n\n  /** @internal */\n  readonly traitControllers: {readonly [traitId: string]: C | undefined};\n\n  hasTrait(trait: Trait): boolean;\n\n  addTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  addTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  setTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  attachTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, controller?: C): C;\n\n  /** @protected */\n  initTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  attachTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  detachTrait(trait: T): C | null;\n\n  /** @protected */\n  deinitTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  onDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  didDetachTrait(trait: T, controller: C): void;\n\n  detachTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  insertTrait(parent: Controller | null | undefined, trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  insertTraits(parent: Controller | null | undefined, traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null, key?: string): void;\n\n  removeTrait(trait: T): C | null;\n\n  removeTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  deleteTrait(trait: T): C | null;\n\n  deleteTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  reinsertTrait(trait: T, targetTrait?: T | null): void;\n\n  consumeTraits(consumer: Consumer): void;\n\n  unconsumeTraits(consumer: Consumer): void;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  /** @override */\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitControllerSet = (<R, T extends Trait, C extends Controller, I extends any[], F extends TraitControllerSet<any, any, any, any>>() => ControllerSet.extend<TraitControllerSet<R, T, C, I>, TraitControllerSetClass<F>>(\"TraitControllerSet\", {\n  getTraitRef(controller: C): TraitRef<any, T> {\n    throw new Error(\"missing implementation\");\n  },\n\n  traitType: null,\n\n  hasTrait(trait: Trait): boolean {\n    return this.traitControllers[trait.uid] !== void 0;\n  },\n\n  addTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller !== void 0) {\n      return controller;\n    } else if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    controller = this.createController(trait);\n    const traitRef = this.getTraitRef(controller);\n    traitRef.setTrait(trait, targetTrait, key);\n    const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n    this.addController(controller, targetController, key);\n    return controller;\n  },\n\n  addTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.addTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  setTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    const binds = this.binds;\n    const parent = binds ? this.parentController : null;\n    const traitControllers = this.traitControllers;\n    for (const traitId in traitControllers) {\n      if (newTraits[traitId] === void 0) {\n        const oldController = this.detachController(traitControllers[traitId]!);\n        if (oldController !== null && binds && parent !== null && oldController.parent === parent) {\n          oldController.remove();\n        }\n      }\n    }\n    if ((this.flags & ControllerSet.OrderedFlag) !== 0) {\n      const orderedTraits = new Array<T>();\n      for (const traitId in newTraits) {\n        orderedTraits.push(newTraits[traitId]!);\n      }\n      for (let i = 0, n = orderedTraits.length; i < n; i += 1) {\n        const newController = orderedTraits[i]!;\n        if (traitControllers[newController.uid] === void 0) {\n          const targetTrait = i < n + 1 ? orderedTraits[i + 1] : target;\n          this.addTrait(newController, targetTrait);\n        }\n      }\n    } else {\n      for (const traitId in newTraits) {\n        if (traitControllers[traitId] === void 0) {\n          this.addTrait(newTraits[traitId]!, target);\n        }\n      }\n    }\n  },\n\n  attachTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, controller?: C): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    if (controller === void 0) {\n      controller = traitControllers[trait.uid];\n    }\n    if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    if (controller === void 0) {\n      controller = this.createController();\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(trait, targetTrait);\n      const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n      this.attachController(controller, targetController);\n    }\n    if (traitControllers[trait.uid] !== void 0) {\n      return controller;\n    }\n    traitControllers[trait.uid] = controller;\n    this.willAttachTrait(trait, targetTrait, controller);\n    this.onAttachTrait(trait, targetTrait, controller);\n    this.initTrait(trait, controller);\n    this.didAttachTrait(trait, targetTrait, controller);\n    return controller;\n  },\n\n  initTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  attachTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.attachTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  detachTrait(trait: T): C | null {\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    const controller = traitControllers[trait.uid];\n    if (controller === void 0) {\n      return null;\n    }\n    delete traitControllers[trait.uid];\n    this.willDetachTrait(trait, controller);\n    this.onDetachTrait(trait, controller);\n    this.deinitTrait(trait, controller);\n    this.didDetachTrait(trait, controller);\n    return controller;\n  },\n\n  deinitTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  didDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  detachTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.detachTrait(traits[traitId]!);\n    }\n  },\n\n  insertTrait(parent: Controller | null | undefined, trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller !== void 0) {\n      return controller;\n    } else if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    controller = this.createController();\n    const traitRef = this.getTraitRef(controller);\n    traitRef.setTrait(trait, targetTrait);\n    const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n    this.insertController(parent, controller, targetController, key);\n    return controller;\n  },\n\n  insertTraits(parent: Controller | null | undefined, newTraits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null, key?: string): void {\n    for (const traitId in newTraits) {\n      this.insertTrait(parent, newTraits[traitId]!, targetTrait, key);\n    }\n  },\n\n  removeTrait(trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait !== trait) {\n        continue;\n      }\n      this.removeController(controller);\n      return controller;\n    }\n    return null;\n  },\n\n  removeTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.removeTrait(traits[traitId]!);\n    }\n  },\n\n  deleteTrait(trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait !== trait) {\n        continue;\n      }\n      this.deleteController(controller);\n      return controller;\n    }\n    return null;\n  },\n\n  deleteTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.deleteTrait(traits[traitId]!);\n    }\n  },\n\n  reinsertTrait(trait: T, targetTrait: T | null): void {\n    const controller = this.traitControllers[trait.uid];\n    if (controller === void 0) {\n      return;\n    }\n    const targetController = targetTrait !== null ? this.traitControllers[targetTrait.uid] : void 0;\n    this.reinsertController(controller, targetController !== void 0 ? targetController : null);\n  },\n\n  consumeTraits(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const trait = this.getTraitRef(controller).trait;\n      if (trait !== null) {\n        trait.consume(consumer);\n      }\n    }\n  },\n\n  unconsumeTraits(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const trait = this.getTraitRef(controller).trait;\n      if (trait !== null) {\n        trait.unconsume(consumer);\n      }\n    }\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  onAttachController(controller: C, targetController: Controller | null): void {\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      const targetTrait = targetController !== null && this.hasController(targetController) ? this.getTraitRef(targetController as C).trait : null;\n      this.attachTrait(trait, targetTrait, controller);\n    }\n    super.onAttachController(controller, targetController);\n  },\n\n  onDetachController(controller: C): void {\n    super.onDetachController(controller);\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      this.detachTrait(trait);\n    }\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traitControllers = {};\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {FastenerClass} from \"@swim/component\";\nimport {Fastener} from \"@swim/component\";\nimport type {TraitFactory} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ViewFactory} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerRefDescriptor} from \"./ControllerRef\";\nimport type {ControllerRefClass} from \"./ControllerRef\";\nimport {ControllerRef} from \"./ControllerRef\";\nimport type {TraitViewRef} from \"./TraitViewRef\";\n\n/** @public */\nexport interface TraitViewControllerRefDescriptor<R, T extends Trait, V extends View, C extends Controller> extends ControllerRefDescriptor<R, C> {\n  extends?: Proto<TraitViewControllerRef<any, any, any, any, any>> | boolean | null;\n  traitKey?: string | boolean;\n  viewKey?: string | boolean;\n}\n\n/** @public */\nexport interface TraitViewControllerRefClass<F extends TraitViewControllerRef<any, any, any, any, any> = TraitViewControllerRef<any, any, any, any, any>> extends ControllerRefClass<F> {\n}\n\n/** @public */\nexport interface TraitViewControllerRef<R = any, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerRef<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitViewControllerRefDescriptor<R, T, V, C>>;\n\n  getTraitViewRef(controller: C): TraitViewRef<any, T, V>;\n\n  set(traitOrViewOrController: T | V | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  setIntrinsic(traitOrViewOrController: T | V | C | LikeType<C> | Fastener<any, I[0], any> | null): R;\n\n  get traitType(): TraitFactory<T> | null;\n\n  get traitKey(): string | undefined;\n\n  get trait(): T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: T | LikeType<T> | null, targetTrait?: Trait | null, key?: string): C | null;\n\n  attachTrait(trait?: T | LikeType<T> | null, targetTrait?: Trait | null): C;\n\n  /** @protected */\n  initTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  detachTrait(trait?: T): C | null;\n\n  /** @protected */\n  deinitTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  onDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  didDetachTrait(trait: T, controller: C): void;\n\n  insertTrait(parent?: Controller | null, trait?: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  removeTrait(trait: T | null): C | null;\n\n  deleteTrait(trait: T | null): C | null;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  get viewType(): ViewFactory<V> | null;\n\n  get viewKey(): string | undefined;\n\n  get view(): V | null;\n\n  getView(): V;\n\n  setView(view: V | LikeType<V> | null, targetView?: View | null, key?: string): V | null;\n\n  attachView(view?: V | LikeType<V> | null, targetView?: View | null): V;\n\n  detachView(): V | null;\n\n  get parentView(): View | null;\n\n  insertView(parentView?: View | null, view?: V | LikeType<V>, targetView?: View | null, key?: string): V;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  createView(): V | null;\n\n  /** @protected */\n  fromViewLike(value: V | LikeType<V>): V | LikeType<V>;\n\n  /** @override */\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitViewControllerRef = (<R, T extends Trait, V extends View, C extends Controller, I extends any[], F extends TraitViewControllerRef<any, any, any, any, any>>() => ControllerRef.extend<TraitViewControllerRef<R, T, V, C, I>, TraitViewControllerRefClass<F>>(\"TraitViewControllerRef\", {\n  getTraitViewRef(controller: C): TraitViewRef<any, T, V> {\n    throw new Error(\"missing implementation\");\n  },\n\n  set(traitOrViewOrController: T | V | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (traitOrViewOrController instanceof Fastener) {\n      this.bindInlet(traitOrViewOrController);\n    } else if (traitOrViewOrController instanceof Trait) {\n      this.setTrait(traitOrViewOrController);\n    } else if (traitOrViewOrController instanceof View) {\n      this.setView(traitOrViewOrController);\n    } else {\n      this.setController(traitOrViewOrController);\n    }\n    return this.owner;\n  },\n\n  setIntrinsic(traitOrViewOrController: T | V | C | LikeType<C> | Fastener<any, I[0], any> | null): R {\n    if (traitOrViewOrController instanceof Fastener) {\n      this.bindInlet(traitOrViewOrController);\n    } else if (traitOrViewOrController instanceof Trait) {\n      this.setTrait(traitOrViewOrController);\n    } else if (traitOrViewOrController instanceof View) {\n      this.setView(traitOrViewOrController);\n    } else {\n      this.setController(traitOrViewOrController);\n    }\n    return this.owner;\n  },\n\n  traitType: null,\n\n  traitKey: void 0,\n\n  get trait(): T | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.trait;\n  },\n\n  getTrait(): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  },\n\n  setTrait(trait: T | LikeType<T> | null, targetTrait?: Trait | null, key?: string): C | null {\n    let controller = this.controller;\n    if (trait !== null) {\n      trait = this.fromTraitLike(trait);\n      if (controller === null) {\n        controller = this.createController(trait);\n      }\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(trait, targetTrait, this.traitKey);\n      this.setController(controller);\n      if (traitViewRef.view === null) {\n        traitViewRef.insertView(this.parentView, null, null, this.viewKey);\n      }\n    } else if (controller !== null) {\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(null);\n    }\n    return controller;\n  },\n\n  attachTrait(trait?: T | LikeType<T> | null, targetTrait?: Trait | null): C {\n    if (trait === void 0 || trait === null) {\n      trait = this.createTrait();\n    } else {\n      trait = this.fromTraitLike(trait);\n    }\n    let controller = this.controller;\n    if (controller === null) {\n      controller = this.createController(trait);\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    traitViewRef.setTrait(trait, targetTrait, this.traitKey);\n    this.attachController(controller, null);\n    return controller;\n  },\n\n  initTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  detachTrait(trait?: T): C | null {\n    const controller = this.controller;\n    if (controller === null || this.getTraitViewRef(controller).trait !== trait) {\n      return null;\n    }\n    this.willDetachTrait(trait, controller);\n    this.onDetachTrait(trait, controller);\n    this.deinitTrait(trait, controller);\n    this.didDetachTrait(trait, controller);\n    return controller;\n  },\n\n  deinitTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  didDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  insertTrait(parent?: Controller | null, trait?: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    if (trait === void 0 || trait === null) {\n      trait = this.createTrait();\n    } else {\n      trait = this.fromTraitLike(trait);\n    }\n    let controller = this.controller;\n    if (controller === null) {\n      controller = this.createController(trait);\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    traitViewRef.setTrait(trait, targetTrait, this.traitKey);\n    this.insertController(parent, controller);\n    return controller;\n  },\n\n  removeTrait(trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    if (traitViewRef.trait !== trait) {\n      return null;\n    }\n    controller.remove();\n    return controller;\n  },\n\n  deleteTrait(trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    if (traitViewRef.trait !== trait) {\n      return null;\n    }\n    controller.remove();\n    this.setController(null);\n    return controller;\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  viewType: null,\n\n  viewKey: void 0,\n\n  get view(): V | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.view;\n  },\n\n  getView(): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  },\n\n  setView(view: V | LikeType<V> | null, targetView?: View | null, key?: string): V | null {\n    if (view !== null) {\n      view = this.fromViewLike(view);\n    }\n    const controller = this.attachController();\n    const traitViewRef = this.getTraitViewRef(controller);\n    if (key === void 0) {\n      key = this.viewKey;\n    }\n    return traitViewRef.setView(view, targetView, key);\n  },\n\n  attachView(view?: V | LikeType<V> | null, targetView?: View | null): V {\n    if (view !== void 0 && view !== null) {\n      view = this.fromViewLike(view);\n    } else {\n      view = this.createView();\n    }\n    const controller = this.attachController();\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.attachView(view, targetView);\n  },\n\n  detachView(): V | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.detachView();\n  },\n\n  get parentView(): View | null {\n    return null;\n  },\n\n  insertView(parentView?: View | null, view?: V | LikeType<V>, targetView?: View | null, key?: string): V {\n    const controller = this.attachController();\n    const traitViewRef = this.getTraitViewRef(controller);\n    if (parentView === void 0 || parentView === null) {\n      parentView = this.parentView;\n    }\n    if (key === void 0) {\n      key = this.viewKey;\n    }\n    return traitViewRef.insertView(parentView, view, targetView, key);\n  },\n\n  removeView(): V | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.removeView();\n  },\n\n  deleteView(): V | null {\n    const controller = this.controller;\n    if (controller === null) {\n      return null;\n    }\n    const traitViewRef = this.getTraitViewRef(controller);\n    return traitViewRef.deleteView();\n  },\n\n  createView(): V | null {\n    const viewType = this.viewType;\n    if (viewType === null) {\n      return null;\n    }\n    return viewType.create();\n  },\n\n  fromViewLike(value: V | LikeType<V>): V | LikeType<V> {\n    const viewType = this.viewType;\n    if (viewType === null) {\n      return value;\n    }\n    return viewType.fromLike(value);\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    return fastener;\n  },\n\n  refine(fastenerClass: FastenerClass<TraitViewControllerRef<any, any, any, any, any>>): void {\n    super.refine(fastenerClass);\n    const fastenerPrototype = fastenerClass.prototype;\n\n    const traitKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"traitKey\");\n    if (traitKeyDescriptor !== void 0 && \"value\" in traitKeyDescriptor) {\n      if (traitKeyDescriptor.value === true) {\n        traitKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      } else if (traitKeyDescriptor.value === false) {\n        traitKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"traitKey\", traitKeyDescriptor);\n      }\n    }\n\n    const viewKeyDescriptor = Object.getOwnPropertyDescriptor(fastenerPrototype, \"viewKey\");\n    if (viewKeyDescriptor !== void 0 && \"value\" in viewKeyDescriptor) {\n      if (viewKeyDescriptor.value === true) {\n        viewKeyDescriptor.value = fastenerClass.name;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      } else if (viewKeyDescriptor.value === false) {\n        viewKeyDescriptor.value = void 0;\n        Object.defineProperty(fastenerPrototype, \"viewKey\", viewKeyDescriptor);\n      }\n    }\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Proto} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Consumer} from \"@swim/util\";\nimport type {Fastener} from \"@swim/component\";\nimport type {TraitFactory} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ViewFactory} from \"@swim/view\";\nimport type {View} from \"@swim/view\";\nimport type {Controller} from \"./Controller\";\nimport type {ControllerSetDescriptor} from \"./ControllerSet\";\nimport type {ControllerSetClass} from \"./ControllerSet\";\nimport {ControllerSet} from \"./ControllerSet\";\nimport type {TraitViewRef} from \"./TraitViewRef\";\n\n/** @public */\nexport interface TraitViewControllerSetDescriptor<R, T extends Trait, V extends View, C extends Controller> extends ControllerSetDescriptor<R, C> {\n  extends?: Proto<TraitViewControllerSet<any, any, any, any, any>> | boolean | null;\n}\n\n/** @public */\nexport interface TraitViewControllerSetClass<F extends TraitViewControllerSet<any, any, any, any, any> = TraitViewControllerSet<any, any, any, any, any>> extends ControllerSetClass<F> {\n}\n\n/** @public */\nexport interface TraitViewControllerSet<R = any, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I extends any[] = [C | null]> extends ControllerSet<R, C, I> {\n  /** @override */\n  get descriptorType(): Proto<TraitViewControllerSetDescriptor<R, T, V, C>>;\n\n  getTraitViewRef(controller: C): TraitViewRef<any, T, V>;\n\n  get traitType(): TraitFactory<T> | null;\n\n  /** @internal */\n  readonly traitControllers: {readonly [traitId: string]: C | undefined};\n\n  hasTrait(trait: Trait): boolean;\n\n  addTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  addTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  setTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  attachTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, controller?: C): C;\n\n  /** @protected */\n  initTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void;\n\n  attachTraits(traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null): void;\n\n  detachTrait(trait: T): C | null;\n\n  /** @protected */\n  deinitTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  willDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  onDetachTrait(trait: T, controller: C): void;\n\n  /** @protected */\n  didDetachTrait(trait: T, controller: C): void;\n\n  detachTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  insertTrait(parent: Controller | null | undefined, trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C;\n\n  insertTraits(parent: Controller | null | undefined, traits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null, key?: string): void;\n\n  removeTrait(trait: T): C | null;\n\n  removeTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  deleteTrait(trait: T): C | null;\n\n  deleteTraits(traits: {readonly [traitId: string]: T | undefined}): void;\n\n  reinsertTrait(trait: T, targetTrait?: T | null): void;\n\n  consumeTraits(consumer: Consumer): void;\n\n  unconsumeTraits(consumer: Consumer): void;\n\n  createTrait(): T;\n\n  /** @protected */\n  fromTraitLike(value: T | LikeType<T>): T;\n\n  get viewType(): ViewFactory<V> | null;\n\n  get parentView(): View | null;\n\n  getTargetView(controller: C): V | null;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  /** @override */\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitViewControllerSet = (<R, T extends Trait, V extends View, C extends Controller, I extends any[], F extends TraitViewControllerSet<any, any, any, any, any>>() => ControllerSet.extend<TraitViewControllerSet<R, T, V, C, I>, TraitViewControllerSetClass<F>>(\"TraitViewControllerSet\", {\n  getTraitViewRef(controller: C): TraitViewRef<any, T, V> {\n    throw new Error(\"missing implementation\");\n  },\n\n  traitType: null,\n\n  hasTrait(trait: Trait): boolean {\n    return this.traitControllers[trait.uid] !== void 0;\n  },\n\n  addTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller !== void 0) {\n      return controller;\n    } else if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    controller = this.createController(trait);\n    const traitViewRef = this.getTraitViewRef(controller);\n    traitViewRef.setTrait(trait, targetTrait, key);\n    const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n    this.addController(controller, targetController, key);\n    if (traitViewRef.view === null) {\n      const view = traitViewRef.createView();\n      const targetView = targetController !== void 0 ? this.getTraitViewRef(targetController).view : null;\n      traitViewRef.insertView(this.parentView, view, targetView, key);\n    }\n    return controller;\n  },\n\n  addTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.addTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  setTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    const binds = this.binds;\n    const parent = binds ? this.parentController : null;\n    const traitControllers = this.traitControllers;\n    for (const traitId in traitControllers) {\n      if (newTraits[traitId] === void 0) {\n        const oldController = this.detachController(traitControllers[traitId]!);\n        if (oldController !== null && binds && parent !== null && oldController.parent === parent) {\n          oldController.remove();\n        }\n      }\n    }\n    if ((this.flags & ControllerSet.OrderedFlag) !== 0) {\n      const orderedTraits = new Array<T>();\n      for (const traitId in newTraits) {\n        orderedTraits.push(newTraits[traitId]!);\n      }\n      for (let i = 0, n = orderedTraits.length; i < n; i += 1) {\n        const newController = orderedTraits[i]!;\n        if (traitControllers[newController.uid] === void 0) {\n          const targetTrait = i < n + 1 ? orderedTraits[i + 1] : target;\n          this.addTrait(newController, targetTrait);\n        }\n      }\n    } else {\n      for (const traitId in newTraits) {\n        if (traitControllers[traitId] === void 0) {\n          this.addTrait(newTraits[traitId]!, target);\n        }\n      }\n    }\n  },\n\n  attachTrait(trait: T | LikeType<T>, targetTrait?: Trait | null, controller?: C): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    if (controller === void 0) {\n      controller = traitControllers[trait.uid];\n    }\n    if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    if (controller === void 0) {\n      controller = this.createController();\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(trait, targetTrait);\n      const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n      this.attachController(controller, targetController);\n    }\n    if (traitControllers[trait.uid] === void 0) {\n      traitControllers[trait.uid] = controller;\n      this.willAttachTrait(trait, targetTrait, controller);\n      this.onAttachTrait(trait, targetTrait, controller);\n      this.initTrait(trait, controller);\n      this.didAttachTrait(trait, targetTrait, controller);\n    }\n    return controller;\n  },\n\n  initTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  onAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  didAttachTrait(trait: T, targetTrait: Trait | null, controller: C): void {\n    // hook\n  },\n\n  attachTraits(newTraits: {readonly [traitId: string]: T | undefined}, target?: Trait | null): void {\n    for (const traitId in newTraits) {\n      this.attachTrait(newTraits[traitId]!, target);\n    }\n  },\n\n  detachTrait(trait: T): C | null {\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    const controller = traitControllers[trait.uid];\n    if (controller === void 0) {\n      return null;\n    }\n    delete traitControllers[trait.uid];\n    this.willDetachTrait(trait, controller);\n    this.onDetachTrait(trait, controller);\n    this.deinitTrait(trait, controller);\n    this.didDetachTrait(trait, controller);\n    return controller;\n  },\n\n  deinitTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  willDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  onDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  didDetachTrait(trait: T, controller: C): void {\n    // hook\n  },\n\n  detachTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.detachTrait(traits[traitId]!);\n    }\n  },\n\n  insertTrait(parent: Controller | null | undefined, trait: T | LikeType<T>, targetTrait?: Trait | null, key?: string): C {\n    trait = this.fromTraitLike(trait);\n    const traitControllers = this.traitControllers as {[traitId: string]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller !== void 0) {\n      return controller;\n    } else if (targetTrait === void 0) {\n      targetTrait = null;\n    }\n    controller = this.createController();\n    const traitViewRef = this.getTraitViewRef(controller);\n    traitViewRef.setTrait(trait, targetTrait);\n    const targetController = targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n    this.insertController(parent, controller, targetController, key);\n    if (traitViewRef.view === null) {\n      const view = traitViewRef.createView();\n      const targetView = targetController !== void 0 ? this.getTraitViewRef(targetController).view : null;\n      traitViewRef.insertView(this.parentView, view, targetView, key);\n    }\n    return controller;\n  },\n\n  insertTraits(parent: Controller | null | undefined, newTraits: {readonly [traitId: string]: T | undefined}, targetTrait?: Trait | null, key?: string): void {\n    for (const traitId in newTraits) {\n      this.insertTrait(parent, newTraits[traitId]!, targetTrait, key);\n    }\n  },\n\n  removeTrait(trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait !== trait) {\n        continue;\n      }\n      this.removeController(controller);\n      return controller;\n    }\n    return null;\n  },\n\n  removeTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.removeTrait(traits[traitId]!);\n    }\n  },\n\n  deleteTrait(trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait !== trait) {\n        continue;\n      }\n      this.deleteController(controller);\n      return controller;\n    }\n    return null;\n  },\n\n  deleteTraits(traits: {readonly [traitId: string]: T | undefined}): void {\n    for (const traitId in traits) {\n      this.deleteTrait(traits[traitId]!);\n    }\n  },\n\n  reinsertTrait(trait: T, targetTrait: T | null): void {\n    const controller = this.traitControllers[trait.uid];\n    if (controller === void 0) {\n      return;\n    }\n    const targetController = targetTrait !== null ? this.traitControllers[targetTrait.uid] : void 0;\n    this.reinsertController(controller, targetController !== void 0 ? targetController : null);\n  },\n\n  consumeTraits(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const trait = this.getTraitViewRef(controller).trait;\n      if (trait !== null) {\n        trait.consume(consumer);\n      }\n    }\n  },\n\n  unconsumeTraits(consumer: Consumer): void {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const trait = this.getTraitViewRef(controller).trait;\n      if (trait !== null) {\n        trait.unconsume(consumer);\n      }\n    }\n  },\n\n  createTrait(): T {\n    let trait: T | undefined;\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      trait = traitType.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"unable to create \";\n      const name = this.name.toString();\n      if (name.length !== 0) {\n        message += name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  },\n\n  fromTraitLike(value: T | LikeType<T>): T {\n    const traitType = this.traitType;\n    if (traitType !== null) {\n      return traitType.fromLike(value);\n    }\n    return Trait.fromLike(value) as T;\n  },\n\n  get parentView(): View | null {\n    return null;\n  },\n\n  getTargetView(controller: C): V | null {\n    if ((this.flags & ControllerSet.SortedFlag) === 0) {\n      return null;\n    }\n    const nextController = controller.nextSibling;\n    if (nextController === null || this.controllers[nextController.uid] === void 0) {\n      return null;\n    }\n    return this.getTraitViewRef(nextController as C).view;\n  },\n\n  onAttachController(controller: C, targetController: Controller | null): void {\n    const trait = this.getTraitViewRef(controller).trait;\n    if (trait !== null) {\n      const targetTrait = targetController !== null && this.hasController(targetController) ? this.getTraitViewRef(targetController as C).trait : null;\n      this.attachTrait(trait, targetTrait, controller);\n    }\n    super.onAttachController(controller, targetController);\n  },\n\n  onDetachController(controller: C): void {\n    super.onDetachController(controller);\n    const trait = this.getTraitViewRef(controller).trait;\n    if (trait !== null) {\n      this.detachTrait(trait);\n    }\n  },\n},\n{\n  construct(fastener: F | null, owner: F extends Fastener<infer R, any, any> ? R : never): F {\n    fastener = super.construct(fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traitControllers = {};\n    return fastener;\n  },\n}))();\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {EventHandler} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {ControllerFlags} from \"./Controller\";\nimport {Controller} from \"./Controller\";\nimport {ControllerSet} from \"./ControllerSet\";\n\n/** @public */\nexport interface ExecutorServiceObserver<S extends ExecutorService = ExecutorService> extends ServiceObserver<S> {\n  serviceWillAttachRoot?(rootController: Controller, service: S): void;\n\n  serviceDidAttachRoot?(rootController: Controller, service: S): void;\n\n  serviceWillDetachRoot?(rootController: Controller, service: S): void;\n\n  serviceDidDetachRoot?(rootController: Controller, service: S): void;\n}\n\n/** @public */\nexport class ExecutorService extends Service {\n  constructor() {\n    super();\n    this.updateFlags = 0;\n    this.updateTime = performance.now();\n    this.updateDelay = ExecutorService.MinUpdateDelay;\n    this.compileTimer = 0;\n    this.executeTimer = 0;\n\n    this.runCompilePass = this.runCompilePass.bind(this);\n    this.runExecutePass = this.runExecutePass.bind(this);\n  }\n\n  declare readonly observerType?: Class<ExecutorServiceObserver>;\n\n  @ControllerSet({\n    initController(rootController: Controller): void {\n      this.owner.requestUpdate(rootController, rootController.flags & Controller.UpdateMask, false);\n    },\n    willAttachController(rootController: Controller): void {\n      this.owner.callObservers(\"serviceWillAttachRoot\", rootController, this.owner);\n    },\n    didAttachController(rootController: Controller): void {\n      this.owner.callObservers(\"serviceDidAttachRoot\", rootController, this.owner);\n    },\n    willDetachController(rootController: Controller): void {\n      this.owner.callObservers(\"serviceWillDetachRoot\", rootController, this.owner);\n    },\n    didDetachController(rootController: Controller): void {\n      this.owner.callObservers(\"serviceDidDetachRoot\", rootController, this.owner);\n    },\n  })\n  readonly roots!: ControllerSet<this, Controller>;\n\n  /** @internal */\n  readonly updateFlags: ControllerFlags;\n\n  /** @internal */\n  setUpdateFlags(updateFlags: ControllerFlags): void {\n    (this as Mutable<this>).updateFlags = updateFlags;\n  }\n\n  readonly updateTime: number;\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ControllerFlags, immediate: boolean): ControllerFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(targetController: Controller, updateFlags: ControllerFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.updateFlags & ~updateFlags & Controller.UpdateMask;\n    if ((updateFlags & Controller.CompileMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsCompile;\n    }\n    if ((updateFlags & Controller.ExecuteMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsExecute;\n    }\n    this.setUpdateFlags(this.updateFlags | deltaUpdateFlags);\n    if (immediate && (this.updateFlags & (Controller.CompilingFlag | Controller.ExecutingFlag)) === 0 && this.updateDelay <= ExecutorService.MaxCompileInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const flags = this.updateFlags;\n    if ((flags & Controller.CompilingFlag) === 0 && (flags & Controller.CompileMask) !== 0) {\n      this.scheduleCompilePass(this.updateDelay);\n    } else if ((flags & Controller.ExecutingFlag) === 0 && (flags & Controller.ExecuteMask) !== 0) {\n      this.scheduleExecutePass(ExecutorService.MinExecuteInterval);\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelCompilePass();\n    this.cancelExecutePass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.updateFlags & Controller.CompileMask) !== 0) {\n      this.cancelUpdate();\n      this.runCompilePass(true);\n    }\n    if ((this.updateFlags & Controller.ExecuteMask) !== 0 && this.updateDelay <= ExecutorService.MaxCompileInterval) {\n      this.cancelUpdate();\n      this.runExecutePass(true);\n    }\n  }\n\n  /** @internal */\n  compileTimer: number;\n\n  protected scheduleCompilePass(updateDelay: number): void {\n    if (this.compileTimer === 0) {\n      this.compileTimer = setTimeout(this.runCompilePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelCompilePass(): void {\n    if (this.compileTimer !== 0) {\n      clearTimeout(this.compileTimer);\n      this.compileTimer = 0;\n    }\n  }\n\n  protected runCompilePass(immediate: boolean = false): void {\n    if (!immediate) {\n      this.compileTimer = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~Controller.CompileMask | Controller.CompilingFlag);\n    try {\n      const t0 = performance.now();\n      (this as Mutable<this>).updateTime = t0;\n\n      const rootControllers = this.roots.controllers;\n      for (const controllerId in rootControllers) {\n        const rootController = rootControllers[controllerId]!;\n        if ((rootController.flags & Controller.CompileMask) !== 0) {\n          rootController.cascadeCompile(0);\n        }\n      }\n\n      const t1 = performance.now();\n      let compileDelay = Math.max(ExecutorService.MinCompileInterval, this.updateDelay);\n      if (t1 - t0 > compileDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), ExecutorService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(ExecutorService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelCompilePass();\n      if ((this.updateFlags & Controller.ExecuteMask) !== 0) {\n        this.scheduleExecutePass(ExecutorService.MinExecuteInterval);\n      } else if ((this.updateFlags & Controller.CompileMask) !== 0) {\n        if (immediate) {\n          compileDelay = Math.max(ExecutorService.MaxCompileInterval, compileDelay);\n        }\n        this.cancelExecutePass();\n        this.scheduleCompilePass(compileDelay);\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~Controller.CompilingFlag);\n    }\n  }\n\n  /** @internal */\n  executeTimer: number;\n\n  protected scheduleExecutePass(updateDelay: number): void {\n    if (this.executeTimer === 0) {\n      this.executeTimer = setTimeout(this.runExecutePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelExecutePass(): void {\n    if (this.executeTimer !== 0) {\n      clearTimeout(this.executeTimer);\n      this.executeTimer = 0;\n    }\n  }\n\n  protected runExecutePass(immediate: boolean = false): void {\n    if (!immediate) {\n      this.executeTimer = 0;\n    }\n    this.setUpdateFlags(this.updateFlags & ~Controller.ExecuteMask | Controller.ExecutingFlag);\n    try {\n      const time = performance.now();\n      (this as Mutable<this>).updateTime = time;\n\n      const rootControllers = this.roots.controllers;\n      for (const controllerId in rootControllers) {\n        const rootController = rootControllers[controllerId]!;\n        if ((rootController.flags & Controller.ExecuteMask) !== 0) {\n          rootController.cascadeExecute(0);\n        }\n      }\n\n      this.cancelExecutePass();\n      if ((this.updateFlags & Controller.CompileMask) !== 0) {\n        let compileDelay = this.updateDelay;\n        if (immediate) {\n          compileDelay = Math.max(ExecutorService.MaxCompileInterval, compileDelay);\n        }\n        this.scheduleCompilePass(compileDelay);\n      } else if ((this.updateFlags & Controller.ExecuteMask) !== 0) {\n        this.cancelCompilePass();\n        this.scheduleExecutePass(ExecutorService.MaxExecuteInterval);\n      }\n    } finally {\n      this.setUpdateFlags(this.updateFlags & ~Controller.ExecutingFlag);\n    }\n  }\n\n  get powerFlags(): ControllerFlags {\n    return 0;\n  }\n\n  power(): void {\n    const rootControllers = this.roots.controllers;\n    for (const controllerId in rootControllers) {\n      const rootController = rootControllers[controllerId]!;\n      rootController.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = ExecutorService.MinUpdateDelay;\n  }\n\n  @EventHandler({\n    eventType: \"visibilitychange\",\n    target: typeof document !== \"undefined\" ? document : null,\n    handle(event: Event): void {\n      if (document.visibilityState === \"visible\") {\n        this.owner.power();\n      } else {\n        this.owner.unpower();\n      }\n    },\n  })\n  readonly visibilityChange!: EventHandler<this>;\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinCompileInterval: number = 12;\n  /** @internal */\n  static MaxCompileInterval: number = 33;\n  /** @internal */\n  static MinExecuteInterval: number = 4;\n  /** @internal */\n  static MaxExecuteInterval: number = 16;\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {UriLike} from \"@swim/uri\";\nimport {Uri} from \"@swim/uri\";\nimport {UriQuery} from \"@swim/uri\";\nimport type {UriFragmentLike} from \"@swim/uri\";\nimport {UriFragment} from \"@swim/uri\";\n\n/** @public */\nexport interface HistoryStateInit {\n  fragment?: string;\n\n  parameters?: {[key: string]: string | undefined};\n\n  environment?: {[key: string]: any};\n}\n\n/** @internal */\nexport interface MutableHistoryState {\n  fragment: string | undefined;\n\n  parameters: {[key: string]: string | undefined};\n\n  environment: {[key: string]: any};\n}\n\n/** @public */\nexport interface HistoryState {\n  readonly fragment: string | undefined;\n\n  readonly parameters: {readonly [key: string]: string | undefined};\n\n  readonly environment: {readonly [key: string]: any};\n}\n\n/** @public */\nexport const HistoryState = {\n  /** @internal */\n  empty: Lazy(function (): HistoryState {\n    return Object.freeze({\n      fragment: void 0,\n      parameters: {},\n      environment: {},\n    });\n  }),\n\n  /** @internal */\n  current(): MutableHistoryState {\n    try {\n      return HistoryState.fromUri(window.location.href);\n    } catch (e) {\n      console.error(e);\n      return HistoryState.empty();\n    }\n  },\n\n  /** @internal */\n  updated(delta: HistoryStateInit, state?: MutableHistoryState): MutableHistoryState {\n    if (state === void 0) {\n      state = HistoryState.current();\n    }\n    if (\"fragment\" in delta) {\n      state.fragment = delta.fragment;\n    }\n    for (const key in delta.parameters) {\n      const value = delta.parameters[key];\n      if (value !== void 0) {\n        state.parameters[key] = value;\n      } else {\n        delete state.parameters[key];\n      }\n    }\n    for (const key in delta.environment) {\n      const value = delta.environment[key];\n      if (value !== void 0) {\n        state.environment[key] = value;\n      } else {\n        delete state.environment[key];\n      }\n    }\n    return state;\n  },\n\n  /** @internal */\n  cloned(oldState: HistoryState): MutableHistoryState {\n    const newState: MutableHistoryState = {\n      fragment: oldState.fragment,\n      parameters: {},\n      environment: {},\n    };\n    for (const key in oldState.parameters) {\n      newState.parameters[key] = oldState.parameters[key];\n    }\n    for (const key in oldState.environment) {\n      newState.environment[key] = oldState.environment[key];\n    }\n    return newState;\n  },\n\n  /** @internal */\n  fromUri(uri: UriLike): HistoryState {\n    uri = Uri.fromLike(uri);\n    const fragment = uri.fragment;\n    if (!fragment.isDefined()) {\n      return HistoryState.empty();\n    }\n    return HistoryState.fromUriFragment(fragment);\n  },\n\n  /** @internal */\n  fromUriFragment(fragment: UriFragmentLike): HistoryState {\n    fragment = UriFragment.fromLike(fragment);\n    let query = fragment.identifier !== void 0\n              ? UriQuery.parse(fragment.identifier)\n              : UriQuery.undefined();\n    const state: MutableHistoryState = {\n      fragment: void 0,\n      parameters: {},\n      environment: {},\n    };\n    while (!query.isEmpty()) {\n      const key = query.key;\n      const value = query.value;\n      if (key !== void 0) {\n        state.parameters[key] = value;\n      } else {\n        state.fragment = value;\n      }\n      query = query.tail();\n    }\n    return state;\n  },\n\n  /** @internal */\n  toUri(state: HistoryState): Uri {\n    const queryBuilder = UriQuery.builder();\n    if (state.fragment !== void 0) {\n      queryBuilder.add(void 0, state.fragment);\n    }\n    for (const key in state.parameters) {\n      const value = state.parameters[key]!;\n      queryBuilder.add(key, value);\n    }\n    return Uri.fragment(UriFragment.create(queryBuilder.build().toString()));\n  },\n};\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport {EventHandler} from \"@swim/component\";\nimport type {ServiceObserver} from \"@swim/component\";\nimport {Service} from \"@swim/component\";\nimport type {Uri} from \"@swim/uri\";\nimport type {HistoryStateInit} from \"./HistoryState\";\nimport {HistoryState} from \"./HistoryState\";\n\n/** @public */\nexport interface HistoryServiceObserver<S extends HistoryService = HistoryService> extends ServiceObserver<S> {\n  serviceWillPushHistory?(newState: HistoryState, oldState: HistoryState, service: S): void;\n\n  serviceDidPushHistory?(newState: HistoryState, oldState: HistoryState, service: S): void;\n\n  serviceWillReplaceHistory?(newState: HistoryState, oldState: HistoryState, service: S): void;\n\n  serviceDidReplaceHistory?(newState: HistoryState, oldState: HistoryState, service: S): void;\n\n  serviceWillPopHistory?(newState: HistoryState, oldState: HistoryState, service: S): void | boolean;\n\n  serviceDidPopHistory?(newState: HistoryState, oldState: HistoryState, service: S): void;\n}\n\n/** @public */\nexport class HistoryService extends Service {\n  constructor() {\n    super();\n    this.historyState = HistoryState.current();\n  }\n\n  declare readonly observerType?: Class<HistoryServiceObserver>;\n\n  /** @internal */\n  readonly historyState: HistoryState;\n\n  get historyUri(): Uri {\n    return HistoryState.toUri(this.historyState);\n  }\n\n  pushHistory(deltaState: HistoryStateInit): void {\n    const oldState = this.historyState;\n    const newState = HistoryState.updated(deltaState, HistoryState.cloned(oldState));\n    const newUri = HistoryState.toUri(newState);\n    this.willPushHistory(newState, oldState);\n    (this as Mutable<this>).historyState = newState;\n    window.history.pushState(newState.environment, \"\", newUri.toString());\n    this.onPushHistory(newState, oldState);\n    this.didPushHistory(newState, oldState);\n  }\n\n  protected willPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceWillPushHistory\", newState, oldState, this);\n  }\n\n  protected onPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    // hook\n  }\n\n  protected didPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceDidPushHistory\", newState, oldState, this);\n  }\n\n  replaceHistory(deltaState: HistoryStateInit): void {\n    const oldState = this.historyState;\n    const newState = HistoryState.updated(deltaState, HistoryState.cloned(oldState));\n    if (Objects.equal(oldState, newState)) {\n      return;\n    }\n    const newUri = HistoryState.toUri(newState);\n    this.willReplaceHistory(newState, oldState);\n    (this as Mutable<this>).historyState = newState;\n    window.history.replaceState(newState.environment, \"\", newUri.toString());\n    this.onReplaceHistory(newState, oldState);\n    this.didReplaceHistory(newState, oldState);\n  }\n\n  protected willReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceWillReplaceHistory\", newState, oldState, this);\n  }\n\n  protected onReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    // hook\n  }\n\n  protected didReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceDidReplaceHistory\", newState, oldState, this);\n  }\n\n  @EventHandler({\n    eventType: \"popstate\",\n    target: typeof window !== \"undefined\" ? window : null,\n    handle(event: PopStateEvent): void {\n      const deltaState: HistoryStateInit = {};\n      if (typeof event.state === \"object\" && event.state !== null) {\n        deltaState.environment = event.state;\n      }\n      const oldState = this.owner.historyState;\n      const newState = HistoryState.updated(deltaState, HistoryState.current());\n      this.owner.willPopHistory(newState, oldState);\n      (this.owner as Mutable<typeof this.owner>).historyState = newState;\n      this.owner.onPopHistory(newState, oldState);\n      this.owner.didPopHistory(newState, oldState);\n    },\n  })\n  readonly popstate!: EventHandler<this>;\n\n  protected willPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceWillPopHistory\", newState, oldState, this);\n  }\n\n  protected onPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    // hook\n  }\n\n  protected didPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    this.callObservers(\"serviceDidPopHistory\", newState, oldState, this);\n  }\n}\n","// Copyright 2015-2023 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Equals} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {HistoryStateInit} from \"./HistoryState\";\nimport {HistoryService} from \"./HistoryService\";\n\n/** @public */\nexport type HyperlinkLike = Hyperlink | HyperlinkInit | string;\n\n/** @public */\nexport type HyperlinkInit = HistoryHyperlinkInit | LocationHyperlinkInit;\n\n/** @public */\nexport abstract class Hyperlink implements Equals, Debug {\n  likeType?(like: HyperlinkInit | string): void;\n\n  abstract readonly state: Readonly<HistoryStateInit> | null;\n\n  abstract readonly href: string | undefined;\n\n  abstract readonly title: string | undefined;\n\n  abstract activate(event?: Event | null): void;\n\n  /** @override */\n  abstract equals(that: unknown): boolean;\n\n  /** @override */\n  abstract debug<T>(output: Output<T>): Output<T>;\n\n  /** @override */\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static history(state: HistoryStateInit, href?: string, title?: string): HistoryHyperlink {\n    return new HistoryHyperlink(state, href, title);\n  }\n\n  static location(href: string, title?: string): LocationHyperlink {\n    return new LocationHyperlink(href, title);\n  }\n\n  static fromLike<T extends HyperlinkLike | null | undefined>(hyperlink: T): Hyperlink | Uninitable<T> {\n    if (hyperlink === void 0 || hyperlink === null || hyperlink instanceof Hyperlink) {\n      return hyperlink as Hyperlink | Uninitable<T>;\n    } else if (typeof hyperlink === \"string\") {\n      return new LocationHyperlink(hyperlink, void 0);\n    } else if (!(\"state\" in hyperlink) && !(\"href\" in hyperlink)) {\n      return new HistoryHyperlink(hyperlink, void 0, void 0);\n    }\n    return this.fromInit(hyperlink);\n  }\n\n  static fromInit(init: HyperlinkInit): Hyperlink {\n    if (\"fragment\" in init || \"parameters\" in init || \"environment\" in init) {\n      const state: HistoryStateInit = {};\n      if (init.fragment !== void 0) {\n        state.fragment = init.fragment;\n      }\n      if (init.parameters !== void 0) {\n        state.parameters = init.parameters;\n      }\n      if (init.environment !== void 0) {\n        state.environment = init.environment;\n      }\n      return new HistoryHyperlink(state, init.href, init.title);\n    } else if (init.href !== void 0) {\n      return new LocationHyperlink(init.href, init.title);\n    }\n    throw new TypeError(\"invalid hyperlink\");\n  }\n}\n\n/** @public */\nexport interface HistoryHyperlinkInit extends HistoryStateInit {\n  href?: string;\n  title?: string;\n}\n\n/** @public */\nexport class HistoryHyperlink extends Hyperlink {\n  constructor(state: Readonly<HistoryStateInit>, href: string | undefined,\n              title: string | undefined) {\n    super();\n    this.state = state;\n    this.href = href;\n    this.title = title;\n  }\n\n  override readonly state: Readonly<HistoryStateInit>;\n\n  override readonly href: string | undefined;\n\n  override readonly title: string | undefined;\n\n  override activate(event?: Event | null): void {\n    if (event !== void 0 && event !== null) {\n      event.preventDefault();\n    }\n    HistoryService.global().pushHistory(this.state);\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof HistoryHyperlink) {\n      return Objects.equal(this.state, that.state)\n          && this.href === that.href && this.title === that.title;\n    }\n    return false;\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Hyperlink\").write(46/*'.'*/).write(\"history\")\n                   .write(40/*'('*/).debug(this.state);\n    if (this.href !== void 0) {\n      output = output.write(\", \").debug(this.href);\n    }\n    if (this.title !== void 0) {\n      output = output.write(\", \").debug(this.title);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n}\n\n/** @public */\nexport interface LocationHyperlinkInit {\n  state?: undefined;\n  href: string;\n  title?: string;\n}\n\n/** @public */\nexport class LocationHyperlink extends Hyperlink {\n  constructor(href: string, title: string | undefined) {\n    super();\n    this.href = href;\n    this.title = title;\n  }\n\n  get state(): Readonly<HistoryStateInit> | null {\n    return null;\n  }\n\n  override readonly href: string;\n\n  override readonly title: string | undefined;\n\n  override activate(event?: Event | null): void {\n    if (event !== void 0 && event !== null) {\n      event.preventDefault();\n    }\n    window.location.assign(this.href);\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LocationHyperlink) {\n      return this.href === that.href && this.title === that.title;\n    }\n    return false;\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Hyperlink\").write(46/*'.'*/).write(\"location\")\n                   .write(40/*'('*/).debug(this.href);\n    if (this.title !== void 0) {\n      output = output.write(\", \").debug(this.title);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","Model","_a","Component","constructor","super","this","firstTrait","_instanceExtraInitializers","updater","_updater_initializers","consumers","lastTrait","traitMap","componentType","willAttachParent","parent","callObservers","trait","next","nextTrait","model","onAttachParent","didAttachParent","willDetachParent","onDetachParent","didDetachParent","willInsertChild","child","onInsertChild","didInsertChild","cascadeInsert","updateFlags","flags","MountedFlag","UpdateMask","AnalyzeMask","cascadeAnalyze","willRemoveChild","onRemoveChild","didRemoveChild","willReinsertChild","onReinsertChild","didReinsertChild","cascadeMount","Error","willMount","setFlags","onMount","mountTraits","mountChildren","didMount","requestUpdate","requireUpdate","mountFlags","decoherent","NeedsMutate","mountFasteners","size","startConsuming","cascadeUnmount","willUnmount","unmountChildren","unmountTraits","onUnmount","didUnmount","stopConsuming","getTraitFastener","fastenerName","fastenerType","contextType","fastener","getFastener","immediate","deltaUpdateFlags","needsUpdate","NeedsAnalyze","RefreshMask","NeedsRefresh","mounted","updaterService","service","updating","UpdatingMask","analyzing","AnalyzingFlag","needsAnalyze","analyzeFlags","cascadeFlags","willAnalyze","willMutate","NeedsAggregate","willAggregate","NeedsCorrelate","willCorrelate","onAnalyze","onMutate","onAggregate","onCorrelate","analyzeChildren","analyzeChild","didCorrelate","didAggregate","didMutate","didAnalyze","recohereFasteners","updateTime","analyzeTraitChildren","analyzeOwnChildren","bind","firstChild","nextSibling","refreshing","RefreshingFlag","needsRefresh","refreshFlags","cascadeRefresh","willRefresh","NeedsValidate","willValidate","NeedsReconcile","willReconcile","onRefresh","onValidate","onReconcile","refreshChildren","refreshChild","didReconcile","didValidate","didRefresh","recohereDownlinks","refreshTraitChildren","refreshOwnChildren","setFirstTrait","setLastTrait","forEachTrait","callback","insertTraitMap","removeTraitMap","findTrait","traitClass","hasTrait","getTrait","setTrait","newTrait","Trait","fromLike","oldTrait","remove","willRemoveTrait","detachModel","onRemoveTrait","didRemoveTrait","setKey","InsertingFlag","willInsertTrait","attachModel","onInsertTrait","didInsertTrait","appendTrait","removeChild","prependTrait","insertTrait","replaceTrait","insertTraitFlags","InsertTraitFlags","prev","bindTraitFasteners","removeTrait","removeTraitFlags","RemoveTraitFlags","unbindTraitFasteners","sortTraits","comparator","traits","sort","setPreviousTrait","setNextTrait","mountTrait","unmountTrait","getAncestorTrait","ancestorType","ancestor","ancestorTrait","getRootTrait","rootType","rootTrait","bindFastener","TraitRelation","binds","bindTrait","consuming","WarpDownlink","consumed","ModelRelation","consume","bindChildFastener","bindModel","unbindChildFastener","unbindModel","metaclass","FastenerContextMetaclass","fastenerSlots","slots","Fastener","bindTraitFastener","unbindTraitFastener","unbindTrait","enqueueFastener","t","performance","now","coherentTime","recohering","recohere","coherentDownlinkProps","hostUri","nodeUri","laneUri","consumer","Set","has","willConsume","add","onConsume","didConsume","unconsume","willUnconsume","delete","onUnconsume","didUnconsume","ConsumingFlag","startConsumingFlags","StartConsumingFlags","willStartConsuming","onStartConsuming","didStartConsuming","startConsumingFasteners","stopConsumingFlags","StopConsumingFlags","willStopConsuming","onStopConsuming","didStopConsuming","stopConsumingFasteners","getService","selection","Provider","getter","Property","downlink","template","downlinkClass","EventDownlink","define","create","downlinkValue","ValueDownlink","downlinkList","ListDownlink","downlinkMap","MapDownlink","command","body","Value","getValue","Uri","endpoint","unresolve","warpRef","authenticate","credentials","hostRef","childRef","appendChild","nodeRef","isDefined","laneRef","getDownlink","openDownlink","_updater_decorators","serviceType","RefresherService","mountRootService","roots","addModel","owner","unmountRootService","removeModel","_get_selection_decorators","SelectionService","_get_hostUri_decorators","valueType","inherits","_get_nodeUri_decorators","_get_laneUri_decorators","_get_warpRef_decorators","WarpRef","initValue","WarpClient","global","equalValues","newValue","oldValue","static","private","obj","uid","nextId","id","RemovingFlag","FlagShift","StatusMask","FlagMask","MountFlags","InsertChildFlags","RemoveChildFlags","ReinsertChildFlags","extend","modelType","observes","attachOutlet","outlet","outlets","detachOutlet","decohereOutlets","decohere","initModel","willAttachModel","onAttachModel","observe","didAttachModel","deinitModel","willDetachModel","onDetachModel","unobserve","didDetachModel","parentModel","insertChild","detectModel","createModel","message","toString","construct","ModelRef","inletModel","inlet","getInletModel","bindInlet","setModel","setIntrinsic","modelKey","getModel","newModel","oldModel","setCoherent","insertModel","deleteModel","setCoherentTime","setDerived","Affinity","Mask","Math","min","Intrinsic","DerivedFlag","tryModel","modelRef","tryFastener","refine","fastenerClass","fastenerPrototype","modelKeyDescriptor","ModelSet","insertModelMap","models","OrderedFlag","Objects","inserted","removeModelMap","hasModel","getTargetChild","modelCount","addModels","newModels","modelId","setModels","orderedModels","Array","modeld","n","targetModel","attachModels","detachModels","insertModels","removeModels","deleteModels","reinsertModel","SortedFlag","reinsertChild","consumeModels","unconsumeModels","ordered","order","sorted","willSort","onSort","didSort","sortChildren","compareChildren","compareTargetChild","a","b","x","y","compare","flagsInit","hasOwnProperty","enumerable","configurable","previousTrait","observers","bindModelFasteners","unbindModelFasteners","modelFlags","setModelFlags","previousSibling","lastChild","forEachChild","getChild","childType","setChild","newChild","prependChild","replaceChild","oldChild","insertChildFlags","bindChildFasteners","removeChildFlags","unbindChildFasteners","reinsertChildFlags","removeChildren","getAncestor","getRoot","inserting","removing","unmountFasteners","getParentFastener","attachFastener","mount","unmount","properties","timing","property","Animator","decohereFastener","observer","willObserve","onObserve","didObserve","willUnobserve","onUnobserve","didUnobserve","args","method","equals","that","hashCode","Murmur3","mash","mixString","Creatable","Symbol","hasInstance","parentType","traitType","initTrait","willAttachTrait","onAttachTrait","didAttachTrait","deinitTrait","willDetachTrait","onDetachTrait","didDetachTrait","detectTrait","createTrait","TraitRef","inletTrait","getInletTrait","traitKey","attachTrait","detachTrait","deleteTrait","tryTrait","traitRef","traitKeyDescriptor","TraitSet","addTrait","traitCount","addTraits","newTraits","traitId","setTraits","orderedTraits","targetTrait","attachTraits","detachTraits","insertTraits","removeTraits","deleteTraits","reinsertTrait","consumeTraits","unconsumeTraits","q","TraitModelRef","traitOrModel","observesTrait","fromTraitLike","insertModelTrait","detectModelTrait","TraitModelSet","compareTraits","Service","_roots_initializers","visibilityChange","_visibilityChange_initializers","updateDelay","MinUpdateDelay","analyzeTimer","refreshTimer","runAnalyzePass","runRefreshPass","setUpdateFlags","MaxAnalyzeInterval","runImmediatePass","scheduleUpdate","scheduleAnalyzePass","scheduleRefreshPass","MinAnalyzeInterval","cancelUpdate","cancelAnalyzePass","cancelRefreshPass","setTimeout","clearTimeout","t0","rootModels","rootModel","t1","analyzeDelay","max","MaxUpdateDelay","MinRefreshInterval","time","MaxRefreshInterval","powerFlags","power","unpower","_roots_decorators","_visibilityChange_decorators","EventHandler","eventType","document","handle","event","visibilityState","StorageService","willSet","onSet","didSet","willClear","onClear","didClear","WebStorageService","local","EphemeralStorageService","storageArea","storageEvent","_storageEvent_initializers","getItem","setItem","removeItem","clear","Local","window","localStorage","e","session","Session","sessionStorage","_storageEvent_decorators","selections","isSelected","indexOf","select","options","index","multi","unselectAll","selectableTrait","SelectableTrait","willSelect","splice","onSelect","didSelect","unselect","internal","willUnselect","onUnselect","didUnselect","didUnselectAll","toggle","selectedIndex","selected","_selection_initializers","_selection_decorators","FontSize","Length","fromValue","string","stringValue","form","cast","LineHeight","height","FontFamily","family","forEach","item","format","isIdent","Unicode","isAlpha","charCodeAt","Strings","offsetByCodePoints","c","output","stringOutput","write","base16","Base16","uppercase","encodeDigit","FontLike","instance","Font","FontInit","hasAllKeys","style","variant","weight","stretch","withStyle","withVariant","withWeight","withStretch","withSize","Values","equal","withHeight","withFamily","isArray","toLike","slice","interpolateTo","FontInterpolator","equivalentTo","epsilon","equivalent","debug","s","_b","_c","fromInit","parse","header","input","stringInput","isCont","isWhitespace","head","step","parser","FontParser","isDone","isError","Parser","error","Diagnostic","unexpected","FontForm","Lazy","_static_form_decorators","_staticExtraInitializers","_super","f0","f1","interpolator","u","styleInterpolator","variantInterpolator","weightInterpolator","stretchInterpolator","sizeInterpolator","heightInterpolator","familyInterpolator","setPrototypeOf","Interpolator","Form","unit","withUnit","mold","font","Record","slot","of","Attr","toValue","FontFamilyParser","quote","code","feed","isSpace","expected","isEmpty","isDigit","decodeDigit","identOutput","lengthParser","familyParser","ident","LengthParser","units","String","asError","parseRest","ColorLike","Color","ColorInit","RgbColorInit","HslColorInit","contrast","k","lightness","lighter","darker","RgbColorInterpolator","rgb","transparent","RgbColor","black","alpha","white","r","g","hsl","h","l","Angle","degValue","HslColor","forName","color","ColorParser","ColorForm","Darker","Brighter","Text","from","HexColorParser","RgbColorParser","HslColorParser","ColorChannel","scale","ColorChannelParser","valueParser","Base10","parseNumber","RgbColorLike","isFinite","plus","times","scalar","combine","pow","NaN","Numbers","mix","Constructors","hash","toHexString","round","base16Alphabet","lowercase","alphabet","charAt","toRgbString","isNaN","toHslString","tag","positional","member","numberValue","str","_static_transparent_decorators","c0","c1","rParser","gParser","bParser","aParser","HslColorLike","toRgb","m1","m2","HslColorInterpolator","hParser","sParser","lParser","AngleParser","ColorStopLike","ColorStop","ColorStopInit","ColorStopTuple","LengthLike","stop","hint","withColor","withStop","withHint","ColorStopInterpolator","Equivalent","Equals","fromTuple","ColorStopParser","parseHint","parseList","ColorStopListParser","y0","y1","colorInterpolator","stopInterpolator","hintInterpolator","colorParser","stopParser","hintParser","stops","LinearGradientLike","LinearGradient","LinearGradientInit","angle","withAngle","withStops","array","LinearGradientInterpolator","Arrays","LinearGradientParser","parseAngle","LinearGradientAngleParser","g0","g1","angleInterpolator","stopInterpolators","stopCount","stops0","stops1","angleParser","side","stopsParser","BoxShadowLike","BoxShadow","BoxShadowInit","hasAnyKey","inset","offsetX","offsetY","blurRadius","spreadRadius","withInset","withOffsetX","withOffsetY","withBlurRadius","withSpreadRadius","and","apply","BoxShadowInterpolator","zero","values","fromArray","boxShadow","booleanValue","BoxShadowParser","BoxShadowForm","b0","b1","insetInterpolator","offsetXInterpolator","offsetYInterpolator","blurRadiusInterpolator","spreadRadiusInterpolator","nextInterpolator","shadow","record","attr","offsetXParser","offsetYParser","blurRadiusParser","spreadRadiusParser","StyleValue","DateTime","Transform","DateTimeLike","StyleValueParser","StyleValueForm","Item","extant","Num","Bool","date","transform","unitsOutput","TranslateTransformParser","ScaleTransformParser","RotateTransformParser","SkewTransformParser","AffineTransformParser","identity","parseDecimal","year","DateTimeFormat","pattern","parseDate","styleValue","deg","rad","grad","turn","px","em","rem","pct","ToAttributeString","toAttributeString","ToStyleString","toStyleString","ToCssValue","CSSStyleValue","toCssValue","CSSUnitValue","FocusLike","Focus","FocusInit","phase","direction","withPhase","withDirection","unfocused","focused","focusing","unfocusing","asFocusing","asUnfocusing","asToggling","asToggled","FocusInterpolator","Format","_static_unfocused_decorators","_static_focused_decorators","FocusAnimator","getPhase","getPhaseOr","elsePhase","setPhase","newPhase","affinity","setState","setDirection","newDirection","focus","unfocus","willSetState","newState","oldState","setValue","Reflexive","onSetValue","willFocus","didFocus","willUnfocus","didUnfocus","PresenceLike","Presence","PresenceInit","dismissed","presented","presenting","dismissing","asPresenting","asDismissing","PresenceInterpolator","_static_dismissed_decorators","_static_presented_decorators","p0","p1","PresenceAnimator","present","dismiss","willPresent","didPresent","willDismiss","didDismiss","ExpansionLike","Expansion","ExpansionInit","collapsed","expanded","expanding","collapsing","asExpanding","asCollapsing","ExpansionInterpolator","_static_collapsed_decorators","_static_expanded_decorators","e0","e1","ExpansionAnimator","expand","collapse","willExpand","didExpand","willCollapse","didCollapse","LookVector","feel","entry","getOr","elseValue","updated","updates","oldArray","oldIndex","updateCount","updateIndex","newArray","newIndex","j","copy","empty","feels","_static_empty_decorators","FeelVector","look","thisArray","thatArray","negative","minus","FeelVectorInterpolator","looks","coerce","v0","v1","interpolators","interpolatorCount","between","MoodVector","dot","combination","keys","MoodMatrix","rowArray","rowIndex","colArray","colIndex","rowCount","colCount","hasRow","rowKey","hasCol","colKey","getRow","getCol","thisColArray","thatColArray","newColArray","newColIndex","fromColArray","oldColArray","col","timesCol","implicitIdentity","row","timesRow","thisRowArray","newRowArray","newRowIndex","i2","newRow","j2","newCol","identityFor","fromRowArray","oldRowArray","oldRowIndex","oldColIndex","updatedRow","defaultRow","oldRow","updatedCol","defaultCol","oldCol","cols","forRows","rows","m","forCols","ThemeMatrix","mood","dotOr","ThemeContext","ThemeAnimator","onSetAffinity","newAffinity","oldAffinity","setLook","Look","Extrinsic","inletLook","getInletLook","getInletLookOr","elseLook","initLook","getPrototypeOf","getLook","getLookOr","newLook","minAffinity","oldLook","transition","Timing","getTransition","willSetLook","incrementVersion","onSetLook","didSetLook","applyLook","state","applyTheme","theme","tweenInherited","TweeningFlag","tween","inletVersion","version","inletValue","getOutletValue","derivedValue","deriveValue","inletVersions","inletValues","animator","ThemeConstraintAnimator","isExternal","isDummy","isInvalid","isConstant","evaluateConstraintVariable","updateConstraintSolution","constrained","toNumber","initStrength","strength","ConstraintStrength","Strong","setStrength","coefficient","variable","terms","Map","constant","ConstraintExpression","product","sum","divide","ConstrainedFlag","constrain","conditionCount","stopConstraining","startConstraining","updateConstraintVariable","addConstraintCondition","constraint","solver","removeConstraintCondition","constraining","ConstrainingFlag","willStartConstraining","onStartConstraining","didStartConstraining","constraintScope","ConstraintScope","addConstraintVariable","willStopConstraining","onStopConstraining","didStopConstraining","removeConstraintVariable","setConstraintVariable","animatorClass","animatorPrototype","strengthDescriptor","aArray","bArray","negate","subtract","multiply","NumberLook","NumberInterpolator","LengthLook","LengthInterpolator","ColorLook","FontLook","ShadowLook","TimingLook","smallFont","largeFont","textColor","iconColor","labelColor","legendColor","placeholderColor","highlightColor","statusColor","accentColor","backgroundColor","selectionColor","borderColor","focusColor","etchColor","maskColor","tickColor","gridColor","opacity","spacing","Feel","InterpolatedFeel","BrightnessFeel","amount","OpacityFeel","alpha0","ambient","default","primary","secondary","disabled","inactive","warning","alert","unselected","contrasted","raised","covered","opaque","floating","embossed","nested","hovering","translucent","navigating","Mood","Theme","dark","primaryColor","secondaryColor","disabledColor","inactiveColor","warningColor","alertColor","primarySelectionColor","secondarySelectionColor","warningSelectionColor","alertSelectionColor","raisedColor","coveredColor","ambientFeel","Easing","linear","withDuration","defaultFeel","cubicOut","primaryFeel","secondaryFeel","disabledFeel","inactiveFeel","warningFeel","alertFeel","unselectedFeel","selectedFeel","raisedFeel","coveredFeel","opaqueFeel","floatingFeel","darkerFeel","lighterFeel","contrastedFeel","embossedFeel","nestedFeel","hoveringFeel","translucentFeel","transparentFeel","navigatingFeel","light","ViewInsets","freeze","insetTop","insetRight","insetBottom","insetLeft","View","willAttachParentObservers","styler","_styler_initializers","_mood_initializers","_theme_initializers","moodModifier","_moodModifier_initializers","themeModifier","_themeModifier_initializers","constraints","constraintVariables","didAttachParentObservers","willDetachParentObservers","didDetachParentObservers","willInsertChildObservers","didInsertChildObservers","willRemoveChildObservers","didRemoveChildObservers","willMountObservers","didMountObservers","willUnmountObservers","didUnmountObservers","willResizeObservers","didResizeObservers","willScrollObservers","didScrollObservers","willChangeObservers","didChangeObservers","willAnimateObservers","didAnimateObservers","willProjectObservers","didProjectObservers","willLayoutObservers","didLayoutObservers","willRenderObservers","didRenderObservers","willRasterizeObservers","didRasterizeObservers","willCompositeObservers","didCompositeObservers","attachParent","setNextSibling","setPreviousSibling","setLastChild","setFirstChild","culled","cascadeCull","viewWillAttachParent","viewDidAttachParent","viewWillDetachParent","viewDidDetachParent","viewWillInsertChild","viewDidInsertChild","ProcessMask","cascadeProcess","viewWillRemoveChild","viewDidRemoveChild","viewWillMount","NeedsChange","NeedsAnimate","activateLayout","viewDidMount","viewWillUnmount","deactivateLayout","viewDidUnmount","CulledMask","setCulled","CulledFlag","CullFlag","willCull","onCull","cullChildren","didCull","willUncull","uncullChildren","onUncull","didUncull","cascadeUncull","uncullFlags","UncullFlags","derived","hidden","HiddenMask","setHidden","HiddenFlag","HideFlag","willHide","onHide","hideChildren","didHide","willUnhide","unhideChildren","onUnhide","didUnhide","cascadeHide","cascadeUnhide","unhideFlags","UnhideFlags","unbounded","UnboundedFlag","setUnbounded","unboundedFlag","willSetUnbounded","onSetUnbounded","didSetUnbounded","intangible","IntangibleFlag","setIntangible","willSetIntangible","onSetIntangible","didSetIntangible","NeedsProcess","DisplayMask","NeedsDisplay","processing","ProcessingFlag","needsProcess","processFlags","willProcess","NeedsResize","willResize","NeedsScroll","willScroll","willChange","willAnimate","NeedsProject","willProject","onProcess","onResize","onScroll","onChange","onAnimate","onProject","processChildren","processChild","didProject","didAnimate","didChange","didScroll","didResize","didProcess","viewWillResize","evaluateConstraintVariables","viewDidResize","viewWillScroll","viewDidScroll","viewWillChange","viewDidChange","viewWillAnimate","recohereAnimators","viewDidAnimate","viewWillProject","viewDidProject","displaying","DisplayingFlag","needsDisplay","displayFlags","cascadeDisplay","willDisplay","NeedsLayout","willLayout","NeedsRender","willRender","NeedsRasterize","willRasterize","NeedsComposite","willComposite","onDisplay","onLayout","onRender","onRasterize","onComposite","displayChildren","displayChild","didComposite","didRasterize","didRender","didLayout","didDisplay","viewWillLayout","viewDidLayout","viewWillRender","viewDidRender","viewWillRasterize","viewDidRasterize","viewWillComposite","viewDidComposite","viewport","willApplyTheme","onApplyTheme","didApplyTheme","themeFsteners","modifyMood","hasAffinity","oldMoodModifier","getValueOr","newMoodModifier","modifyTheme","oldThemeModifier","newThemeModifier","ViewRelation","Gesture","bindView","unbindView","DisplayerService","MaxProcessInterval","lhs","relation","rhs","expression","Required","Constraint","addConstraint","hasConstraint","activateConstraint","removeConstraint","deactivateConstraint","solverService","constraintVariable","ConstraintProperty","hasConstraintVariable","activateConstraintVariable","deactivateConstraintVariable","tryService","layoutViewport","visualViewport","viewIdiom","edgeInsets","parentTransform","pageTransform","pageBounds","clientBounds","clientTransform","popoverFrame","scrollX","pageXOffset","scrollY","pageYOffset","translate","R2Box","undefined","intersectsViewport","bounds","viewportWidth","documentElement","clientWidth","viewportHeight","clientHeight","top","bottom","left","right","dispatchEvent","addEventListener","type","listener","removeEventListener","_get_viewport_decorators","ViewportService","addView","removeView","_get_solver_decorators","SolverService","_styler_decorators","StylerService","_mood_decorators","Inherited","superMood","moodModifierProperty","didSetValue","_theme_decorators","superTheme","themeModifierProperty","_moodModifier_decorators","stylerService","_themeModifier_decorators","_get_edgeInsets_decorators","viewType","initView","view","willAttachView","onAttachView","didAttachView","deinitView","willDetachView","onDetachView","didDetachView","parentView","detectView","createView","ViewRef","inletView","getInletView","setView","viewKey","getView","newView","oldView","attachView","detachView","insertView","deleteView","ConstraintContext","tryView","viewRef","viewKeyDescriptor","ViewSet","insertViewMap","views","removeViewMap","hasView","viewCount","addViews","newViews","viewId","setViews","orderedViews","targetView","attachViews","detachViews","insertViews","removeViews","deleteViews","reinsertView","GestureInput","inputId","inputType","isPrimary","button","buttons","altKey","ctrlKey","metaKey","shiftKey","width","tiltX","tiltY","twist","pressure","tangentialPressure","x0","dx","dy","dt","detail","defaultPrevented","preventDefault","pointerInputType","bindsOwner","attachEvents","clearInputs","detachEvents","getInput","inputs","createInput","getOrCreateInput","inputCount","clearInput","resetInput","resetInputs","gesture","PositionGestureInput","pressing","holdTimer","holdDelay","isRunaway","setHoldTimer","clearHoldTimer","PositionGesture","attachHoverEvents","detachPressEvents","detachHoverEvents","attachPressEvents","hoverCount","pressCount","cancelPress","endHover","startHovering","willStartHovering","onStartHovering","didStartHovering","stopHovering","willStopHovering","onStopHovering","didStopHovering","beginHover","willBeginHover","onBeginHover","didBeginHover","willEndHover","onEndHover","didEndHover","startPressing","willStartPressing","onStartPressing","didStartPressing","stopPressing","willStopPressing","onStopPressing","didStopPressing","beginPress","allowPress","willBeginPress","onBeginPress","longPress","didBeginPress","movePress","willMovePress","onMovePress","didMovePress","endPress","willEndPress","onEndPress","didEndPress","willCancelPress","onCancelPress","didCancelPress","press","willPress","onPress","didPress","willLongPress","onLongPress","didLongPress","specialize","superClass","extends","PointerPositionGesture","TouchPositionGesture","MousePositionGesture","PointerEvent","TouchEvent","onPointerEnter","onPointerLeave","onPointerDown","onPointerMove","onPointerUp","onPointerCancel","onPointerLeaveDocument","updateInput","clientX","clientY","timeStamp","pointerType","pointerId","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","touch","touches","targetTouches","identifier","changedTouches","onMouseEnter","onMouseLeave","onMouseDown","onMouseMove","onMouseUp","onMouseLeaveDocument","MomentumGestureInput","vx","vy","ax","ay","path","coasting","updatePosition","hysteresis","shift","deriveVelocity","vMax","v2","v","sqrt","integrateVelocity","MomentumGesture","coastCount","endCoast","initHysteresis","acceleration","initAcceleration","velocityMax","initVelocityMax","doCoast","interrupt","cancel","startInteracting","willStartInteracting","onStartInteracting","didStartInteracting","stopInteracting","willStopInteracting","onStopInteracting","didStopInteracting","beginCoast","startCoasting","willStartCoasting","onStartCoasting","didStartCoasting","stopCoasting","willStopCoasting","onStopCoasting","didStopCoasting","atan2","abs","cos","sin","allowCoast","willBeginCoast","onBeginCoast","didBeginCoast","willEndCoast","onEndCoast","didEndCoast","willCoast","integrate","onCoast","didCoast","PointerMomentumGesture","TouchMomentumGesture","MouseMomentumGesture","ScaleGestureInput","xCoord","yCoord","disableX","disableY","ScaleGesture","NeedsRescale","distanceMin","initDistanceMin","preserveAspectRatio","PreserveAspectRatioFlag","wheel","WheelFlag","getXScale","setXScale","xScale","getYScale","setYScale","yScale","clientToRangeX","viewX","xMin","xRange","range","xMax","clientToRangeY","viewY","yMin","yRange","yMax","unscaleX","inverse","unscaleY","rescale","updateInputDomain","conserveMomentum","neutralizeX","neutralizeY","input0","input1","rescaleRadial","rescaleXY","rescaleX","rescaleY","oldXScale","oldYScale","px0","py0","qx0","qy0","vx0","vy0","ax0","ay0","x1","px1","py1","qx1","qy1","vx1","vy1","ax1","ay1","dpx","dpy","dp","upx","upy","dpqx0","dpqy0","dpqx1","dpqy1","ip0","ip1","jp0","jp1","jpx","jpy","rx0","ry0","rx1","ry1","iv0","iv1","jv0","jv1","jvx","jvy","rvx0","rvy0","rvx1","rvy1","uvx0","uvy0","uvx1","uvy1","a0","a1","rax0","ray0","rax1","ray1","newXScale","solvedXScale","solveDomain","newYScale","solvedYScale","sx1","sy1","sx0","sy0","dsx","dsy","esx","esy","distributeXYMomentum","distributeXMomentum","distributeYMomentum","uax0","uay0","uax1","uay1","coast0","coast1","dx0","dy0","d0","dx1","dy1","zoom","dz","PI","zoom0","zoom1","dzx","dzy","zx","zy","PointerScaleGesture","TouchScaleGesture","MouseScaleGesture","gestureClass","onWheel","deltaY","LayoutViewport","pageLeft","pageTop","VisualViewport","offsetLeft","offsetTop","_layoutViewport_initializers","layoutViewportChange","_layoutViewportChange_initializers","_visualViewport_initializers","visualViewportChange","_visualViewportChange_initializers","safeArea","_safeArea_initializers","orientation","_orientation_initializers","orientationChange","_orientationChange_initializers","colorScheme","_colorScheme_initializers","colorSchemeChange","_colorSchemeChange_initializers","_viewIdiom_initializers","load","_load_initializers","_layoutViewport_decorators","detect","update","newLayoutViewport","oldLayoutViewport","_layoutViewportChange_decorators","EventTimer","delay","initTarget","_visualViewport_decorators","_visualViewportChange_decorators","_safeArea_decorators","documentStyle","getComputedStyle","getPropertyValue","pxValue","swallow","CSS","supports","setProperty","_orientation_decorators","matchMedia","matches","_orientationChange_decorators","_colorScheme_decorators","_colorSchemeChange_decorators","_viewIdiom_decorators","_load_decorators","_viewport_initializers","processTimer","displayFrame","runProcessPass","runDisplayPass","scheduleProcessPass","scheduleDisplayPass","cancelProcessPass","cancelDisplayPass","rootViews","rootView","processDelay","MinProcessInterval","requestAnimationFrame","cancelAnimationFrame","updateSafeArea","_viewport_decorators","initService","viewportService","serviceDidScrollLayoutViewport","serviceDidResizeLayoutViewport","serviceDidResizeVisualViewport","serviceDidResizeViewportSafeArea","serviceDidSetViewportOrientation","serviceDidSetViewIdiom","createSolver","ConstraintSolver","serviceDidSetViewportColorScheme","AttributeContext","AttributeAnimator","attributeName","attributeValue","getAttribute","getAttributeValue","setAttribute","StringAttributeAnimator","Number","NumberAttributeAnimator","Boolean","BooleanAttributeAnimator","LengthAttributeAnimator","ColorAttributeAnimator","TransformAttributeAnimator","number","StyleContext","StyleAnimator","propertyNames","propertyValue","getStyle","fromCssValue","computedValue","node","Element","styles","cssValue","definedValue","getCssValue","cssState","getCssState","applyStyle","priority","initPriority","setPriority","setStyle","StringStyleAnimator","NumberStyleAnimator","LengthStyleAnimator","ColorStyleAnimator","FontFamilyStyleAnimator","BoxShadowStyleAnimator","TransformStyleAnimator","CSSNumericValue","to","basis","defaultValue","emValue","remValue","pctValue","pxState","emState","remState","pctState","PxLength","EmLength","RemLength","PctLength","emUnit","remUnit","pctUnit","StyleConstraintAnimator","constraintValue","NumberStyleConstraintAnimator","LengthStyleConstraintAnimator","styleContext","StyleAttribute","propertyName","willSetStyle","onSetStyle","didSetStyle","applyStyles","pctWidthUnit","HTMLElement","offsetParent","offsetWidth","innerWidth","pctHeightUnit","offsetHeight","innerHeight","initFasteners","defineGetter","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","lineHeight","fontFamily","marginTop","marginRight","marginBottom","marginLeft","overflowX","overflowY","overscrollBehaviorX","overscrollBehaviorY","paddingTop","paddingRight","paddingBottom","paddingLeft","CssScope","onUnbindInlet","detachCss","getOutletCss","css","inletCss","getInletCss","transformInletCss","getCss","setCss","newCss","oldCss","willDetachCss","onDetachCss","deinitCss","didDetachCss","willAttachCss","onAttachCss","initCss","didAttachCss","attachCss","StyleSheet","CSSStyleSheet","CssRule","selector","cssText","CSSGroupingRule","createRule","insertRule","cssRules","StyleRule","RANDOM_MARKER_ID","random","CSSStyleRule","rule","styleMap","removeProperty","defineField","MediaRule","CSSMediaRule","ClassList","classList","classNames","contains","className","willAdd","onAdd","didAdd","willRemove","onRemove","didRemove","replace","oldClassName","newClassName","NodeView","nodeMap","Node","fromNode","detachParent","removeChildMap","targetNode","nextView","insertBefore","insertChildMap","parentNode","nextNode","injectChild","reattachParent","isRootView","isNodeMounted","isConnected","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","text","textContent","createRange","selectNode","getBoundingClientRect","detach","HtmlView","SVGElement","SvgView","ElementView","TextView","WeakMap","createTextNode","ElementAttributes","willSetAttributeObservers","didSetAttributeObservers","willSetStyleObservers","didSetStyleObservers","attributes","willSetAttribute","removeAttribute","onSetAttribute","didSetAttribute","viewWillSetAttribute","viewDidSetAttribute","attributeStyleMap","viewWillSetStyle","viewDidSetStyle","detectTheme","themeName","DomService","eval","dom","modal","hasAttribute","fromTag","namespace","createElementNS","createElement","_get_dom_decorators","unmountService","_get_modal_decorators","ModalService","modalView","ModalView","presentModal","dismissModal","toggleModal","_get_attributes_decorators","_get_style_decorators","_get_classList_decorators","HtmlAttributes","applyRootTheme","Transient","isPositioned","element","position","StyleView","forTag","HtmlViewTagFactory","factory","sheet","_sheet_initializers","_sheet_decorators","SvgAttributes","SvgViewTagFactory","materializeView","childNodes","childNode","childView","materializeNode","materializeElement","materializeText","viewClass","viewClassName","boot","nodes","querySelectorAll","bootElement","qname","globalThis","self","idents","split","matte","_matte_initializers","modals","_modals_initializers","modality","_modality_initializers","fallthrough","_fallthrough_initializers","dismissModals","presence","modalViews","displaceModals","_matte_decorators","_modals_decorators","viewWillPresent","viewDidPresent","viewWillDismiss","viewDidDismiss","viewDidSetModality","_modality_decorators","newModality","oldModality","_fallthrough_decorators","GraphicsRenderer","Graphics","GraphicsView","renderer","_renderer_initializers","ownViewFrame","eventHandlers","renderViewOutline","viewBox","outlineColor","outlineWidth","contextLineWidth","lineWidth","contextStrokeStyle","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","sprites","viewFrame","deriveViewFrame","setViewFrame","CanvasView","cullViewFrame","intersects","viewBounds","ownViewBounds","deriveViewBounds","childViewBounds","union","hitBounds","deriveHitBounds","childHitBounds","cascadeHitTest","hit","hitTestChildren","hitTest","hitTestChild","inverseClientTransform","inversePageTransform","handlers","capture","passive","once","handler","handleEvent","bubbleEvent","bubbles","cancelBubble","_renderer_decorators","_get_sprites_decorators","SpriteService","DrawingRenderer","PathContext","precision","d","setPrecision","anglePrecision","decimal","quadraticCurveTo","bezierCurveTo","x2","y2","arcTo","x21","y21","x01","y01","l01_2","Epsilon","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","rs","arc","cx","cy","ccw","cw","da","rect","w","ellipse","rx","ry","phi","cosPhi","sinPhi","cosA1","sinA1","large","sweep","PathRenderer","pixelRatio","PaintingRenderer","SvgContext","pathContext","pathView","pathFlags","globalAlpha","globalCompositeOperation","fillStyle","lineCap","lineJoin","miterLimit","lineDashOffset","lineDash","getPathContext","getOrCreatePathContext","createPathContext","finalizePath","nextPathView","setPathView","setPathFlags","SVGPathElement","FillFlag","fill","FillRuleFlag","fillRule","StrokeFlag","PathFlag","getLineDash","setLineDash","segments","created","fillOpacity","pathString","strokeWidth","strokeLinecap","strokeLinejoin","strokeOpacity","strokeMiterlimit","dash","strokeDasharray","strokeDashoffset","beginSvg","finalizeSvg","SvgRenderer","CanvasRenderer","setTransform","WebGLRenderer","devicePixelRatio","Sprite","spriteWidth","spriteHeight","getRenderer","getSpriteRenderer","clearSprite","draw","frame","drawSprite","release","releaseSprite","SpriteSheet","canvasWidth","canvasHeight","floor","spriteCount","freeSprites","canvas","getContext","nextSheet","createSprites","sprite","createSprite","freeCount","acquireNextFreeSheet","acquireSprite","pop","clearRect","affine","spritePixelRatio","spriteX","spriteY","drawImage","minSizeClass","maxSizeClass","TextureWidth","TextureHeight","log2","slabCount","slabs","createSlab","sizeClass","spriteSize","getFreeSlab","slab","freeSlab","createSheet","getFreeSheet","widthClass","ceil","heightClass","clickEvents","_clickEvents_initializers","wheelEvents","_wheelEvents_initializers","mouseEvents","_mouseEvents_initializers","pointerEvents","_pointerEvents_initializers","touchEvents","_touchEvents_initializers","click","_click_initializers","dblclick","_dblclick_initializers","contextmenu","_contextmenu_initializers","_wheel_initializers","mouseenter","_mouseenter_initializers","mouseleave","_mouseleave_initializers","mousedown","_mousedown_initializers","mousemove","_mousemove_initializers","mouseup","_mouseup_initializers","pointerenter","_pointerenter_initializers","pointerleave","_pointerleave_initializers","pointerdown","_pointerdown_initializers","pointermove","_pointermove_initializers","pointerup","_pointerup_initializers","pointercancel","_pointercancel_initializers","touchstart","_touchstart_initializers","touchmove","_touchmove_initializers","touchend","_touchend_initializers","touchcancel","_touchcancel_initializers","mouse","pointers","resizeCanvas","resetRenderer","detectHitTargets","clearCanvas","createRenderer","rendererType","detectMouseTarget","pointer","detectPointerTarget","setEventTarget","eventTarget","setTarget","fireEvent","updateMouse","screenX","screenY","movementX","movementY","relatedTarget","fireMouseEvent","onMouseTargetChange","newTargetView","oldTargetView","commonAncestorView","commonAncestor","outEvent","MouseEvent","relatedTargetView","leaveView","leaveEvent","assign","overEvent","enterView","enterEvent","updatePointer","firePointerEvent","onPointerTargetChange","updateTouch","pageX","pageY","radiusX","radiusY","rotationAngle","force","fireTouchEvent","originalEvent","dispatched","changedTouch","startEvent","targetViewTouches","nextTouch","touchDocument","createTouchList","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","createService","_clickEvents_decorators","enabled","_wheelEvents_decorators","_mouseEvents_decorators","_pointerEvents_decorators","_touchEvents_decorators","_click_decorators","_dblclick_decorators","_contextmenu_decorators","_wheel_decorators","_mouseenter_decorators","_mouseleave_decorators","_mousedown_decorators","_mousemove_decorators","_mouseup_decorators","_pointerenter_decorators","_pointerleave_decorators","_pointerdown_decorators","_pointermove_decorators","_pointerup_decorators","_pointercancel_decorators","_touchstart_decorators","_touchmove_decorators","_touchend_decorators","_touchcancel_decorators","RasterView","_opacity_initializers","compositeOperation","_compositeOperation_initializers","compositor","_compositor_initializers","createCanvas","ownRasterFrame","rasterFlags","rasterFrame","compositeImage","deriveRasterFrame","setRasterFrame","newWidth","newHeight","newCanvasWidth","newCanvasHeight","oldCanvasWidth","oldCanvasHeight","_opacity_decorators","_compositeOperation_decorators","_compositor_decorators","FillView","StrokeView","Rect","withX","withY","withWidth","render","renderRect","RectView","_x_initializers","_y_initializers","_width_initializers","_height_initializers","_fill_initializers","_stroke_initializers","_strokeWidth_initializers","getState","contextFillStyle","hitTestRect","hx","hy","isPointInPath","pointInStroke","isPointInStroke","_x_decorators","_y_decorators","_width_decorators","_height_decorators","_fill_decorators","_stroke_decorators","_strokeWidth_decorators","Arc","center","innerRadius","outerRadius","startAngle","sweepAngle","padAngle","padRadius","cornerRadius","withCenter","R2Point","withInnerRadius","withOuterRadius","withStartAngle","withSweepAngle","withPadAngle","withPadRadius","withCornerRadius","renderArc","r0","r1","radValue","a01","a11","a00","a10","da0","da1","ap","rp","rc","x00","y00","rc0","rc1","asin","x10","y10","x11","y11","oc","intersect","bx","by","kc","lc","cornerTangents","origin","x3","y3","x32","y32","lo","ox","oy","d2","D","cx0","cy0","cx1","cy1","ArcView","xAlign","_xAlign_initializers","yAlign","_yAlign_initializers","_center_initializers","_innerRadius_initializers","_outerRadius_initializers","_startAngle_initializers","_sweepAngle_initializers","_padAngle_initializers","_padRadius_initializers","_cornerRadius_initializers","layoutArc","transformX","py","transformY","hitTestArc","_xAlign_decorators","_yAlign_decorators","_center_decorators","_innerRadius_decorators","_outerRadius_decorators","_startAngle_decorators","_sweepAngle_decorators","_padAngle_decorators","_padRadius_decorators","_cornerRadius_decorators","radius","TypesetView","TextRun","textAlign","textBaseline","textOrigin","withText","withFont","withTextAlign","withTextBaseline","withTextOrigin","withTextColor","renderText","contextFont","contextTextAlign","contextTextBaseline","fillText","TextRunView","_text_initializers","_font_initializers","_textAlign_initializers","_textBaseline_initializers","_textOrigin_initializers","_textColor_initializers","run","_text_decorators","_textAlign_decorators","_textBaseline_decorators","_font_decorators","_textOrigin_decorators","_textColor_decorators","IconLayoutLike","IconLayout","IconLayoutInit","withXAlign","withYAlign","withAlign","IconLayoutInterpolator","l0","l1","Icon","FilledIcon","VectorIcon","fillColor","fillLook","withFillRule","withFillColor","withFillLook","withMoodModifier","isThemed","withTheme","paint","contextGlobalAlpha","transformDraw","VectorIconInterpolator","R2Path","i0","i1","fillColorInterpolator","CircleIcon","centerX","centerY","CircleIconInterpolator","PolygonIcon","sides","rotation","sector","PolygonIconInterpolator","rotationInterpolator","EnclosedIcon","outer","inner","innerScale","outerMoodModifier","innerMoodModifier","withOuter","withInner","withInnerScale","withOuterMoodModifier","modifyOuterMood","oldOuterMoodModifier","newOuterMoodModifier","withInnerMoodModifier","modifyInnerMood","oldInnerMoodModifier","newInnerMoodModifier","modifiedMood","oldOuter","newOuter","outerMood","oldInner","newInner","innerMood","outerFrame","innerFrame","ex","ey","EnclosedIconInterpolator","embossedMoodModifier","_static_get_embossedMoodModifier_decorators","outerInterpolator","innerInterpolator","innerScaleInterpolator","IconView","IconGraphicsAnimator","graphics","iconView","transformState","GraphicsIconView","iconLayout","_iconLayout_initializers","_graphics_initializers","oldGraphics","newGraphics","renderIcon","hitTestIcon","_iconLayout_decorators","_get_iconColor_decorators","didSetState","_graphics_decorators","viewWidth","viewHeight","viewSize","iconWidth","iconHeight","SvgIconView","iconBounds","viewportElement","SVGSVGElement","animVal","HtmlIconView","svg","_svg_initializers","initIcon","layoutIcon","svgView","_svg_decorators","setInherits","Controller","CompileMask","cascadeCompile","NeedsRevise","NeedsCompile","ExecuteMask","NeedsExecute","compiling","CompilingFlag","needsCompile","compileFlags","willCompile","NeedsResolve","willResolve","NeedsGenerate","willGenerate","NeedsAssemble","willAssemble","onCompile","onResolve","onGenerate","onAssemble","compileChildren","compileChild","didAssemble","didGenerate","didResolve","didCompile","executing","ExecutingFlag","needsExecute","executeFlags","cascadeExecute","willExecute","willRevise","NeedsCompute","willCompute","onExecute","onRevise","onCompute","executeChildren","executeChild","didCompute","didRevise","didExecute","ControllerRelation","TraitViewRef","bindController","unbindController","ExecutorService","addController","removeController","controllerType","initController","controller","willAttachController","onAttachController","didAttachController","deinitController","willDetachController","onDetachController","didDetachController","parentController","detectController","createController","ControllerRef","inletController","getInletController","setController","controllerKey","getController","newController","oldController","attachController","detachController","insertController","deleteController","tryController","controllerRef","controllerKeyDescriptor","ControllerSet","insertControllerMap","controllers","removeControllerMap","hasController","controllerCount","addControllers","newControllers","controllerId","setControllers","orderedControllers","targetController","attachControllers","detachControllers","insertControllers","removeControllers","deleteControllers","reinsertController","consumeControllers","unconsumeControllers","bindsTrait","insertChildTrait","bindsView","observesView","fromViewLike","insertChildView","ViewControllerRef","viewOrController","insertControllerView","detectControllerView","ViewControllerSet","getViewController","viewControllers","associateViewController","dissociateViewController","compareViews","TraitControllerRef","getTraitRef","traitOrController","TraitControllerSet","traitControllers","TraitViewControllerRef","getTraitViewRef","traitOrViewOrController","traitViewRef","TraitViewControllerSet","getTargetView","nextController","compileTimer","executeTimer","runCompilePass","runExecutePass","MaxCompileInterval","scheduleCompilePass","scheduleExecutePass","MinExecuteInterval","cancelCompilePass","cancelExecutePass","rootControllers","rootController","compileDelay","MinCompileInterval","MaxExecuteInterval","HistoryState","fragment","parameters","environment","current","fromUri","location","href","console","delta","cloned","uri","fromUriFragment","query","UriFragment","UriQuery","tail","toUri","queryBuilder","builder","build","HistoryService","historyState","popstate","_popstate_initializers","historyUri","pushHistory","deltaState","newUri","willPushHistory","history","pushState","onPushHistory","didPushHistory","replaceHistory","willReplaceHistory","replaceState","onReplaceHistory","didReplaceHistory","willPopHistory","onPopHistory","didPopHistory","_popstate_decorators","Hyperlink","title","HistoryHyperlink","LocationHyperlink","hyperlink","activate"],"mappings":";goBAiEO,SAASA,EAAaC,EAAMC,EAAcC,EAAYC,EAAWC,EAAcC,GACpF,SAASC,EAAOC,GAAK,QAAU,IAANA,GAA6B,mBAANA,EAAkB,MAAM,IAAIC,UAAU,qBAAsB,OAAOD,CAAI,CAKvH,IAJA,IAGIE,EAHAC,EAAOP,EAAUO,KAAMC,EAAe,WAATD,EAAoB,MAAiB,WAATA,EAAoB,MAAQ,QACrFE,GAAUX,GAAgBD,EAAOG,EAAkB,OAAIH,EAAOA,EAAKa,UAAY,KAC/EC,EAAab,IAAiBW,EAASG,OAAOC,yBAAyBJ,EAAQT,EAAUc,MAAQ,CAAA,GAC9FC,GAAO,EACLC,EAAIjB,EAAWkB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC7C,IAAIE,EAAU,CAAA,EACd,IAAK,IAAIC,KAAKnB,EAAWkB,EAAQC,GAAW,WAANA,EAAiB,CAAA,EAAKnB,EAAUmB,GACtE,IAAK,IAAIA,KAAKnB,EAAUoB,OAAQF,EAAQE,OAAOD,GAAKnB,EAAUoB,OAAOD,GACrED,EAAQG,eAAiB,SAAUjB,GAAK,GAAIW,EAAM,MAAM,IAAIV,UAAU,0DAA2DH,EAAkBoB,KAAKnB,EAAOC,GAAK,QACpK,IAAImB,GAAS,EAAIxB,EAAWiB,IAAa,aAATT,EAAsB,CAAEiB,IAAKb,EAAWa,IAAKC,IAAKd,EAAWc,KAAQd,EAAWH,GAAMU,GACtH,GAAa,aAATX,EAAqB,CACrB,QAAe,IAAXgB,EAAmB,SACvB,GAAe,OAAXA,GAAqC,iBAAXA,EAAqB,MAAM,IAAIlB,UAAU,oBACnEC,EAAIH,EAAOoB,EAAOC,QAAMb,EAAWa,IAAMlB,IACzCA,EAAIH,EAAOoB,EAAOE,QAAMd,EAAWc,IAAMnB,IACzCA,EAAIH,EAAOoB,EAAOG,QAAOzB,EAAa0B,QAAQrB,EACrD,MACQA,EAAIH,EAAOoB,MACH,UAAThB,EAAkBN,EAAa0B,QAAQrB,GACtCK,EAAWH,GAAOF,EAE9B,CACGG,GAAQG,OAAOgB,eAAenB,EAAQT,EAAUc,KAAMH,GAC1DI,GAAO,CACT,CAEO,SAASc,EAAkBC,EAAS7B,EAAc8B,GAEvD,IADA,IAAIC,EAAWC,UAAUhB,OAAS,EACzBD,EAAI,EAAGA,EAAIf,EAAagB,OAAQD,IACrCe,EAAQC,EAAW/B,EAAae,GAAGkB,KAAKJ,EAASC,GAAS9B,EAAae,GAAGkB,KAAKJ,GAEnF,OAAOE,EAAWD,OAAQ,CAC5B,CAwNkD,mBAApBI,iBAAiCA,gBClLlDC,IAAAA,EAAK,sCAAL,OAAAC,EAAA,MAAAD,UAAcE,YACzB,WAAAC,GACEC,QA0rBOC,KAAAC,gBAAyBb,EAAAY,KAAAE,GA6xBzBF,KAAAG,QAA2Cf,EAAAY,KAAAI,OAAA,GAt9ClDJ,KAAKK,UAAY,KACjBL,KAAKC,WAAa,KAClBD,KAAKM,UAAY,KACjBN,KAAKO,SAAW,IACjB,CAKD,iBAAaC,GACX,OAAOb,CACR,CAEkB,gBAAAc,CAAiBC,GAClCV,KAAKW,cAAc,wBAAyBD,EAAQV,MACpD,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMH,iBAAiBC,GACvBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,cAAAG,CAAeN,GAChC,IAAIE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMI,eAAeN,GACrBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,eAAAI,CAAgBP,GACjC,IAAIE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMK,gBAAgBP,GACtBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,uBAAwBD,EAAQV,KACpD,CAEkB,gBAAAkB,CAAiBR,GAClCV,KAAKW,cAAc,wBAAyBD,EAAQV,MACpD,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMM,iBAAiBR,GACvBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,cAAAM,CAAeT,GAChC,IAAIE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMO,eAAeT,GACrBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,eAAAO,CAAgBV,GACjC,IAAIE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMQ,gBAAgBV,GACtBE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,uBAAwBD,EAAQV,KACpD,CAEkB,eAAAqB,CAAgBC,EAActD,GAC/C+B,MAAMsB,gBAAgBC,EAAOtD,GAC7BgC,KAAKW,cAAc,uBAAwBW,EAAOtD,EAAQgC,MAC1D,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMS,gBAAgBC,EAAOtD,GAC7B4C,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,aAAAU,CAAcD,EAActD,GAC7C+B,MAAMwB,cAAcD,EAAOtD,GAC3B,IAAI4C,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMW,cAAcD,EAAOtD,GAC3B4C,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,cAAAW,CAAeF,EAActD,GAC9C,IAAI4C,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMY,eAAeF,EAAOtD,GAC5B4C,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,sBAAuBW,EAAOtD,EAAQgC,MACzDD,MAAMyB,eAAeF,EAAOtD,EAC7B,CAGQ,aAAAyD,CAAcC,GACoB,IAApC1B,KAAK2B,MAAQhC,EAAMiC,wBAClBF,IACFA,EAAc,GAG0B,KAD1CA,GAAe1B,KAAK2B,MAAQhC,EAAMkC,YACflC,EAAMmC,cACvB9B,KAAK+B,eAAeL,GAGzB,CAEkB,eAAAM,CAAgBV,GACjCvB,MAAMiC,gBAAgBV,GACtBtB,KAAKW,cAAc,uBAAwBW,EAAOtB,MAClD,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMoB,gBAAgBV,GACtBV,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,aAAAoB,CAAcX,GAC/BvB,MAAMkC,cAAcX,GACpB,IAAIV,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMqB,cAAcX,GACpBV,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,cAAAqB,CAAeZ,GAChC,IAAIV,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMsB,eAAeZ,GACrBV,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,sBAAuBW,EAAOtB,MACjDD,MAAMmC,eAAeZ,EACtB,CAEkB,iBAAAa,CAAkBb,EAActD,GACjD+B,MAAMoC,kBAAkBb,EAAOtD,GAC/BgC,KAAKW,cAAc,yBAA0BW,EAAOtD,EAAQgC,MAC5D,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMuB,kBAAkBb,EAAOtD,GAC/B4C,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAEkB,eAAAuB,CAAgBd,EAActD,GAC/C+B,MAAMqC,gBAAgBd,EAAOtD,EAC9B,CAEkB,gBAAAqE,CAAiBf,EAActD,GAChD,IAAI4C,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMyB,iBAAiBf,EAAOtD,GAC9B4C,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,wBAAyBW,EAAOtD,EAAQgC,MAC3DD,MAAMsC,iBAAiBf,EAAOtD,EAC/B,CAGQ,YAAAsE,GACP,GAAyC,IAApCtC,KAAK2B,MAAQhC,EAAMiC,aACtB,MAAM,IAAIW,MAAM,mBAElBvC,KAAKwC,YACLxC,KAAKyC,SAASzC,KAAK2B,MAAQhC,EAAMiC,aACjC5B,KAAK0C,UACL1C,KAAK2C,cACL3C,KAAK4C,gBACL5C,KAAK6C,UACN,CAEkB,SAAAL,GACjBzC,MAAMyC,YACNxC,KAAKW,cAAc,iBAAkBX,KACtC,CAEkB,QAAA6C,GAEjB7C,KAAK8C,cAAc9C,KAAMA,KAAK2B,MAAQhC,EAAMkC,YAAY,GACxD7B,KAAK+C,cAAc/C,KAAKgD,YAEA,OAApBhD,KAAKiD,YAAkD,IAA3BjD,KAAKiD,WAAWzE,QAC9CwB,KAAK+C,cAAcpD,EAAMuD,aAG3BlD,KAAKmD,iBAEkB,OAAnBnD,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,iBAGPrD,KAAKW,cAAc,gBAAiBX,MACpCD,MAAM8C,UACP,CAGQ,cAAAS,GACP,GAAyC,IAApCtD,KAAK2B,MAAQhC,EAAMiC,aACtB,MAAM,IAAIW,MAAM,qBAElBvC,KAAKuD,cACLvD,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMiC,aAClC5B,KAAKwD,kBACLxD,KAAKyD,gBACLzD,KAAK0D,YACL1D,KAAK2D,YACN,CAEkB,WAAAJ,GACjBxD,MAAMwD,cACNvD,KAAKW,cAAc,mBAAoBX,MAEvCA,KAAK4D,eACN,CAEkB,UAAAD,GACjB3D,KAAKW,cAAc,kBAAmBX,MACtCD,MAAM4D,YACP,CAED,gBAAAE,CAAqCC,EAA2BC,EAAyBC,GACvF,IAAIpD,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMqD,EAAWrD,EAAMsD,YAAYJ,EAAcC,EAAcC,GAC/D,GAAiB,OAAbC,EACF,OAAOA,EAETrD,EAAQA,EAAME,SACf,CACD,OAAO,IACR,CAEQ,aAAAiC,CAAcrB,EAAyByC,GAAqB,GACnE,MAAMxC,EAAQ3B,KAAK2B,MACbyC,EAAmB1C,GAAeC,EAAQhC,EAAMkC,WAC7B,IAArBuC,IAGJpE,KAAKyC,SAASd,EAAQyC,GACtBpE,KAAK8C,cAAc9C,KAAMoE,EAAkBD,GAC5C,CAES,WAAAE,CAAY3C,EAAyByC,GAC7C,IAAIvD,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBY,EAAcd,EAAMyD,YAAY3C,EAAayC,GAC7CvD,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACD,OAAOa,CACR,CAED,aAAAoB,CAAc9E,EAAe0D,EAAyByC,GACpDzC,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK2B,OAASD,EAAc/B,EAAMkC,WAOzD,GAN0C,IAArCH,EAAc/B,EAAMmC,eACvBsC,GAAoBzE,EAAM2E,cAEc,IAArC5C,EAAc/B,EAAM4E,eACvBH,GAAoBzE,EAAM6E,cAEH,IAArBJ,IAA2BD,EAC7B,OAEFnE,KAAKyC,SAASzC,KAAK2B,MAAQyC,GAC3B,MAAM1D,EAASV,KAAKU,OACpB,GAAe,OAAXA,EACFA,EAAOoC,cAAc9E,EAAQ0D,EAAayC,QACrC,GAAInE,KAAKyE,QAAS,CACvB,MAAMC,EAAiB1E,KAAKG,QAAQwE,QACb,OAAnBD,GACFA,EAAe5B,cAAc9E,EAAQ0D,EAAayC,EAErD,CACF,CAED,YAAIS,GACF,OAA6C,IAArC5E,KAAK2B,MAAQhC,EAAMkF,aAC5B,CAED,aAAIC,GACF,OAA8C,IAAtC9E,KAAK2B,MAAQhC,EAAMoF,cAC5B,CAES,YAAAC,CAAaC,GACrB,IAAIrE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBmE,EAAerE,EAAMoE,aAAaC,GAClCrE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACD,OAAOoE,CACR,CAED,cAAAlD,CAAekD,GACb,IAIE,GAHAA,IAAiBtF,EAAM2E,aACvBW,GAAgBjF,KAAK2B,MAAQhC,EAAMkC,WAEQ,KAD3CoD,EAAejF,KAAKgF,aAAaC,IACbtF,EAAMmC,aACxB,OAEF,IAAIoD,EAAeD,EACnBjF,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAM2E,aAAe3E,EAAMoF,eACvD/E,KAAKmF,YAAYD,GACyC,KAApDlF,KAAK2B,MAAQsD,GAAgBtF,EAAMuD,eACvCgC,GAAgBvF,EAAMuD,YACtBlD,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMuD,aAClClD,KAAKoF,cAEsD,KAAvDpF,KAAK2B,MAAQsD,GAAgBtF,EAAM0F,kBACvCH,GAAgBvF,EAAM0F,eACtBrF,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAM0F,gBAClCrF,KAAKsF,iBAEsD,KAAvDtF,KAAK2B,MAAQsD,GAAgBtF,EAAM4F,kBACvCL,GAAgBvF,EAAM4F,eACtBvF,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAM4F,gBAClCvF,KAAKwF,iBAGPxF,KAAKyF,UAAUP,GAC4B,IAAtCA,EAAevF,EAAMuD,cACxBlD,KAAK0F,WAEuC,IAAzCR,EAAevF,EAAM0F,iBACxBrF,KAAK2F,cAEuC,IAAzCT,EAAevF,EAAM4F,iBACxBvF,KAAK4F,cAGoC,IAAtCV,EAAevF,EAAMmC,cACxB9B,KAAK6F,gBAAgBX,EAAclF,KAAK8F,cAGI,IAAzCZ,EAAevF,EAAM4F,iBACxBvF,KAAK+F,eAEuC,IAAzCb,EAAevF,EAAM0F,iBACxBrF,KAAKgG,eAEoC,IAAtCd,EAAevF,EAAMuD,cACxBlD,KAAKiG,YAEPjG,KAAKkG,WAAWhB,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMoF,cACnC,CACF,CAES,WAAAI,CAAYF,GACpB,IAAIrE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMuE,YAAYF,GAClBrE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,SAAA4E,CAAUR,GAClB,IAAIrE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM6E,UAAUR,GAChBrE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,UAAAqF,CAAWjB,GACnB,IAAIrE,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMsF,WAAWjB,GACjBrE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,UAAAuE,GACRpF,KAAKW,cAAc,kBAAmBX,MACtC,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMwE,aACNxE,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,QAAA6E,GACR1F,KAAKmG,kBAAkBnG,KAAKoG,YAC5B,IAAIxF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM8E,WACN9E,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,SAAAoF,GACR,IAAIrF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMqF,YACNrF,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,iBAAkBX,KACtC,CAES,aAAAsF,GACRtF,KAAKW,cAAc,qBAAsBX,MACzC,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM0E,gBACN1E,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,WAAA8E,GACR,IAAI/E,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM+E,cACN/E,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,YAAAmF,GACR,IAAIpF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMoF,eACNpF,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,oBAAqBX,KACzC,CAES,aAAAwF,GACRxF,KAAKW,cAAc,qBAAsBX,MACzC,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM4E,gBACN5E,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,WAAA+E,GACR,IAAIhF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMgF,cACNhF,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,YAAAkF,GACR,IAAInF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMmF,eACNnF,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,oBAAqBX,KACzC,CAES,eAAA6F,CAAgBZ,EAA0Ba,GAClD,MAAMlF,EAAQZ,KAAKC,WACL,OAAVW,EACFZ,KAAKqG,qBAAqBzF,EAAOqE,EAAca,GAE/C9F,KAAKsG,mBAAmBrB,EAAca,EAEzC,CAES,oBAAAO,CAAqBzF,EAAcqE,EAA0Ba,GACrE,MAAMjF,EAAOD,EAAME,UACN,OAATD,EACFD,EAAMiF,gBAAgBZ,EAAca,EAAqB9F,KAAKqG,qBAAqBE,KAAKvG,KAAMa,IAE9FD,EAAMiF,gBAAgBZ,EAAca,EAAqB9F,KAAKsG,mBAEjE,CAES,kBAAAA,CAAmBrB,EACAa,GAC3B,IAAIxE,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAX,EAAarG,KAAKO,KAAMsB,EAAO2D,GAClB,OAATpE,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAES,YAAAiF,CAAaxE,EAAc2D,GACnC3D,EAAMS,eAAekD,EACtB,CAED,cAAIyB,GACF,OAA+C,IAAvC1G,KAAK2B,MAAQhC,EAAMgH,eAC5B,CAES,YAAAC,CAAaC,GACrB,IAAIjG,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnB+F,EAAejG,EAAMgG,aAAaC,GAClCjG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACD,OAAOgG,CACR,CAED,cAAAC,CAAeD,GACb,IAIE,GAHAA,IAAiBlH,EAAM6E,aACvBqC,GAAgB7G,KAAK2B,MAAQhC,EAAMkC,WAEQ,KAD3CgF,EAAe7G,KAAK4G,aAAaC,IACblH,EAAM4E,aACxB,OAEF,IAAIW,EAAe2B,EACnB7G,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAM6E,aAAe7E,EAAMgH,gBACvD3G,KAAK+G,YAAY7B,GAC2C,KAAtDlF,KAAK2B,MAAQkF,GAAgBlH,EAAMqH,iBACvC9B,GAAgBvF,EAAMqH,cACtBhH,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMqH,eAClChH,KAAKiH,gBAEsD,KAAvDjH,KAAK2B,MAAQkF,GAAgBlH,EAAMuH,kBACvChC,GAAgBvF,EAAMuH,eACtBlH,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMuH,gBAClClH,KAAKmH,iBAGPnH,KAAKoH,UAAUlC,GAC8B,IAAxCA,EAAevF,EAAMqH,gBACxBhH,KAAKqH,aAEuC,IAAzCnC,EAAevF,EAAMuH,iBACxBlH,KAAKsH,cAGFpC,EAAevF,EAAM4E,aACxBvE,KAAKuH,gBAAgBrC,EAAclF,KAAKwH,cAGI,IAAzCtC,EAAevF,EAAMuH,iBACxBlH,KAAKyH,eAEsC,IAAxCvC,EAAevF,EAAMqH,gBACxBhH,KAAK0H,cAEP1H,KAAK2H,WAAWzC,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMgH,eACnC,CACF,CAES,WAAAI,CAAYF,GACpB,IAAIjG,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMmG,YAAYF,GAClBjG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,SAAAuG,CAAUP,GAClB,IAAIjG,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMwG,UAAUP,GAChBjG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,UAAA8G,CAAWd,GACnB,IAAIjG,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM+G,WAAWd,GACjBjG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,YAAAoG,GACRjH,KAAKW,cAAc,oBAAqBX,MACxC,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMqG,eACNrG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,UAAAwG,GACR,IAAIzG,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMyG,aACNzG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,WAAA6G,GACR,IAAI9G,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM8G,cACN9G,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,mBAAoBX,KACxC,CAES,aAAAmH,GACRnH,KAAKW,cAAc,qBAAsBX,MACzC,IAAIY,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAMuG,gBACNvG,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,WAAAyG,GACRtH,KAAK4H,kBAAkB5H,KAAKoG,YAC5B,IAAIxF,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM0G,cACN1G,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CAES,YAAA4G,GACR,IAAI7G,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBF,EAAM6G,eACN7G,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACDb,KAAKW,cAAc,oBAAqBX,KACzC,CAES,eAAAuH,CAAgBV,EAA0BW,GAClD,MAAM5G,EAAQZ,KAAKC,WACL,OAAVW,EACFZ,KAAK6H,qBAAqBjH,EAAOiG,EAAcW,GAE/CxH,KAAK8H,mBAAmBjB,EAAcW,EAEzC,CAES,oBAAAK,CAAqBjH,EAAciG,EAA0BW,GACrE,MAAM3G,EAAOD,EAAME,UACN,OAATD,EACFD,EAAM2G,gBAAgBV,EAAcW,EAAqBxH,KAAK6H,qBAAqBtB,KAAKvG,KAAMa,IAE9FD,EAAM2G,gBAAgBV,EAAcW,EAAqBxH,KAAK8H,mBAEjE,CAES,kBAAAA,CAAmBjB,EAA0BW,GACrD,IAAIlG,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAe,EAAa/H,KAAKO,KAAMsB,EAAOuF,GAClB,OAAThG,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAES,YAAA2G,CAAalG,EAAcuF,GACnCvF,EAAMwF,eAAeD,EACtB,CAKD,aAAAkB,CAAc9H,GACXD,KAAuBC,WAAaA,CACtC,CAKD,YAAA+H,CAAa1H,GACVN,KAAuBM,UAAYA,CACrC,CAID,YAAA2H,CAAmBC,EAA2D7I,GAC5E,IACIuB,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UAEnB,YADeoH,EAASzI,KAAKJ,EAASuB,GAEpC,MAEFA,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CAEF,CAMS,cAAAsH,CAAevH,GACvB,MAAM7C,EAAM6C,EAAM7C,IAClB,YAAIA,EAAgB,CAClB,IAAIwC,EAAWP,KAAKO,SACH,OAAbA,IACFA,EAAW,CAAA,EACVP,KAAuBO,SAAWA,GAErCA,EAASxC,GAAO6C,CACjB,CACF,CAGS,cAAAwH,CAAexH,GACvB,MAAM7C,EAAM6C,EAAM7C,IAClB,YAAIA,EACF,OAEF,MAAMwC,EAAWP,KAAKO,SACL,OAAbA,UACKA,EAASxC,EAEnB,CAID,SAAAsK,CAAUtK,EAAyBuK,GACjC,YAAIvK,EAAgB,CAClB,MAAMwC,EAAWP,KAAKO,SACtB,GAAiB,OAAbA,EAAmB,CACrB,MAAMK,EAAQL,EAASxC,GACvB,YAAI6C,IAAqB0H,SAAgD1H,aAAiB0H,GACxF,OAAO1H,CAEV,CACF,CACD,GAAI0H,QAA8C,CAChD,IAAI1H,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,GAAIA,aAAiB0H,EACnB,OAAO1H,EAETA,EAASA,EAAgBE,SAC1B,CACF,CACD,OAAO,IACR,CAID,QAAAyH,CAASxK,EAA4BuK,GACnC,GAAmB,iBAARvK,EAAkB,CAC3B,MAAMwC,EAAWP,KAAKO,SACtB,GAAiB,OAAbA,EAAmB,CACrB,MAAMK,EAAQL,EAASxC,GACvB,QAAmB,IAAf6C,SAAyC,IAApB0H,GAAyB1H,aAAiB0H,GACjE,OAAO,CAEV,CACF,KAAM,CACL,IAAI1H,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,GAAIA,aAAiB7C,EACnB,OAAO,EAET6C,EAASA,EAAgBE,SAC1B,CACF,CACD,OAAO,CACR,CAKD,QAAA0H,CAASzK,EAA4BuK,GACnC,GAAmB,iBAARvK,EAAkB,CAC3B,MAAMwC,EAAWP,KAAKO,SACtB,GAAiB,OAAbA,EAAmB,CACrB,MAAMK,EAAQL,EAASxC,GACvB,QAAmB,IAAf6C,SAAyC,IAApB0H,GAAyB1H,aAAiB0H,GACjE,OAAO1H,CAEV,CACF,KAAM,CACL,IAAIA,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,GAAIA,aAAiB7C,EACnB,OAAO6C,EAETA,EAASA,EAAgBE,SAC1B,CACF,CACD,OAAO,IACR,CAID,QAAA2H,CAAS1K,EAAa2K,GACH,OAAbA,IACFA,EAAWC,EAAMC,SAASF,IAE5B,MAAMG,EAAW7I,KAAKwI,SAASzK,GAC/B,IAAIC,EAgDJ,OA9CiB,OAAb6K,GAAkC,OAAbH,GAAqBG,IAAaH,GACzDA,EAASI,SACT9K,EAAS6K,EAAS/H,UAElBd,KAAK+I,gBAAgBF,GACrBA,EAASG,YAAYhJ,MACrBA,KAAKoI,eAAeS,GACpB7I,KAAKiJ,cAAcJ,GACnB7I,KAAKkJ,eAAeL,GACpBA,EAASM,YAAY,GAErBT,EAASjG,SAASiG,EAAS/G,MAAQgH,EAAMS,eACzCV,EAASS,OAAON,EAAS9K,KACzBiC,KAAKqJ,gBAAgBX,EAAU1K,GAC/BgC,KAAKmI,eAAeO,GACpBA,EAASY,YAAYtJ,KAAMhC,GAC3BgC,KAAKuJ,cAAcb,EAAU1K,GAC7BgC,KAAKwJ,eAAed,EAAU1K,GAC9B0K,EAASjG,SAASiG,EAAS/G,OAASgH,EAAMS,iBACjCP,IAAaH,GAAyB,OAAbA,GAAqBA,EAAS3K,MAAQA,KACvD,OAAb8K,GACF7K,EAAS6K,EAAS/H,UAClBd,KAAK+I,gBAAgBF,GACrBA,EAASG,YAAYhJ,MACrBA,KAAKoI,eAAeS,GACpB7I,KAAKiJ,cAAcJ,GACnB7I,KAAKkJ,eAAeL,GACpBA,EAASM,YAAY,IAErBnL,EAAS,KAGM,OAAb0K,IACFA,EAASI,SAETJ,EAASjG,SAASiG,EAAS/G,MAAQgH,EAAMS,eACzCV,EAASS,OAAOpL,GAChBiC,KAAKqJ,gBAAgBX,EAAU1K,GAC/BgC,KAAKmI,eAAeO,GACpBA,EAASY,YAAYtJ,KAAMhC,GAC3BgC,KAAKuJ,cAAcb,EAAU1K,GAC7BgC,KAAKwJ,eAAed,EAAU1K,GAC9B0K,EAASjG,SAASiG,EAAS/G,OAASgH,EAAMS,iBAIvCP,CACR,CAKD,WAAAY,CAAY7I,EAAgC7C,GAiB1C,OAhBA6C,EAAQ+H,EAAMC,SAAShI,IAEjBkI,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAGnB6C,EAAM6B,SAAS7B,EAAMe,MAAQgH,EAAMS,eACnCxI,EAAMuI,OAAOpL,GACbiC,KAAKqJ,gBAAgBzI,EAAO,MAC5BZ,KAAKmI,eAAevH,GACpBA,EAAM0I,YAAYtJ,KAAM,MACxBA,KAAKuJ,cAAc3I,EAAO,MAC1BZ,KAAKwJ,eAAe5I,EAAO,MAC3BA,EAAM6B,SAAS7B,EAAMe,OAASgH,EAAMS,eAE7BxI,CACR,CAKD,YAAA+I,CAAa/I,EAAgC7C,IAC3C6C,EAAQ+H,EAAMC,SAAShI,IAEjBkI,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAEnB,MAAMC,EAASgC,KAAKC,WAWpB,OATAW,EAAM6B,SAAS7B,EAAMe,MAAQgH,EAAMS,eACnCxI,EAAMuI,OAAOpL,GACbiC,KAAKqJ,gBAAgBzI,EAAO5C,GAC5BgC,KAAKmI,eAAevH,GACpBA,EAAM0I,YAAYtJ,KAAMhC,GACxBgC,KAAKuJ,cAAc3I,EAAO5C,GAC1BgC,KAAKwJ,eAAe5I,EAAO5C,GAC3B4C,EAAM6B,SAAS7B,EAAMe,OAASgH,EAAMS,eAE7BxI,CACR,CAKD,WAAAgJ,CAAYhJ,EAAgC5C,EAAsBD,GAChE,GAAe,OAAXC,GAAmBA,EAAO+C,QAAUf,KACtC,MAAM,IAAIuC,MAAM,uCAkBlB,OAhBA3B,EAAQ+H,EAAMC,SAAShI,IAEjBkI,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAGnB6C,EAAM6B,SAAS7B,EAAMe,MAAQgH,EAAMS,eACnCxI,EAAMuI,OAAOpL,GACbiC,KAAKqJ,gBAAgBzI,EAAO5C,GAC5BgC,KAAKmI,eAAevH,GACpBA,EAAM0I,YAAYtJ,KAAMhC,GACxBgC,KAAKuJ,cAAc3I,EAAO5C,GAC1BgC,KAAKwJ,eAAe5I,EAAO5C,GAC3B4C,EAAM6B,SAAS7B,EAAMe,OAASgH,EAAMS,eAE7BxI,CACR,CAKD,YAAAiJ,CAAanB,EAAmCG,GAC9C,GAAIA,EAAS9H,QAAUf,KACrB,MAAM,IAAIuC,MAAM,4CAIlB,GAAIsG,KAFJH,EAAWC,EAAMC,SAASF,IAEC,CACzBA,EAASI,SACT,MAAM9K,EAAS6K,EAAS/H,UAExBd,KAAK+I,gBAAgBF,GACrBA,EAASG,YAAYhJ,MACrBA,KAAKoI,eAAeS,GACpB7I,KAAKiJ,cAAcJ,GACnB7I,KAAKkJ,eAAeL,GACpBA,EAASM,YAAY,GAErBT,EAASjG,SAASiG,EAAS/G,MAAQgH,EAAMS,eACzCV,EAASS,OAAON,EAAS9K,KACzBiC,KAAKqJ,gBAAgBX,EAAU1K,GAC/BgC,KAAKmI,eAAeO,GACpBA,EAASY,YAAYtJ,KAAMhC,GAC3BgC,KAAKuJ,cAAcb,EAAU1K,GAC7BgC,KAAKwJ,eAAed,EAAU1K,GAC9B0K,EAASjG,SAASiG,EAAS/G,OAASgH,EAAMS,cAC3C,CAED,OAAOP,CACR,CAED,oBAAIiB,GACF,OAAQ9J,KAAKF,YAA6BiK,gBAC3C,CAES,eAAAV,CAAgBzI,EAAc5C,GACtCgC,KAAKW,cAAc,uBAAwBC,EAAO5C,EAAQgC,MAC1D,IAAIgK,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKX,gBAAgBzI,EAAO5C,GAE9BgM,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACF,CAES,aAAA0I,CAAc3I,EAAc5C,GACpCgC,KAAK+C,cAAc/C,KAAK8J,kBACxB9J,KAAKiK,mBAAmBrJ,EAAO5C,GAC/B,IAAIgM,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKT,cAAc3I,EAAO5C,GAE5BgM,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACF,CAES,cAAA2I,CAAe5I,EAAc5C,GACrC,IAAIgM,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKR,eAAe5I,EAAO5C,GAE7BgM,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACDb,KAAKW,cAAc,sBAAuBC,EAAO5C,EAAQgC,KAC1D,CAID,WAAAkK,CAAYnM,GACV,IAAI6C,EACJ,GAAmB,iBAAR7C,GAET,GADA6C,EAAQZ,KAAKwI,SAASzK,GACR,OAAV6C,EACF,OAAO,UAIT,GADAA,EAAQ7C,EACJ6C,EAAMG,QAAUf,KAClB,MAAM,IAAIuC,MAAM,sBAWpB,OAPAvC,KAAK+I,gBAAgBnI,GACrBA,EAAMoI,YAAYhJ,MAClBA,KAAKoI,eAAexH,GACpBZ,KAAKiJ,cAAcrI,GACnBZ,KAAKkJ,eAAetI,GACpBA,EAAMuI,YAAY,GAEXvI,CACR,CAED,oBAAIuJ,GACF,OAAQnK,KAAKF,YAA6BsK,gBAC3C,CAES,eAAArB,CAAgBnI,GACxBZ,KAAKW,cAAc,uBAAwBC,EAAOZ,MAClD,IAAIgK,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKjB,gBAAgBnI,GAEvBoJ,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACF,CAES,aAAAoI,CAAcrI,GACtBZ,KAAK+C,cAAc/C,KAAKmK,kBACxB,IAAIH,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKf,cAAcrI,GAErBoJ,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACDb,KAAKqK,qBAAqBzJ,EAC3B,CAES,cAAAsI,CAAetI,GACvB,IAAIoJ,EAAOhK,KAAKC,WAChB,KAAgB,OAAT+J,GAAe,CACpB,MAAMnJ,EAAOmJ,EAAKlJ,UACdkJ,IAASpJ,GACXoJ,EAAKd,eAAetI,GAEtBoJ,EAAgB,OAATnJ,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACtD,CACDb,KAAKW,cAAc,sBAAuBC,EAAOZ,KAClD,CAED,UAAAsK,CAAWC,GACT,IAAI3J,EAAQZ,KAAKC,WACjB,GAAc,OAAVW,EACF,OAGF,MAAM4J,EAAkB,GACxB,GACEA,EAAO3L,KAAK+B,GACZA,EAAQA,EAAME,gBACG,OAAVF,GACT4J,EAAOC,KAAKF,GAEZ3J,EAAQ4J,EAAO,GACfxK,KAAK+H,cAAcnH,GACnBA,EAAM8J,iBAAiB,MACvB,IAAK,IAAInM,EAAI,EAAGA,EAAIiM,EAAOhM,OAAQD,GAAK,EAAG,CACzC,MAAMsC,EAAO2J,EAAOjM,GACpBqC,EAAM+J,aAAa9J,GACnBA,EAAK6J,iBAAiB9J,GACtBA,EAAQC,CACT,CACDD,EAAM+J,aAAa,MACnB3K,KAAKgI,aAAapH,EACnB,CAGS,WAAA+B,GACR,IAAI/B,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UAEnB,GADAF,EAAMgK,aACO,OAAT/J,GAAiBA,EAAKE,QAAUf,KAClC,MAAM,IAAIuC,MAAM,sBAElB3B,EAAQC,CACT,CACF,CAGS,aAAA4C,GACR,IAAI7C,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UAEnB,GADAF,EAAMiK,eACO,OAAThK,GAAiBA,EAAKE,QAAUf,KAClC,MAAM,IAAIuC,MAAM,wBAElB3B,EAAQC,CACT,CACF,CAED,gBAAAiK,CAAyCC,GACvC,IAAIC,EAAWhL,KAAKU,OACpB,KAAoB,OAAbsK,GAAmB,CACxB,MAAMC,EAAgBD,EAASxC,SAASuC,GACxC,GAAsB,OAAlBE,EACF,OAAOA,EAETD,EAAWA,EAAStK,MACrB,CACD,OAAO,IACR,CAED,YAAAwK,CAAqCC,GACnC,IAAIC,EAAoC,KACpCJ,EAAWhL,KAAKU,OACpB,KAAoB,OAAbsK,GAAmB,CACxB,MAAMC,EAAgBD,EAASxC,SAAS2C,GAClB,OAAlBF,IACFG,EAAYH,GAEdD,EAAWA,EAAStK,MACrB,CACD,OAAO0K,CACR,CAEkB,YAAAC,CAAapH,GAE9B,GADAlE,MAAMsL,aAAapH,GACfA,aAAoBqH,GAAiBrH,EAASsH,MAAO,CACvD,IAAI3K,EAAQZ,KAAKC,WACjB,KAAiB,OAAVW,GAAgB,CACrB,MAAMC,EAAOD,EAAME,UACnBmD,EAASuH,UAAU5K,EAAOC,GAC1BD,EAAiB,OAATC,GAAiBA,EAAKE,QAAUf,KAAOa,EAAO,IACvD,CACF,CACGb,KAAKyL,YACHxH,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS4H,QAAQ7L,KAOtB,CAGkB,iBAAA8L,CAAkB7H,EAAoB3C,EAActD,GACrE+B,MAAM+L,kBAAkB7H,EAAU3C,EAAOtD,IACrCiG,aAAoB2H,GAAiB3H,aAAoBqH,IAC3DrH,EAAS8H,UAAUzK,EAAOtD,EAE7B,CAGkB,mBAAAgO,CAAoB/H,EAAoB3C,IACrD2C,aAAoB2H,GAAiB3H,aAAoBqH,IAC3DrH,EAASgI,YAAY3K,GAEvBvB,MAAMiM,oBAAoB/H,EAAU3C,EACrC,CAGS,kBAAA2I,CAAmBrJ,EAAc5C,GACzC,MAAMkO,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKuM,kBAAkBtI,EAAUrD,EAAO5C,EAE3C,CACF,CAGS,iBAAAuO,CAAkBtI,EAAoBrD,EAAc5C,GACxDiG,aAAoBqH,GACtBrH,EAASuH,UAAU5K,EAAO5C,EAE7B,CAGS,oBAAAqM,CAAqBzJ,GAC7B,MAAMsL,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKwM,oBAAoBvI,EAAUrD,EAEtC,CACF,CAGS,mBAAA4L,CAAoBvI,EAAoBrD,GAC5CqD,aAAoBqH,GACtBrH,EAASwI,YAAY7L,EAExB,CAGkB,eAAA8L,CAAgBzI,GACjClE,MAAM2M,gBAAgBzI,GAClBA,aAAoByH,EAAAA,aACtB1L,KAAK+C,cAAcpD,EAAMuH,gBAEzBlH,KAAK+C,cAAcpD,EAAMuD,YAE5B,CAGQ,iBAAAiD,CAAkBwG,GACzB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OAAtC,UAEWmO,IACTA,EAAIC,YAAYC,OAEjB7M,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACtB0F,aAAoByH,EAAAA,aAGxB1L,KAAK0M,gBAAgBzI,GAFrBA,EAAS+I,SAASL,EAIrB,CACF,CAAS,QACP3M,KAAuB+M,WAAa,IACtC,CAfA,CAgBF,CAGD,iBAAAnF,CAAkB+E,GAChB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OACpC,OAEF,IAAIyO,GAAwB,EAC3BjN,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACxB0F,aAAoByH,EAAAA,cACjBuB,IACHA,GAAwB,EACxBjN,KAAKkN,QAAQF,SAASL,GACtB3M,KAAKmN,QAAQH,SAASL,GACtB3M,KAAKoN,QAAQJ,SAASL,IAExB1I,EAAS+I,SAASL,IAElB3M,KAAK0M,gBAAgBzI,EAExB,CACF,CAAS,QACPjE,KAAuB+M,WAAa,IACtC,CACF,CAMD,OAAAlB,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAAuBK,UAAYA,OAC/B,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,CAES,WAAAmK,CAAYH,GAErB,CAES,SAAAK,CAAUL,GAEnB,CAES,UAAAM,CAAWN,GAEpB,CAGD,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,CAES,aAAAiK,CAAcR,GAEvB,CAES,WAAAU,CAAYV,GAErB,CAES,YAAAW,CAAaX,GAEtB,CAED,aAAI5B,GACF,OAA8C,IAAtCzL,KAAK2B,MAAQhC,EAAMsO,cAC5B,CAED,uBAAIC,GACF,OAAQlO,KAAKF,YAA6BqO,mBAC3C,CAES,cAAA9K,GACmC,IAAtCrD,KAAK2B,MAAQhC,EAAMsO,iBAGxBjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQhC,EAAMsO,eACjCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,CAES,kBAAAF,GACRpO,KAAKW,cAAc,0BAA2BX,KAC/C,CAES,gBAAAqO,GACRrO,KAAK+C,cAAc/C,KAAKkO,qBACxBlO,KAAKuO,yBACN,CAES,iBAAAD,GACRtO,KAAKW,cAAc,yBAA0BX,KAC9C,CAED,sBAAIwO,GACF,OAAQxO,KAAKF,YAA6B2O,kBAC3C,CAES,aAAA7K,GACmC,IAAtC5D,KAAK2B,MAAQhC,EAAMsO,iBAGxBjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAAShC,EAAMsO,eAClCjO,KAAK2O,kBACL3O,KAAK4O,mBACN,CAES,iBAAAF,GACR1O,KAAKW,cAAc,yBAA0BX,KAC9C,CAES,eAAA2O,GACR3O,KAAK+C,cAAc/C,KAAKwO,oBACxBxO,KAAK6O,wBACN,CAES,gBAAAD,GACR5O,KAAKW,cAAc,wBAAyBX,KAC7C,CAGS,uBAAAuO,GACR,MAAMrC,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS4H,QAAQ7L,KAMpB,CACF,CAGS,sBAAA6O,GACR,MAAM3C,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS2J,UAAU5N,KAMtB,CACF,CAED,cAAIoG,GACF,OAAOpG,KAAKG,QAAQ2O,aAAa1I,UAClC,CAsBD,aAAI2I,GACF,OAAOC,EAAAA,SAASC,QACjB,CAWD,WAAI/B,GACF,OAAOgC,EAAAA,SAASD,QACjB,CAWD,WAAI9B,GACF,OAAO+B,EAAAA,SAASD,QACjB,CAWD,WAAI7B,GACF,OAAO8B,EAAAA,SAASD,QACjB,CAGD,QAAAE,CAASC,GACP,IAAIC,EAAgBC,EAAAA,cAIpB,gBAHIF,IACFC,EAAgBA,EAAcE,OAAO,WAAYH,IAE5CC,EAAcG,OAAOxP,KAC7B,CAGD,aAAAyP,CAAyBL,GACvB,IAAIC,EAAgBK,EAAAA,cAIpB,gBAHIN,IACFC,EAAgBA,EAAcE,OAAO,gBAAiBH,IAEjDC,EAAcG,OAAOxP,KAC7B,CAGD,YAAA2P,CAAwBP,GACtB,IAAIC,EAAgBO,EAAAA,aAIpB,gBAHIR,IACFC,EAAgBA,EAAcE,OAAO,eAAgBH,IAEhDC,EAAcG,OAAOxP,KAC7B,CAGD,WAAA6P,CAAkCT,GAChC,IAAIC,EAAgBS,EAAAA,YAIpB,gBAHIV,IACFC,EAAgBA,EAAcE,OAAO,cAAeH,IAE/CC,EAAcG,OAAOxP,KAC7B,CAUD,OAAA+P,CAAQ7C,EAA8BC,EAA+BC,EAA+B4C,YAC9F7C,GACF6C,EAAOC,QAAMrH,SAASsE,GACtBE,EAAUpN,KAAKoN,QAAQ8C,WACvB/C,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd8N,GACT4C,EAAOC,QAAMrH,SAASuE,GACtBC,EAAU+C,MAAIvH,SAASsE,GACvBC,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd0Q,GACTA,EAAOC,QAAMrH,SAASwE,GACtBA,EAAU+C,MAAIvH,SAASuE,GACvBA,EAAUgD,MAAIvH,SAASsE,GACvBA,EAAUlN,KAAKkN,QAAQ5N,QAEvB0Q,EAAOC,QAAMrH,SAASoH,GACtB5C,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAET,OAAZA,IACFA,EAAUC,EAAQiD,WAClBjD,EAAUD,EAAQmD,UAAUlD,IAEdnN,KAAKsQ,QAAQhR,MACrByQ,QAAQ7C,EAASC,EAASC,EAAS4C,EAC5C,CAMD,YAAAO,CAAarD,EAA8BsD,YACrCA,GACFA,EAAcP,QAAMrH,SAASsE,GAC7BA,EAAUlN,KAAKkN,QAAQgD,aAEvBM,EAAcP,QAAMrH,SAAS4H,GAC7BtD,EAAUiD,MAAIvH,SAASsE,IAETlN,KAAKsQ,QAAQhR,MACrBiR,aAAarD,EAASsD,EAC/B,CAGD,OAAAC,CAAQvD,GACNA,EAAUiD,MAAIvH,SAASsE,GACvB,MAAMwD,EAAW,IAAI/Q,EAGrB,OAFA+Q,EAASxD,QAAQlO,IAAIkO,GACrBlN,KAAK2Q,YAAYD,GACVA,CACR,CAMD,OAAAE,CAAQ1D,EAA8BC,YAChCA,GAEFD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,GAGjBC,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI/Q,EAQrB,gBAPIuN,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,GAEvBnN,KAAK2Q,YAAYD,GACVA,CACR,CAQD,OAAAI,CAAQ5D,EAA8BC,EAAmBC,YACnDD,GACFC,EAAU+C,MAAIvH,SAASsE,GACvBC,OAAe,EACfD,OAAe,YACNE,GACTA,EAAU+C,MAAIvH,SAASuE,IAEvBD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,IAGjBE,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI/Q,EAWrB,gBAVIuN,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,YAEnBC,GACFsD,EAAStD,QAAQpO,IAAIoO,GAEvBpN,KAAK2Q,YAAYD,GACVA,CACR,CAGD,WAAAK,CAAY7D,EAAcC,EAAcC,GAEtC,OADgBpN,KAAKsQ,QAAQhR,MACdyR,YAAY7D,EAASC,EAASC,EAC9C,CAGD,YAAA4D,CAAa7B,GACKnP,KAAKsQ,QAAQhR,MACrB0R,aAAa7B,EACtB,CAeD,WAAImB,GACF,OAAOpB,EAAAA,SAASD,QACjB,GAhQAgC,EAAA,CAAAjC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOC,CACR,EACD,gBAAAC,CAAiBzM,GACf5E,MAAMqR,iBAAiBzM,GACvBA,EAAQ0M,MAAMC,SAAStR,KAAKuR,MAC7B,EACD,kBAAAC,CAAmB7M,GACjB5E,MAAMyR,mBAAmB7M,GACzBA,EAAQ0M,MAAMI,YAAYzR,KAAKuR,MAChC,KAIFG,EAAA,CAAA1C,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOS,CACR,KAOFC,EAAA,CAAA1C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO/B,EAAMuH,cACd,KAOF6K,EAAA,CAAA7C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO/B,EAAMuH,cACd,KAOF8K,EAAA,CAAA9C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO/B,EAAMuH,cACd,KAwLF+K,EAAA,CAAA/C,EAAAA,SAAS,CACR2C,UAAWK,EAAAA,QACXJ,UAAU,EACV,eAAIpQ,GACF,OAAO/B,EAAMuH,cACd,EACDiL,UAAAA,IACSC,EAAAA,WAAWC,SAEpBC,YAAAA,CAAYC,EAAmBC,IACtBD,IAAaC,KAvOxBrV,EAAAyC,EAAA,KAAA8R,EAAA,CAAA5T,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAI5D,YAEH,KAAA7O,GAWD/C,EAAAyC,EAAA,KAAAgS,EAAA,CAAA9T,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIzF,UAEH,KAAAhN,GAWD/C,EAAAyC,EAAA,KAAAmS,EAAA,CAAAjU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIxF,UAEH,KAAAjN,GAWD/C,EAAAyC,EAAA,KAAAoS,EAAA,CAAAlU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIvF,UAEH,KAAAlN,GAiMD/C,EAAAyC,EAAA,KAAAqS,EAAA,CAAAnU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIrC,UAEH,KAAApQ,GAnPD/C,EAAS,KAAA,KAAA8T,EAAA,CAAAnT,KAAA,QAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAAxS,QAAAnB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAxS,QAA2Cb,CAAAA,IAAAc,EAAAF,GAsPpCN,EAAAgT,IAAoB,WAClC,IAAIC,EAAS,EACb,OAAO,WACL,MAAMC,IAAOD,EAEb,OADAA,GAAU,EACH,QAAUC,CACnB,CACD,CAPmC,GAUXlT,EAAWgC,YAAe/B,YAAU+B,YAEpChC,EAAawJ,cAAevJ,EAAAA,UAAUuJ,cAEtCxJ,EAAYmT,aAAelT,EAAUkT,UAAAA,aAE9CnT,EAAamF,cAAe,GAAMlF,YAAUmT,UAAY,EAExDpT,EAAc+G,eAAe,GAAM9G,EAAAA,UAAUmT,UAAY,EAEzDpT,EAAaqO,cAAe,GAAMpO,EAAAA,UAAUmT,UAAY,EAExDpT,EAAYiF,aAAejF,EAAKmF,cACLnF,EAAK+G,eAEhC/G,EAAUqT,WAAerT,EAAKgC,YACLhC,EAAKwJ,cACLxJ,EAAKmT,aACLnT,EAAKmF,cACLnF,EAAK+G,eACL/G,EAAKqO,cAE9BrO,EAAY0E,aAAe,GAAMzE,EAAAA,UAAUmT,UAAY,EACvDpT,EAAWsD,YAAe,GAAMrD,EAAAA,UAAUmT,UAAY,EACtDpT,EAAcyF,eAAe,GAAMxF,EAAAA,UAAUmT,UAAY,EACzDpT,EAAc2F,eAAe,GAAM1F,EAAAA,UAAUmT,UAAY,EAEzDpT,EAAWkC,YAAelC,EAAK0E,aACL1E,EAAKsD,YACLtD,EAAKyF,eACLzF,EAAK2F,eAE/B3F,EAAY4E,aAAe,GAAM3E,EAAAA,UAAUmT,UAAY,EACvDpT,EAAaoH,cAAe,GAAMnH,EAAAA,UAAUmT,UAAY,EACxDpT,EAAcsH,eAAe,GAAMrH,EAAAA,UAAUmT,UAAY,EAEzDpT,EAAW2E,YAAe3E,EAAK4E,aACL5E,EAAKoH,cACLpH,EAAKsH,eAG/BtH,EAAUiC,WAAejC,EAAKkC,YACLlC,EAAK2E,YAGrB3E,EAAAoT,UAAoBnT,YAAUmT,UAAY,GAE1CpT,EAAQsT,UAAgB,GAAKtT,EAAKoT,WAAa,EAE/CpT,EAAAuT,WAAyB,EACzBvT,EAAAwT,iBAA+B,EAC/BxT,EAAAyT,iBAA+B,EAC/BzT,EAAA0T,mBAAiC,EAC1C1T,EAAAmK,iBAA+B,EAC/BnK,EAAAwK,iBAA+B,EAC/BxK,EAAAuO,oBAAkC,EAClCvO,EAAA6O,mBAAiC,EAAA7O,CAjxDjC,EAAA,GCuCLgM,MAAAA,EAAoGU,WAASiH,OAAsD,gBAAiB,CAC/L,gBAAIxP,GACF,OAAO6H,CACR,EAEDD,UAAU,EAEV6H,UAAW,KAEXC,UAAU,EAEV,YAAAC,CAAaC,GACX,IAAIC,EAAU5T,KAAK4T,QACH,OAAZA,IACFA,EAAU,IAAItG,IACbtN,KAA8B4T,QAAUA,GAE3CA,EAAQnG,IAAIkG,EACb,EAED,YAAAE,CAAaF,GACX,MAAMC,EAAU5T,KAAK4T,QACL,OAAZA,GAGJA,EAAQ9F,OAAO6F,EAChB,EAED,eAAAG,GACE,MAAMF,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EACF,IAAK,MAAMD,KAAUC,EACnBD,EAAOI,SAAS/T,KAGrB,EAED,SAAAgU,CAAUjT,GAET,EAED,eAAAkT,CAAgBlT,EAAU/C,GAEzB,EAED,aAAAkW,CAAcnT,EAAU/C,GAClBgC,KAAKyT,UACP1S,EAAMoT,QAAQnU,MAEmC,IAA9CA,KAAK2B,MAAQiK,EAAcqC,gBAC9BlN,EAAM8K,QAAQ7L,KAEjB,EAED,cAAAoU,CAAerT,EAAU/C,GAExB,EAED,WAAAqW,CAAYtT,GAEX,EAED,eAAAuT,CAAgBvT,GAEf,EAED,aAAAwT,CAAcxT,GACuC,IAA9Cf,KAAK2B,MAAQiK,EAAcqC,gBAC9BlN,EAAM6M,UAAU5N,MAEdA,KAAKyT,UACP1S,EAAMyT,UAAUxU,KAEnB,EAED,cAAAyU,CAAe1T,GAEd,EAED,eAAI2T,GACF,MAAMnD,EAAQvR,KAAKuR,MACnB,OAAIA,aAAiB5R,EACZ4R,EACEA,aAAiB5I,EACnB4I,EAAMxQ,MAER,IACR,EAED,WAAA4T,CAAYjU,EAAeY,EAAUtD,EAAsBD,GACzD2C,EAAOiU,YAAYrT,EAAOtD,EAAQD,EACnC,EAED,SAAAgO,CAAUhL,EAAc/C,GAEvB,EAED,WAAAiO,CAAYlL,GAEX,EAED6T,YAAY7T,GACH,KAGT,WAAA8T,GACE,IAAI9T,EACJ,MAAMyS,EAAYxT,KAAKwT,UAIvB,GAHkB,OAAdA,IACFzS,EAAQyS,EAAUhE,UAEhBzO,QAAoC,CACtC,IAAI+T,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAO/T,CACR,EAED,QAAA6H,CAAStJ,GACP,MAAMkU,EAAYxT,KAAKwT,UACvB,OAAkB,OAAdA,EACKA,EAAU5K,SAAStJ,GAErBK,EAAMiJ,SAAStJ,EACvB,EAED,OAAAuM,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAA8BK,UAAYA,OACtC,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,EAED,WAAAmK,CAAYH,GAEX,EAED,SAAAK,CAAUL,GAET,EAED,UAAAM,CAAWN,GAEV,EAED,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,EAED,aAAAiK,CAAcR,GAEb,EAED,WAAAU,CAAYV,GAEX,EAED,YAAAW,CAAaX,GAEZ,EAED,aAAI5B,GACF,OAAsD,IAA9CzL,KAAK2B,MAAQiK,EAAcqC,cACpC,EAED,cAAA5K,GACqD,IAA9CrD,KAAK2B,MAAQiK,EAAcqC,iBAGhCjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQiK,EAAcqC,eACzCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,EAED,kBAAAF,GAEC,EAED,gBAAAC,GAEC,EAED,iBAAAC,GAEC,EAED,aAAA1K,GACqD,IAA9C5D,KAAK2B,MAAQiK,EAAcqC,iBAGhCjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAASiK,EAAcqC,eAC1CjO,KAAK2O,kBACL3O,KAAK4O,mBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GAEC,EAED,gBAAAC,GAEC,EAED,OAAAlM,GACE3C,MAAM2C,UACiB,OAAnB1C,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,gBAER,EAED,SAAAK,GACE3D,MAAM2D,YACN1D,KAAK4D,eACN,GAEH,CACE,SAAAoR,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEqC,QAAU,KAChD3P,EAAsC5D,UAAY,KAC5C4D,CACR,EAEDgK,cAAe,GAAM3B,WAAS0G,UAAY,EAE1CA,UAAW1G,EAAAA,SAAS0G,UAAY,EAChCE,UAAW,GAAM5G,EAAS0G,SAAAA,UAAY,GAAM,ICjVjCiC,EAA0FrJ,EAAc2H,OAA4C,WAAY,CAC3K,gBAAIxP,GACF,OAAOkR,CACR,EAED,cAAIC,GACF,MAAMC,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiBF,EAAWE,EAAMpU,MAAQ,IAClD,EAED,aAAAqU,GACE,MAAMF,EAAalV,KAAKkV,WACxB,GAAIA,QAA8C,CAChD,IAAIJ,EAAUI,EAAa,IAC3B,MAAM7W,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,cACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOI,CACR,EAED,GAAAnW,GACE,OAAOiB,KAAKe,KACb,EAED,GAAA/B,CAAI+B,GAMF,OALIA,aAAiBuL,EAAAA,SACnBtM,KAAKqV,UAAUtU,GAEff,KAAKsV,SAASvU,GAETf,KAAKuR,KACb,EAED,YAAAgE,CAAaxU,GAMX,OALIA,aAAiBuL,EAAAA,SACnBtM,KAAKqV,UAAUtU,GAEff,KAAKsV,SAASvU,GAETf,KAAKuR,KACb,EAEDiE,cAAe,EAEf,QAAAC,GACE,MAAM1U,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAI+T,EAAU/T,EAAQ,IACtB,MAAM1C,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAO/T,CACR,EAED,QAAAuU,CAASI,EAAkC1X,EAAuBD,GAC/C,OAAb2X,IACFA,EAAW1V,KAAK4I,SAAS8M,IAE3B,IAOIhV,EAPAiV,EAAW3V,KAAKe,MACpB,OAAI4U,IAAaD,GACf1V,KAAK4V,aAAY,GACVD,aACE3X,IACTA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAK0U,YAAwB,OAAXhU,KAC3B,OAAbiV,GAAqBA,EAASjV,SAAWA,IAC5B,OAAX1C,IACFA,EAAS2X,EAASlP,aAEpBkP,EAAS7M,UAEM,OAAb4M,aACE3X,IACFA,EAAMiC,KAAKwV,UAEbxV,KAAK2U,YAAYjU,EAAQgV,EAAU1X,EAAQD,IAE7C4X,EAAW3V,KAAKe,MACZ4U,IAAaD,KAIF,OAAbC,IACD3V,KAA8Be,MAAQ,KACvCf,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,IAEL,OAAbD,IACD1V,KAA8Be,MAAQ2U,EACvC1V,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,IAEhCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAlBM6B,EAoBZ,EAED,WAAArM,CAAYoM,EAAmC1X,GAC7C,MAAM2X,EAAW3V,KAAKe,MAWtB,gBAHI/C,IACFA,EAAS,MAEP2X,KATFD,EADEA,QACS1V,KAAK4I,SAAS8M,GACH,OAAbC,EACE3V,KAAK6U,cAELc,KAOW,OAAbA,IACR3V,KAA8Be,MAAQ,KACvCf,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,IAErB3V,KAA8Be,MAAQ2U,EACvC1V,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAdI4B,CAgBV,EAED,WAAA1M,GACE,MAAM2M,EAAW3V,KAAKe,MACtB,OAAiB,OAAb4U,EACK,MAER3V,KAA8Be,MAAQ,KACvCf,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,GACpB3V,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACE6B,EACR,EAED,WAAAE,CAAYnV,EAAuBgV,EAA4B1X,EAAuBD,GACpF,IAAI4X,EAAW3V,KAAKe,MAWpB,OATE2U,EADEA,QACS1V,KAAK4I,SAAS8M,GACH,OAAbC,EACE3V,KAAK6U,cAELc,WAETjV,IACFA,EAAS,MAENV,KAAKuL,OAASoK,IAAaD,GAAgC,OAApBA,EAAShV,QAA8B,OAAXA,QAAmB3C,IAAAA,GAG5E,OAAX2C,IACFA,EAASV,KAAK0U,sBAEZ1W,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKwV,UAEE,OAAX9U,GAAoBgV,EAAShV,SAAWA,GAAUgV,EAAS3X,MAAQA,GACrEiC,KAAK2U,YAAYjU,EAAQgV,EAAU1X,EAAQD,GAE7C4X,EAAW3V,KAAKe,MACZ4U,IAAaD,IAEO,OAAbC,IACR3V,KAA8Be,MAAQ,KACvCf,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,GAChB3V,KAAKuL,OAAoB,OAAX7K,GAAmBiV,EAASjV,SAAWA,GACvDiV,EAAS7M,UAGZ9I,KAA8Be,MAAQ2U,EACvC1V,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAjBI4B,GAhBAA,CAmCV,EAED,WAAAjE,GACE,MAAM1Q,EAAQf,KAAKe,MACnB,OAAc,OAAVA,EACK,MAETA,EAAM+H,SACC/H,EACR,EAED,WAAA+U,GACE,MAAM/U,EAAQf,KAAKgJ,cACnB,OAAc,OAAVjI,EACK,MAETA,EAAM+H,SACC/H,EACR,EAED,SAAAgL,CAAUhL,EAAc/C,GACtB,IAAKgC,KAAKuL,OAAwB,OAAfvL,KAAKe,MACtB,OAEF,MAAM2U,EAAW1V,KAAK4U,YAAY7T,GACjB,OAAb2U,IAGH1V,KAA8Be,MAAQ2U,EACvC1V,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA7H,CAAYlL,GACV,IAAKf,KAAKuL,MACR,OAEF,MAAMoK,EAAW3V,KAAK4U,YAAY7T,GACjB,OAAb4U,GAAqB3V,KAAKe,QAAU4U,IAGvC3V,KAA8Be,MAAQ,KACvCf,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,GACpB3V,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAAc,CAAY7T,GACV,MAAMhD,EAAMiC,KAAKwV,SACjB,YAAiB,IAAbzX,GAAkBA,IAAQgD,EAAMhD,IAC3BgD,EAEF,IACR,EAED,gBAAAsN,GACE,MAAMtN,EAAQf,KAAKe,MACL,OAAVA,GACFA,EAAM8K,QAAQ7L,KAEjB,EAED,eAAA2O,GACE,MAAM5N,EAAQf,KAAKe,MACL,OAAVA,GACFA,EAAM6M,UAAU5N,KAEnB,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiBF,GACnBjV,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAKsV,SAASH,EAAMpU,QAGtBf,KAAKgW,YAAW,EAEnB,GAEH,CACE,QAAAO,CAA+ChF,EAAUzN,GACvD,MAAMoI,EAAYC,EAAAA,yBAAyBpN,IAAIwS,GACzCiF,EAAyB,OAAdtK,EAAqBA,EAAUuK,YAAYlF,EAAOzN,GAAgB,KACnF,OAAO0S,aAAoBvB,EAAWuB,EAASzV,MAAQ,IACxD,EAED,SAAAiU,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACExQ,MAAQ,KACxCkD,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElC4Y,EAAqB1Y,OAAOC,yBAAyBwY,EAAmB,iBAC1EC,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBvX,OACrBuX,EAAmBvX,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAYC,KACf,IAA7BA,EAAmBvX,QAC5BuX,EAAmBvX,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAYC,IAG1D,ICjQUC,EAA0FlL,EAAc2H,OAA4C,WAAY,CAC3K,gBAAIxP,GACF,OAAO+S,CACR,EAED,QAAAtB,CAASzU,GAER,EAED,cAAAgW,CAAerB,EAAa1X,GAC1B,MAAMgZ,EAAShX,KAAKgX,OACL,OAAXhZ,GAA2D,IAAvCgC,KAAK2B,MAAQmV,EAASG,aAC3CjX,KAA8BgX,OAASE,EAAQC,QAAAA,SAASH,EAAQtB,EAAS9C,IAAK8C,EAAU1X,GAEzFgZ,EAAOtB,EAAS9C,KAAO8C,CAE1B,EAED,cAAA0B,CAAezB,UACE3V,KAAKgX,OACNrB,EAAS/C,IACxB,EAED,QAAAyE,CAAStW,GACP,YAAuC,IAAhCf,KAAKgX,OAAOjW,EAAM6R,IAC1B,EAED,QAAAtB,CAASoE,EAA4B1X,EAAuBD,GAS1D,IAAI2C,EAgBJ,OAvBEgV,EADEA,QACS1V,KAAK4I,SAAS8M,GAEd1V,KAAK6U,uBAEd7W,IACFA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAK0U,YAAwB,OAAXhU,KAC7B,OAAX1C,IAEAA,EADE0X,EAAShV,SAAWA,EACbgV,EAASjP,YAETzG,KAAKsX,eAAe5W,EAAQgV,aAGrC3X,IACFA,EAAMiC,KAAKwV,SAASE,IAElBA,EAAShV,SAAWA,GAAUgV,EAASjP,cAAgBzI,GAAU0X,EAAS3X,MAAQA,GACpFiC,KAAK2U,YAAYjU,EAAQgV,EAAU1X,EAAQD,SAGtB6U,IAArB5S,KAAKgX,OAAOtB,EAAS9C,OAGzB5S,KAAK+W,eAAerB,EAAU1X,GAC7BgC,KAA8BuX,YAAc,EAC7CvX,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATI4B,CAWV,EAED,SAAA8B,CAAUC,EAAwDzZ,GAChE,IAAK,MAAM0Z,KAAWD,EACpBzX,KAAKsR,SAASmG,EAAUC,GAAW1Z,EAEtC,EAED,SAAA2Z,CAAUF,EAAwDzZ,GAChE,MAAMuN,EAAQvL,KAAKuL,MACb7K,EAAS6K,EAAQvL,KAAK0U,YAAc,KACpCsC,EAAShX,KAAKgX,OACpB,IAAK,MAAMU,KAAWV,EACpB,YAAIS,EAAUC,GAAqB,CACjC,MAAM/B,EAAW3V,KAAKgJ,YAAYgO,EAAOU,IACxB,OAAb/B,GAAqBpK,GAAoB,OAAX7K,GAAmBiV,EAASjV,SAAWA,GACvEiV,EAAS7M,QAEZ,CAEH,GAA4C,IAAvC9I,KAAK2B,MAAQmV,EAASG,aAAoB,CAC7C,MAAMW,EAAgB,IAAIC,MAC1B,IAAK,MAAMC,KAAUL,EACnBG,EAAc/Y,KAAK4Y,EAAUK,IAE/B,IAAK,IAAIvZ,EAAI,EAAGwZ,EAAIH,EAAcpZ,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CACvD,MAAMmX,EAAWkC,EAAcrZ,GAC/B,QAAoBqU,IAAhBoE,EAAOtB,EAAS9C,KAAiB,CACnC,MAAMoF,EAAczZ,EAAIwZ,EAAI,EAAIH,EAAcrZ,EAAI,GAAKP,EACvDgC,KAAKsR,SAASoE,EAAUsC,EACzB,CACF,CACF,MACC,IAAK,MAAMN,KAAWD,WAChBT,EAAOU,IACT1X,KAAKsR,SAASmG,EAAUC,GAAW1Z,EAI1C,EAED,WAAAsL,CAAYoM,EAAmC1X,GAM7C,OAJE0X,EADEA,QACS1V,KAAK4I,SAAS8M,GAEd1V,KAAK6U,mBAEOjC,IAArB5S,KAAKgX,OAAOtB,EAAS9C,gBAEd5U,IACTA,EAAS,MAEXgC,KAAK+W,eAAerB,EAAU1X,GAC7BgC,KAA8BuX,YAAc,EAC7CvX,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAXI4B,CAaV,EAED,YAAAuC,CAAaR,EAAwDzZ,GACnE,IAAK,MAAM0Z,KAAWD,EACpBzX,KAAKsJ,YAAYmO,EAAUC,GAAW1Z,EAEzC,EAED,WAAAgL,CAAY2M,GACV,YAAyB/C,IAArB5S,KAAKgX,OAAOrB,EAAS/C,KAChB,MAER5S,KAA8BuX,YAAc,EAC7CvX,KAAKoX,eAAezB,GACpB3V,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,GACpB3V,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACE6B,EACR,EAED,YAAAuC,CAAalB,YACPA,IACFA,EAAShX,KAAKgX,QAEhB,IAAK,MAAMU,KAAWV,EACpBhX,KAAKgJ,YAAYgO,EAAOU,GAE3B,EAED,WAAA7B,CAAYnV,EAAuBgV,EAA4B1X,EAAuBD,GASpF,OAPE2X,EADEA,QACS1V,KAAK4I,SAAS8M,GAEd1V,KAAK6U,uBAEdnU,IACFA,EAAS,MAENV,KAAKuL,YAA8BqH,IAArB5S,KAAKgX,OAAOtB,EAAS9C,MAAuC,OAApB8C,EAAShV,QAA8B,OAAXA,YAAmB3C,GAG3F,OAAX2C,IACFA,EAASV,KAAK0U,sBAEZ1W,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKwV,SAASE,IAEP,OAAXhV,GAAoBgV,EAAShV,SAAWA,GAAUgV,EAAS3X,MAAQA,IACtD,OAAXC,IACFA,EAASgC,KAAKsX,eAAe5W,EAAQgV,IAEvC1V,KAAK2U,YAAYjU,EAAQgV,EAAU1X,EAAQD,SAEpB6U,IAArB5S,KAAKgX,OAAOtB,EAAS9C,OAGzB5S,KAAK+W,eAAerB,EAAU1X,GAC7BgC,KAA8BuX,YAAc,EAC7CvX,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATI4B,GAlBAA,CA6BV,EAED,YAAAyC,CAAazX,EAAsB+W,EAAwDzZ,GACzF,IAAK,MAAM0Z,KAAWD,EACpBzX,KAAK6V,YAAYnV,EAAQ+W,EAAUC,GAAW1Z,EAEjD,EAED,WAAAyT,CAAY1Q,GACV,OAAKf,KAAKqX,SAAStW,IAGnBA,EAAM+H,SACC/H,GAHEA,CAIV,EAED,YAAAqX,CAAapB,YACPA,IACFA,EAAShX,KAAKgX,QAEhB,IAAK,MAAMU,KAAWV,EACpBhX,KAAKyR,YAAYuF,EAAOU,GAE3B,EAED,WAAA5B,CAAY/U,GACV,MAAM4U,EAAW3V,KAAKgJ,YAAYjI,GAClC,OAAiB,OAAb4U,EACK,MAETA,EAAS7M,SACF6M,EACR,EAED,YAAA0C,CAAarB,YACPA,IACFA,EAAShX,KAAKgX,QAEhB,IAAK,MAAMU,KAAWV,EACpBhX,KAAK8V,YAAYkB,EAAOU,GAE3B,EAED,aAAAY,CAAcvX,EAAU/C,GACtB,QAAoC,IAAhCgC,KAAKgX,OAAOjW,EAAM6R,WAAoC,IAAhB5U,GAA4D,IAAtCgC,KAAK2B,MAAQmV,EAASyB,YACpF,OAEF,MAAM7X,EAASK,EAAML,OACN,OAAXA,aAEO1C,IACTA,EAASgC,KAAKsX,eAAe5W,EAAQK,IAEvCL,EAAO8X,cAAczX,EAAO/C,GAC7B,EAED,SAAA+N,CAAUhL,EAAc/C,GACtB,IAAKgC,KAAKuL,MACR,OAEF,MAAMmK,EAAW1V,KAAK4U,YAAY7T,GACjB,OAAb2U,YAAqB1V,KAAKgX,OAAOtB,EAAS9C,OAG9C5S,KAAK+W,eAAerB,EAAU1X,GAC7BgC,KAA8BuX,YAAc,EAC7CvX,KAAKiU,gBAAgByB,EAAU1X,GAC/BgC,KAAKkU,cAAcwB,EAAU1X,GAC7BgC,KAAKgU,UAAU0B,GACf1V,KAAKoU,eAAesB,EAAU1X,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA7H,CAAYlL,GACV,IAAKf,KAAKuL,MACR,OAEF,MAAMoK,EAAW3V,KAAK4U,YAAY7T,GACjB,OAAb4U,YAAqB3V,KAAKgX,OAAOrB,EAAS/C,OAG7C5S,KAA8BuX,YAAc,EAC7CvX,KAAKoX,eAAezB,GACpB3V,KAAKsU,gBAAgBqB,GACrB3V,KAAKuU,cAAcoB,GACnB3V,KAAKqU,YAAYsB,GACjB3V,KAAKyU,eAAekB,GACpB3V,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAAc,CAAY7T,GACV,MAA8B,mBAAnBf,KAAKwT,WAA4BzS,aAAiBf,KAAKwT,UACzDzS,EAEF,IACR,EAED,aAAA0X,CAAcpL,GACZ,MAAM2J,EAAShX,KAAKgX,OACpB,IAAK,MAAMU,KAAWV,EACNA,EAAOU,GACf7L,QAAQwB,EAEjB,EAED,eAAAqL,CAAgBrL,GACd,MAAM2J,EAAShX,KAAKgX,OACpB,IAAK,MAAMU,KAAWV,EACNA,EAAOU,GACf9J,UAAUP,EAEnB,EAED,gBAAAgB,GACErO,KAAKyY,cAAczY,KACpB,EAED,eAAA2O,GACE3O,KAAK0Y,gBAAgB1Y,KACtB,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiB2B,GACnB9W,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAK2X,UAAUxC,EAAM6B,SAGvBhX,KAAKgW,YAAW,EAEnB,EAED,WAAI2C,GACF,OAA+C,IAAvC3Y,KAAK2B,MAAQmV,EAASG,YAC/B,EAED,KAAA2B,CAAMD,GASJ,gBARIA,IACFA,GAAU,GAERA,EACF3Y,KAAKyC,SAASzC,KAAK2B,MAAQmV,EAASG,aAEpCjX,KAAKyC,SAASzC,KAAK2B,OAASmV,EAASG,aAEhCjX,IACR,EAED,UAAI6Y,GACF,OAA8C,IAAtC7Y,KAAK2B,MAAQmV,EAASyB,WAC/B,EAED,IAAA9N,CAAKoO,GAIH,YAHIA,IACFA,GAAS,GAEPA,EAAQ,CACV,MAAMnY,EAASV,KAAK0U,YACpB1U,KAAK8Y,SAASpY,GACdV,KAAKyC,SAASzC,KAAK2B,MAAQmV,EAASyB,YACpCvY,KAAK+Y,OAAOrY,GACZV,KAAKgZ,QAAQtY,EACd,MACCV,KAAKyC,SAASzC,KAAK2B,OAASmV,EAASyB,YAEvC,OAAOvY,IACR,EAED,QAAA8Y,CAASpY,GAER,EAED,MAAAqY,CAAOrY,GACU,OAAXA,GACFV,KAAKiZ,aAAavY,EAErB,EAED,OAAAsY,CAAQtY,GAEP,EAED,YAAAuY,CAAavY,EAAe6J,GAC1B7J,EAAOuY,aAAajZ,KAAKkZ,gBAAgB3S,KAAKvG,MAC/C,EAED,cAAAsX,CAAe5W,EAAeY,GAC5B,OAA2C,IAAtCtB,KAAK2B,MAAQmV,EAASyB,YAClB7X,EAAO4W,eAAehW,EAAOtB,KAAKmZ,mBAAmB5S,KAAKvG,OAE5D,IACR,EAED,eAAAkZ,CAAgBE,EAAUC,GACxB,MAAMrC,EAAShX,KAAKgX,OACdsC,EAAItC,EAAOoC,EAAExG,KACb2G,EAAIvC,EAAOqC,EAAEzG,KACnB,YAAI0G,IAAAA,QAAgBC,IAAAA,EACXvZ,KAAKwZ,QAAQF,EAAGC,QAEP,IAAXD,EAAe,OAAIC,IAAAA,GAAgB,EAAI,CAC/C,EAED,kBAAAJ,CAAmBC,EAAMC,GACvB,MACME,EADSvZ,KAAKgX,OACHqC,EAAEzG,KACnB,gBAAI2G,EACKvZ,KAAKwZ,QAAQJ,EAAGG,QAElBA,IAAAA,GAAgB,EAAI,CAC5B,EAEDC,QAAAA,CAAQJ,EAAMC,IACLD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEyF,OAAS,GAC/C/S,EAAsCsT,WAAa,EAC7CtT,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAExC,IAAIwb,EAAY7C,EAAkB6C,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,aACtDA,EAAkB+B,QACpBc,GAAa3C,EAASG,YAEtBwC,IAAc3C,EAASG,mBAEjBL,EAAmD+B,SAEzDxa,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,YACtDA,EAAkBiC,OACpBY,GAAa3C,EAASyB,WAEtBkB,IAAc3C,EAASyB,kBAEjB3B,EAAmDiC,QAE7D1a,OAAOgB,eAAeyX,EAAmB,YAAa,CACpDtX,MAAOma,EACPE,YAAY,EACZC,cAAc,GAEjB,EAED3C,YAAa,GAAMrL,EAAcoH,UAAY,EAC7CuF,WAAY,GAAM3M,EAAcoH,UAAY,EAE5CA,UAAWpH,EAAcoH,UAAY,EACrCE,UAAW,GAAMtH,EAAcoH,UAAY,GAAM,ICpd7BrK,IAAAA,EAAK,6BAALA,OAAAA,EAAAA,MAAAA,EACpB,WAAA7I,GAmBSE,KAAA4S,SAAYxT,EAAAY,KAAAE,GAlBnBF,KAAK4S,IAAO5S,KAAKF,YAA6B8S,MAC9C5S,KAAKjC,SAAW,EAChBiC,KAAK2B,MAAQ,EACb3B,KAAKe,MAAQ,KACbf,KAAKc,UAAY,KACjBd,KAAK6Z,cAAgB,KACrB7Z,KAAK8M,aAAe,EACpB9M,KAAKiD,WAAa,KAClBjD,KAAK+M,WAAa,KAClB/M,KAAK8Z,UAAY,KACjB9Z,KAAKK,UAAY,IAClB,CAYD,MAAA8I,CAAOpL,GACJiC,KAAuBjC,IAAMA,CAC/B,CAKD,QAAA0E,CAASd,GACN3B,KAAuB2B,MAAQA,CACjC,CAID,QAAA8T,GACE,MAAM1U,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAInD,UAAU,YAEtB,OAAOmD,CACR,CAGD,WAAAuI,CAAYvI,EAAcD,GAIxB,IAAI+Y,EAFJ7Z,KAAKiU,gBAAgBlT,GACpBf,KAAuBe,MAAQA,EAEd,OAAdD,GACF+Y,EAAgB/Y,EAAU+Y,cAC1B7Z,KAAK2K,aAAa7J,GAClBA,EAAU4J,iBAAiB1K,QAE3B6Z,EAAgB9Y,EAAMT,UACtBS,EAAMiH,aAAahI,OAEC,OAAlB6Z,GACFA,EAAclP,aAAa3K,MAC3BA,KAAK0K,iBAAiBmP,IAEtB9Y,EAAMgH,cAAc/H,MAElBe,EAAM0D,SACRzE,KAAK4K,aAEP5K,KAAKkU,cAAcnT,GACnBf,KAAKoU,eAAerT,EACrB,CAES,eAAAkT,CAAgBlT,GACxBf,KAAKW,cAAc,uBAAwBI,EAAOf,KACnD,CAES,aAAAkU,CAAcnT,GACtBf,KAAK+Z,mBAAmBhZ,EACzB,CAES,cAAAqT,CAAerT,GACvBf,KAAKW,cAAc,sBAAuBI,EAAOf,KAClD,CAGD,WAAAgJ,CAAYjI,GAEVf,KAAKsU,gBAAgBvT,GACjBf,KAAKyE,SACPzE,KAAK6K,eAEP7K,KAAKuU,cAAcxT,GACnB,MAAMD,EAAYd,KAAKc,UACjB+Y,EAAgB7Z,KAAK6Z,cACT,OAAd/Y,GACFd,KAAK2K,aAAa,MAClB7J,EAAU4J,iBAAiBmP,IAE3B9Y,EAAMiH,aAAa6R,GAEC,OAAlBA,GACFA,EAAclP,aAAa7J,GAC3Bd,KAAK0K,iBAAiB,OAEtB3J,EAAMgH,cAAcjH,GAErBd,KAAuBe,MAAQ,KAChCf,KAAKyU,eAAe1T,EACrB,CAES,eAAAuT,CAAgBvT,GACxBf,KAAKW,cAAc,uBAAwBI,EAAOf,KACnD,CAES,aAAAuU,CAAcxT,GACtBf,KAAKga,qBAAqBjZ,EAC3B,CAES,cAAA0T,CAAe1T,GACvBf,KAAKW,cAAc,sBAAuBI,EAAOf,KAClD,CAED,cAAIia,GACF,MAAMlZ,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMY,MAAQ,CACvC,CAED,aAAAuY,CAAcD,GACZ,MAAMlZ,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElBxB,EAAM0B,SAASwX,EAChB,CAED,MAAAnR,GACE,MAAM/H,EAAQf,KAAKe,MACL,OAAVA,GACFA,EAAMmJ,YAAYlK,KAErB,CAED,UAAIU,GACF,MAAMK,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAML,OAAS,IACxC,CAGD,gBAAAD,CAAiBC,GACfV,KAAKW,cAAc,wBAAyBD,EAAQV,KACrD,CAGD,cAAAgB,CAAeN,GAEd,CAGD,eAAAO,CAAgBP,GACdV,KAAKW,cAAc,uBAAwBD,EAAQV,KACpD,CAGD,gBAAAkB,CAAiBR,GACfV,KAAKW,cAAc,wBAAyBD,EAAQV,KACrD,CAGD,cAAAmB,CAAeT,GAEd,CAGD,eAAAU,CAAgBV,GACdV,KAAKW,cAAc,uBAAwBD,EAAQV,KACpD,CAED,eAAIyG,GACF,MAAM1F,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAM0F,YAAc,IAC7C,CAED,mBAAI0T,GACF,MAAMpZ,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMoZ,gBAAkB,IACjD,CAED,cAAI3T,GACF,MAAMzF,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMyF,WAAa,IAC5C,CAED,aAAI4T,GACF,MAAMrZ,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMqZ,UAAY,IAC3C,CAID,YAAAC,CAAmBnS,EAA2D7I,GAC5E,MAAM0B,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMsZ,aAAanS,EAAU7I,QAAgB,CACtE,CAID,QAAAib,CAASvc,EAAawc,GACpB,MAAMxZ,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMuZ,SAASvc,EAAKwc,GAAa,IAC1D,CAID,QAAAC,CAASzc,EAAa0c,GACpB,MAAM1Z,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAMyZ,SAASzc,EAAK0c,EAC5B,CAKD,WAAA9J,CAAYrP,EAAgCvD,GAC1C,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM4P,YAAYrP,EAAOvD,EACjC,CAKD,YAAA2c,CAAapZ,EAAgCvD,GAC3C,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM2Z,aAAapZ,EAAOvD,EAClC,CAKD,WAAA4W,CAAYrT,EAAgCtD,EAAsBD,GAChE,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM4T,YAAYrT,EAAOtD,EAAQD,EACzC,CAED,aAAAya,CAAclX,EAActD,GAC1B,MAAM+C,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElBxB,EAAMyX,cAAclX,EAAOtD,EAC5B,CAKD,YAAA2c,CAAaF,EAAmCG,GAC9C,MAAM7Z,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM4Z,aAAaF,EAAUG,EACrC,CAED,oBAAIC,GACF,OAAQ7a,KAAKF,YAA6BsT,gBAC3C,CAGD,eAAA/R,CAAgBC,EAActD,GAC5BgC,KAAKW,cAAc,uBAAwBW,EAAOtD,EAAQgC,KAC3D,CAGD,aAAAuB,CAAcD,EAActD,GAC1BgC,KAAK+C,cAAc/C,KAAK6a,kBACxB7a,KAAK8a,mBAAmBxZ,EAAOtD,EAChC,CAGD,cAAAwD,CAAeF,EAActD,GAC3BgC,KAAKW,cAAc,sBAAuBW,EAAOtD,EAAQgC,KAC1D,CAID,WAAA0J,CAAY3L,GACV,MAAMgD,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAM2I,YAAY3L,GAAO,IAClD,CAED,oBAAIgd,GACF,OAAQ/a,KAAKF,YAA6BuT,gBAC3C,CAGD,eAAArR,CAAgBV,GACdtB,KAAKW,cAAc,uBAAwBW,EAAOtB,MAClDA,KAAK+C,cAAc/C,KAAK+a,iBACzB,CAGD,aAAA9Y,CAAcX,GACZtB,KAAKgb,qBAAqB1Z,EAC3B,CAGD,cAAAY,CAAeZ,GACbtB,KAAKW,cAAc,sBAAuBW,EAAOtB,KAClD,CAED,sBAAIib,GACF,OAAQjb,KAAKF,YAA6BwT,kBAC3C,CAGD,iBAAAnR,CAAkBb,EAActD,GAC9BgC,KAAKW,cAAc,yBAA0BW,EAAOtD,EAAQgC,KAC7D,CAGD,eAAAoC,CAAgBd,EAActD,GAC5BgC,KAAK+C,cAAc/C,KAAKib,mBACzB,CAGD,gBAAA5Y,CAAiBf,EAActD,GAC7BgC,KAAKW,cAAc,wBAAyBW,EAAOtD,EAAQgC,KAC5D,CAED,cAAAkb,GACE,MAAMna,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,OAAOA,EAAMma,gBAEhB,CAED,YAAAjC,CAAa1O,GACX,MAAMxJ,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,OAAOA,EAAMkY,aAAa1O,EAE7B,CAED,cAAA+M,CAAehW,EAAciJ,GAC3B,MAAMxJ,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMuW,eAAehW,EAAOiJ,GAAc,IACnE,CAED,WAAA4Q,CAAoCpQ,GAClC,MAAMhK,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMoa,YAAYpQ,GAAgB,IAC3D,CAED,OAAAqQ,CAAgCjQ,GAC9B,MAAMpK,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMqa,QAAQjQ,GAAY,IACnD,CAKD,YAAAR,CAAa7J,GACVd,KAAuBc,UAAYA,CACrC,CAKD,gBAAA4J,CAAiBmP,GACd7Z,KAAuB6Z,cAAgBA,CACzC,CAED,cAAI5Z,GACF,MAAMc,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMd,WAAa,IAC5C,CAED,aAAIK,GACF,MAAMS,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMT,UAAY,IAC3C,CAID,YAAA2H,CAAmBC,EAA2D7I,GAC5E,MAAM0B,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMkH,aAAaC,EAAU7I,QAAgB,CACtE,CAID,SAAAgJ,CAAUtK,EAAyBuK,GACjC,MAAMvH,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMsH,UAAUtK,EAAKuK,GAAc,IAC5D,CAKD,QAAAE,CAASzK,EAA4BuK,GACnC,MAAMvH,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMyH,SAASzK,EAAeuK,GAAc,IACrE,CAID,QAAAG,CAAS1K,EAAa2K,GACpB,MAAM3H,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM0H,SAAS1K,EAAK2K,EAC5B,CAKD,WAAAe,CAAY7I,EAAgC7C,GAC1C,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM0I,YAAY7I,EAAO7C,EACjC,CAKD,YAAA4L,CAAa/I,EAAgC7C,GAC3C,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM4I,aAAa/I,EAAO7C,EAClC,CAKD,WAAA6L,CAAYhJ,EAAgC5C,EAAsBD,GAChE,MAAMgD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM6I,YAAYhJ,EAAO5C,EAAQD,EACzC,CAKD,YAAA8L,CAAanB,EAAmCG,GAC9C,MAAM9H,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAIwB,MAAM,YAElB,OAAOxB,EAAM8I,aAAanB,EAAUG,EACrC,CAED,oBAAIiB,GACF,OAAQ9J,KAAKF,YAA6BiK,gBAC3C,CAED,aAAIsR,GACF,OAA8C,IAAtCrb,KAAK2B,MAAQgH,EAAMS,cAC5B,CAGD,eAAAC,CAAgBzI,EAAc5C,GAC5BgC,KAAKW,cAAc,uBAAwBC,EAAO5C,EAAQgC,KAC3D,CAGD,aAAAuJ,CAAc3I,EAAc5C,GAC1BgC,KAAK+C,cAAc/C,KAAK8J,kBACxB9J,KAAKiK,mBAAmBrJ,EAAO5C,EAChC,CAGD,cAAAwL,CAAe5I,EAAc5C,GAC3BgC,KAAKW,cAAc,sBAAuBC,EAAO5C,EAAQgC,KAC1D,CAID,WAAAkK,CAAYnM,GACV,MAAMgD,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMmJ,YAAYnM,GAAO,IAClD,CAED,oBAAIoM,GACF,OAAQnK,KAAKF,YAA6BsK,gBAC3C,CAED,YAAIkR,GACF,OAA6C,IAArCtb,KAAK2B,MAAQgH,EAAMoK,aAC5B,CAGD,eAAAhK,CAAgBnI,GACdZ,KAAKW,cAAc,uBAAwBC,EAAOZ,KACnD,CAGD,aAAAiJ,CAAcrI,GACZZ,KAAK+C,cAAc/C,KAAKmK,kBACxBnK,KAAKqK,qBAAqBzJ,EAC3B,CAGD,cAAAsI,CAAetI,GACbZ,KAAKW,cAAc,sBAAuBC,EAAOZ,KAClD,CAED,UAAAsK,CAAWC,GACT,MAAMxJ,EAAQf,KAAKe,MACL,OAAVA,GACFA,EAAMuJ,WAAWC,EAEpB,CAED,gBAAAO,CAAyCC,GACvC,MAAMhK,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAM+J,iBAAiBC,GAAgB,IAChE,CAED,YAAAG,CAAqCC,GACnC,MAAMpK,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,EAAiBA,EAAMmK,aAAaC,GAAY,IACxD,CAYD,WAAI+B,GACF,OAAOgC,EAAAA,SAASD,QACjB,CAYD,WAAI9B,GACF,OAAO+B,EAAAA,SAASD,QACjB,CAYD,WAAI7B,GACF,OAAO8B,EAAAA,SAASD,QACjB,CAGD,QAAAE,CAASC,GACP,IAAIC,EAAgBC,EAAAA,cAIpB,gBAHIF,IACFC,EAAgBA,EAAcE,OAAO,WAAYH,IAE5CC,EAAcG,OAAOxP,KAC7B,CAGD,aAAAyP,CAAyBL,GACvB,IAAIC,EAAgBK,EAAAA,cAIpB,gBAHIN,IACFC,EAAgBA,EAAcE,OAAO,gBAAiBH,IAEjDC,EAAcG,OAAOxP,KAC7B,CAGD,YAAA2P,CAAwBP,GACtB,IAAIC,EAAgBO,EAAAA,aAIpB,gBAHIR,IACFC,EAAgBA,EAAcE,OAAO,eAAgBH,IAEhDC,EAAcG,OAAOxP,KAC7B,CAGD,WAAA6P,CAAkCT,GAChC,IAAIC,EAAgBS,EAAAA,YAIpB,gBAHIV,IACFC,EAAgBA,EAAcE,OAAO,cAAeH,IAE/CC,EAAcG,OAAOxP,KAC7B,CAUD,OAAA+P,CAAQ7C,EAA8BC,EAA+BC,EAA+B4C,YAC9F7C,GACF6C,EAAOC,QAAMrH,SAASsE,GACtBE,EAAUpN,KAAKoN,QAAQ8C,WACvB/C,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd8N,GACT4C,EAAOC,QAAMrH,SAASuE,GACtBC,EAAU+C,MAAIvH,SAASsE,GACvBC,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd0Q,GACTA,EAAOC,QAAMrH,SAASwE,GACtBA,EAAU+C,MAAIvH,SAASuE,GACvBA,EAAUgD,MAAIvH,SAASsE,GACvBA,EAAUlN,KAAKkN,QAAQ5N,QAEvB0Q,EAAOC,QAAMrH,SAASoH,GACtB5C,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAET,OAAZA,IACFA,EAAUC,EAAQiD,WAClBjD,EAAUD,EAAQmD,UAAUlD,IAEdnN,KAAKsQ,QAAQhR,MACrByQ,QAAQ7C,EAASC,EAASC,EAAS4C,EAC5C,CAMD,YAAAO,CAAarD,EAA8BsD,YACrCA,GACFA,EAAcP,QAAMrH,SAASsE,GAC7BA,EAAUlN,KAAKkN,QAAQgD,aAEvBM,EAAcP,QAAMrH,SAAS4H,GAC7BtD,EAAUiD,MAAIvH,SAASsE,IAETlN,KAAKsQ,QAAQhR,MACrBiR,aAAarD,EAASsD,EAC/B,CAGD,OAAAC,CAAQvD,GACNA,EAAUiD,MAAIvH,SAASsE,GACvB,MAAMwD,EAAW,IAAI/Q,EAGrB,OAFA+Q,EAASxD,QAAQlO,IAAIkO,GACrBlN,KAAK2Q,YAAYD,GACVA,CACR,CAMD,OAAAE,CAAQ1D,EAA8BC,YAChCA,GAEFD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,GAGjBC,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI/Q,EAQrB,gBAPIuN,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,GAEvBnN,KAAK2Q,YAAYD,GACVA,CACR,CAQD,OAAAI,CAAQ5D,EAA8BC,EAAmBC,YACnDD,GACFC,EAAU+C,MAAIvH,SAASsE,GACvBC,OAAe,EACfD,OAAe,YACNE,GACTA,EAAU+C,MAAIvH,SAASuE,IAEvBD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,IAGjBE,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI/Q,EAWrB,gBAVIuN,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,YAEnBC,GACFsD,EAAStD,QAAQpO,IAAIoO,GAEvBpN,KAAK2Q,YAAYD,GACVA,CACR,CAGD,WAAAK,CAAY7D,EAAcC,EAAcC,GAEtC,OADgBpN,KAAKsQ,QAAQhR,MACdyR,YAAY7D,EAASC,EAASC,EAC9C,CAGD,YAAA4D,CAAa7B,GACKnP,KAAKsQ,QAAQhR,MACrB0R,aAAa7B,EACtB,CAaD,WAAImB,GACF,OAAOpB,EAAAA,SAASD,QACjB,CAED,WAAIxK,GACF,OAA4C,IAApCzE,KAAK2B,MAAQgH,EAAM/G,YAC5B,CAED,cAAIoB,GACF,OAAQhD,KAAKF,YAA6BqT,UAC3C,CAGD,UAAAvI,GACE,GAAyC,IAApC5K,KAAK2B,MAAQgH,EAAM/G,aACtB,MAAM,IAAIW,MAAM,mBAElBvC,KAAKyC,SAASzC,KAAK2B,MAAQgH,EAAM/G,aACjC5B,KAAKwC,YACLxC,KAAK0C,UACL1C,KAAK6C,UACN,CAES,SAAAL,GACRxC,KAAKW,cAAc,iBAAkBX,KACtC,CAES,OAAA0C,GAET,CAES,QAAAG,GACR7C,KAAK+C,cAAc/C,KAAKgD,YAEA,OAApBhD,KAAKiD,YAAkD,IAA3BjD,KAAKiD,WAAWzE,QAC9CwB,KAAK+C,cAAcpD,EAAMuD,aAG3BlD,KAAKmD,iBAEkB,OAAnBnD,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,iBAGPrD,KAAKW,cAAc,gBAAiBX,KACrC,CAGD,YAAA6K,GACE,GAAyC,IAApC7K,KAAK2B,MAAQgH,EAAM/G,aACtB,MAAM,IAAIW,MAAM,qBAElBvC,KAAKyC,SAASzC,KAAK2B,OAASgH,EAAM/G,aAClC5B,KAAKuD,cACLvD,KAAK0D,YACL1D,KAAK2D,YACN,CAES,WAAAJ,GACRvD,KAAKW,cAAc,mBAAoBX,MAEvCA,KAAK4D,gBACL5D,KAAKub,kBACN,CAES,SAAA7X,GAET,CAES,UAAAC,GACR3D,KAAKW,cAAc,kBAAmBX,KACvC,CAED,aAAA+C,CAAcrB,EAAyByC,GAAqB,GAC1D,MAAMpD,EAAQf,KAAKe,MACL,OAAVA,GACFA,EAAMgC,cAAcrB,EAAayC,EAEpC,CAGD,WAAAE,CAAY3C,EAAyByC,GACnC,OAAOzC,CACR,CAED,aAAAoB,CAAc9E,EAAe0D,EAAyByC,GACpD,MAAMpD,EAAQf,KAAKe,MACnB,GAAc,OAAVA,EACF,MAAM,IAAInD,UAAU,YAEtBmD,EAAM+B,cAAc9E,EAAQ0D,EAAayC,EAC1C,CAED,YAAIS,GACF,MAAM7D,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,GAAkBA,EAAM6D,QAChC,CAED,aAAIE,GACF,MAAM/D,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,GAAkBA,EAAM+D,SAChC,CAGD,YAAAE,CAAaC,GACX,OAAOA,CACR,CAGD,WAAAE,CAAYF,GAEX,CAGD,SAAAQ,CAAUR,GAET,CAGD,UAAAiB,CAAWjB,GAEV,CAGD,UAAAG,GACEpF,KAAKW,cAAc,kBAAmBX,KACvC,CAGD,QAAA0F,GACE1F,KAAKmG,kBAAkBnG,KAAKoG,WAC7B,CAGD,SAAAH,GACEjG,KAAKW,cAAc,iBAAkBX,KACtC,CAGD,aAAAsF,GACEtF,KAAKW,cAAc,qBAAsBX,KAC1C,CAGD,WAAA2F,GAEC,CAGD,YAAAK,GACEhG,KAAKW,cAAc,oBAAqBX,KACzC,CAGD,aAAAwF,GACExF,KAAKW,cAAc,qBAAsBX,KAC1C,CAGD,WAAA4F,GAEC,CAGD,YAAAG,GACE/F,KAAKW,cAAc,oBAAqBX,KACzC,CAGD,eAAA6F,CAAgBZ,EAA0Ba,EAC1BD,GACdA,EAAgBpG,KAAKO,KAAKe,MAAQkE,EAAca,EACjD,CAED,cAAIY,GACF,MAAM3F,EAAQf,KAAKe,MACnB,OAAiB,OAAVA,GAAkBA,EAAM2F,UAChC,CAGD,YAAAE,CAAaC,GACX,OAAOA,CACR,CAGD,WAAAE,CAAYF,GAEX,CAGD,SAAAO,CAAUP,GAET,CAGD,UAAAc,CAAWd,GAEV,CAGD,YAAAI,GACEjH,KAAKW,cAAc,oBAAqBX,KACzC,CAGD,UAAAqH,GAEC,CAGD,WAAAK,GACE1H,KAAKW,cAAc,mBAAoBX,KACxC,CAGD,aAAAmH,GACEnH,KAAKW,cAAc,qBAAsBX,KAC1C,CAGD,WAAAsH,GACEtH,KAAK4H,kBAAkB5H,KAAKoG,WAC7B,CAGD,YAAAqB,GACEzH,KAAKW,cAAc,oBAAqBX,KACzC,CAGD,eAAAuH,CAAgBV,EAA0BW,EAC1BD,GACdA,EAAgB9H,KAAKO,KAAKe,MAAQ8F,EAAcW,EACjD,CAED,WAAAiP,CAA+D3S,GAC7D,MAAMoI,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,OAAqB,OAAdkM,EAAqBA,EAAUuK,YAAYzW,KAAM8D,GAAgB,IACzE,CAED,WAAAI,CAAgCJ,EAA2BC,EAAyBC,GAClF,GAAIA,WAAoDhE,gBAAgBgE,GACtE,OAAO,KAET,MAAMC,EAAYjE,KAAa8D,GAC/B,gBAAIG,IAAwBF,SAAsDE,aAAoBF,GAG/FE,EAFE,IAGV,CAGD,iBAAAuX,CAAsC1X,EAAsBC,EAAyBC,GACnF,IAKIC,EALAvD,EAASV,KAAKe,MAClB,GAAe,OAAXL,EACF,OAAO,KAIT,GAAIsD,UAAmDA,IAAgB2E,GAAS3E,EAAY/F,qBAAqB0K,GAAQ,CAIvH,IADAjI,EAASA,EAAOA,OACE,OAAXA,GAAiB,CAEtB,GADAuD,EAAWvD,EAAOmD,iBAAiBC,EAAcC,EAAcC,GAC9C,OAAbC,EACF,OAAOA,EAETvD,EAASA,EAAOA,MACjB,CACD,OAAO,IACR,CAGD,EAAG,CAED,GADAuD,EAAWvD,EAAOwD,YAAYJ,EAAcC,EAAcC,GACzC,OAAbC,EACF,OAAOA,EAETvD,EAASA,EAAOA,aACE,OAAXA,GACT,OAAO,IACR,CAGD,cAAA+a,CAAexX,GACTjE,KAAKyE,SACPR,EAASyX,QAEX1b,KAAKqL,aAAapH,EACnB,CAGS,cAAAd,GACR,MAAM+I,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBrI,EAASyX,OAEZ,CACF,CAGS,gBAAAH,GACR,MAAMrP,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBrI,EAAS0X,SAEZ,CACF,CAES,YAAAtQ,CAAapH,IAChBA,aAAoB2H,GAAiB3H,aAAoBqH,IAAkBrH,EAASsH,OACvFvL,KAAKqa,cAAa,SAAU/Y,GAC1B2C,EAAS8H,UAAUzK,EAAO,KACzBtB,GAAAA,MAEDiE,aAAoBqH,GAAiBrH,EAASsH,OAChDvL,KAAKiI,cAAa,SAAUrH,GAC1BqD,EAASuH,UAAU5K,EAAO,KACzBZ,GAAAA,MAEDA,KAAKyL,YACHxH,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS4H,QAAQ7L,KAOtB,CAGS,kBAAA+Z,CAAmBhZ,GAC3B,MAAMmL,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChCtL,EAAMsZ,cAAa,SAAU/Y,GAC3B,IAAK,IAAI/C,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAK8L,kBAAkB7H,EAAU3C,EAAO,KAE3C,CACAtB,GAAAA,MACHe,EAAMkH,cAAa,SAAUrH,GAC3B,IAAK,IAAIrC,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKuM,kBAAkBtI,EAAUrD,EAAO,KAE3C,CACAZ,GAAAA,KACJ,CAGS,oBAAAga,CAAqBjZ,GAC7B,MAAMmL,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChCtL,EAAMkH,cAAa,SAAUrH,GAC3B,IAAK,IAAIrC,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKwM,oBAAoBvI,EAAUrD,EAEtC,CACAZ,GAAAA,MACHe,EAAMsZ,cAAa,SAAU/Y,GAC3B,IAAK,IAAI/C,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKgM,oBAAoB/H,EAAU3C,EAEtC,CACAtB,GAAAA,KACJ,CAGS,kBAAA8a,CAAmBxZ,EAActD,GACzC,MAAMkO,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAK8L,kBAAkB7H,EAAU3C,EAAOtD,EAE3C,CACF,CAGS,iBAAA8N,CAAkB7H,EAAoB3C,EAActD,IACxDiG,aAAoB2H,GAAiB3H,aAAoBqH,IAC3DrH,EAAS8H,UAAUzK,EAAOtD,EAE7B,CAGS,oBAAAgd,CAAqB1Z,GAC7B,MAAM4K,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKgM,oBAAoB/H,EAAU3C,EAEtC,CACF,CAGS,mBAAA0K,CAAoB/H,EAAoB3C,IAC5C2C,aAAoB2H,GAAiB3H,aAAoBqH,IAC3DrH,EAASgI,YAAY3K,EAExB,CAGS,kBAAA2I,CAAmBrJ,EAAc5C,GACzC,MAAMkO,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKuM,kBAAkBtI,EAAUrD,EAAO5C,EAE3C,CACF,CAGS,iBAAAuO,CAAkBtI,EAAoBrD,EAAc5C,GACxDiG,aAAoBqH,GACtBrH,EAASuH,UAAU5K,EAAO5C,EAE7B,CAGS,oBAAAqM,CAAqBzJ,GAC7B,MAAMsL,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBqI,EAAAA,UACtBtM,KAAKwM,oBAAoBvI,EAAUrD,EAEtC,CACF,CAGS,mBAAA4L,CAAoBvI,EAAoBrD,GAC5CqD,aAAoBqH,GACtBrH,EAASwI,YAAY7L,EAExB,CAGD,GAAA5B,CAAI4c,EAAgJC,GAClJ,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAaiB,IAAT8c,EAAS9c,IAClB,MAAM,IAAIuD,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAAS9c,IAAIM,EAAOuc,GAEpBC,EAAS9c,IAAIM,EAEhB,CACD,OAAOU,IACR,CAGD,YAAAuV,CAAaqG,EAAkKC,GAC7K,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAawX,IAATuG,EAASvG,aAClB,MAAM,IAAIhT,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAASvG,aAAajW,EAAOuc,GAE7BC,EAASvG,aAAajW,EAEzB,CACD,OAAOU,IACR,CAYD,gBAAAgc,CAAiB/X,GACf,MAAM8I,EAAa/M,KAAK+M,WACL,OAAfA,GAAuB9I,EAAS6I,eAAiB9M,KAAK8M,aAI1D9M,KAAK0M,gBAAgBzI,GAHnB8I,EAAWlO,KAAKoF,EAInB,CAES,eAAAyI,CAAgBzI,GACxB,IAAIhB,EAAajD,KAAKiD,WACH,OAAfA,IACFA,EAAa,GACZjD,KAAuBiD,WAAaA,GAEvCA,EAAWpE,KAAKoF,GACZA,aAAoByH,EAAAA,aACtB1L,KAAK+C,cAAcpD,EAAMuH,gBAEzBlH,KAAK+C,cAAcpD,EAAMuD,YAE5B,CAGD,iBAAAiD,CAAkBwG,GAChB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OAAtC,UAEWmO,IACTA,EAAIC,YAAYC,OAEjB7M,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACtB0F,aAAoByH,EAAAA,aAGxB1L,KAAK0M,gBAAgBzI,GAFrBA,EAAS+I,SAASL,EAIrB,CACF,CAAS,QACP3M,KAAuB+M,WAAa,IACtC,CAfA,CAgBF,CAGD,iBAAAnF,CAAkB+E,GAChB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OACpC,OAEF,IAAIyO,GAAwB,EAC3BjN,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACxB0F,aAAoByH,EAAAA,cACjBuB,IACHA,GAAwB,EACxBjN,KAAKkN,QAAQF,SAASL,GACtB3M,KAAKmN,QAAQH,SAASL,GACtB3M,KAAKoN,QAAQJ,SAASL,IAExB1I,EAAS+I,SAASL,IAElB3M,KAAK0M,gBAAgBzI,EAExB,CACF,CAAS,QACPjE,KAAuB+M,WAAa,IACtC,CACF,CAMD,OAAAoH,CAAQ8H,GACN,IAAInC,EAAY9Z,KAAK8Z,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIxM,IACftN,KAAuB8Z,UAAYA,OAC/B,GAAIA,EAAUvM,IAAI0O,GACvB,OAEFjc,KAAKkc,YAAYD,GACjBnC,EAAUrM,IAAIwO,GACdjc,KAAKmc,UAAUF,GACfjc,KAAKoc,WAAWH,EACjB,CAES,WAAAC,CAAYD,GAErB,CAES,SAAAE,CAAUF,GAEnB,CAES,UAAAG,CAAWH,GAEpB,CAGD,SAAAzH,CAAUyH,GACR,MAAMnC,EAAY9Z,KAAK8Z,UACL,OAAdA,GAAuBA,EAAUvM,IAAI0O,KAGzCjc,KAAKqc,cAAcJ,GACnBnC,EAAUhM,OAAOmO,GACjBjc,KAAKsc,YAAYL,GACjBjc,KAAKuc,aAAaN,GACnB,CAES,aAAAI,CAAcJ,GAEvB,CAES,WAAAK,CAAYL,GAErB,CAES,YAAAM,CAAaN,GAEtB,CAED,aAAAtb,CAA+F5C,KAAWye,GACxG,MAAM1C,EAAa9Z,KAAe8Z,UAClC,GAAkB,OAAdA,EAGJ,IAAK,MAAMmC,KAAYnC,EAAW,CAChC,MAAM2C,EAASR,EAASle,GACF,mBAAX0e,GACTA,EAAOhd,KAAKwc,KAAaO,EAE5B,CACF,CAMD,OAAA3Q,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAAuBK,UAAYA,OAC/B,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,CAES,WAAAmK,CAAYH,GAErB,CAES,SAAAK,CAAUL,GAEnB,CAES,UAAAM,CAAWN,GAEpB,CAGD,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,CAES,aAAAiK,CAAcR,GAEvB,CAES,WAAAU,CAAYV,GAErB,CAES,YAAAW,CAAaX,GAEtB,CAED,aAAI5B,GACF,OAA8C,IAAtCzL,KAAK2B,MAAQgH,EAAMsF,cAC5B,CAED,uBAAIC,GACF,OAAQlO,KAAKF,YAA6BqO,mBAC3C,CAES,cAAA9K,GACmC,IAAtCrD,KAAK2B,MAAQgH,EAAMsF,iBAGxBjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQgH,EAAMsF,eACjCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,CAES,kBAAAF,GACRpO,KAAKW,cAAc,0BAA2BX,KAC/C,CAES,gBAAAqO,GACRrO,KAAK+C,cAAc/C,KAAKkO,qBACxBlO,KAAKuO,yBACN,CAES,iBAAAD,GACRtO,KAAKW,cAAc,yBAA0BX,KAC9C,CAED,sBAAIwO,GACF,OAAQxO,KAAKF,YAA6B2O,kBAC3C,CAES,aAAA7K,GACmC,IAAtC5D,KAAK2B,MAAQgH,EAAMsF,iBAGxBjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAASgH,EAAMsF,eAClCjO,KAAK2O,kBACL3O,KAAK4O,mBACN,CAES,iBAAAF,GACR1O,KAAKW,cAAc,yBAA0BX,KAC9C,CAES,eAAA2O,GACR3O,KAAK+C,cAAc/C,KAAKwO,oBACxBxO,KAAK6O,wBACN,CAES,gBAAAD,GACR5O,KAAKW,cAAc,wBAAyBX,KAC7C,CAGS,uBAAAuO,GACR,MAAMrC,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS4H,QAAQ7L,KAMpB,CACF,CAGS,sBAAA6O,GACR,MAAM3C,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAHvD1H,EAAS2J,UAAU5N,KAMtB,CACF,CAED,cAAIoG,GACF,OAAOpG,KAAKyV,WAAWrP,UACxB,CAGD,MAAAsW,CAAOC,GACL,OAAO3c,OAAS2c,CACjB,CAGD,QAAAC,GACE,OAAOC,EAAQC,QAAAA,KAAKD,UAAQE,UAAU,EAAG/c,KAAK4S,KAC/C,CAED,aAAOpD,GACL,OAAO,IAAIxP,IACZ,CAED,eAAA4I,CAA8DtJ,GAC5D,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBqJ,EAAO,CACjC,KAAOrJ,aAA2BU,MAChC,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SAE/C,MAAM,IAAI5R,UAAU,GAAKoC,KAC1B,GAjkCA4R,EAAA,CAAA1C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,cAAIqL,GACF,OAAOxU,CACR,EACDjH,YAAa/B,EAAMuH,kBAOpB6K,EAAA,CAAA7C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,cAAIqL,GACF,OAAOxU,CACR,EACDjH,YAAa/B,EAAMuH,kBAOpB8K,EAAA,CAAA9C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,cAAIqL,GACF,OAAOxU,CACR,EACDjH,YAAa/B,EAAMuH,kBAwLpB+K,EAAA,CAAA/C,EAAAA,SAAS,CACR2C,UAAWK,EAAAA,QACXJ,UAAU,EACVpQ,YAAa/B,EAAMuH,eACnBiL,UAAAA,IACSC,EAAAA,WAAWC,SAEpBC,YAAAA,CAAYC,EAAmBC,IACtBD,IAAaC,KA1NxBrV,EAAAyC,EAAA,KAAAgS,EAAA,CAAA9T,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIzF,UAEH,KAAAhN,GAYD/C,EAAAyC,EAAA,KAAAmS,EAAA,CAAAjU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIxF,UAEH,KAAAjN,GAYD/C,EAAAyC,EAAA,KAAAoS,EAAA,CAAAlU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIvF,UAEH,KAAAlN,GA+LD/C,EAAAyC,EAAA,KAAAqS,EAAA,CAAAnU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIrC,UAEH,KAAApQ,GA41BMN,EAAAgT,IAAoB,WACzB,IAAIC,EAAS,EACb,OAAO,WACL,MAAMC,IAAOD,EAEb,OADAA,GAAU,EACH,QAAUC,CACnB,CANyB,CAAA,GAUXlT,EAAWgC,YAAe,EAE1BhC,EAAawJ,cAAe,EAE5BxJ,EAAYmT,aAAe,EAE3BnT,EAAaqO,cAAe,EAG5BrO,EAAAoT,UAAoB,EAEpBpT,EAAQsT,UAAgB,GAAKtT,EAAKoT,WAAa,EAE/CpT,EAAAuT,WAAyB,EACzBvT,EAAAwT,iBAA+B,EAC/BxT,EAAAyT,iBAA+B,EAC/BzT,EAAA0T,mBAAiC,EACjC1T,EAAAmK,iBAA+B,EAC/BnK,EAAAwK,iBAA+B,EAC/BxK,EAAAuO,oBAAkC,EAClCvO,EAAA6O,mBAAiC,GAhoDxB,EAAA,GCoCdnD,MAAAA,EAAoGgB,WAASiH,OAAsD,gBAAiB,CAC/L,gBAAIxP,GACF,OAAOuH,CACR,EAEDK,UAAU,EAEVyR,UAAW,KAEX3J,UAAU,EAEV,YAAAC,CAAaC,GACX,IAAIC,EAAU5T,KAAK4T,QACH,OAAZA,IACFA,EAAU,IAAItG,IACbtN,KAA8B4T,QAAUA,GAE3CA,EAAQnG,IAAIkG,EACb,EAED,YAAAE,CAAaF,GACX,MAAMC,EAAU5T,KAAK4T,QACL,OAAZA,GAGJA,EAAQ9F,OAAO6F,EAChB,EAED,eAAAG,GACE,MAAMF,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EACF,IAAK,MAAMD,KAAUC,EACnBD,EAAOI,SAAS/T,KAGrB,EAED,SAAAqd,CAAUzc,GAET,EAED,eAAA0c,CAAgB1c,EAAU5C,GAEzB,EAED,aAAAuf,CAAc3c,EAAU5C,GAClBgC,KAAKyT,UACP7S,EAAMuT,QAAQnU,MAEmC,IAA9CA,KAAK2B,MAAQ2J,EAAc2C,gBAC9BrN,EAAMiL,QAAQ7L,KAEjB,EAED,cAAAwd,CAAe5c,EAAU5C,GAExB,EAED,WAAAyf,CAAY7c,GAEX,EAED,eAAA8c,CAAgB9c,GAEf,EAED,aAAA+c,CAAc/c,GACuC,IAA9CZ,KAAK2B,MAAQ2J,EAAc2C,gBAC9BrN,EAAMgN,UAAU5N,MAEdA,KAAKyT,UACP7S,EAAM4T,UAAUxU,KAEnB,EAED,cAAA4d,CAAehd,GAEd,EAED,eAAI8T,GACF,MAAMnD,EAAQvR,KAAKuR,MACnB,OAAIA,aAAiB5R,EACZ4R,EACEA,aAAiB5I,EACnB4I,EAAMxQ,MAER,IACR,EAED,WAAA4T,CAAY5T,EAAcH,EAAU5C,EAAsBD,GACxDgD,EAAM6I,YAAYhJ,EAAO5C,EAAQD,EAClC,EAED,SAAAgO,CAAUhL,EAAciX,GAEvB,EAED,WAAA/L,CAAYlL,GAEX,EAED6T,YAAY7T,GACH,KAGT,SAAAyK,CAAU5K,EAAc5C,GAEvB,EAED,WAAAyO,CAAY7L,GAEX,EAEDid,YAAYjd,GACH,KAGT,WAAAkd,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,QAAAgI,CAAStJ,GACP,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,OAAAuM,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAA8BK,UAAYA,OACtC,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,EAED,WAAAmK,CAAYH,GAEX,EAED,SAAAK,CAAUL,GAET,EAED,UAAAM,CAAWN,GAEV,EAED,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,EAED,aAAAiK,CAAcR,GAEb,EAED,WAAAU,CAAYV,GAEX,EAED,YAAAW,CAAaX,GAEZ,EAED,aAAI5B,GACF,OAAsD,IAA9CzL,KAAK2B,MAAQ2J,EAAc2C,cACpC,EAED,cAAA5K,GACqD,IAA9CrD,KAAK2B,MAAQ2J,EAAc2C,iBAGhCjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQ2J,EAAc2C,eACzCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,EAED,kBAAAF,GAEC,EAED,gBAAAC,GAEC,EAED,iBAAAC,GAEC,EAED,aAAA1K,GACqD,IAA9C5D,KAAK2B,MAAQ2J,EAAc2C,iBAGhCjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAAS2J,EAAc2C,eAC1CjO,KAAK2O,kBACL3O,KAAK4O,mBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GAEC,EAED,gBAAAC,GAEC,EAED,OAAAlM,GACE3C,MAAM2C,UACiB,OAAnB1C,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,gBAER,EAED,SAAAK,GACE3D,MAAM2D,YACN1D,KAAK4D,eACN,GAEH,CACE,SAAAoR,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEqC,QAAU,KAChD3P,EAAsC5D,UAAY,KAC5C4D,CACR,EAEDgK,cAAe,GAAM3B,WAAS0G,UAAY,EAE1CA,UAAW1G,EAAAA,SAAS0G,UAAY,EAChCE,UAAW,GAAM5G,EAAS0G,SAAAA,UAAY,GAAM,IC3VjC+K,EAA0FzS,EAAciI,OAA4C,WAAY,CAC3K,gBAAIxP,GACF,OAAOga,CACR,EAED,cAAIC,GACF,MAAM7I,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiB4I,EAAW5I,EAAMvU,MAAQ,IAClD,EAED,aAAAqd,GACE,MAAMD,EAAahe,KAAKge,WACxB,GAAIA,QAA8C,CAChD,IAAIlJ,EAAUkJ,EAAa,IAC3B,MAAM3f,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,cACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOkJ,CACR,EAED,GAAAjf,GACE,OAAOiB,KAAKY,KACb,EAED,GAAA5B,CAAI4B,GAMF,OALIA,aAAiB0L,EAAAA,SACnBtM,KAAKqV,UAAUzU,GAEfZ,KAAKyI,SAAS7H,GAETZ,KAAKuR,KACb,EAED,YAAAgE,CAAa3U,GAMX,OALIA,aAAiB0L,EAAAA,SACnBtM,KAAKqV,UAAUzU,GAEfZ,KAAKyI,SAAS7H,GAETZ,KAAKuR,KACb,EAED2M,cAAe,EAEf,QAAA1V,GACE,MAAM5H,EAAQZ,KAAKY,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAIkU,EAAUlU,EAAQ,IACtB,MAAMvC,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOlU,CACR,EAED,QAAA6H,CAASC,EAAkC1K,EAAuBD,GAC/C,OAAb2K,IACFA,EAAW1I,KAAK4I,SAASF,IAE3B,IAOI3H,EAPA8H,EAAW7I,KAAKY,MACpB,OAAIiI,IAAaH,GACf1I,KAAK4V,aAAY,GACV/M,aACE7K,IACTA,EAAS,MAGPgC,KAAKuL,QAAUxK,EAAQf,KAAK0U,YAAuB,OAAV3T,KAC1B,OAAb8H,GAAqBA,EAAS9H,QAAUA,IAC3B,OAAX/C,IACFA,EAAS6K,EAAS/H,WAEpB+H,EAASC,UAEM,OAAbJ,aACE3K,IACFA,EAAMiC,KAAKke,UAEble,KAAK2U,YAAY5T,EAAO2H,EAAU1K,EAAQD,IAE5C8K,EAAW7I,KAAKY,MACZiI,IAAaH,KAIF,OAAbG,IACD7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAEL,OAAbH,IACD1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,IAEhCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAlBMjL,EAoBZ,EAED,WAAAsV,CAAYzV,EAAmC1K,GAC7C,MAAM6K,EAAW7I,KAAKY,MAWtB,gBAHI5C,IACFA,EAAS,MAEP6K,KATFH,EADEA,QACS1I,KAAK4I,SAASF,GACH,OAAbG,EACE7I,KAAK8d,cAELjV,KAOW,OAAbA,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAErB7I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAdIpL,CAgBV,EAED,WAAA0V,GACE,MAAMvV,EAAW7I,KAAKY,MACtB,OAAiB,OAAbiI,EACK,MAER7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEjL,EACR,EAED,WAAAe,CAAY7I,EAAsB2H,EAA4B1K,EAAuBD,GACnF,IAAI8K,EAAW7I,KAAKY,MAWpB,OATE8H,EADEA,QACS1I,KAAK4I,SAASF,GACH,OAAbG,EACE7I,KAAK8d,cAELjV,WAET9H,IACFA,EAAQ,MAELf,KAAKuL,OAAS1C,IAAaH,GAA+B,OAAnBA,EAAS3H,OAA4B,OAAVA,QAAkBhD,IAAAA,GAG3E,OAAVgD,IACFA,EAAQf,KAAK0U,sBAEX1W,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKke,UAEC,OAAVnd,GAAmB2H,EAAS3H,QAAUA,GAAS2H,EAAS3K,MAAQA,GAClEiC,KAAK2U,YAAY5T,EAAO2H,EAAU1K,EAAQD,GAE5C8K,EAAW7I,KAAKY,MACZiI,IAAaH,IAEO,OAAbG,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GAChB7I,KAAKuL,OAAmB,OAAVxK,GAAkB8H,EAAS9H,QAAUA,GACrD8H,EAASC,UAGZ9I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAjBIpL,GAhBAA,CAmCV,EAED,WAAAwB,GACE,MAAMtJ,EAAQZ,KAAKY,MACnB,OAAc,OAAVA,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,WAAAyd,GACE,MAAMzd,EAAQZ,KAAKoe,cACnB,OAAc,OAAVxd,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,SAAAmL,CAAUhL,EAAc/C,GACtB,IAAKgC,KAAKuL,OAAwB,OAAfvL,KAAKY,MACtB,OAEF,MAAM8H,EAAW1I,KAAK4U,YAAY7T,GACjB,OAAb2H,IAGH1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU,MAC/B1I,KAAKud,cAAc7U,EAAU,MAC7B1I,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU,MAC9B1I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA7H,CAAYlL,GACV,IAAKf,KAAKuL,MACR,OAEF,MAAM1C,EAAW7I,KAAK4U,YAAY7T,GACjB,OAAb8H,GAAqB7I,KAAKY,QAAUiI,IAGvC7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAEDc,YAAY7T,GACH,KAGT,SAAAyK,CAAU5K,EAAc5C,GACtB,IAAKgC,KAAKuL,OAAwB,OAAfvL,KAAKY,MACtB,OAEF,MAAM8H,EAAW1I,KAAK6d,YAAYjd,GACjB,OAAb8H,IAGH1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAArH,CAAY7L,GACV,IAAKZ,KAAKuL,MACR,OAEF,MAAM1C,EAAW7I,KAAK6d,YAAYjd,GACjB,OAAbiI,GAAqB7I,KAAKY,QAAUiI,IAGvC7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA+J,CAAYjd,GACV,MAAM7C,EAAMiC,KAAKke,SACjB,YAAiB,IAAbngB,GAAkBA,IAAQ6C,EAAM7C,IAC3B6C,EAEF,IACR,EAED,gBAAAyN,GACE,MAAMzN,EAAQZ,KAAKY,MACL,OAAVA,GACFA,EAAMiL,QAAQ7L,KAEjB,EAED,eAAA2O,GACE,MAAM/N,EAAQZ,KAAKY,MACL,OAAVA,GACFA,EAAMgN,UAAU5N,KAEnB,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiB4I,GACnB/d,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAKyI,SAAS0M,EAAMvU,QAGtBZ,KAAKgW,YAAW,EAEnB,GAEH,CACE,QAAAsI,CAA+C/M,EAAUzN,GACvD,MAAMoI,EAAYC,EAAAA,yBAAyBpN,IAAIwS,GACzCgN,EAAyB,OAAdrS,EAAqBA,EAAUuK,YAAYlF,EAAOzN,GAAgB,KACnF,OAAOya,aAAoBR,EAAWQ,EAAS3d,MAAQ,IACxD,EAED,SAAAoU,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE3Q,MAAQ,KACxCqD,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,IAG1D,ICvSUC,EAA0FnT,EAAciI,OAA4C,WAAY,CAC3K,gBAAIxP,GACF,OAAO0a,CACR,EAED,QAAAP,CAAStd,GAER,EAED,cAAAuH,CAAeO,EAAa1K,GAC1B,MAAMwM,EAASxK,KAAKwK,OACL,OAAXxM,GAA2D,IAAvCgC,KAAK2B,MAAQ8c,EAASxH,aAC3CjX,KAA8BwK,OAAS0M,EAAQC,QAAAA,SAAS3M,EAAQ9B,EAASkK,IAAKlK,EAAU1K,GAEzFwM,EAAO9B,EAASkK,KAAOlK,CAE1B,EAED,cAAAN,CAAeS,UACE7I,KAAKwK,OACN3B,EAAS+J,IACxB,EAED,QAAArK,CAAS3H,GACP,YAAuC,IAAhCZ,KAAKwK,OAAO5J,EAAMgS,IAC1B,EAED,QAAA8L,CAAShW,EAA4B1K,EAAuBD,GAS1D,IAAIgD,EAgBJ,OAvBE2H,EADEA,QACS1I,KAAK4I,SAASF,GAEd1I,KAAK8d,uBAEd9f,IACFA,EAAS,MAGPgC,KAAKuL,QAAUxK,EAAQf,KAAK0U,YAAuB,OAAV3T,KAC5B,OAAX/C,IAEAA,EADE0K,EAAS3H,QAAUA,EACZ2H,EAAS5H,UAETd,KAAKsX,eAAevW,EAAO2H,aAGpC3K,IACFA,EAAMiC,KAAKke,SAASxV,IAElBA,EAAS3H,QAAUA,GAAS2H,EAAS5H,YAAc9C,GAAU0K,EAAS3K,MAAQA,GAChFiC,KAAK2U,YAAY5T,EAAO2H,EAAU1K,EAAQD,SAGrB6U,IAArB5S,KAAKwK,OAAO9B,EAASkK,OAGzB5S,KAAKmI,eAAeO,EAAU1K,GAC7BgC,KAA8B2e,YAAc,EAC7C3e,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIpL,CAWV,EAED,SAAAkW,CAAUC,EAAwD7gB,GAChE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAEtC,EAED,SAAA+gB,CAAUF,EAAwD7gB,GAChE,MAAMuN,EAAQvL,KAAKuL,MACbxK,EAAQwK,EAAQvL,KAAK0U,YAAc,KACnClK,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,EACpB,YAAIqU,EAAUC,GAAqB,CACjC,MAAMjW,EAAW7I,KAAKoe,YAAY5T,EAAOsU,IACxB,OAAbjW,GAAqB0C,GAAmB,OAAVxK,GAAkB8H,EAAS9H,QAAUA,GACrE8H,EAASC,QAEZ,CAEH,GAA4C,IAAvC9I,KAAK2B,MAAQ8c,EAASxH,aAAoB,CAC7C,MAAM+H,EAAgB,IAAInH,MAC1B,IAAK,MAAMiH,KAAWD,EACpBG,EAAcngB,KAAKggB,EAAUC,IAE/B,IAAK,IAAIvgB,EAAI,EAAGwZ,EAAIiH,EAAcxgB,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CACvD,MAAMmK,EAAWsW,EAAczgB,GAC/B,QAAoBqU,IAAhBpI,EAAO9B,EAASkK,KAAiB,CACnC,MAAMqM,EAAc1gB,EAAIwZ,EAAI,EAAIiH,EAAczgB,EAAI,GAAKP,EACvDgC,KAAK0e,SAAShW,EAAUuW,EACzB,CACF,CACF,MACC,IAAK,MAAMH,KAAWD,WAChBrU,EAAOsU,IACT9e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAI1C,EAED,WAAAmgB,CAAYzV,EAAmC1K,GAM7C,OAJE0K,EADEA,QACS1I,KAAK4I,SAASF,GAEd1I,KAAK8d,mBAEOlL,IAArB5S,KAAKwK,OAAO9B,EAASkK,gBAEd5U,IACTA,EAAS,MAEXgC,KAAKmI,eAAeO,EAAU1K,GAC7BgC,KAA8B2e,YAAc,EAC7C3e,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAXIpL,CAaV,EAED,YAAAwW,CAAaL,EAAwD7gB,GACnE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAKme,YAAYU,EAAUC,GAAW9gB,EAEzC,EAED,WAAAogB,CAAYvV,GACV,YAAyB+J,IAArB5S,KAAKwK,OAAO3B,EAAS+J,KAChB,MAER5S,KAA8B2e,YAAc,EAC7C3e,KAAKoI,eAAeS,GACpB7I,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEjL,EACR,EAED,YAAAsW,CAAa3U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKoe,YAAY5T,EAAOsU,GAE3B,EAED,WAAAlV,CAAY7I,EAAsB2H,EAA4B1K,EAAuBD,GASnF,OAPE2K,EADEA,QACS1I,KAAK4I,SAASF,GAEd1I,KAAK8d,uBAEd/c,IACFA,EAAQ,MAELf,KAAKuL,YAA8BqH,IAArB5S,KAAKwK,OAAO9B,EAASkK,MAAsC,OAAnBlK,EAAS3H,OAA4B,OAAVA,YAAkBhD,GAG1F,OAAVgD,IACFA,EAAQf,KAAK0U,sBAEX1W,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKke,SAASxV,IAER,OAAV3H,GAAmB2H,EAAS3H,QAAUA,GAAS2H,EAAS3K,MAAQA,IACnD,OAAXC,IACFA,EAASgC,KAAKsX,eAAevW,EAAO2H,IAEtC1I,KAAK2U,YAAY5T,EAAO2H,EAAU1K,EAAQD,SAEnB6U,IAArB5S,KAAKwK,OAAO9B,EAASkK,OAGzB5S,KAAKmI,eAAeO,EAAU1K,GAC7BgC,KAA8B2e,YAAc,EAC7C3e,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIpL,GAlBAA,CA6BV,EAED,YAAA0W,CAAare,EAAqB8d,EAAwD7gB,GACxF,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAK4J,YAAY7I,EAAO8d,EAAUC,GAAW9gB,EAEhD,EAED,WAAAkM,CAAYtJ,GACV,OAAKZ,KAAKuI,SAAS3H,IAGnBA,EAAMkI,SACClI,GAHE,IAIV,EAED,YAAAye,CAAa7U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKkK,YAAYM,EAAOsU,GAE3B,EAED,WAAAT,CAAYzd,GACV,MAAMiI,EAAW7I,KAAKoe,YAAYxd,GAClC,OAAiB,OAAbiI,EACK,MAETA,EAASC,SACFD,EACR,EAED,YAAAyW,CAAa9U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKqe,YAAY7T,EAAOsU,GAE3B,EAED,aAAAS,CAAc3e,EAAU5C,GACtB,QAAoC,IAAhCgC,KAAKwK,OAAO5J,EAAMgS,WAAoC,IAAhB5U,GAA4D,IAAtCgC,KAAK2B,MAAQ8c,EAASlG,YACpF,OAEF,MAAMxX,EAAQH,EAAMG,MACpB,GAAc,OAAVA,EACF,OAEF,MAAML,EAASE,EAAMF,OACN,OAAXA,aAEO1C,IACTA,EAASgC,KAAKsX,eAAe5W,EAAQE,IAEvCF,EAAO8X,cAAczX,EAAkB,OAAX/C,EAAkBA,EAAO+C,MAAQ,MAC9D,EAED,SAAAgL,CAAUhL,EAAc/C,GACtB,IAAKgC,KAAKuL,MACR,OAEF,MAAM7C,EAAW1I,KAAK4U,YAAY7T,GACjB,OAAb2H,YAAqB1I,KAAKwK,OAAO9B,EAASkK,OAG9C5S,KAAKmI,eAAeO,EAAU,MAC7B1I,KAA8B2e,YAAc,EAC7C3e,KAAKsd,gBAAgB5U,EAAU,MAC/B1I,KAAKud,cAAc7U,EAAU,MAC7B1I,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU,MAC9B1I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA7H,CAAYlL,GACV,IAAKf,KAAKuL,MACR,OAEF,MAAM1C,EAAW7I,KAAK4U,YAAY7T,GACjB,OAAb8H,YAAqB7I,KAAKwK,OAAO3B,EAAS+J,OAG7C5S,KAA8B2e,YAAc,EAC7C3e,KAAKoI,eAAeS,GACpB7I,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAEDc,YAAY7T,GACH,KAGT,SAAAyK,CAAU5K,EAAc5C,GACtB,IAAKgC,KAAKuL,MACR,OAEF,MAAM7C,EAAW1I,KAAK6d,YAAYjd,GACjB,OAAb8H,YAAqB1I,KAAKwK,OAAO9B,EAASkK,OAG9C5S,KAAKmI,eAAeO,EAAU1K,GAC7BgC,KAA8B2e,YAAc,EAC7C3e,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAArH,CAAY7L,GACV,IAAKZ,KAAKuL,MACR,OAEF,MAAM1C,EAAW7I,KAAK6d,YAAYjd,GACjB,OAAbiI,YAAqB7I,KAAKwK,OAAO3B,EAAS+J,OAG7C5S,KAA8B2e,YAAc,EAC7C3e,KAAKoI,eAAeS,GACpB7I,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB7I,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,WAAA+J,CAAYjd,GACV,MAA8B,mBAAnBZ,KAAKod,WAA4Bxc,aAAiBZ,KAAKod,UACzDxc,EAEF,IACR,EAED,aAAA4e,CAAcnS,GACZ,MAAM7C,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,EACNA,EAAOsU,GACfjT,QAAQwB,EAEjB,EAED,eAAAoS,CAAgBpS,GACd,MAAM7C,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,EACNA,EAAOsU,GACflR,UAAUP,EAEnB,EAED,gBAAAgB,GACErO,KAAKwf,cAAcxf,KACpB,EAED,eAAA2O,GACE3O,KAAKyf,gBAAgBzf,KACtB,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiBsJ,GACnBze,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAK+e,UAAU5J,EAAM3K,SAGvBxK,KAAKgW,YAAW,EAEnB,EAED,WAAI2C,GACF,OAA+C,IAAvC3Y,KAAK2B,MAAQ8c,EAASxH,YAC/B,EAED,KAAA2B,CAAMD,GASJ,gBARIA,IACFA,GAAU,GAERA,EACF3Y,KAAKyC,SAASzC,KAAK2B,MAAQ8c,EAASxH,aAEpCjX,KAAKyC,SAASzC,KAAK2B,OAAS8c,EAASxH,aAEhCjX,IACR,EAED,UAAI6Y,GACF,OAA8C,IAAtC7Y,KAAK2B,MAAQ8c,EAASlG,WAC/B,EAED,IAAA9N,CAAKoO,GAIH,YAHIA,IACFA,GAAS,GAEPA,EAAQ,CACV,MAAMnY,EAASV,KAAK0U,YACpB1U,KAAK8Y,SAASpY,GACdV,KAAKyC,SAASzC,KAAK2B,MAAQ8c,EAASlG,YACpCvY,KAAK+Y,OAAOrY,GACZV,KAAKgZ,QAAQtY,EACd,MACCV,KAAKyC,SAASzC,KAAK2B,OAAS8c,EAASlG,YAEvC,OAAOvY,IACR,EAED,QAAA8Y,CAASpY,GAER,EAED,MAAAqY,CAAOrY,GACU,OAAXA,GACFV,KAAKiZ,aAAavY,EAErB,EAED,OAAAsY,CAAQtY,GAEP,EAED,YAAAuY,CAAavY,EAAe6J,GAC1B7J,EAAOuY,aAAajZ,KAAKkZ,gBAAgB3S,KAAKvG,MAC/C,EAED,cAAAsX,CAAe5W,EAAeY,GAC5B,GAA2C,IAAtCtB,KAAK2B,MAAQ8c,EAASlG,aAAqC,OAAhBjX,EAAMP,MAAgB,CACpE,MAAMiX,EAActX,EAAO4W,eAAehW,EAAMP,MAAOf,KAAKmZ,mBAAmB5S,KAAKvG,OACpF,GAAoB,OAAhBgY,EACF,OAAOhY,KAAK4U,YAAYoD,EAE3B,CACD,OAAO,IACR,EAED,eAAAkB,CAAgBE,EAAUC,GACxB,MAAM7O,EAASxK,KAAKwK,OACd9L,EAAIsB,KAAK4U,YAAYwE,GACrBsG,EAAI1f,KAAK4U,YAAYyE,GACrBC,EAAU,OAAN5a,EAAa8L,EAAO9L,EAAEkU,UAAY,EACtC2G,EAAU,OAANmG,EAAalV,EAAOkV,EAAE9M,UAAY,EAC5C,YAAI0G,IAAAA,QAAgBC,IAAAA,EACXvZ,KAAKwZ,QAAQF,EAAGC,QAEP,IAAXD,EAAe,OAAIC,IAAAA,GAAgB,EAAI,CAC/C,EAED,kBAAAJ,CAAmBC,EAAUC,GAC3B,MAAM7O,EAASxK,KAAKwK,OACd9L,EAAIsB,KAAK4U,YAAYwE,GACrBsG,EAAI1f,KAAK4U,YAAYyE,GACrBC,EAAU,OAAN5a,EAAaA,OAAS,EAC1B6a,EAAU,OAANmG,EAAalV,EAAOkV,EAAE9M,UAAY,EAC5C,YAAI0G,IAAAA,QAAgBC,IAAAA,EACXvZ,KAAKwZ,QAAQF,EAAGC,QAEP,IAAXD,EAAe,OAAIC,IAAAA,GAAgB,EAAI,CAC/C,EAEDC,QAAAA,CAAQJ,EAAMC,IACLD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE/G,OAAS,GAC/CvG,EAAsC0a,WAAa,EAC7C1a,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAExC,IAAIwb,EAAY7C,EAAkB6C,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,aACtDA,EAAkB+B,QACpBc,GAAagF,EAASxH,YAEtBwC,IAAcgF,EAASxH,mBAEjBL,EAAmD+B,SAEzDxa,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,YACtDA,EAAkBiC,OACpBY,GAAagF,EAASlG,WAEtBkB,IAAcgF,EAASlG,kBAEjB3B,EAAmDiC,QAE7D1a,OAAOgB,eAAeyX,EAAmB,YAAa,CACpDtX,MAAOma,EACPE,YAAY,EACZC,cAAc,GAEjB,EAED3C,YAAa,GAAM3L,EAAc0H,UAAY,EAC7CuF,WAAY,GAAMjN,EAAc0H,UAAY,EAE5CA,UAAW1H,EAAc0H,UAAY,EACrCE,UAAW,GAAM5H,EAAc0H,UAAY,GAAM,ICjjBtC2M,EAA0H1K,EAAS1B,OAAyD,gBAAiB,CACxN,GAAAvU,CAAI4gB,GAQF,OAPIA,aAAwBtT,EAAAA,SAC1BtM,KAAKqV,UAAUuK,GACNA,aAAwBjX,EACjC3I,KAAKyI,SAASmX,GAEd5f,KAAKsV,SAASsK,GAET5f,KAAKuR,KACb,EAED,YAAAgE,CAAaqK,GAQX,OAPIA,aAAwBtT,EAAAA,SAC1BtM,KAAKqV,UAAUuK,GACNA,aAAwBjX,EACjC3I,KAAKyI,SAASmX,GAEd5f,KAAKsV,SAASsK,GAET5f,KAAKuR,KACb,EAED6L,UAAW,KAEXc,cAAe,EAEf2B,eAAe,EAEf,QAAArX,GACE,MAAM5H,EAAQZ,KAAKY,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAIkU,EAAUlU,EAAQ,IACtB,MAAMvC,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOlU,CACR,EAED,QAAA6H,CAASC,EAAkCuW,EAA4BzJ,GACpD,OAAb9M,IACFA,EAAW1I,KAAK8f,cAAcpX,IAEhC,IAAIG,EAAW7I,KAAKY,MACpB,GAAIiI,IAAaH,EACf,OAAOG,WACEoW,IACTA,EAAc,MAEhB,IAAIle,EAAQf,KAAKe,MACjB,GAAc,OAAVA,GAA+B,OAAb2H,EAAmB,CACvC3H,EAAQf,KAAK6U,YAAYnM,GACzB,MAAMsP,EAA8B,OAAhBiH,EAAuBA,EAAYle,MAAQ,KAC/Df,KAAKsV,SAASvU,EAAOiX,EAAaxC,EACnC,CACD,OAAc,OAAVzU,IACe,OAAb8H,GAAqBA,EAAS9H,QAAUA,IACtB,OAAhBke,IACFA,EAAcpW,EAAS/H,WAEzB+H,EAASC,UAEM,OAAbJ,GACF1I,KAAK+f,iBAAiBhf,EAAO2H,EAAUuW,EAAajf,KAAKke,UAE3DrV,EAAW7I,KAAKY,MACZiI,IAAaH,KAIF,OAAbG,IACD7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAEL,OAAbH,IACD1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAUuW,GAC/Bjf,KAAKud,cAAc7U,EAAUuW,GAC7Bjf,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAUuW,KAfrBpW,CAkBZ,EAED,WAAAsV,CAAYzV,EAAmCuW,GAC7C,IAAIpW,EAAW7I,KAAKY,MAElB8H,EADEA,QACS1I,KAAK8f,cAAcpX,GACR,OAAbG,EACE7I,KAAK8d,cAELjV,WAEToW,IACFA,EAAc,MAEhB,IAAIle,EAAQf,KAAKe,MACjB,GAAc,OAAVA,EAAgB,CAClBA,EAAQf,KAAK6U,YAAYnM,GACzB,MAAMsP,EAA8B,OAAhBiH,EAAuBA,EAAYle,MAAQ,KAC/Df,KAAKsJ,YAAYvI,EAAOiX,GACxBnP,EAAW7I,KAAKY,KACjB,CACD,OAAIiI,IAAaH,IAEO,OAAbG,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAErB7I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAUuW,GAC/Bjf,KAAKud,cAAc7U,EAAUuW,GAC7Bjf,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAUuW,IAZrBvW,CAcV,EAED,SAAA2U,CAAUzc,GAET,EAED,eAAA0c,CAAgB1c,EAAUqe,GAEzB,EAED,aAAA1B,CAAc3c,EAAUqe,GAClBjf,KAAK6f,eACPjf,EAAMuT,QAAQnU,KAEjB,EAED,cAAAwd,CAAe5c,EAAUqe,GAExB,EAED,WAAAb,GACE,MAAMvV,EAAW7I,KAAKY,MACtB,OAAiB,OAAbiI,EACK,MAER7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACbA,EACR,EAED,WAAA4U,CAAY7c,GAEX,EAED,eAAA8c,CAAgB9c,GAEf,EAED,aAAA+c,CAAc/c,GACRZ,KAAK6f,eACPjf,EAAM4T,UAAUxU,KAEnB,EAED,cAAA4d,CAAehd,GAEd,EAED,WAAAgJ,CAAY7I,EAAkB2H,EAA4BuW,EAA4BzJ,GACpF,IAAI3M,EAAW7I,KAAKY,MAWpB,YAHIG,IACFA,EAAQ,MAEN8H,KATFH,EADEA,QACS1I,KAAK8f,cAAcpX,GACR,OAAbG,EACE7I,KAAK8d,cAELjV,IAKmC,OAAnBH,EAAS3H,OAA4B,OAAVA,EACtD,OAAO2H,EAKT,YAHIuW,IACFA,EAAc,MAEF,OAAVle,EAAgB,CAClBA,EAAQf,KAAK6U,YAAYnM,GACzB,MAAMsP,EAA8B,OAAhBiH,EAAuBA,EAAYle,MAAQ,KAC/Df,KAAK6V,YAAY,KAAM9U,EAAOiX,EAAaxC,EAC5C,CAKD,OAJc,OAAVzU,GAAkB2H,EAAS3H,QAAUA,GACvCf,KAAK+f,iBAAiBhf,EAAO2H,EAAUuW,EAAajf,KAAKke,UAE3DrV,EAAW7I,KAAKY,MACZiI,IAAaH,IAEO,OAAbG,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpBA,EAASC,UAEV9I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAUuW,GAC/Bjf,KAAKud,cAAc7U,EAAUuW,GAC7Bjf,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAUuW,IAbrBvW,CAeV,EAED,WAAAwB,GACE,MAAMtJ,EAAQZ,KAAKY,MACnB,OAAc,OAAVA,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,WAAAyd,GACE,MAAMzd,EAAQZ,KAAKoe,cACnB,OAAc,OAAVxd,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,WAAAkd,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,gBAAA0gB,CAAiBjf,GACf,OAAOA,EAAMsH,UAAUrI,KAAKke,SAAUle,KAAKod,UAC5C,EAED,gBAAA2C,CAAiBhf,EAAUH,EAAUqe,EAA2Bf,GAC9Dnd,EAAM6I,YAAYhJ,EAAOqe,EAAaf,EACvC,EAED,aAAAhK,CAAcnT,EAAUiX,GACtB,MAAMpX,EAAQZ,KAAKggB,iBAAiBjf,GACpC,GAAc,OAAVH,EAAgB,CAClB,MAAMqe,EAA8B,OAAhBjH,EAAuBhY,KAAKggB,iBAAiBhI,GAAe,KAChFhY,KAAKme,YAAYvd,EAAOqe,EACzB,CACDlf,MAAMmU,cAAcnT,EAAOiX,EAC5B,EAED,aAAAzD,CAAcxT,GACZhB,MAAMwU,cAAcxT,GACpBf,KAAKoe,aACN,EAED,WAAAvJ,CAAYjU,GACV,MAAMG,EAAQhB,MAAM8U,cAKpB,gBAJIjU,IACFA,EAAQZ,KAAK8d,eAEf9d,KAAK+f,iBAAiBhf,EAAOH,EAAO,KAAMZ,KAAKke,UACxCnd,CACR,GAEH,CACE,SAAAiU,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE3Q,MAAQ,KACxCqD,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,IAG1D,IClSUyB,EAA0HnJ,EAASvD,OAAyD,gBAAiB,CACxN6J,UAAW,KAEXc,cAAe,EAEf2B,eAAe,EAEf,QAAAtX,CAAS3H,GACP,YAAuC,IAAhCZ,KAAKwK,OAAO5J,EAAMgS,IAC1B,EAED,QAAA8L,CAAShW,EAA4BsP,EAA4BxC,GAM/D,IAAIzU,GAJF2H,EADEA,QACS1I,KAAK8f,cAAcpX,GAEnB1I,KAAK8d,eAEG/c,MAKrB,OAJc,OAAVA,IACFA,EAAQf,KAAK6U,YAAYnM,IAE3B1I,KAAKsR,SAASvQ,EAAOiX,EAAaxC,GAC3B9M,CACR,EAED,SAAAkW,CAAUC,EAAwD7G,GAChE,IAAK,MAAM8G,KAAWD,EACpB7e,KAAK0e,SAASG,EAAUC,GAAW9G,EAEtC,EAED,SAAA+G,CAAUF,EAAwD7G,GAChE,MAAMxN,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,WAChBqU,EAAUC,IACZ9e,KAAKoe,YAAY5T,EAAOsU,IAG5B,IAAK,MAAMA,KAAWD,WAChBrU,EAAOsU,IACT9e,KAAKme,YAAYU,EAAUC,GAAW9G,EAG3C,EAED,WAAAmG,CAAYzV,EAAmCsP,GAE3CtP,EADEA,QACS1I,KAAK8f,cAAcpX,GAEnB1I,KAAK8d,cAElB,MAAMtT,EAASxK,KAAKwK,OACpB,QAAoBoI,IAAhBpI,EAAO9B,EAASkK,KAClB,OAAOlK,WACEsP,IACTA,EAAc,MAEhBxN,EAAO9B,EAASkK,KAAOlK,EACtB1I,KAA8B2e,YAAc,EAC7C,IAAI5d,EAAQ2H,EAAS3H,MASrB,OARc,OAAVA,IACFA,EAAQf,KAAK6U,YAAYnM,IAE3B1I,KAAKsJ,YAAYvI,EAAOiX,GACxBhY,KAAKsd,gBAAgB5U,EAAUsP,GAC/BhY,KAAKud,cAAc7U,EAAUsP,GAC7BhY,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAUsP,GACvBtP,CACR,EAED,SAAA2U,CAAUzc,GAET,EAED,eAAA0c,CAAgB1c,EAAUoX,GAEzB,EAED,aAAAuF,CAAc3c,EAAUoX,GAClBhY,KAAK6f,eACPjf,EAAMuT,QAAQnU,KAEjB,EAED,cAAAwd,CAAe5c,EAAUoX,GAExB,EAED,YAAAkH,CAAaL,EAAwD7G,GACnE,IAAK,MAAM8G,KAAWD,EACpB7e,KAAKme,YAAYU,EAAUC,GAAW9G,EAEzC,EAED,WAAAoG,CAAYvV,GACV,MAAM2B,EAASxK,KAAKwK,OACpB,QAAoBoI,IAAhBpI,EAAO3B,EAAS+J,KAClB,OAAO,KAER5S,KAA8B2e,YAAc,SACtCnU,EAAO3B,EAAS+J,KACvB5S,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACpB,MAAM9H,EAAQ8H,EAAS9H,MAIvB,OAHc,OAAVA,GACFf,KAAKgJ,YAAYjI,GAEZ8H,CACR,EAED,WAAA4U,CAAY7c,GAEX,EAED,eAAA8c,CAAgB9c,GAEf,EAED,aAAA+c,CAAc/c,GACRZ,KAAK6f,eACPjf,EAAM4T,UAAUxU,KAEnB,EAED,cAAA4d,CAAehd,GAEd,EAED,YAAAue,CAAa3U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKoe,YAAY5T,EAAOsU,GAE3B,EAED,WAAAlV,CAAYlJ,EAAuBgI,EAA4BsP,EAA4BxC,GAMzF,IAAIzU,GAJF2H,EADEA,QACS1I,KAAK8f,cAAcpX,GAEnB1I,KAAK8d,eAEG/c,MAKrB,OAJc,OAAVA,IACFA,EAAQf,KAAK6U,YAAYnM,IAE3B1I,KAAK6V,YAAYnV,EAAQK,EAAOiX,EAAaxC,GACtC9M,CACR,EAED,YAAA0W,CAAa1e,EAAsBme,EAAwD7G,GACzF,IAAK,MAAM8G,KAAWD,EACpB7e,KAAK4J,YAAYlJ,EAAQme,EAAUC,GAAW9G,EAEjD,EAED,WAAA9N,CAAYtJ,GACV,OAAKZ,KAAKuI,SAAS3H,IAGnBA,EAAMkI,SACClI,GAHE,IAIV,EAED,YAAAye,CAAa7U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKkK,YAAYM,EAAOsU,GAE3B,EAED,WAAAT,CAAYzd,GACV,MAAMiI,EAAW7I,KAAKoe,YAAYxd,GAClC,OAAiB,OAAbiI,EACK,MAETA,EAASC,SACFD,EACR,EAED,YAAAyW,CAAa9U,YACPA,IACFA,EAASxK,KAAKwK,QAEhB,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKqe,YAAY7T,EAAOsU,GAE3B,EAED,aAAAS,CAAc3e,EAAUqe,GACtB,MAAMle,EAAQH,EAAMG,MACpB,GAAc,OAAVA,EACF,OAEF,MAAMiX,EAA8B,OAAhBiH,EAAuBA,EAAYle,MAAQ,KAC/Df,KAAKsY,cAAcvX,EAAOiX,EAC3B,EAED,aAAAwH,CAAcnS,GACZ,MAAM7C,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,EACNA,EAAOsU,GACfjT,QAAQwB,EAEjB,EAED,eAAAoS,CAAgBpS,GACd,MAAM7C,EAASxK,KAAKwK,OACpB,IAAK,MAAMsU,KAAWtU,EACNA,EAAOsU,GACflR,UAAUP,EAEnB,EAED,WAAAyQ,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,gBAAA0gB,CAAiBjf,GACf,OAAOA,EAAMsH,UAAUrI,KAAKke,SAAUle,KAAKod,UAC5C,EAED,gBAAA2C,CAAiBhf,EAAUH,EAAUqe,EAA2Bf,GAC9Dnd,EAAM6I,YAAYhJ,EAAOqe,EAAaf,EACvC,EAED,WAAAtJ,CAAY7T,GACV,OAAqC,OAAjCf,KAAKggB,iBAAiBjf,GACjBA,EAEF,IACR,EAED,aAAAmT,CAAcnT,EAAUiX,GACtB,MAAMpX,EAAQZ,KAAKggB,iBAAiBjf,GACtB,OAAVH,GACFZ,KAAKme,YAAYvd,EAAOoX,GAE1BjY,MAAMmU,cAAcnT,EAAOiX,EAC5B,EAED,aAAAzD,CAAcxT,GACZhB,MAAMwU,cAAcxT,GACpB,MAAMH,EAAQZ,KAAKggB,iBAAiBjf,GACtB,OAAVH,GACFZ,KAAKoe,YAAYxd,EAEpB,EAED,WAAAiU,CAAYjU,GACV,MAAMG,EAAQhB,MAAM8U,cAKpB,gBAJIjU,IACFA,EAAQZ,KAAK8d,eAEf9d,KAAK+f,iBAAiBhf,EAAOH,EAAO,KAAMZ,KAAKke,UACxCnd,CACR,EAED,OAAAyY,CAAQJ,EAAMC,GACZ,MAAMC,EAAItZ,KAAKggB,iBAAiB5G,GAC1BG,EAAIvZ,KAAKggB,iBAAiB3G,GAChC,OAAU,OAANC,GAAoB,OAANC,EACTvZ,KAAKkgB,cAAc5G,EAAGC,GAElB,OAAND,EAAa,EAAU,OAANC,GAAc,EAAI,CAC3C,EAED2G,cAAAA,CAAc9G,EAAMC,IACXD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE/G,OAAS,GAC/CvG,EAAsC0a,WAAa,EAC7C1a,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,IAG1D,IC9aUrN,IAAAA,EAAgB,mCAAhB,OAAAvR,EAAA,MAAAuR,UAAyBgP,UACpC,WAAArgB,GACEC,QA8BOC,KAAAqR,OAA8BjS,EAAAY,KAAAE,GAAAd,EAAAY,KAAAogB,OAAA,IAkM9BpgB,KAAAqgB,iBAAsCjhB,EAAAY,KAAAsgB,OAAA,GA/N7CtgB,KAAK0B,YAAc,EACnB1B,KAAKoG,WAAawG,YAAYC,MAC9B7M,KAAKugB,YAAcpP,EAAiBqP,eACpCxgB,KAAKygB,aAAe,EACpBzgB,KAAK0gB,aAAe,EAEpB1gB,KAAK2gB,eAAiB3gB,KAAK2gB,eAAepa,KAAKvG,MAC/CA,KAAK4gB,eAAiB5gB,KAAK4gB,eAAera,KAAKvG,KAChD,CA2BD,cAAA6gB,CAAenf,GACZ1B,KAAuB0B,YAAcA,CACvC,CAOS,WAAA2C,CAAY3C,EAAyByC,GAC7C,OAAOzC,CACR,CAED,aAAAoB,CAAc9E,EAAe0D,EAAyByC,GACpDzC,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK0B,aAAeA,EAAc/B,EAAMkC,WACrB,IAArCH,EAAc/B,EAAMmC,eACvBsC,GAAoBzE,EAAM2E,cAEc,IAArC5C,EAAc/B,EAAM4E,eACvBH,GAAoBzE,EAAM6E,cAE5BxE,KAAK6gB,eAAe7gB,KAAK0B,YAAc0C,GACnCD,GAAmF,IAArEnE,KAAK0B,aAAe/B,EAAMoF,cAAgBpF,EAAMgH,kBAA0B3G,KAAKugB,aAAepP,EAAiB2P,mBAC/H9gB,KAAK+gB,mBAEL/gB,KAAKghB,gBAER,CAES,cAAAA,GACR,MAAMtf,EAAc1B,KAAK0B,YACmB,IAAvCA,EAAc/B,EAAMoF,gBAA8D,IAArCrD,EAAc/B,EAAMmC,aACpE9B,KAAKihB,oBAAoBjhB,KAAKugB,aACoB,IAAxC7e,EAAc/B,EAAMgH,iBAA+D,IAArCjF,EAAc/B,EAAM4E,cAC5EvE,KAAKkhB,oBAAoB/P,EAAiBgQ,mBAE7C,CAES,YAAAC,GACRphB,KAAKqhB,oBACLrhB,KAAKshB,mBACN,CAES,gBAAAP,GACuC,IAA1C/gB,KAAK0B,YAAc/B,EAAMmC,eAC5B9B,KAAKohB,eACLphB,KAAK2gB,gBAAe,IAEyB,IAA1C3gB,KAAK0B,YAAc/B,EAAM4E,cAAsBvE,KAAKugB,aAAepP,EAAiB2P,qBACvF9gB,KAAKohB,eACLphB,KAAK4gB,gBAAe,GAEvB,CAKS,mBAAAK,CAAoBV,GACF,IAAtBvgB,KAAKygB,eACPzgB,KAAKygB,aAAec,WAAWvhB,KAAK2gB,eAAgBJ,GAEvD,CAES,iBAAAc,GACkB,IAAtBrhB,KAAKygB,eACPe,aAAaxhB,KAAKygB,cAClBzgB,KAAKygB,aAAe,EAEvB,CAES,cAAAE,CAAexc,GAAqB,GACvCA,IACHnE,KAAKygB,aAAe,GAEtBzgB,KAAK6gB,eAAe7gB,KAAK0B,aAAe/B,EAAMmC,YAAcnC,EAAMoF,eAClE,IACE,MAAM0c,EAAK7U,YAAYC,MACtB7M,KAAuBoG,WAAaqb,EAErC,MAAMC,EAAa1hB,KAAKqR,MAAM2F,OAC9B,IAAK,MAAMU,KAAWgK,EAAY,CAChC,MAAMC,EAAYD,EAAWhK,GACiB,IAAzCiK,EAAUhgB,MAAQhC,EAAMmC,cAC3B6f,EAAU5f,eAAe,EAE5B,CAED,MAAM6f,EAAKhV,YAAYC,MACvB,IAAIgV,EAAe1L,KAAK2L,IAAI3Q,EAAiBgQ,mBAAoBnhB,KAAKugB,aAEpEvgB,KAAKugB,YADHqB,EAAKH,EAAKI,EACO1L,KAAKC,IAAID,KAAK2L,IAAI,EAAsB,EAAnB9hB,KAAKugB,aAAkBpP,EAAiB4Q,gBAE7D5L,KAAKC,IAAIjF,EAAiBqP,eAAgBxgB,KAAKugB,YAAc,GAGlFvgB,KAAKqhB,oBAC0C,IAA1CrhB,KAAK0B,YAAc/B,EAAM4E,aAC5BvE,KAAKkhB,oBAAoB/P,EAAiB6Q,oBACU,IAA1ChiB,KAAK0B,YAAc/B,EAAMmC,eAC/BqC,IACF0d,EAAe1L,KAAK2L,IAAI3Q,EAAiB2P,mBAAoBe,IAE/D7hB,KAAKshB,oBACLthB,KAAKihB,oBAAoBY,GAE5B,CAAS,QACR7hB,KAAK6gB,eAAe7gB,KAAK0B,aAAe/B,EAAMoF,cAC/C,CACF,CAKS,mBAAAmc,CAAoBX,GACF,IAAtBvgB,KAAK0gB,eACP1gB,KAAK0gB,aAAea,WAAWvhB,KAAK4gB,eAAgBL,GAEvD,CAES,iBAAAe,GACkB,IAAtBthB,KAAK0gB,eACPc,aAAaxhB,KAAK0gB,cAClB1gB,KAAK0gB,aAAe,EAEvB,CAES,cAAAE,CAAezc,GAAqB,GACvCA,IACHnE,KAAK0gB,aAAe,GAEtB1gB,KAAK6gB,eAAe7gB,KAAK0B,aAAe/B,EAAM4E,YAAc5E,EAAMgH,gBAClE,IACE,MAAMsb,EAAOrV,YAAYC,MACxB7M,KAAuBoG,WAAa6b,EAErC,MAAMP,EAAa1hB,KAAKqR,MAAM2F,OAC9B,IAAK,MAAMU,KAAWgK,EAAY,CAChC,MAAMC,EAAYD,EAAWhK,GACiB,IAAzCiK,EAAUhgB,MAAQhC,EAAM4E,cAC3Bod,EAAU7a,eAAe,EAE5B,CAGD,GADA9G,KAAKshB,oBAC0C,IAA1CthB,KAAK0B,YAAc/B,EAAMmC,aAAoB,CAChD,IAAI+f,EAAe7hB,KAAKugB,YACpBpc,IACF0d,EAAe1L,KAAK2L,IAAI3Q,EAAiB2P,mBAAoBe,IAE/D7hB,KAAKihB,oBAAoBY,EAC1B,MAAqD,IAA1C7hB,KAAK0B,YAAc/B,EAAM4E,eACnCvE,KAAKqhB,oBACLrhB,KAAKkhB,oBAAoB/P,EAAiB+Q,oBAE7C,CAAS,QACRliB,KAAK6gB,eAAe7gB,KAAK0B,aAAe/B,EAAMgH,eAC/C,CACF,CAED,cAAIwb,GACF,OAAO,CACR,CAED,KAAAC,GACE,MAAMV,EAAa1hB,KAAKqR,MAAM2F,OAC9B,IAAK,MAAMU,KAAWgK,EAAY,CACdA,EAAWhK,GACnB3U,cAAc/C,KAAKmiB,WAC9B,CACF,CAED,OAAAE,GACEriB,KAAKohB,eACLphB,KAAKugB,YAAcpP,EAAiBqP,cACrC,GAtMA8B,EAAA,CAAAxL,EAAS,CACR,SAAA9C,CAAU2N,GACR3hB,KAAKuR,MAAMzO,cAAc6e,EAAWA,EAAUhgB,MAAQhC,EAAMkC,YAAY,EACzE,EACD,eAAAoS,CAAgB0N,GACd3hB,KAAKuR,MAAM5Q,cAAc,wBAAyBghB,EAAW3hB,KAAKuR,MACnE,EACD,cAAA6C,CAAeuN,GACb3hB,KAAKuR,MAAM5Q,cAAc,uBAAwBghB,EAAW3hB,KAAKuR,MAClE,EACD,eAAA+C,CAAgBqN,GACd3hB,KAAKuR,MAAM5Q,cAAc,wBAAyBghB,EAAW3hB,KAAKuR,MACnE,EACD,cAAAkD,CAAekN,GACb3hB,KAAKuR,MAAM5Q,cAAc,uBAAwBghB,EAAW3hB,KAAKuR,MAClE,KAyLFgR,EAAA,CAAAC,EAAAA,aAAa,CACZC,UAAW,mBACXzkB,OAA4B,oBAAb0kB,SAA2BA,SAAW,KACrD,MAAAC,CAAOC,GAC4B,YAA7BF,SAASG,gBACX7iB,KAAKuR,MAAM6Q,QAEXpiB,KAAKuR,MAAM8Q,SAEd,KAhMHllB,EAAS,KAAA,KAAAmlB,EAAA,CAAAxkB,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAtB,MAAArS,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAtB,MAA8B/R,CAAAA,IAAA8gB,EAAAlgB,GAkMvC/C,EAAS,KAAA,KAAAolB,EAAA,CAAAzkB,KAAA,QAAAO,KAAA,mBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,qBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0N,iBAAArhB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0N,iBAAsC/gB,CAAAA,IAAAghB,EAAApgB,GAGxCN,EAAA4gB,eAAyB,EAEzB5gB,EAAAmiB,eAAyB,IAEzBniB,EAAAuhB,mBAA6B,GAE7BvhB,EAAAkhB,mBAA6B,GAE7BlhB,EAAAoiB,mBAA6B,EAE7BpiB,EAAAsiB,mBAA6B,IA/OT,EAAA,GCAvB,MAAgBY,UAAuB3C,EAAAA,QAQjC,OAAA4C,CAAQhlB,EAAawU,EAA8BC,GAC3DxS,KAAKW,cAAc,mBAAoB5C,EAAKwU,EAAUC,EAAUxS,KACjE,CAES,KAAAgjB,CAAMjlB,EAAawU,EAA8BC,GAE1D,CAES,MAAAyQ,CAAOllB,EAAawU,EAA8BC,GAC1DxS,KAAKW,cAAc,kBAAmB5C,EAAKwU,EAAUC,EAAUxS,KAChE,CAIS,SAAAkjB,GACRljB,KAAKW,cAAc,mBAAoBX,KACxC,CAES,OAAAmjB,GAET,CAES,QAAAC,GACRpjB,KAAKW,cAAc,kBAAmBX,KACvC,CAID,aAAgBwP,GACd,IAAI7K,EAAiC0e,EAAkBC,QAIvD,OAHgB,OAAZ3e,IACFA,EAAU,IAAI4e,GAET5e,CACR,EAIU0e,IAAAA,EAAiB,4BAAjB,OAAAzjB,EAAA,MAAAyjB,UAA0BP,EACrC,WAAAhjB,CAAY0jB,GACVzjB,QAIOC,KAAAwjB,iBAAqBpkB,EAAAY,KAAAE,GAoErBF,KAAAyjB,aAAkCrkB,EAAAY,KAAA0jB,OAAA,GAvEzC1jB,KAAKwjB,YAAcA,CACpB,CAIQ,GAAAzkB,CAAIhB,GACX,MAAMuB,EAAQU,KAAKwjB,YAAYG,QAAQ5lB,GACvC,OAAiB,OAAVuB,EAAiBA,OAAa,CACtC,CAIQ,GAAAN,CAAIjB,EAAyLwU,GACpM,GAAmB,iBAARxU,EAET,OADAoiB,EAAAA,QAAQliB,UAAUe,IAAIS,KAAKO,KAAMjC,EAAKwU,GAC/BvS,KAET,IAAIwS,EAAsCxS,KAAKwjB,YAAYG,QAAQ5lB,GAInE,OAHiB,OAAbyU,IACFA,OAAgB,GAEdD,IAAaC,IAGjBxS,KAAK+iB,QAAQhlB,EAAKwU,EAAgCC,YAC9CD,EACFvS,KAAKwjB,YAAYI,QAAQ7lB,EAAKwU,GAE9BvS,KAAKwjB,YAAYK,WAAW9lB,GAE9BiC,KAAKgjB,MAAMjlB,EAAKwU,EAAgCC,GAChDxS,KAAKijB,OAAOllB,EAAKwU,EAAgCC,IATxCA,CAWV,CAEQ,KAAAsR,GACP9jB,KAAKkjB,YACLljB,KAAKwjB,YAAYM,QACjB9jB,KAAKmjB,UACLnjB,KAAKojB,UACN,CAoCD,YAAOE,GACL,YAAItjB,KAAK+jB,MACP,IACE/jB,KAAK+jB,MAAQ,IAAIV,EAAkBW,OAAOC,aAC3C,CAAC,MAAOC,GACPlkB,KAAK+jB,MAAQ,IACd,CAEH,OAAO/jB,KAAK+jB,KACb,CAKD,cAAOI,GACL,YAAInkB,KAAKokB,QACP,IACEpkB,KAAKokB,QAAU,IAAIf,EAAkBW,OAAOK,eAC7C,CAAC,MAAOH,GACPlkB,KAAKokB,QAAU,IAChB,CAEH,OAAOpkB,KAAKokB,OACb,GAzDAE,EAAA,CAAA9B,EAAAA,aAAa,CACZC,UAAW,UACXzkB,OAA0B,oBAAXgmB,OAAyBA,OAAS,KACjD,MAAArB,CAAOC,GACL,GAAIA,EAAMY,cAAgBxjB,KAAKuR,MAAMiS,YACnC,OAEF,MAAMzlB,EAAM6kB,EAAM7kB,IAClB,GAAY,OAARA,EAIF,OAHAiC,KAAKuR,MAAM2R,YACXljB,KAAKuR,MAAM4R,eACXnjB,KAAKuR,MAAM6R,WAGb,IAAI7Q,EAAsCqQ,EAAMrQ,SAC/B,OAAbA,IACFA,OAAgB,GAElB,IAAIC,EAAsCoQ,EAAMpQ,SAC/B,OAAbA,IACFA,OAAgB,GAEdD,IAAaC,IACfxS,KAAKuR,MAAMwR,QAAQhlB,EAAKwU,EAAUC,GAClCxS,KAAKuR,MAAMyR,MAAMjlB,EAAKwU,EAAUC,GAChCxS,KAAKuR,MAAM0R,OAAOllB,EAAKwU,EAAUC,GAEpC,KAEHrV,EAAS,KAAA,KAAAmnB,EAAA,CAAAxmB,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA8Q,aAAAzkB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA8Q,aAAkCnkB,CAAAA,IAAAokB,EAAAxjB,GAGpCN,EAAKmkB,WAAAA,EAcLnkB,EAAOwkB,aAA8C,EAAAxkB,CA3FhC,EAAA,GA0GxB,MAAO2jB,UAAgCT,EAC3C,WAAAhjB,CAAY0jB,GACVzjB,iBACIyjB,IACFA,EAAc,CAAA,GAEhBxjB,KAAKwjB,YAAcA,CACpB,CAIQ,GAAAzkB,CAAIhB,GACX,OAAOiC,KAAKwjB,YAAYzlB,EACzB,CAIQ,GAAAiB,CAAIjB,EAA2MwU,GACtN,GAAmB,iBAARxU,EAET,OADAoiB,EAAAA,QAAQliB,UAAUe,IAAIS,KAAKO,KAAMjC,EAAKwU,GAC/BvS,KAET,MAAMwjB,EAAcxjB,KAAKwjB,YACnBhR,EAAWgR,EAAYzlB,GAC7B,OAAIwU,IAAaC,IAGjBxS,KAAK+iB,QAAQhlB,EAAKwU,EAAgCC,YAC9CD,EACFiR,EAAYzlB,GAAOwU,SAEZiR,EAAYzlB,GAErBiC,KAAKgjB,MAAMjlB,EAAKwU,EAAgCC,GAChDxS,KAAKijB,OAAOllB,EAAKwU,EAAgCC,IATxCA,CAWV,CAEQ,KAAAsR,GACP9jB,KAAKkjB,YACJljB,KAAuBwjB,YAAc,GACtCxjB,KAAKmjB,UACLnjB,KAAKojB,UACN,EC/LG,MAAOzR,UAAyBwO,EAAAA,QACpC,WAAArgB,GACEC,QACAC,KAAKukB,WAAa,EACnB,CAMD,UAAAC,CAAWzjB,GACT,OAAOf,KAAKukB,WAAWE,QAAQ1jB,IAAU,CAC1C,CAED,MAAA2jB,CAAO3jB,EAAc4jB,EAAmCC,GACtD,MAAML,EAAavkB,KAAKukB,WACxB,GAAIA,EAAWE,QAAQ1jB,IAAU,EAC/B,gBACS4jB,IACTA,EAAU,MAEI,OAAZA,GAAqBA,EAAQE,OAC/B7kB,KAAK8kB,aAAY,YAEfF,EACFA,EAAQL,EAAW/lB,QAEfomB,EAAQ,IACVA,EAAQL,EAAW/lB,OAAS,EAAIomB,GAElCA,EAAQzO,KAAKC,IAAID,KAAK2L,IAAI,EAAG8C,EAAOL,EAAW/lB,UAEjD,MAAMumB,EAAkBhkB,EAAMyH,SAASwc,GACvChlB,KAAKilB,WAAWlkB,EAAO6jB,EAAOD,GACN,OAApBI,GACFA,EAAgBE,WAAWN,GAE7BJ,EAAWW,OAAON,EAAO,EAAG7jB,GAC5Bf,KAAKmlB,SAASpkB,EAAO6jB,EAAOD,GACJ,OAApBI,IACFA,EAAgBI,SAASR,GACzBI,EAAgBK,UAAUT,IAE5B3kB,KAAKolB,UAAUrkB,EAAO6jB,EAAOD,EAC9B,CAES,UAAAM,CAAWlkB,EAAc6jB,EAAeD,GAChD3kB,KAAKW,cAAc,oBAAqBI,EAAO6jB,EAAOD,EAAS3kB,KAChE,CAES,QAAAmlB,CAASpkB,EAAc6jB,EAAeD,GAE/C,CAES,SAAAS,CAAUrkB,EAAc6jB,EAAeD,GAC/C3kB,KAAKW,cAAc,mBAAoBI,EAAO6jB,EAAOD,EAAS3kB,KAC/D,CAKD,QAAAqlB,CAAStkB,EAAcukB,GACrB,MAAMf,EAAavkB,KAAKukB,WAClBK,EAAQL,EAAWE,QAAQ1jB,GACjC,GAAI6jB,EAAQ,EACV,OAEF,MAAMG,EAAkBhkB,EAAMyH,SAASwc,GACvChlB,KAAKulB,aAAaxkB,GACM,OAApBgkB,GACFA,EAAgBQ,eAElBhB,EAAWW,OAAON,EAAO,GACzB5kB,KAAKwlB,WAAWzkB,GACQ,OAApBgkB,IACFA,EAAgBS,aAChBT,EAAgBU,eAElBzlB,KAAKylB,YAAY1kB,IACA,IAAbukB,GAA2C,IAAtBf,EAAW/lB,QAClCwB,KAAK0lB,gBAER,CAES,YAAAH,CAAaxkB,GACrBf,KAAKW,cAAc,sBAAuBI,EAAOf,KAClD,CAES,UAAAwlB,CAAWzkB,GAEpB,CAES,WAAA0kB,CAAY1kB,GACpBf,KAAKW,cAAc,qBAAsBI,EAAOf,KACjD,CAKD,WAAA8kB,CAAYQ,GACV,MAAMf,EAAavkB,KAAKukB,WACxB,GAA0B,IAAtBA,EAAW/lB,OAAf,CAGA,KAA6B,IAAtB+lB,EAAW/lB,QAChBwB,KAAKqlB,SAASd,EAAW,IAAK,IAEf,IAAbe,GACFtlB,KAAK0lB,gBALN,CAOF,CAES,cAAAA,GACR1lB,KAAKW,cAAc,wBAAyBX,KAC7C,CAED,MAAA2lB,CAAO5kB,EAAc4jB,EAAmCC,GACtD,MAAML,EAAavkB,KAAKukB,WAClBqB,EAAgBrB,EAAWE,QAAQ1jB,GACzC,GAAI6kB,EAAgB,EAAG,UACjBjB,IACFA,EAAU,MAEI,OAAZA,GAAqBA,EAAQE,OAC/B7kB,KAAK8kB,aAAY,YAEfF,EACFA,EAAQL,EAAW/lB,QAEfomB,EAAQ,IACVA,EAAQL,EAAW/lB,OAAS,EAAIomB,GAElCA,EAAQzO,KAAKC,IAAID,KAAK2L,IAAI,EAAG8C,EAAOL,EAAW/lB,UAEjD,MAAMumB,EAAkBhkB,EAAMyH,SAASwc,GACvChlB,KAAKilB,WAAWlkB,EAAO6jB,EAAOD,GACN,OAApBI,GACFA,EAAgBE,WAAWN,GAE7BJ,EAAWW,OAAON,EAAO,EAAG7jB,GAC5Bf,KAAKmlB,SAASpkB,EAAO6jB,EAAOD,GACJ,OAApBI,IACFA,EAAgBI,SAASR,GACzBI,EAAgBK,UAAUT,IAE5B3kB,KAAKolB,UAAUrkB,EAAO6jB,EAAOD,EAC9B,KAAM,CACL,MAAMI,EAAkBhkB,EAAMyH,SAASwc,GACvChlB,KAAKulB,aAAaxkB,GACM,OAApBgkB,GACFA,EAAgBQ,eAElBhB,EAAWW,OAAOU,EAAe,GACjC5lB,KAAKwlB,WAAWzkB,GACQ,OAApBgkB,IACFA,EAAgBS,aAChBT,EAAgBU,eAElBzlB,KAAKylB,YAAY1kB,GACS,IAAtBwjB,EAAW/lB,QACbwB,KAAK0lB,gBAER,CACF,ECxKUV,IAAAA,EAAe,4BAAf,OAAAplB,EAAA,cAAwB+I,EACnC,WAAA7I,GACEC,QAMOC,KAAA6lB,cAAkBzmB,EAAAY,KAAAE,GAmElBF,KAAA+O,UAA6C3P,EAAAY,KAAA8lB,OAAA,GAxEpD9lB,KAAK6lB,UAAW,CACjB,CAMD,MAAAnB,CAAOC,GACD3kB,KAAK6lB,WAGR7lB,KAAuB6lB,UAAW,EAC9B7lB,KAAKyE,SAGVzE,KAAK+O,UAAUD,aAAa4V,OAAO1kB,KAAKe,MAAQ4jB,GACjD,CAGD,UAAAM,CAAWN,GACT3kB,KAAKW,cAAc,kBAAmBgkB,EAAS3kB,KAChD,CAGD,QAAAmlB,CAASR,GACN3kB,KAAuB6lB,UAAW,CACpC,CAGD,SAAAT,CAAUT,GACR3kB,KAAKW,cAAc,iBAAkBgkB,EAAS3kB,KAC/C,CAED,QAAAqlB,GACOrlB,KAAK6lB,WAGT7lB,KAAuB6lB,UAAW,EAC9B7lB,KAAKyE,SAGVzE,KAAK+O,UAAUD,aAAauW,SAASrlB,KAAKe,OAC3C,CAGD,YAAAwkB,GACEvlB,KAAKW,cAAc,oBAAqBX,KACzC,CAGD,UAAAwlB,GACGxlB,KAAuB6lB,UAAW,CACpC,CAGD,WAAAJ,GACEzlB,KAAKW,cAAc,mBAAoBX,KACxC,CAED,WAAA8kB,GACE9kB,KAAK+O,UAAUD,aAAagW,aAC7B,CAED,MAAAa,CAAOhB,GACA3kB,KAAK6lB,SAGR7lB,KAAKqlB,WAFLrlB,KAAK0kB,OAAOC,EAIf,CAKkB,QAAA9hB,GACb7C,KAAK6lB,UACP7lB,KAAK+O,UAAUD,aAAa4V,OAAO1kB,KAAKe,OAE1ChB,MAAM8C,UACP,CAEkB,WAAAU,GACjBxD,MAAMwD,cACNvD,KAAK+O,UAAUD,aAAauW,SAASrlB,KAAKe,MAC3C,GAbAglB,EAAA,CAAA/W,EAAAA,SAAS,CAACkC,YAAaS,KACxBxU,EAAS,KAAA,KAAA4oB,EAAA,CAAAjoB,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAA5D,UAAA/P,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA5D,UAA6CzP,CAAAA,IAAAwmB,EAAA5lB,IA3E5B,EAAA,GCwDf,MAAA8lB,EAAW,CACtBpd,SAAoDtJ,GAC9CA,QACKA,EACmB,iBAAVA,GACA,UAAVA,GAA+B,WAAVA,GAAgC,WAAVA,GACjC,UAAVA,GAA+B,YAAVA,GAAkC,YAAVA,GAAiC,YAAVA,GAC1D,aAAVA,GAAkC,aAAVA,EAGzB2mB,SAAOrd,SAAStJ,GAFdA,EAKX,SAAA4mB,CAAU5mB,GACR,MAAM6mB,EAAS7mB,EAAM8mB,YAAY,MACjC,GAAe,OAAXD,EACF,OAAOH,EAASpd,SAASud,GAE3B,MAAM/iB,EAAO6iB,EAAAA,OAAOI,OAAOC,KAAKhnB,GAChC,YAAO8D,IAAAA,EAAkBA,EAAO,IACjC,GAUUmjB,EAAa,CACxB3d,SAAsDtJ,GAChDA,SAEwB,iBAAVA,GAAgC,WAAVA,EAD/BA,EAIF2mB,SAAOrd,SAAStJ,GAGzB,SAAA4mB,CAAU5mB,GACR,MAAM6mB,EAAS7mB,EAAM8mB,YAAY,MACjC,GAAe,OAAXD,EACF,OAAOI,EAAW3d,SAASud,GAE7B,MAAMK,EAASP,EAAAA,OAAOI,OAAOC,KAAKhnB,GAClC,YAAOknB,IAAAA,EAAoBA,EAAS,IACrC,GAkBUC,EAAa,CACxB,SAAAP,CAAU5mB,GACR,IAAIonB,EAA2C,KAc/C,OAbApnB,EAAMqnB,SAAQ,SAAUC,GACtB,IAAIT,EACES,aAAgB3W,mBAAWkW,EAASS,EAAKR,iBAAAA,MAGhC,OAAXM,EACFA,EAASP,EACkB,iBAAXO,EAChBA,EAAS,CAACA,EAAQP,GAElBO,EAAO7nB,KAAKsnB,GAEhB,IACOO,CACR,EAED,MAAAG,CAAOH,GACL,IAAII,GAAU,EACd,GAAsB,IAAlBJ,EAAOloB,OAAc,CACvBsoB,EAAUC,EAAAA,QAAQC,QAAQN,EAAOO,WAAW,IAC5C,IAAK,IAAI1oB,EAAI2oB,UAAQC,mBAAmBT,EAAQ,EAAG,GAAII,GAAWvoB,EAAImoB,EAAOloB,OAAQD,EAAI2oB,EAAAA,QAAQC,mBAAmBT,EAAQnoB,EAAG,GAAI,CACjI,MAAM6oB,EAAIV,EAAOO,WAAW1oB,GAC5BuoB,EAAUC,EAAAA,QAAQC,QAAQI,IAAY,KAANA,CACjC,CACF,CACD,GAAIN,EACF,OAAOJ,EAET,IAAIW,EAASN,UAAQO,eACrBD,EAASA,EAAOE,MAAM,IACtB,IAAK,IAAIhpB,EAAI,EAAGA,EAAImoB,EAAOloB,OAAQD,EAAI2oB,EAAAA,QAAQC,mBAAmBT,EAAQnoB,EAAG,GAAI,CAC/E,MAAM6oB,EAAIV,EAAOO,WAAW1oB,GAC5B,GAAU,KAAN6oB,GAA0B,KAANA,GAAyB,KAANA,EACzCC,EAASA,EAAOE,MAAM,IAAYA,MAAMH,QACnC,GAAIA,GAAK,GACdC,EAASA,EAAOE,MAAMH,OACjB,CACL,MAAMI,EAASC,EAAOC,OAAAA,UACtBL,EAASA,EAAOE,MAAM,IAAYA,MAAMC,EAAOG,YAAYP,IAAM,GAAK,KACpCG,MAAMC,EAAOG,YAAYP,IAAM,GAAK,KACpCG,MAAMC,EAAOG,YAAYP,IAAM,GAAK,KACpCG,MAAMC,EAAOG,YAAYP,IAAO,EAAI,KACpCG,MAAMC,EAAOG,YAAYP,IAAO,EAAI,KACpCG,MAAMC,EAAOG,YAAuB,GAAXP,GAC5D,CACF,CAED,OADAC,EAASA,EAAOE,MAAM,IACfF,EAAOtS,UACf,GAOU6S,EAAW,CACtB,CAAC3K,OAAOC,aAAa2K,GACZA,aAAoBC,GACpBC,EAAS9K,OAAOC,aAAa2K,IAgB3BE,EAAW,CACtB,CAAC9K,OAAOC,aAAa2K,GACZ3Q,UAAQ8Q,WAAqBH,EAAU,WAKrCC,IAAAA,EAAI,uBAAJA,OAAAA,EAAAA,MAAAA,EACX,WAAAhoB,CAAYmoB,EAA8BC,EAC9BC,EAAgCC,EAChChlB,EAAuBojB,EACvBE,GACV1mB,KAAKioB,MAAQA,EACbjoB,KAAKkoB,QAAUA,EACfloB,KAAKmoB,OAASA,EACdnoB,KAAKooB,QAAUA,EACfpoB,KAAKoD,KAAOA,EACZpD,KAAKwmB,OAASA,EACdxmB,KAAK0mB,OAASA,EACd1mB,KAAKomB,iBAAmB,CACzB,CAMD,SAAAiC,CAAUJ,GACR,OAAIA,IAAUjoB,KAAKioB,MACVjoB,KAEF,IAAI8nB,EAAKG,EAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OAAQnoB,KAAKooB,QACvCpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC9C,CAID,WAAA4B,CAAYJ,GACV,OAAIA,IAAYloB,KAAKkoB,QACZloB,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOC,EAASloB,KAAKmoB,OAAQnoB,KAAKooB,QACvCpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC9C,CAID,UAAA6B,CAAWJ,GACT,OAAIA,IAAWnoB,KAAKmoB,OACXnoB,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOjoB,KAAKkoB,QAASC,EAAQnoB,KAAKooB,QACvCpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC9C,CAID,WAAA8B,CAAYJ,GACV,OAAIA,IAAYpoB,KAAKooB,QACZpoB,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OAAQC,EACvCpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC9C,CAID,QAAA+B,CAASrlB,GAEP,OADAA,EAAO4iB,EAASpd,SAASxF,GACrBslB,EAAOC,OAAAA,MAAMvlB,EAAMpD,KAAKoD,MACnBpD,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OAAQnoB,KAAKooB,QAC5ChlB,EAAyBpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC5D,CAID,UAAAkC,CAAWpC,GAET,OADAA,EAASD,EAAW3d,SAAS4d,GACzBkC,EAAOC,OAAAA,MAAMnC,EAAQxmB,KAAKwmB,QACrBxmB,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OAAQnoB,KAAKooB,QAC5CpoB,KAAKoD,KAAMojB,EAA6BxmB,KAAK0mB,OAC9D,CAID,UAAAmC,CAAWnC,GAIT,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEdgC,EAAOC,OAAAA,MAAMjC,EAAQ1mB,KAAK0mB,QACrB1mB,KAEF,IAAI8nB,EAAK9nB,KAAKioB,MAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OAAQnoB,KAAKooB,QAC5CpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQE,EACzC,CAED,MAAAqC,GACE,MAAO,CACLd,MAAOjoB,KAAKioB,MACZC,QAASloB,KAAKkoB,QACdC,OAAQnoB,KAAKmoB,OACbC,QAASpoB,KAAKooB,QACdhlB,KAAMpD,KAAKoD,KACXojB,OAAQxmB,KAAKwmB,OACbE,OAAS7O,MAAMiR,QAAQ9oB,KAAK0mB,QAAU1mB,KAAK0mB,OAAOsC,MAAM,GAAKhpB,KAAK0mB,OAErE,CAKD,aAAAuC,CAActM,GACZ,OAAIA,aAAgBmL,EACXoB,EAAiBlpB,KAAM2c,GAEzB,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBmL,IAClB9nB,KAAKioB,QAAUtL,EAAKsL,OAASjoB,KAAKkoB,UAAYvL,EAAKuL,SACnDloB,KAAKmoB,SAAWxL,EAAKwL,QAAUnoB,KAAKooB,UAAYzL,EAAKyL,SACrDM,EAAAA,OAAOW,WAAWrpB,KAAKoD,KAAMuZ,EAAKvZ,KAAMgmB,IACxCV,EAAAA,OAAOW,WAAWrpB,KAAKwmB,OAAQ7J,EAAK6J,OAAQ4C,IAC5CV,EAAOW,OAAAA,WAAWrpB,KAAK0mB,OAAQ/J,EAAK+J,OAAQ0C,GAGtD,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBmL,IAClB9nB,KAAKioB,QAAUtL,EAAKsL,OAASjoB,KAAKkoB,UAAYvL,EAAKuL,SACnDloB,KAAKmoB,SAAWxL,EAAKwL,QAAUnoB,KAAKooB,UAAYzL,EAAKyL,SACrDM,EAAOC,OAAAA,MAAM3oB,KAAKoD,KAAMuZ,EAAKvZ,OAC7BslB,SAAOC,MAAM3oB,KAAKwmB,OAAQ7J,EAAK6J,SAC/BkC,EAAAA,OAAOC,MAAM3oB,KAAK0mB,OAAQ/J,EAAK+J,QAGzC,CAGD,KAAA4C,CAASjC,GAEP,GADAA,EAASA,EAAOE,MAAM,QAAQA,MAAM,IAAWA,MAAM,UAAUA,MAAM,IAC1C,iBAAhBvnB,KAAK0mB,OACdW,EAASA,EAAOiC,MAAMtpB,KAAK0mB,aACtB,GAAI7O,MAAMiR,QAAQ9oB,KAAK0mB,SAAkC,IAAvB1mB,KAAK0mB,OAAOloB,OAAc,CACjE6oB,EAASA,EAAOiC,MAAMtpB,KAAK0mB,OAAO,IAClC,IAAK,IAAInoB,EAAI,EAAGA,EAAIyB,KAAK0mB,OAAOloB,OAAQD,GAAK,EAC3C8oB,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAK0mB,OAAOnoB,GAEjD,CAoBD,OAnBA8oB,EAASA,EAAOE,MAAM,aAClBvnB,KAAKioB,QACPZ,EAASA,EAAOE,MAAM,IAAWA,MAAM,SAASA,MAAM,IAAW+B,MAAMtpB,KAAKioB,OAAOV,MAAM,cAEvFvnB,KAAKkoB,UACPb,EAASA,EAAOE,MAAM,IAAWA,MAAM,WAAWA,MAAM,IAAW+B,MAAMtpB,KAAKkoB,SAASX,MAAM,cAE3FvnB,KAAKmoB,SACPd,EAASA,EAAOE,MAAM,IAAWA,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKmoB,QAAQZ,MAAM,cAEzFvnB,KAAKooB,UACPf,EAASA,EAAOE,MAAM,IAAWA,MAAM,WAAWA,MAAM,IAAW+B,MAAMtpB,KAAKooB,SAASb,MAAM,cAE3FvnB,KAAKoD,OACPikB,EAASA,EAAOE,MAAM,IAAWA,MAAM,QAAQA,MAAM,IAAW+B,MAAMtpB,KAAKoD,MAAMmkB,MAAM,cAErFvnB,KAAKwmB,SACPa,EAASA,EAAOE,MAAM,IAAWA,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKwmB,QAAQe,MAAM,KAEtFF,CACR,CAMD,QAAAtS,aACE,IAAIwU,EAAIvpB,KAAKomB,YACb,YAAImD,EAAc,CAiChB,GAhCAA,EAAI,QACoB,IAApBvpB,KAAKioB,OAAqC,WAAjBjoB,KAAKkoB,SAAwC,WAAhBloB,KAAKmoB,QAAwC,WAAjBnoB,KAAKooB,UACzFmB,GAAe,QAAV3pB,EAAAI,KAAKioB,aAAKroB,IAAAA,EAAAA,EAAI,mBAEjBI,KAAKkoB,SAAsC,WAAhBloB,KAAKmoB,QAAwC,WAAjBnoB,KAAKooB,UAC7C,IAAbmB,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAiB,QAAZC,EAAAxpB,KAAKkoB,eAAOsB,IAAAA,EAAAA,EAAI,eAEdrB,IAALnoB,KAAKmoB,QAAsC,WAAjBnoB,KAAKooB,UAChB,IAAbmB,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAgB,QAAXE,EAAAzpB,KAAKmoB,cAAMsB,IAAAA,EAAAA,EAAI,mBAElBzpB,KAAKooB,UACU,IAAbmB,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAKvpB,KAAKooB,SAEM,OAAdpoB,KAAKoD,OACU,IAAbmmB,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAKvpB,KAAKoD,KAAK2R,WACK,OAAhB/U,KAAKwmB,SACP+C,GAAK,IACLA,GAAKvpB,KAAKwmB,OAAOzR,aAGM,iBAAhB/U,KAAK0mB,OACG,IAAb6C,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAK9C,EAAWI,OAAO7mB,KAAK0mB,aACvB,GAAI7O,MAAMiR,QAAQ9oB,KAAK0mB,SAAkC,IAAvB1mB,KAAK0mB,OAAOloB,OAAc,CAChD,IAAb+qB,EAAE/qB,SACJ+qB,GAAK,KAEPA,GAAK9C,EAAWI,OAAO7mB,KAAK0mB,OAAO,IACnC,IAAK,IAAInoB,EAAI,EAAGA,EAAIyB,KAAK0mB,OAAOloB,OAAQD,GAAK,EAC3CgrB,GAAK,KACLA,GAAK9C,EAAWI,OAAO7mB,KAAK0mB,OAAOnoB,GAEtC,CACAyB,KAAuBomB,YAAcmD,CACvC,CACD,OAAOA,CACR,CAED,YAAAtB,CAAaA,EAA8BvB,GAIzC,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,EAAKG,OAAAA,cAA4B,EAAG,KAAM,KAAMvB,EAC5D,CAED,cAAAwB,CAAeA,EAAkCxB,GAI/C,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,OAAU,EAAGI,cAAsB,EAAG,KAAM,KAAMxB,EAC9D,CAED,aAAAyB,CAAcA,EAAgCzB,GAI5C,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,OAAU,OAAA,EAAWK,OAAa,EAAG,KAAM,KAAMzB,EAC7D,CAED,cAAA0B,CAAeA,EAAkC1B,GAI/C,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,OAAU,OAAA,SAAmBM,EAAS,KAAM,KAAM1B,EAC9D,CAED,WAAAtjB,CAAYA,EAA2BsjB,GAKrC,OAJAtjB,EAAgB,OAATA,EAAgB4iB,EAASpd,SAASxF,GAAQ,KAC7CyU,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,OAAU,OAAA,cAAwB,EAAG1kB,EAAyB,KAAMsjB,EAChF,CAED,aAAAA,CAAcA,GAIZ,OAHI7O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,OAAU,OAAA,cAAwB,EAAG,KAAM,KAAMpB,EAC7D,CAED,aAAAlX,CAAcyY,EAA8BC,EAC9BC,EAAgCC,EAChChlB,EAAuCojB,EACvCE,GAMZ,OALAtjB,EAAOA,QAAmC4iB,EAASpd,SAASxF,GAAQ,KACpEojB,EAASA,QAAuCD,EAAW3d,SAAS4d,GAAU,KAC1E3O,MAAMiR,QAAQpC,IAA6B,IAAlBA,EAAOloB,SAClCkoB,EAASA,EAAO,IAEX,IAAIoB,EAAKG,EAAOC,EAASC,EAAQC,EAAShlB,EACjCojB,EAA6BE,EAC9C,CAED,eAAA9d,CAAuDtJ,GACrD,GAAIA,SAAsCA,aAAiBwoB,EACzD,OAAOxoB,EACF,GAAqB,iBAAVA,GAAgC,OAAVA,EACtC,OAAOwoB,EAAK4B,SAASpqB,GAChB,GAAqB,iBAAVA,EAChB,OAAOwoB,EAAK6B,MAAMrqB,GAEpB,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBzqB,GACd,OAAO6oB,EAAKtY,OAAOvQ,EAAKgpB,MAAOhpB,EAAKipB,QAASjpB,EAAKkpB,OAAQlpB,EAAKmpB,QAC5CnpB,EAAKmE,KAAMnE,EAAKunB,OAAQvnB,EAAKynB,OACjD,CAED,gBAAAR,CAAiB5mB,GACf,MAAMsqB,EAAStqB,EAAMsqB,OAAO,QAC5B,IAAKA,EAAO/Y,YACV,OAAO,KAET,MAAMoX,EAAQ2B,EAAO7qB,IAAI,SAASqnB,iBAAiB,GAC7C8B,EAAU0B,EAAO7qB,IAAI,WAAWqnB,iBAAiB,GACjD+B,EAASyB,EAAO7qB,IAAI,UAAUqnB,iBAAiB,GAC/CgC,EAAUwB,EAAO7qB,IAAI,WAAWqnB,iBAAiB,GACjDhjB,EAAO4iB,EAASE,UAAU0D,EAAO7qB,IAAI,SACrCynB,EAASD,EAAWL,UAAU0D,EAAO7qB,IAAI,WACzC2nB,EAASD,EAAWP,UAAU0D,EAAO7qB,IAAI,WAC/C,OAAe,OAAX2nB,EACK,KAEFoB,EAAKtY,OAAOyY,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EACnE,CAED,YAAAiD,CAAaxD,GACX,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASC,EAAWT,MAAME,GAC9B,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAGD,WAAO8f,GACL,OAAO,IAAIsE,OAAc,EAC1B,GAHAC,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAirB,EAAA,CAAA/sB,KAAA,SAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAO0T,OAEN,KAAAyE,GAxVU1rB,EAAIQ,EAAAkrB,IAAA,EAAA,GAoXJ,MAAA5B,EAAmB,SAAW6B,GACzC,MAAM7B,EAAmB,SAAU8B,EAAUC,GAC3C,MAAMC,EAAe,SAAUC,GAC7B,MAAMlD,EAAQiD,EAAaE,kBAAkBD,GACvCjD,EAAUgD,EAAaG,oBAAoBF,GAC3ChD,EAAS+C,EAAaI,mBAAmBH,GACzC/C,EAAU8C,EAAaK,oBAAoBJ,GAC3C/nB,EAAO8nB,EAAaM,iBAAiBL,GACrC3E,EAAS0E,EAAaO,mBAAmBN,GACzCzE,EAASwE,EAAaQ,mBAAmBP,GAC/C,OAAO,IAAIrD,EAAKG,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EACjE,EASA,OARAvoB,OAAOwtB,eAAeT,EAAchC,EAAiBjrB,WACpDitB,EAA8CE,kBAAoBQ,eAAaZ,EAAG/C,MAAOgD,EAAGhD,OAC5FiD,EAA8CG,oBAAsBO,eAAaZ,EAAG9C,QAAS+C,EAAG/C,SAChGgD,EAA8CI,mBAAqBM,eAAaZ,EAAG7C,OAAQ8C,EAAG9C,QAC9F+C,EAA8CK,oBAAsBK,eAAaZ,EAAG5C,QAAS6C,EAAG7C,SAChG8C,EAA8CM,iBAAmBI,eAAaZ,EAAG5nB,KAAM6nB,EAAG7nB,MAC1F8nB,EAA8CO,mBAAqBG,eAAaZ,EAAGxE,OAAQyE,EAAGzE,QAC9F0E,EAA8CQ,mBAAqBE,eAAaZ,EAAGtE,OAAQuE,EAAGvE,QACxFwE,CACT,EAqDA,OA9CAhC,EAAiBjrB,UAAYE,OAAOqR,OAAOub,EAAO9sB,WAClDirB,EAAiBjrB,UAAU6B,YAAcopB,EAEzC/qB,OAAOgB,eAAe+pB,EAAiBjrB,UAAW,EAAG,CACnD,GAAAc,GACE,MAAMkpB,EAAQjoB,KAAKorB,kBAAkB,GAC/BlD,EAAUloB,KAAKqrB,oBAAoB,GACnClD,EAASnoB,KAAKsrB,mBAAmB,GACjClD,EAAUpoB,KAAKurB,oBAAoB,GACnCnoB,EAAOpD,KAAKwrB,iBAAiB,GAC7BhF,EAASxmB,KAAKyrB,mBAAmB,GACjC/E,EAAS1mB,KAAK0rB,mBAAmB,GACvC,OAAO,IAAI5D,EAAKG,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EAChE,EACD9M,cAAc,IAGhBzb,OAAOgB,eAAe+pB,EAAiBjrB,UAAW,EAAG,CACnD,GAAAc,GACE,MAAMkpB,EAAQjoB,KAAKorB,kBAAkB,GAC/BlD,EAAUloB,KAAKqrB,oBAAoB,GACnClD,EAASnoB,KAAKsrB,mBAAmB,GACjClD,EAAUpoB,KAAKurB,oBAAoB,GACnCnoB,EAAOpD,KAAKwrB,iBAAiB,GAC7BhF,EAASxmB,KAAKyrB,mBAAmB,GACjC/E,EAAS1mB,KAAK0rB,mBAAmB,GACvC,OAAO,IAAI5D,EAAKG,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EAChE,EACD9M,cAAc,IAGhBsP,EAAiBjrB,UAAUye,OAAS,SAAUC,GAC5C,OAAI3c,OAAS2c,GAEFA,aAAgBuM,IAClBlpB,KAAKorB,kBAAkB1O,OAAOC,EAAKyO,oBACnCprB,KAAKqrB,oBAAoB3O,OAAOC,EAAK0O,sBACrCrrB,KAAKsrB,mBAAmB5O,OAAOC,EAAK2O,qBACpCtrB,KAAKurB,oBAAoB7O,OAAOC,EAAK4O,sBACrCvrB,KAAKwrB,iBAAiB9O,OAAOC,EAAK6O,mBAClCxrB,KAAKyrB,mBAAmB/O,OAAOC,EAAK8O,qBACpCzrB,KAAK0rB,mBAAmBhP,OAAOC,EAAK+O,oBAG/C,EAEOxC,CACR,CA3E+B,CA2E7B0C,gBAGG,MAAOjB,UAAiBkB,EAAAA,KAC5B,WAAA/rB,CAAYgsB,GACV/rB,QACA5B,OAAOgB,eAAea,KAAM,OAAQ,CAClCV,MAAOwsB,EACPnS,YAAY,EACZC,cAAc,GAEjB,CAIQ,QAAAmS,CAASD,GAChB,OAAIA,IAAS9rB,KAAK8rB,KACT9rB,KAEF,IAAI2qB,EAASmB,EACrB,CAEQ,IAAAE,CAAKC,GACZA,EAAOnE,EAAKlf,SAASqjB,GACrB,MAAMrC,EAASsC,EAAAA,OAAO1c,OAAO,GAuB7B,YAtBIyc,EAAKhE,OACP2B,EAAOuC,KAAK,QAASF,EAAKhE,gBAExBgE,EAAK/D,SACP0B,EAAOuC,KAAK,UAAWF,EAAK/D,kBAE1B+D,EAAK9D,QACPyB,EAAOuC,KAAK,SAAUF,EAAK9D,iBAEzB8D,EAAK7D,SACPwB,EAAOuC,KAAK,UAAWF,EAAK7D,SAE1B6D,EAAK7oB,gBAAgB6iB,SACvB2D,EAAOuC,KAAK,OAAQlG,SAAOI,OAAO2F,KAAKC,EAAK7oB,YAC9BA,IAAL6oB,EAAK7oB,MACdwmB,EAAOuC,KAAK,OAAQF,EAAK7oB,MAEvB6oB,EAAKzF,kBAAkBP,SACzB2D,EAAOuC,KAAK,SAAUlG,SAAOI,OAAO2F,KAAKC,EAAKzF,cAChCA,IAALyF,EAAKzF,QACdoD,EAAOuC,KAAK,SAAUF,EAAKzF,QAEzB3O,MAAMiR,QAAQmD,EAAKvF,QAAS,CAC9B,MAAMA,EAASwF,EAAAA,OAAO1c,OAAOyc,EAAKvF,OAAOloB,QACzC,IAAK,IAAID,EAAI,EAAGA,EAAI0tB,EAAKvF,OAAOloB,OAAQD,GAAK,EAC3CmoB,EAAO7nB,KAAKotB,EAAKvF,OAAOnoB,IAE1BqrB,EAAOuC,KAAK,SAAUzF,EACvB,MACCkD,EAAOuC,KAAK,SAAUF,EAAKvF,QAE7B,OAAOwF,EAAAA,OAAOE,GAAGC,EAAKD,KAAAA,GAAG,OAAQxC,GAClC,CAEQ,IAAAtD,CAAKM,GACZ,MAAMtnB,EAAQsnB,EAAK0F,UACnB,IAAIL,EAAoB,KACxB,IAEE,GADAA,EAAOnE,EAAK5B,UAAU5mB,GACT,OAAT2sB,EAAe,CACjB,MAAM9F,EAAS7mB,EAAM8mB,uBACjBD,IACF8F,EAAOnE,EAAK6B,MAAMxD,GAErB,CACF,CAAC,MAAOjC,GAER,CACD,OAAgB,OAAT+H,EAAgBA,OAAY,CACpC,EAIG,MAAOM,UAAyBhC,EAAAA,OAMpC,WAAAzqB,CAAYunB,EAAyBmF,EAAgBC,EAAevC,GAClEnqB,QACAC,KAAKqnB,OAASA,EACdrnB,KAAKwsB,MAAQA,EACbxsB,KAAKysB,KAAOA,EACZzsB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO0C,EAAiB5C,MAAME,EAAO7pB,KAAKqnB,OAAQrnB,KAAKwsB,MAAOxsB,KAAKysB,KAAMzsB,KAAKkqB,KAC/E,CAED,YAAAP,CAAmBE,EAAcxC,EAAyBmF,EAAgB,EACvDC,EAAe,EAAGvC,EAAe,GAClD,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SACR,GAAIhD,EAAQC,QAAAA,QAAQI,IAAY,KAANA,EACxBC,EAASA,GAAUN,UAAQO,eAC3B4C,EAAO,MACF,IAAU,KAAN9C,IAAyB,KAANA,GAAqBoF,IAAUpF,GAAe,IAAVoF,GAMhE,OAAOjC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,cAAe/C,IALvDA,EAAQA,EAAMK,OACd7C,EAASA,GAAUN,UAAQO,eAC3BkF,EAAQpF,EACR8C,EAAO,CAGR,MACI,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,cAAe/C,GAE1D,CACD,GAAa,IAATK,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAQC,QAAAA,QAAQI,IAAY,KAANA,IAChEyC,EAAQA,EAAMK,OACd7C,EAAQE,MAAMH,GAEhB,IAAKyC,EAAMgD,UACT,OAAOtC,EAAAA,OAAOjsB,KAAK+oB,EAAQ9gB,OAE9B,CACD4f,EAAQ,OAAG,CACT,GAAa,IAAT+D,EAAY,CACd,KAAOL,EAAME,WACX3C,EAAIyC,EAAMI,OACN7C,GAAK,IAAQA,IAAMoF,GAAe,KAANpF,IAC9ByC,EAAQA,EAAMK,OACd7C,EAAQE,MAAMH,GAKlB,GAAIyC,EAAME,SAAU,CAClB,GAAI3C,IAAMoF,EAER,OADA3C,EAAQA,EAAMK,OACPK,EAAAA,OAAOjsB,KAAK+oB,EAAQ9gB,QACtB,GAAU,KAAN6gB,EAIT,OAAOmD,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAASJ,EAAO3C,IAH/CA,EAAQA,EAAMK,OACdA,EAAO,CAIV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAASJ,EAAO3C,GAElD,CACD,GAAa,IAATK,EACF,GAAIL,EAAME,SAAU,CAElB,GADA3C,EAAIyC,EAAMI,QACNxC,EAAAA,OAAOqF,QAAQ1F,GAEZ,IAAU,KAANA,EAAkB,CAC3ByC,EAAMK,OACNA,EAAO,EACP,QACD,CACCL,EAAMK,OACN7C,EAAQE,MAAMH,GACd8C,EAAO,EACP,QACD,CAVCA,EAAO,CAWV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,mBAAoB/C,IAGhE,GAAIK,GAAQ,EACV,OAAG,CACD,GAAIL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQxC,SAAOqF,QAAQ1F,IAAK,CAG3D,GAFAyC,EAAQA,EAAMK,OACduC,EAAO,GAAKA,EAAOhF,EAAAA,OAAOsF,YAAY3F,GAClC8C,GAAQ,GAAI,CACdA,GAAQ,EACR,QACD,CACC,GAAa,IAATuC,EACF,OAAOlC,EAAAA,OAAOC,MAAMC,EAAW3V,WAAAA,QAAQ,cAAe+U,IAExDxC,EAAQE,MAAMkF,GACdA,EAAO,EACPvC,EAAO,EACP,SAAS/D,CAEZ,CAAM,IAAK0D,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAE5C,KACO,CAEX,KACO,CACT,OAAO,IAAI0C,EAAiBlF,EAAQmF,EAAOC,EAAMvC,EAClD,EAIG,MAAOE,UAAmBG,EAAAA,OAa9B,WAAAzqB,CAAYmoB,EAAmBC,EAAuBC,EAC1CC,EAAuBhlB,EAAiBojB,EACxCE,EAAoCsG,EACpCC,EAA+BC,EAC/BhD,GACVnqB,QACAC,KAAKioB,MAAQA,EACbjoB,KAAKkoB,QAAUA,EACfloB,KAAKmoB,OAASA,EACdnoB,KAAKooB,QAAUA,EACfpoB,KAAKoD,KAAOA,EACZpD,KAAKwmB,OAASA,EACdxmB,KAAK0mB,OAASA,EACd1mB,KAAKgtB,YAAcA,EACnBhtB,KAAKitB,aAAeA,EACpBjtB,KAAKktB,aAAeA,EACpBltB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOO,EAAWT,MAAME,EAAO7pB,KAAKioB,MAAOjoB,KAAKkoB,QAASloB,KAAKmoB,OACtCnoB,KAAKooB,QAASpoB,KAAKoD,KAAMpD,KAAKwmB,OAAQxmB,KAAK0mB,OAC3C1mB,KAAKgtB,YAAahtB,KAAKitB,aACvBjtB,KAAKktB,aAAcltB,KAAKkqB,KACjD,CAED,YAAAP,CAAaE,EAAc5B,EAAmBC,EACjCC,EAAqBC,EAAuBhlB,EAC5CojB,EAAqBE,EACrBsG,EAA8BC,EAC9BC,EAAmChD,EAAe,GAC7D,IAAI9C,EAAI,EACR,OAAG,CACD,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADEnD,EAAAA,QAAQC,QAAQI,GACX,EACQ,KAANA,GAAyB,KAANA,EACrB,GAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CAEd,IADA8C,EAAcA,GAAejG,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAQC,QAAAA,QAAQI,IAAY,KAANA,IAChEyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAE1B,OADAymB,OAAmB,EACXG,GACN,IAAK,SACL,IAAK,UACH,YAAIlF,EAGF,OAAOsC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,yBAA2BqY,EAAOtD,IAFzE5B,EAAQkF,EAIVjD,EAAO,EACP,MACF,IAAK,aACH,YAAIhC,EAGF,OAAOqC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,2BAA6BqY,EAAOtD,IAF3E3B,EAAUiF,EAIZjD,EAAO,EACP,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACH,YAAI/B,EAGF,OAAOoC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,0BAA4BqY,EAAOtD,IAF1E1B,EAASgF,EAIXjD,EAAO,EACP,MACF,IAAK,kBACL,IAAK,kBACL,IAAK,iBACL,IAAK,YACL,IAAK,WACL,IAAK,gBACL,IAAK,iBACL,IAAK,iBACH,YAAI9B,EAGF,OAAOmC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,2BAA6BqY,EAAOtD,IAF3EzB,EAAU+E,EAIZjD,EAAO,EACP,MACF,IAAK,SACH,YAAIjC,EACFA,EAAQkF,OACH,YAAIjF,EACTA,EAAUiF,OACL,YAAIhF,EACTA,EAASgF,MACJ,aAAI/E,EAGT,OAAOmC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,4BAA8BqY,EAAOtD,IAF5EzB,EAAU+E,CAGX,CACDjD,EAAO,EACP,MACF,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACL,IAAK,WACH9mB,EAAO+pB,EACPjD,EAAO,EACP,MACF,QACExD,EAASyG,EACTjD,EAAO,GAEZ,CACF,CACD,GAAa,IAATA,EAAY,CACd,GAAIL,EAAME,SAAU,CAElB,GADA3C,EAAIyC,EAAMI,OACNlD,EAAAA,QAAQ4F,QAAQvF,GAAI,CACtByC,EAAMK,OACNA,EAAO,EACP,QACD,CACC,OAAOK,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,iCAAkC/C,GAE7E,CAAM,IAAKA,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAMF,IAJE+C,WADEA,EACaG,eAAazD,MAAME,GAEnBoD,EAAaP,KAAK7C,IAElBQ,SAAU,CACzB,MAAM7rB,EAASyuB,EAAa1mB,OAC5B,GAAqB,KAAjB/H,EAAO6uB,MAAc,CACvB,MAAM/tB,EAAQd,EAAOc,MACrB,OAAQA,GACN,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,YAAI6oB,EAGF,OAAOoC,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,0BAA4BxV,EAAOuqB,IAF1E1B,EAASmF,OAAOhuB,GAIlB,MACF,QACE,OAAOirB,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,0BAA4BxV,EAAOuqB,IAE9EK,EAAO,EACP,QACD,CACC9mB,EAAO5E,EACPyuB,OAAoB,EACpB/C,EAAO,CAEV,MAAM,GAAI+C,EAAa3C,UACtB,OAAO2C,EAAaM,UAGxB,GAAa,IAATrD,EACF,GAAIL,EAAME,SAER,GADA3C,EAAIyC,EAAMI,OACNlD,EAAAA,QAAQ4F,QAAQvF,GAClByC,EAAMK,OACNA,EAAO,MACF,IAAU,KAAN9C,EAIT,OAAOmD,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,cAAe/C,IAHvDA,EAAMK,OACNA,EAAO,CAGR,MACI,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SACE,KAAN3C,GACFyC,EAAMK,OACNA,EAAO,GAEPA,EAAO,QAEJ,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADEnD,EAAAA,QAAQC,QAAQI,GACX,EAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CAEd,IADA8C,EAAcA,GAAejG,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAE1B,GADAymB,OAAmB,EAEZ,WADCG,EAMJ,OAAO5C,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,wBAA0BqY,EAAOtD,IAJxErD,EAAS2G,EACTjD,EAAO,EAKZ,CACF,CACD,GAAa,IAATA,EAMF,IAJE+C,WADEA,EACaG,eAAazD,MAAME,GAEnBoD,EAAaP,KAAK7C,IAElBQ,SACf7D,EAASyG,EAAa1mB,OACtB0mB,OAAoB,EACpB/C,EAAO,QACF,GAAI+C,EAAa3C,UACtB,OAAO2C,EAAaM,UAGxB,GAAa,KAATrD,EACF,GAAIL,EAAME,SAAU,CAElB,GADA3C,EAAIyC,EAAMI,QACNlD,EAAAA,QAAQ4F,QAAQvF,GAIlB,OAAOmD,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,cAAe/C,IAHvDA,EAAMK,OACNA,EAAO,EAIV,MAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,KAATK,EAMF,IAJEgD,WADEA,EACaX,EAAiB5C,MAAME,GAEvBqD,EAAaR,KAAK7C,IAElBQ,SACXxS,MAAMiR,QAAQpC,GAChBA,EAAO7nB,KAAKquB,EAAa3mB,QAEzBmgB,WADSA,EACA,CAACA,EAASwG,EAAa3mB,QAEvB2mB,EAAa3mB,OAExB2mB,OAAoB,EACpBhD,EAAO,QACF,GAAIgD,EAAa5C,UACtB,OAAO4C,EAAaK,UAGxB,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,UAAkB,KAAN3C,EAAiB,CACrCyC,EAAMK,OACNA,EAAO,GACP,QACD,CAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOjsB,KAAKwpB,EAAKtY,OAAOyY,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,GAEjF,CACD,KACO,CACT,OAAO,IAAI0D,EAAWnC,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EAC/CsG,EAAaC,EAAcC,EAAchD,EAChE,CAED,gBAAAsD,CAAiB3D,EAAc5B,EAAmBC,EACjCC,EAAqBC,EAAuBhlB,EAC5CojB,EAAqBE,GACpC,MAAMwD,OAAuB,IAAhBxD,EAAoB,QAAKtjB,IAAAA,EAAkB,EAAI,EAC5D,OAAOgnB,EAAWT,MAAME,EAAO5B,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAC9CE,OAAAA,OAAqB,OAAA,EAAWwD,EACzD,ECzpCU,MAAAuD,EAAY,CACvB,CAACxQ,OAAOC,aAAa2K,GACZA,aAAoB6F,GACpBC,EAAU1Q,OAAOC,aAAa2K,IACV,iBAAbA,GAQL8F,EAAY,CACvB,CAAC1Q,OAAOC,aAAa2K,GACZ+F,EAAa3Q,OAAOC,aAAa2K,IACjCgG,EAAa5Q,OAAOC,aAAa2K,IAKtB6F,IAAAA,EAAK,uBAALA,OAAAA,EAAAA,MAAAA,EAoBpB,QAAAI,CAASC,GACP,OAAO/tB,KAAKguB,UAAY,IAAOhuB,KAAKiuB,QAAQF,GAAK/tB,KAAKkuB,OAAOH,EAC9D,CASD,aAAA9E,CAActM,GACZ,OAAIA,aAAgB+Q,EACXS,EAAqBnuB,KAAKouB,MAAOzR,EAAKyR,OAExC,IACR,CAuBD,kBAAOC,GACL,OAAOC,EAASD,aACjB,CAED,YAAAE,CAAaC,GACX,OAAOF,EAASC,MAAMC,EACvB,CAED,YAAAC,CAAaD,GACX,OAAOF,EAASG,MAAMD,EACvB,CAED,UAAOJ,CAAIM,EAAWC,EAAWtV,EAAWD,GAC1C,OAAO,IAAIkV,EAASI,EAAGC,EAAGtV,EAAGD,EAC9B,CAED,UAAOwV,CAAIC,EAActF,EAAWuF,EAAW1V,GAI7C,MAHiB,iBAANyV,IACTA,EAAIE,EAAAA,MAAMnmB,SAASimB,GAAGG,YAEjB,IAAIC,EAASJ,EAAGtF,EAAGuF,EAAG1V,EAC9B,CAED,cAAA8V,CAAe7wB,GACb,OAAQA,GACN,IAAK,cAAe,OAAOqvB,EAAMW,cACjC,IAAK,QAAS,OAAOX,EAAMa,QAC3B,IAAK,QAAS,OAAOb,EAAMe,QAC3B,QAAS,OAAO,KAEnB,CAED,eAAA7lB,CAAwDtJ,GACtD,OAAIA,SAAsCA,aAAiBouB,EAClDpuB,EACmB,iBAAVA,EACTouB,EAAM/D,MAAMrqB,GAEdouB,EAAMhE,SAASpqB,EACvB,CAED,eAAAoqB,CAAgBpqB,GACd,GAAIsuB,EAAa3Q,OAAOC,aAAa5d,GACnC,OAAOgvB,EAAS5E,SAASpqB,GACpB,GAAIuuB,EAAa5Q,OAAOC,aAAa5d,GAC1C,OAAO2vB,EAASvF,SAASpqB,GAE3B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,gBAAA4mB,CAAiB5mB,GACf,IAAI6vB,EAKJ,OAJAA,EAAQb,EAASpI,UAAU5mB,YACvB6vB,IACFA,EAAQF,EAAS/I,UAAU5mB,IAEtB6vB,CACR,CAED,YAAAxF,CAAaxD,GACX,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASiF,EAAYzF,MAAME,GAC/B,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAGD,WAAO8f,GACL,OAAO,IAAIgJ,EAAU3B,EAAMW,cAC5B,GAHAzD,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAirB,EAAA,CAAA/sB,KAAA,SAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAO0T,OAEN,KAAAyE,GA1ImB1rB,EAAKQ,EAAAkrB,GA6IlBlrB,EAAA0vB,OAAiB,GAEjB1vB,EAAA2vB,SAAmB,EAAI3vB,EAAK0vB,OAAAA,CA/IV,EAAA,GAmJrB,MAAOD,UAAkBxD,EAAAA,KAC7B,WAAA/rB,CAAYgsB,GACV/rB,QACA5B,OAAOgB,eAAea,KAAM,OAAQ,CAClCV,MAAOwsB,EACPnS,YAAY,EACZC,cAAc,GAEjB,CAIQ,QAAAmS,CAASD,GAChB,OAAIA,IAAS9rB,KAAK8rB,KACT9rB,KAEF,IAAIqvB,EAAUvD,EACtB,CAEQ,IAAAE,CAAKmD,GAEZ,OADAA,EAAQzB,EAAM9kB,SAASumB,GAChBK,EAAAA,KAAKC,KAAKN,EAAMpa,WACxB,CAEQ,IAAAuR,CAAKM,GACZ,MAAMtnB,EAAQsnB,EAAK0F,UACnB,IAAI6C,EAAsB,KAC1B,IAEE,GADAA,EAAQzB,EAAMxH,UAAU5mB,YACpB6vB,EAAkB,CACpB,MAAMhJ,EAAS7mB,EAAM8mB,iBAAiB,YAClCD,IACFgJ,EAAQzB,EAAM/D,MAAMxD,GAEvB,CACF,CAAC,MAAOjC,GAER,CACD,OAAiB,OAAViL,EAAiBA,OAAa,CACtC,EAIG,MAAOC,UAAoB7E,EAAAA,OAI/B,WAAAzqB,CAAYktB,EAA8B9C,GACxCnqB,QACAC,KAAKgtB,YAAcA,EACnBhtB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOuF,EAAYzF,MAAME,EAAO7pB,KAAKgtB,YAAahtB,KAAKkqB,KACxD,CAED,YAAOP,CAAME,EAAcmD,EAA8B9C,EAAe,GACtE,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EACF,GAAIL,EAAME,SAAU,CAClB,GAAqB,KAAjBF,EAAMI,OACR,OAAOyF,EAAe/F,MAAME,GAE5BK,EAAO,CAEV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CAEd,IADA8C,EAAcA,GAAejG,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAC1B,OAAQ4mB,GACN,IAAK,MACL,IAAK,OAAQ,OAAOwC,EAAenC,UAAU3D,GAC7C,IAAK,MACL,IAAK,OAAQ,OAAO+F,GAAepC,UAAU3D,GAC7C,QAAS,CACP,MAAMsF,EAAQzB,EAAMwB,QAAQ/B,GAC5B,OAAc,OAAVgC,EACK5E,SAAOjsB,KAAK6wB,GAEZ5E,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,kBAAoBqY,EAAOtD,GAErE,EAEJ,CACF,CACD,OAAO,IAAIuF,EAAYpC,EAAa9C,EACrC,EAIU2F,MAAAA,EACX,WAAA/vB,CAAYR,EAAe+tB,GACzBrtB,KAAKV,MAAQA,EACbU,KAAKqtB,WAAuB,IAAfA,EAAmBA,EAAQ,EACzC,CAMD,KAAAyC,CAAM/B,GACJ,MAAmB,MAAf/tB,KAAKqtB,MACArtB,KAAKV,MAAQyuB,EAAI,IAEjB/tB,KAAKV,KAEf,EAIG,MAAOywB,UAA2BxF,EAAAA,OAItC,WAAAzqB,CAAYkwB,EAA8B9F,GACxCnqB,QACAC,KAAKgwB,YAAcA,EACnBhwB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOkG,EAAmBpG,MAAME,EAAO7pB,KAAKgwB,YAAahwB,KAAKkqB,KAC/D,CAED,YAAOP,CAAME,EAAcmG,EAA8B9F,EAAe,GACtE,GAAa,IAATA,EAMF,IAJE8F,WADEA,EACYC,SAAOC,YAAYrG,GAEnBmG,EAAYtD,KAAK7C,IAEjBQ,SACdH,EAAO,OACF,GAAI8F,EAAY1F,UACrB,OAAO0F,EAAYzC,UAGvB,GAAa,IAATrD,EAAY,CACd,GAAIL,EAAME,UAA6B,KAAjBF,EAAMI,OAE1B,OADAJ,EAAQA,EAAMK,OACPK,EAAOjsB,OAAAA,KAAK,IAAIuxB,EAAaG,EAAazpB,OAAQ,MACpD,IAAKsjB,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOjsB,KAAK,IAAIuxB,EAAaG,EAAazpB,QAEpD,CACD,OAAO,IAAIwpB,EAAmBC,EAAa9F,EAC5C,ECxUU,MAAAiG,EAAe,CAC1B,CAAClT,OAAOC,aAAa2K,GACZA,aAAoByG,GACpBV,EAAa3Q,OAAOC,aAAa2K,IACb,iBAAbA,GAaL+F,EAAe,CAC1B,CAAC3Q,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAWH,EAAU,IAAK,IAAK,MAKrCyG,IAAAA,EAAQ,uBAAR,OAAA1uB,EAAA,MAAA0uB,UAAiBZ,EAC5B,WAAA5tB,CAAY4uB,EAAWC,EAAWtV,EAAWD,EAAY,GACvDrZ,QACAC,KAAK0uB,EAAIA,EACT1uB,KAAK2uB,EAAIA,EACT3uB,KAAKqZ,EAAIA,EACTrZ,KAAKoZ,EAAIA,EACTpZ,KAAKomB,iBAAmB,CACzB,CAIQ,SAAAvV,GACP,OAAOuf,SAASpwB,KAAK0uB,IAAM0B,SAASpwB,KAAK2uB,IAClCyB,SAASpwB,KAAKqZ,IAAM+W,SAASpwB,KAAKoZ,EAC1C,CAYQ,KAAAoV,CAAMpV,GACb,gBAAIA,EACKpZ,KAAKoZ,EACHpZ,KAAKoZ,IAAMA,EACbpZ,KAEF,IAAIsuB,EAAStuB,KAAK0uB,EAAG1uB,KAAK2uB,EAAG3uB,KAAKqZ,EAAGD,EAC7C,CAED,aAAa4U,GACX,MAAMU,EAAI1uB,KAAK0uB,EAAI,IACbC,EAAI3uB,KAAK2uB,EAAI,IACbtV,EAAIrZ,KAAKqZ,EAAI,IACbjD,EAAMD,KAAKC,IAAIsY,EAAGC,EAAGtV,GAE3B,OADYlD,KAAK2L,IAAI4M,EAAGC,EAAGtV,GACbjD,GAAO,CACtB,CAEQ,IAAAia,CAAK1T,GAEZ,OADAA,EAAO+Q,EAAM9kB,SAAS+T,GAAMyR,MACrB,IAAIE,EAAStuB,KAAK0uB,EAAK/R,EAAkB+R,EAAG1uB,KAAK2uB,EAAKhS,EAAkBgS,EAC3D3uB,KAAKqZ,EAAKsD,EAAkBtD,EAAGrZ,KAAKoZ,EAAKuD,EAAkBvD,EAChF,CAEQ,KAAAkX,CAAMC,GACb,OAAO,IAAIjC,EAAStuB,KAAK0uB,EAAI6B,EAAQvwB,KAAK2uB,EAAI4B,EAAQvwB,KAAKqZ,EAAIkX,EAAQvwB,KAAKoZ,EAAImX,EACjF,CAEQ,OAAAC,CAAQ7T,EAAiB4T,EAAiB,GAEjD,OADA5T,EAAO+Q,EAAM9kB,SAAS+T,GAAMyR,MACrB,IAAIE,EAAStuB,KAAK0uB,EAAK/R,EAAkB+R,EAAI6B,EAAQvwB,KAAK2uB,EAAKhS,EAAkBgS,EAAI4B,EACxEvwB,KAAKqZ,EAAKsD,EAAkBtD,EAAIkX,EAAQvwB,KAAKoZ,EAAKuD,EAAkBvD,EAAImX,EAC7F,CAEQ,OAAAtC,CAAQF,GAEf,OAAa,KADbA,WAAIA,EAAeL,EAAM6B,SAAWpZ,KAAKsa,IAAI/C,EAAM6B,SAAUxB,IAC5C,IAAIO,EAAStuB,KAAK0uB,EAAIX,EAAG/tB,KAAK2uB,EAAIZ,EAAG/tB,KAAKqZ,EAAI0U,EAAG/tB,KAAKoZ,GAAKpZ,IAC7E,CAEQ,MAAAkuB,CAAOH,GAEd,OAAa,KADbA,WAAIA,EAAeL,EAAM4B,OAASnZ,KAAKsa,IAAI/C,EAAM4B,OAAQvB,IACxC,IAAIO,EAAStuB,KAAK0uB,EAAIX,EAAG/tB,KAAK2uB,EAAIZ,EAAG/tB,KAAKqZ,EAAI0U,EAAG/tB,KAAKoZ,GAAKpZ,IAC7E,CAEQ,GAAAouB,GACP,OAAOpuB,IACR,CAEQ,GAAA4uB,GACP,MAAMF,EAAI1uB,KAAK0uB,EAAI,IACbC,EAAI3uB,KAAK2uB,EAAI,IACbtV,EAAIrZ,KAAKqZ,EAAI,IACbjD,EAAMD,KAAKC,IAAIsY,EAAGC,EAAGtV,GACrByI,EAAM3L,KAAK2L,IAAI4M,EAAGC,EAAGtV,GAC3B,IAAIwV,EAAI6B,IACJnH,EAAIzH,EAAM1L,EACd,MAAM0Y,GAAKhN,EAAM1L,GAAO,EAcxB,OAbU,IAANmT,GAEAsF,EADEH,IAAM5M,GACH6M,EAAItV,GAAKkQ,EAAe,IAAToF,EAAItV,GACfsV,IAAM7M,GACVzI,EAAIqV,GAAKnF,EAAI,GAEbmF,EAAIC,GAAKpF,EAAI,EAEpBA,GAAKuF,EAAI,GAAMhN,EAAM1L,EAAM,GAAK0L,EAAM1L,GACtCyY,GAAK,IAELtF,EAAIuF,EAAI,GAAKA,EAAI,EAAI,EAAID,EAEpB,IAAII,EAASJ,EAAGtF,EAAGuF,EAAG9uB,KAAKoZ,EACnC,CAKQ,aAAA6P,CAActM,GACrB,OAAIA,aAAgB2R,EACXH,EAAqBnuB,KAAM2c,GAE7B5c,MAAMkpB,cAActM,EAC5B,CAEQ,YAAAwM,CAAaxM,EAAeyM,GACnC,OAAIppB,OAAS2c,GAEFA,aAAgB+Q,IACzB/Q,EAAOA,EAAKyR,MACLuC,EAAAA,QAAQtH,WAAWrpB,KAAK0uB,EAAI/R,EAAkB+R,EAAGtF,IACjDuH,EAAQtH,QAAAA,WAAWrpB,KAAK2uB,EAAIhS,EAAkBgS,EAAGvF,IACjDuH,EAAAA,QAAQtH,WAAWrpB,KAAKqZ,EAAIsD,EAAkBtD,EAAG+P,IACjDuH,EAAAA,QAAQtH,WAAWrpB,KAAKoZ,EAAIuD,EAAkBvD,EAAGgQ,GAG3D,CAEQ,MAAA1M,CAAOC,GACd,OAAI3c,OAAS2c,GAEFA,aAAgB2R,IAClBtuB,KAAK0uB,IAAM/R,EAAK+R,GAAK1uB,KAAK2uB,IAAMhS,EAAKgS,GAAK3uB,KAAKqZ,IAAMsD,EAAKtD,GAAKrZ,KAAKoZ,IAAMuD,EAAKvD,EAGzF,CAEQ,QAAAwD,GACP,OAAOC,EAAAA,QAAQC,KAAKD,EAAAA,QAAQ+T,IAAI/T,EAAAA,QAAQ+T,IAAI/T,UAAQ+T,IAAI/T,EAAAA,QAAQ+T,IAAIC,EAAAA,aAAaC,KAAKxC,GAClFqC,EAAAA,QAAQG,KAAK9wB,KAAK0uB,IAAKiC,EAAQG,QAAAA,KAAK9wB,KAAK2uB,IAAKgC,EAAAA,QAAQG,KAAK9wB,KAAKqZ,IAAKsX,UAAQG,KAAK9wB,KAAKoZ,IAC5F,CAEQ,KAAAkQ,CAASjC,GAOhB,OANAA,EAASA,EAAOE,MAAM,SAASA,MAAM,IAAWA,MAAM,OAAOA,MAAM,IACnD+B,MAAMtpB,KAAK0uB,GAAGnH,MAAM,MAAM+B,MAAMtpB,KAAK2uB,GAAGpH,MAAM,MAAM+B,MAAMtpB,KAAKqZ,GAChE,IAAXrZ,KAAKoZ,IACPiO,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKoZ,IAEzCiO,EAASA,EAAOE,MAAM,GAEvB,CAEQ,WAAAwJ,GACP,MAAMrC,EAAIvY,KAAKC,IAAID,KAAK2L,IAAI,EAAG3L,KAAK6a,MAAMhxB,KAAK0uB,GAAK,IAAK,KACnDC,EAAIxY,KAAKC,IAAID,KAAK2L,IAAI,EAAG3L,KAAK6a,MAAMhxB,KAAK2uB,GAAK,IAAK,KACnDtV,EAAIlD,KAAKC,IAAID,KAAK2L,IAAI,EAAG3L,KAAK6a,MAAMhxB,KAAKqZ,GAAK,IAAK,KACzD,IAAIkQ,EAAI,IACR,MAAM0H,EAAiBxJ,EAAAA,OAAOyJ,UAAUC,SAOxC,OANA5H,GAAK0H,EAAeG,OAAO1C,IAAM,EAAI,IACrCnF,GAAK0H,EAAeG,OAAW,GAAJ1C,GAC3BnF,GAAK0H,EAAeG,OAAOzC,IAAM,EAAI,IACrCpF,GAAK0H,EAAeG,OAAW,GAAJzC,GAC3BpF,GAAK0H,EAAeG,OAAO/X,IAAM,EAAI,IACrCkQ,GAAK0H,EAAeG,OAAW,GAAJ/X,GACpBkQ,CACR,CAED,WAAA8H,GACE,IAAIjY,EAAIpZ,KAAKoZ,EACbA,EAAIkY,MAAMlY,GAAK,EAAIjD,KAAK2L,IAAI,EAAG3L,KAAKC,IAAIpW,KAAKoZ,EAAG,IAChD,IAAImQ,EAAU,IAANnQ,EAAU,MAAQ,OAY1B,OAXAmQ,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAID,KAAK6a,MAAMhxB,KAAK0uB,IAAM,EAAG,MACnDnF,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAID,KAAK6a,MAAMhxB,KAAK2uB,IAAM,EAAG,MACnDpF,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAID,KAAK6a,MAAMhxB,KAAKqZ,IAAM,EAAG,MACzC,IAAND,IACFmQ,GAAK,IACLA,GAAKnQ,GAEPmQ,GAAK,IACEA,CACR,CAEQ,WAAAgI,GACP,OAAOvxB,KAAK4uB,MAAM2C,aACnB,CAKQ,QAAAxc,GACP,IAAIwU,EAAIvpB,KAAKomB,YACb,YAAImD,EAAc,CAChB,IAAInQ,EAAIpZ,KAAKoZ,EACbA,EAAIkY,MAAMlY,GAAK,EAAIjD,KAAK2L,IAAI,EAAG3L,KAAKC,IAAIpW,KAAKoZ,EAAG,IAE9CmQ,EADQ,IAANnQ,EACEpZ,KAAK+wB,cAEL/wB,KAAKqxB,cAEVrxB,KAAuBomB,YAAcmD,CACvC,CACD,OAAOA,CACR,CAGD,kBAAgB8E,GACd,OAAO,IAAIC,EAAS,EAAG,EAAG,EAAG,EAC9B,CAED,YAAAC,CAAsBC,EAAgB,GACpC,OAAO,IAAIF,EAAS,EAAG,EAAG,EAAGE,EAC9B,CAED,YAAAC,CAAsBD,EAAgB,GACpC,OAAO,IAAIF,EAAS,IAAK,IAAK,IAAKE,EACpC,CAID,eAAA5lB,CAAoEtJ,GAClE,GAAIA,SAAsCA,aAAiBgvB,EACzD,OAAOhvB,EACF,GAAqB,iBAAVA,EAChB,OAAOgvB,EAAS3E,MAAMrqB,GACjB,GAAIsuB,EAAa3Q,OAAOC,aAAa5d,GAC1C,OAAOgvB,EAAS5E,SAASpqB,GAE3B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAyBpqB,GACvB,OAAO,IAAIgvB,EAAShvB,EAAMovB,EAAGpvB,EAAMqvB,EAAGrvB,EAAM+Z,EAAG/Z,EAAM8Z,EACtD,CAED,gBAAA8M,CAA0B5mB,GACxB,MAAMkyB,EAAMlyB,EAAMkyB,IAClB,IAAIC,EAOA/C,EACAC,EACAtV,EACAD,EAyBJ,MAlCY,QAARoY,GAAyB,SAARA,GACnBlyB,EAAQA,EAAMsqB,OAAO4H,GACrBC,GAAa,GAEbA,GAAa,EAMfnyB,EAAMqnB,SAAAA,SAAkB+K,EAAc9M,GACpC,MAAM7mB,EAAM2zB,EAAO3zB,IAAIqoB,uBACnBroB,EACU,MAARA,EACF2wB,EAAIgD,EAAOpF,UAAUqF,YAAYjD,GAChB,MAAR3wB,EACT4wB,EAAI+C,EAAOpF,UAAUqF,YAAYhD,GAChB,MAAR5wB,EACTsb,EAAIqY,EAAOpF,UAAUqF,YAAYtY,GAChB,MAARtb,IACTqb,EAAIsY,EAAOpF,UAAUqF,YAAYvY,IAE1BsY,aAAkBzhB,EAAAA,OAASwhB,IACtB,IAAV7M,EACF8J,EAAIgD,EAAOC,YAAYjD,GACJ,IAAV9J,EACT+J,EAAI+C,EAAOC,YAAYhD,GACJ,IAAV/J,EACTvL,EAAIqY,EAAOC,YAAYtY,GACJ,IAAVuL,IACTxL,EAAIsY,EAAOC,YAAYvY,IAG7B,SACe,IAAXsV,QAA2B,IAAXC,YAAgBtV,EAC3B,IAAIiV,EAASI,EAAGC,EAAGtV,EAAGD,GAExB,IACR,CAED,YAAAuQ,CAAsBiI,GACpB,OAAOlE,EAAM/D,MAAMiI,GAAKxD,KACzB,GA3EAxD,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAiyB,EAAA,CAAA/zB,KAAA,SAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAgB0b,cAEf,KAAAvD,GA7MU1rB,EAAQQ,EAAAkrB,IAAA,EAAA,GAyRR,MAAAqD,EAAuB,SAAWpD,GAC7C,MAAMoD,EAAuB,SAAU2D,EAAcC,GACnD,MAAM7G,EAAe,SAAUC,GAC7B,MAAM2G,EAAK5G,EAAa,GAClB6G,EAAK7G,EAAa,GAClBwD,EAAIoD,EAAGpD,EAAIvD,GAAK4G,EAAGrD,EAAIoD,EAAGpD,GAC1BC,EAAImD,EAAGnD,EAAIxD,GAAK4G,EAAGpD,EAAImD,EAAGnD,GAC1BtV,EAAIyY,EAAGzY,EAAI8R,GAAK4G,EAAG1Y,EAAIyY,EAAGzY,GAC1BD,EAAI0Y,EAAG1Y,EAAI+R,GAAK4G,EAAG3Y,EAAI0Y,EAAG1Y,GAChC,OAAO,IAAIkV,EAASI,EAAGC,EAAGtV,EAAGD,EAC/B,EAIA,OAHAjb,OAAOwtB,eAAeT,EAAciD,EAAqBlwB,WACxDitB,EAA8C,GAAK4G,EACnD5G,EAA8C,GAAK6G,EAC7C7G,CACT,EAUA,OAHAiD,EAAqBlwB,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACtDkwB,EAAqBlwB,UAAU6B,YAAcquB,EAEtCA,CACR,CA1BmC,CA0BjCvC,gBAGG,MAAO+D,UAAuBpF,EAAAA,OAOlC,WAAAzqB,CAAYkyB,EAAgCC,EAChCC,EAAgCC,EAChCjI,GACVnqB,QACAC,KAAKgyB,QAAUA,EACfhyB,KAAKiyB,QAAUA,EACfjyB,KAAKkyB,QAAUA,EACflyB,KAAKmyB,QAAUA,EACfnyB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO8F,EAAehG,MAAME,EAAO7pB,KAAKgyB,QAAShyB,KAAKiyB,QAC1BjyB,KAAKkyB,QAASlyB,KAAKmyB,QAASnyB,KAAKkqB,KAC9D,CAED,YAAAP,CAAaE,EAAcmI,EAAgCC,EAC9CC,EAAgCC,EAChCjI,GACX,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EACF,GAAIL,EAAME,UAA6B,MAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAGjD,GAAa,IAATK,EACF,GAAIL,EAAME,UAA6B,MAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAGjD,GAAa,IAATK,EACF,GAAIL,EAAME,UAA6B,KAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAWjD,GARa,IAATK,IACEL,EAAME,UAA6B,KAAjBF,EAAMI,QAC1BJ,EAAQA,EAAMK,OACdA,EAAO,GACGL,EAAMgD,YAChB3C,EAAO,IAGE,IAATA,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAkB,KAAN3C,EACpByC,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,GAAa,IAATK,EAAY,CACd,YAAI8H,EAAoB,CACtB,KAAOnI,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACTmF,EAAUjC,EAAmBpG,MAAME,GAEtC,MACCmI,EAAUA,EAAQtF,KAAK7C,GAEzB,YAAImI,EACF,GAAIA,EAAQ3H,SACVH,EAAO,OACF,GAAI8H,EAAQ1H,UACjB,OAAO0H,EAAQzE,SAGpB,CACD,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SACE,KAAN3C,IACFyC,EAAQA,EAAMK,QAEhBA,EAAO,OACF,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CACd,YAAI+H,EAAoB,CACtB,KAAOpI,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACToF,EAAUlC,EAAmBpG,MAAME,GAEtC,MACCoI,EAAUA,EAAQvF,KAAK7C,GAEzB,YAAIoI,EACF,GAAIA,EAAQ5H,SACVH,EAAO,OACF,GAAI+H,EAAQ3H,UACjB,OAAO2H,EAAQ1E,SAGpB,CACD,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SACE,KAAN3C,IACFyC,EAAQA,EAAMK,QAEhBA,EAAO,QACF,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,KAATK,EAAa,CACf,YAAIgI,EAAoB,CACtB,KAAOrI,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACTqF,EAAUnC,EAAmBpG,MAAME,GAEtC,MACCqI,EAAUA,EAAQxF,KAAK7C,GAEzB,YAAIqI,EACF,GAAIA,EAAQ7H,SACVH,EAAO,QACF,GAAIgI,EAAQ5H,UACjB,OAAO4H,EAAQ3E,SAGpB,CACD,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SAAU,CAClB,GAAU,KAAN3C,EAEF,OADAyC,EAAQA,EAAMK,OACPK,EAAOjsB,OAAAA,KAAK,IAAIgwB,EAAS0D,EAASzrB,OAAOupB,MAAM,KACtBmC,EAAS1rB,OAAOupB,MAAM,KACtBoC,EAAS3rB,OAAOupB,MAAM,OACvC,KAAN1I,GAAyB,KAANA,IAC5ByC,EAAQA,EAAMK,QAEhBA,EAAO,EACR,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,KAATK,EAAa,CACf,YAAIiI,EAAoB,CACtB,KAAOtI,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACTsF,EAAUpC,EAAmBpG,MAAME,GAEtC,MACCsI,EAAUA,EAAQzF,KAAK7C,GAEzB,YAAIsI,EACF,GAAIA,EAAQ9H,SACVH,EAAO,QACF,GAAIiI,EAAQ7H,UACjB,OAAO6H,EAAQ5E,SAGpB,CACD,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAkB,KAAN3C,EAEpB,OADAyC,EAAQA,EAAMK,OACPK,SAAOjsB,KAAK,IAAIgwB,EAAS0D,EAASzrB,OAAOupB,MAAM,KACtBmC,EAAS1rB,OAAOupB,MAAM,KACtBoC,EAAS3rB,OAAOupB,MAAM,KACtBqC,EAAS5rB,OAAOupB,MAAM,KACjD,IAAKjG,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,OAAO,IAAI8F,EAAeqC,EAASC,EAASC,EAASC,EAASjI,EAC/D,CAGD,gBAAAsD,CAAiB3D,GACf,OAAO8F,EAAehG,MAAME,OAAAA,OAAoB,OAAA,SAAmB,EACpE,EAIG,MAAO6F,UAAuBnF,EAAAA,OAIlC,WAAAzqB,CAAYR,EAAgB4qB,GAC1BnqB,QACAC,KAAKV,MAAQA,EACbU,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO6F,EAAe/F,MAAME,EAAO7pB,KAAKV,MAAOU,KAAKkqB,KACrD,CAED,YAAAP,CAAaE,EAAcvqB,EAAgB,EAAG4qB,EAAe,GAC3D,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EACF,GAAIL,EAAME,UAA6B,KAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAGjD,GAAIK,GAAQ,EAAG,CACb,KAAOA,GAAQ,GAAKL,EAAME,WACxB3C,EAAIyC,EAAMI,OACNxC,EAAAA,OAAOqF,QAAQ1F,KACjByC,EAAQA,EAAMK,OACd5qB,EAASA,GAAS,EAAKmoB,EAAAA,OAAOsF,YAAY3F,GAC1C8C,GAAQ,EAKZ,IAAKL,EAAMgD,UACT,OAAa,IAAT3C,EACKK,SAAOjsB,KAAK,IAAIgwB,EAAShvB,GAAS,EAAI,GAAOA,GAAS,EAAI,IACjCA,GAAS,EAAI,GAAe,IAARA,EACpBA,GAAS,EAAI,IAAe,GAARA,IAClC,IAAT4qB,EACFK,EAAAA,OAAOjsB,KAAK,IAAIgwB,EAAShvB,GAAS,GAAK,GAAOA,GAAS,EAAI,IAClCA,GAAS,EAAI,GAAOA,GAAS,EAAI,IACjCA,GAAS,EAAI,GAAe,IAARA,GACnBA,GAAS,EAAI,IAAe,GAARA,GAAgB,MACnD,IAAT4qB,EACFK,EAAAA,OAAOjsB,KAAK,IAAIgwB,EAAShvB,GAAS,GAAK,IACdA,GAAS,EAAI,IACL,IAARA,IACd,KAAT4qB,EACFK,EAAAA,OAAOjsB,KAAK,IAAIgwB,EAAShvB,GAAS,GAAK,IACdA,GAAS,GAAK,IACdA,GAAS,EAAI,KACJ,IAARA,GAAgB,MAE1CirB,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAG/C,CACD,OAAO,IAAI6F,EAAepwB,EAAO4qB,EAClC,EC9lBU,MAAAkI,EAAe,CAC1B,CAACnV,OAAOC,aAAa2K,GACZA,aAAoBoH,GACpBpB,EAAa5Q,OAAOC,aAAa2K,IACb,iBAAbA,GAaLgG,EAAe,CAC1B,CAAC5Q,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAWH,EAAU,IAAK,IAAK,MAKrCoH,IAAAA,EAAQ,uBAAR,OAAArvB,EAAA,MAAAqvB,UAAiBvB,EAC5B,WAAA5tB,CAAY+uB,EAAWtF,EAAWuF,EAAW1V,EAAY,GACvDrZ,QACAC,KAAK6uB,EAAIA,EACT7uB,KAAKupB,EAAIA,EACTvpB,KAAK8uB,EAAIA,EACT9uB,KAAKoZ,EAAIA,EACTpZ,KAAKomB,iBAAmB,CACzB,CAIQ,SAAAvV,GACP,OAAOuf,SAASpwB,KAAK6uB,IAAMuB,SAASpwB,KAAKupB,IAClC6G,SAASpwB,KAAK8uB,IAAMsB,SAASpwB,KAAKoZ,EAC1C,CAYQ,KAAAoV,CAAMpV,GACb,gBAAIA,EACKpZ,KAAKoZ,EACHpZ,KAAKoZ,IAAMA,EACbpZ,KAEF,IAAIivB,EAASjvB,KAAK6uB,EAAG7uB,KAAKupB,EAAGvpB,KAAK8uB,EAAG1V,EAC7C,CAED,aAAa4U,GACX,OAAOhuB,KAAK8uB,CACb,CAEQ,IAAAuB,CAAK1T,GAEZ,OADAA,EAAO+Q,EAAM9kB,SAAS+T,GAAMiS,MACrB,IAAIK,EAASjvB,KAAK6uB,EAAKlS,EAAkBkS,EAAG7uB,KAAKupB,EAAK5M,EAAkB4M,EAC3DvpB,KAAK8uB,EAAKnS,EAAkBmS,EAAG9uB,KAAKoZ,EAAKuD,EAAkBvD,EAChF,CAEQ,KAAAkX,CAAMC,GACb,OAAO,IAAItB,EAASjvB,KAAK6uB,EAAI0B,EAAQvwB,KAAKupB,EAAIgH,EAAQvwB,KAAK8uB,EAAIyB,EAAQvwB,KAAKoZ,EAAImX,EACjF,CAEQ,OAAAC,CAAQ7T,EAAiB4T,EAAiB,GAEjD,OADA5T,EAAO+Q,EAAM9kB,SAAS+T,GAAMiS,MACrB,IAAIK,EAASjvB,KAAK6uB,EAAKlS,EAAkBkS,EAAI0B,EAAQvwB,KAAKupB,EAAK5M,EAAkB4M,EAAIgH,EACxEvwB,KAAK8uB,EAAKnS,EAAkBmS,EAAIyB,EAAQvwB,KAAKoZ,EAAKuD,EAAkBvD,EAAImX,EAC7F,CAEQ,OAAAtC,CAAQF,GAEf,OAAa,KADbA,WAAIA,EAAeL,EAAM6B,SAAWpZ,KAAKsa,IAAI/C,EAAM6B,SAAUxB,IAC5C,IAAIkB,EAASjvB,KAAK6uB,EAAG7uB,KAAKupB,EAAGvpB,KAAK8uB,EAAIf,EAAG/tB,KAAKoZ,GAAKpZ,IACrE,CAEQ,MAAAkuB,CAAOH,GAEd,OAAa,KADbA,WAAIA,EAAeL,EAAM4B,OAASnZ,KAAKsa,IAAI/C,EAAM4B,OAAQvB,IACxC,IAAIkB,EAASjvB,KAAK6uB,EAAG7uB,KAAKupB,EAAGvpB,KAAK8uB,EAAIf,EAAG/tB,KAAKoZ,GAAKpZ,IACrE,CAEO,YAAOqyB,CAAMxD,EAAWyD,EAAYC,GAC1C,OAAO,KAAO1D,EAAI,GAAKyD,GAAMC,EAAKD,GAAMzD,EAAI,GACrBA,EAAI,IAAM0D,EACA1D,EAAI,IAAMyD,GAAMC,EAAKD,IAAO,IAAMzD,GAAK,GAC7ByD,EAC5C,CAEQ,GAAAlE,GACP,MAAMS,EAAI7uB,KAAK6uB,EAAI,IAAsB,MAAd7uB,KAAK6uB,EAAI,GAC9BtF,EAAI+H,MAAMzC,IAAMyC,MAAMtxB,KAAKupB,GAAK,EAAIvpB,KAAKupB,EACzCuF,EAAI9uB,KAAK8uB,EACTyD,EAAKzD,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKvF,EACjC+I,EAAK,EAAIxD,EAAIyD,EACnB,OAAO,IAAIjE,EAASW,EAASoD,MAAMxD,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKyD,EAAIC,GACjDtD,EAASoD,MAAMxD,EAAGyD,EAAIC,GACtBtD,EAASoD,MAAMxD,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKyD,EAAIC,GAChDvyB,KAAKoZ,EAC1B,CAEQ,GAAAwV,GACP,OAAO5uB,IACR,CAKQ,aAAAipB,CAActM,GACrB,OAAIA,aAAgBsS,EACXuD,GAAqBxyB,KAAM2c,GAE7B5c,MAAMkpB,cAActM,EAC5B,CAEQ,YAAAwM,CAAaxM,EAAeyM,GACnC,OAAIppB,OAAS2c,GAEFA,aAAgB+Q,IACzB/Q,EAAOA,EAAKiS,MACL+B,EAAAA,QAAQtH,WAAWrpB,KAAK6uB,EAAIlS,EAAkBkS,EAAGzF,IACjDuH,EAAQtH,QAAAA,WAAWrpB,KAAKupB,EAAI5M,EAAkB4M,EAAGH,IACjDuH,EAAAA,QAAQtH,WAAWrpB,KAAK8uB,EAAInS,EAAkBmS,EAAG1F,IACjDuH,EAAAA,QAAQtH,WAAWrpB,KAAKoZ,EAAIuD,EAAkBvD,EAAGgQ,GAG3D,CAEQ,MAAA1M,CAAOC,GACd,OAAI3c,OAAS2c,GAEFA,aAAgBsS,IAClBjvB,KAAK6uB,IAAMlS,EAAKkS,GAAK7uB,KAAKupB,IAAM5M,EAAK4M,GAAKvpB,KAAK8uB,IAAMnS,EAAKmS,GAAK9uB,KAAKoZ,IAAMuD,EAAKvD,EAGzF,CAEQ,QAAAwD,GACP,OAAOC,EAAAA,QAAQC,KAAKD,EAAAA,QAAQ+T,IAAI/T,EAAAA,QAAQ+T,IAAI/T,UAAQ+T,IAAI/T,EAAAA,QAAQ+T,IAAIC,EAAAA,aAAaC,KAAK7B,GAClF0B,EAAAA,QAAQG,KAAK9wB,KAAK6uB,IAAK8B,EAAQG,QAAAA,KAAK9wB,KAAKupB,IAAKoH,EAAAA,QAAQG,KAAK9wB,KAAK8uB,IAAK6B,UAAQG,KAAK9wB,KAAKoZ,IAC5F,CAEQ,KAAAkQ,CAASjC,GAOhB,OANAA,EAASA,EAAOE,MAAM,SAASA,MAAM,IAAWA,MAAM,OAAOA,MAAM,IACnD+B,MAAMtpB,KAAK6uB,GAAGtH,MAAM,MAAM+B,MAAMtpB,KAAKupB,GAAGhC,MAAM,MAAM+B,MAAMtpB,KAAK8uB,GAChE,IAAX9uB,KAAKoZ,IACPiO,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKoZ,IAEzCiO,EAASA,EAAOE,MAAM,GAEvB,CAEQ,WAAAwJ,GACP,OAAO/wB,KAAKouB,MAAM2C,aACnB,CAEQ,WAAAM,GACP,OAAOrxB,KAAKouB,MAAMiD,aACnB,CAEQ,WAAAE,GACP,IAAInY,EAAIpZ,KAAKoZ,EACbA,EAAIkY,MAAMlY,GAAK,EAAIjD,KAAK2L,IAAI,EAAG3L,KAAKC,IAAIpW,KAAKoZ,EAAG,IAChD,IAAImQ,EAAU,IAANnQ,EAAU,MAAQ,OAY1B,OAXAmQ,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAID,KAAK6a,MAAMhxB,KAAK6uB,IAAM,EAAG,MACnDtF,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAI,IAAMD,KAAK6a,MAAMhxB,KAAKupB,IAAM,EAAG,MAAQ,IACjEA,GAAK,IACLA,GAAKpT,KAAK2L,IAAI,EAAG3L,KAAKC,IAAI,IAAMD,KAAK6a,MAAMhxB,KAAK8uB,IAAM,EAAG,MAAQ,IACvD,IAAN1V,IACFmQ,GAAK,IACLA,GAAKnQ,GAEPmQ,GAAK,IACEA,CACR,CAKQ,QAAAxU,GACP,IAAIwU,EAAIvpB,KAAKomB,YAKb,gBAJImD,IACFA,EAAIvpB,KAAKuxB,cACRvxB,KAAuBomB,YAAcmD,GAEjCA,CACR,CAGD,kBAAgB8E,GACd,OAAO,IAAIY,EAAS,EAAG,EAAG,EAAG,EAC9B,CAED,YAAAV,CAAsBC,EAAgB,GACpC,OAAO,IAAIS,EAAS,EAAG,EAAG,EAAGT,EAC9B,CAED,YAAAC,CAAsBD,EAAgB,GACpC,OAAO,IAAIS,EAAS,EAAG,EAAG,EAAGT,EAC9B,CAID,eAAA5lB,CAAoEtJ,GAClE,GAAIA,SAAsCA,aAAiB2vB,EACzD,OAAO3vB,EACF,GAAqB,iBAAVA,EAChB,OAAO2vB,EAAStF,MAAMrqB,GACjB,GAAIuuB,EAAa5Q,OAAOC,aAAa5d,GAC1C,OAAO2vB,EAASvF,SAASpqB,GAE3B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAyBpqB,GACvB,MAAMuvB,EAAuB,iBAAZvvB,EAAMuvB,EAAiBvvB,EAAMuvB,EAAIE,EAAAA,MAAMnmB,SAAStJ,EAAMuvB,GAAGG,WAC1E,OAAO,IAAIC,EAASJ,EAAGvvB,EAAMiqB,EAAGjqB,EAAMwvB,EAAGxvB,EAAM8Z,EAChD,CAED,gBAAA8M,CAA0B5mB,GACxB,MAAMkyB,EAAMlyB,EAAMkyB,IAClB,IAAIC,EAOA5C,EACAtF,EACAuF,EACA1V,EAyBJ,MAlCY,QAARoY,GAAyB,SAARA,GACnBlyB,EAAQA,EAAMsqB,OAAO4H,GACrBC,GAAa,GAEbA,GAAa,EAMfnyB,EAAMqnB,SAAAA,SAAkB+K,EAAc9M,GACpC,MAAM7mB,EAAM2zB,EAAO3zB,IAAIqoB,uBACnBroB,EACU,MAARA,EACF8wB,EAAI6C,EAAOpF,UAAUhG,KAAKyI,EAAAA,MAAM1I,OAAQwI,GACvB,MAAR9wB,EACTwrB,EAAImI,EAAOpF,UAAUqF,YAAYpI,GAChB,MAARxrB,EACT+wB,EAAI4C,EAAOpF,UAAUqF,YAAY7C,GAChB,MAAR/wB,IACTqb,EAAIsY,EAAOpF,UAAUqF,YAAYvY,IAE1BsY,aAAkBzhB,EAAAA,OAASwhB,IACtB,IAAV7M,EACFiK,EAAI6C,EAAOpL,KAAKyI,EAAAA,MAAM1I,OAAQwI,GACX,IAAVjK,EACT2E,EAAImI,EAAOC,YAAYpI,GACJ,IAAV3E,EACTkK,EAAI4C,EAAOC,YAAY7C,GACJ,IAAVlK,IACTxL,EAAIsY,EAAOC,YAAYvY,IAG7B,SACe,IAAXyV,QAA2B,IAAXtF,YAAgBuF,EAC3B,IAAIG,EAASJ,EAAEG,WAAYzF,EAAGuF,EAAG1V,GAEnC,IACR,CAED,YAAAuQ,CAAsBiI,GACpB,OAAOlE,EAAM/D,MAAMiI,GAAKhD,KACzB,GA5EAhE,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAiyB,EAAA,CAAA/zB,KAAA,SAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAgB0b,cAEf,KAAAvD,GAjLU1rB,EAAQQ,EAAAkrB,IAAA,EAAA,GA8PR,MAAA0H,GAAuB,SAAWzH,GAC7C,MAAMyH,EAAuB,SAAUV,EAAcC,GACnD,MAAM7G,EAAe,SAAUC,GAC7B,MAAM2G,EAAK5G,EAAa,GAClB6G,EAAK7G,EAAa,GAClB2D,EAAIiD,EAAGjD,EAAI1D,GAAK4G,EAAGlD,EAAIiD,EAAGjD,GAC1BtF,EAAIuI,EAAGvI,EAAI4B,GAAK4G,EAAGxI,EAAIuI,EAAGvI,GAC1BuF,EAAIgD,EAAGhD,EAAI3D,GAAK4G,EAAGjD,EAAIgD,EAAGhD,GAC1B1V,EAAI0Y,EAAG1Y,EAAI+R,GAAK4G,EAAG3Y,EAAI0Y,EAAG1Y,GAChC,OAAO,IAAI6V,EAASJ,EAAGtF,EAAGuF,EAAG1V,EAC/B,EAIA,OAHAjb,OAAOwtB,eAAeT,EAAcsH,EAAqBv0B,WACxDitB,EAA8C,GAAK4G,EACnD5G,EAA8C,GAAK6G,EAC7C7G,CACT,EAUA,OAHAsH,EAAqBv0B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACtDu0B,EAAqBv0B,UAAU6B,YAAc0yB,EAEtCA,CACR,CA1BmC,CA0BjC5G,gBAGG,MAAOgE,WAAuBrF,EAAAA,OAOlC,WAAAzqB,CAAY2yB,EAAyBC,EACzBC,EAAgCR,EAChCjI,GACVnqB,QACAC,KAAKyyB,QAAUA,EACfzyB,KAAK0yB,QAAUA,EACf1yB,KAAK2yB,QAAUA,EACf3yB,KAAKmyB,QAAUA,EACfnyB,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO+F,GAAejG,MAAME,EAAO7pB,KAAKyyB,QAASzyB,KAAK0yB,QAC1B1yB,KAAK2yB,QAAS3yB,KAAKmyB,QAASnyB,KAAKkqB,KAC9D,CAED,YAAAP,CAAaE,EAAc4I,EAAyBC,EACvCC,EAAgCR,EAChCjI,GACX,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EACF,GAAIL,EAAME,UAA6B,MAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAGjD,GAAa,IAATK,EACF,GAAIL,EAAME,UAA6B,MAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAGjD,GAAa,IAATK,EACF,GAAIL,EAAME,UAA6B,MAAjBF,EAAMI,OAC1BJ,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAWjD,GARa,IAATK,IACEL,EAAME,UAA6B,KAAjBF,EAAMI,QAC1BJ,EAAQA,EAAMK,OACdA,EAAO,GACGL,EAAMgD,YAChB3C,EAAO,IAGE,IAATA,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAkB,KAAN3C,EACpByC,EAAQA,EAAMK,OACdA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,GAAa,IAATK,EAAY,CACd,YAAIuI,EAAoB,CACtB,KAAO5I,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACT4F,EAAUG,EAAAA,YAAYjJ,MAAME,EAAO,OAEtC,MACC4I,EAAUA,EAAQ/F,KAAK7C,GAEzB,YAAI4I,EACF,GAAIA,EAAQpI,SACVH,EAAO,OACF,GAAIuI,EAAQnI,UACjB,OAAOmI,EAAQlF,SAGpB,CACD,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SACE,KAAN3C,IACFyC,EAAQA,EAAMK,QAEhBA,EAAO,OACF,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CACd,YAAIwI,EAAoB,CACtB,KAAO7I,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACT6F,EAAU3C,EAAmBpG,MAAME,GAEtC,MACC6I,EAAUA,EAAQhG,KAAK7C,GAEzB,YAAI6I,EACF,GAAIA,EAAQrI,SAAU,CACpB,GAA6B,MAAzBqI,EAAQnsB,OAAO8mB,MAGjB,OAAO9C,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAF7CK,EAAO,CAIV,MAAM,GAAIwI,EAAQpI,UACjB,OAAOoI,EAAQnF,SAGpB,CACD,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SACE,KAAN3C,IACFyC,EAAQA,EAAMK,QAEhBA,EAAO,QACF,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,KAATK,EAAa,CACf,YAAIyI,EAAoB,CACtB,KAAO9I,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEZL,EAAME,WACR4I,EAAU5C,EAAmBpG,MAAME,GAEtC,MACC8I,EAAUA,EAAQjG,KAAK7C,GAEzB,YAAI8I,EACF,GAAIA,EAAQtI,SAAU,CACpB,GAA6B,MAAzBsI,EAAQpsB,OAAO8mB,MAGjB,OAAO9C,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,IAF7CK,EAAO,EAIV,MAAM,GAAIyI,EAAQrI,UACjB,OAAOqI,EAAQpF,SAGpB,CACD,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,SAAU,CAClB,GAAU,KAAN3C,EAEF,OADAyC,EAAQA,EAAMK,OACPK,EAAOjsB,OAAAA,KAAK,IAAI2wB,EAASwD,EAASlsB,OAAOyoB,WAChB0D,EAASnsB,OAAOupB,MAAM,GACtB6C,EAASpsB,OAAOupB,MAAM,KACvC,KAAN1I,GAAyB,KAANA,IAC5ByC,EAAQA,EAAMK,QAEhBA,EAAO,EACR,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,KAATK,EAAa,CACf,YAAIiI,EAAoB,CACtB,KAAOtI,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAQA,EAAMK,OAEXL,EAAMgD,YACTsF,EAAUpC,EAAmBpG,MAAME,GAEtC,MACCsI,EAAUA,EAAQzF,KAAK7C,GAEzB,YAAIsI,EACF,GAAIA,EAAQ9H,SACVH,EAAO,QACF,GAAIiI,EAAQ7H,UACjB,OAAO6H,EAAQ5E,SAGpB,CACD,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAkB,KAAN3C,EAEpB,OADAyC,EAAQA,EAAMK,OACPK,SAAOjsB,KAAK,IAAI2wB,EAASwD,EAASlsB,OAAOyoB,WAChB0D,EAASnsB,OAAOupB,MAAM,GACtB6C,EAASpsB,OAAOupB,MAAM,GACtBqC,EAAS5rB,OAAOupB,MAAM,KACjD,IAAKjG,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,OAAO,IAAI+F,GAAe6C,EAASC,EAASC,EAASR,EAASjI,EAC/D,CAGD,gBAAAsD,CAAiB3D,GACf,OAAO+F,GAAejG,MAAME,OAAAA,OAAoB,OAAA,SAAmB,EACpE,ECnhBU,MAAAgJ,GAAgB,CAC3B,CAAC5V,OAAOC,aAAa2K,GACZA,aAAoBiL,IACpBC,GAAc9V,OAAOC,aAAa2K,IAClCmL,GAAe/V,OAAOC,aAAa2K,IACf,iBAAbA,GAYLkL,GAAgB,CAC3B,CAAC9V,OAAOC,aAAa2K,GACZ3Q,UAAQ8Q,WAAWH,EAAU,UAQ3BmL,GAAiB,CAC5B,CAAC/V,OAAOC,aAAa2K,GACZhQ,MAAMiR,QAAQjB,IAAiC,IAApBA,EAASrpB,QACpCivB,EAAUxQ,OAAOC,aAAa2K,EAAS,MACtB,OAAhBA,EAAS,IAAeoL,EAAWhW,WAAAA,OAAOC,aAAa2K,EAAS,MAK/DiL,MAAAA,GACX,WAAAhzB,CAAYqvB,EAAc+D,EAAqBC,GAC7CnzB,KAAKmvB,MAAQA,EACbnvB,KAAKkzB,KAAOA,EACZlzB,KAAKmzB,KAAOA,CACb,CAMD,SAAAC,CAAUjE,GAER,OADAA,EAAQzB,EAAM9kB,SAASumB,GAChB,IAAI2D,GAAU3D,EAAOnvB,KAAKkzB,KAAMlzB,KAAKmzB,KAC7C,CAID,QAAAE,CAASH,GAEP,OADAA,EAAOjN,EAAAA,OAAOrd,SAASsqB,EAAM,KACtB,IAAIJ,GAAU9yB,KAAKmvB,MAAO+D,EAAMlzB,KAAKmzB,KAC7C,CAID,QAAAG,CAASH,GAEP,OADAA,EAAOlN,EAAAA,OAAOrd,SAASuqB,EAAM,KACtB,IAAIL,GAAU9yB,KAAKmvB,MAAOnvB,KAAKkzB,KAAMC,EAC7C,CAKD,aAAAlK,CAActM,GACZ,OAAIA,aAAgBmW,GACXS,GAAsBvzB,KAAM2c,GAE9B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBmW,KAClBU,aAAWxzB,KAAKmvB,MAAOxS,EAAKwS,MAAO/F,IACnCoK,EAAWxzB,WAAAA,KAAKkzB,KAAMvW,EAAKuW,KAAM9J,IACjCoK,aAAWxzB,KAAKmzB,KAAMxW,EAAKwW,KAAM/J,GAG3C,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBmW,KAClB9yB,KAAKmvB,MAAMzS,OAAOC,EAAKwS,QACvBsE,EAAAA,OAAOzzB,KAAKkzB,KAAMvW,EAAKuW,OACvBO,EAAOzzB,OAAAA,KAAKmzB,KAAMxW,EAAKwW,MAGjC,CAGD,QAAApe,GACE,IAAIwU,EAAI,GAUR,OATkB,OAAdvpB,KAAKmzB,OACP5J,GAAKvpB,KAAKmzB,KAAKpe,WACfwU,GAAK,MAEPA,GAAKvpB,KAAKmvB,MAAMpa,WACE,OAAd/U,KAAKkzB,OACP3J,GAAK,IACLA,GAAKvpB,KAAKkzB,KAAKne,YAEVwU,CACR,CAED,aAAA/Z,CAAc2f,EAAkB+D,EAA0B,KAC5CC,EAA0B,MAItC,OAHAhE,EAAQzB,EAAM9kB,SAASumB,GACvB+D,EAAOjN,EAAAA,OAAOrd,SAASsqB,EAAM,KAC7BC,EAAOlN,EAAAA,OAAOrd,SAASuqB,EAAM,KACtB,IAAIL,GAAU3D,EAAO+D,EAAMC,EACnC,CAED,eAAAvqB,CAA4DtJ,GAC1D,GAAIA,SAAsCA,aAAiBwzB,GACzD,OAAOxzB,EACF,GAAqB,iBAAVA,EAChB,OAAOwzB,GAAUnJ,MAAMrqB,GAClB,GAAIyzB,GAAc9V,OAAOC,aAAa5d,GAC3C,OAAOwzB,GAAUpJ,SAASpqB,GACrB,GAAI0zB,GAAe/V,OAAOC,aAAa5d,GAC5C,OAAOwzB,GAAUY,UAAUp0B,GAE7B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBzqB,GACd,MAAMkwB,EAAQzB,EAAM9kB,SAAS3J,EAAKkwB,OAC5B+D,OAA0B,IAAnBj0B,EAAKi0B,KAAkBjN,EAAAA,OAAOrd,SAAS3J,EAAKi0B,KAAM,KAAO,KAChEC,OAA0B,IAAnBl0B,EAAKk0B,KAAkBlN,EAAAA,OAAOrd,SAAS3J,EAAKk0B,KAAM,KAAO,KACtE,OAAO,IAAIL,GAAU3D,EAAO+D,EAAMC,EACnC,CAED,gBAAAO,CAAiBp0B,GACf,MAAM6vB,EAAQzB,EAAM9kB,SAAStJ,EAAM,IAC7B4zB,EAAOjN,EAAAA,OAAOrd,SAAStJ,EAAM,GAAI,KACvC,OAAO,IAAIwzB,GAAU3D,EAAO+D,EAAM,KACnC,CAED,YAAAvJ,CAAaxD,GACX,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASwJ,GAAgBhK,MAAME,GACnC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAED,gBAAAqtB,CAAiBzN,GACf,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASwJ,GAAgBC,UAAU/J,GACvC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAED,gBAAAstB,CAAiB1N,GACf,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAAS2J,GAAoBnK,MAAME,GACvC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,EAoBU,MAAAgtB,GAAwB,SAAWxI,GAC9C,MAAMwI,EAAwB,SAAUQ,EAAeC,GACrD,MAAM9I,EAAe,SAAUC,GAC7B,MAAMgE,EAAQjE,EAAa+I,kBAAkB9I,GACvC+H,EAAOhI,EAAagJ,iBAAiB/I,GACrCgI,EAAOjI,EAAaiJ,iBAAiBhJ,GAC3C,OAAO,IAAI2H,GAAU3D,EAAO+D,EAAMC,EACpC,EAKA,OAJAh1B,OAAOwtB,eAAeT,EAAcqI,EAAsBt1B,WACzDitB,EAA8C+I,kBAAoBF,EAAG5E,MAAMlG,cAAc+K,EAAG7E,OAC5FjE,EAA8CgJ,iBAAmBtI,eAAamI,EAAGb,KAAMc,EAAGd,MAC1FhI,EAA8CiJ,iBAAmBvI,eAAamI,EAAGZ,KAAMa,EAAGb,MACpFjI,CACT,EAyCA,OAlCAqI,EAAsBt1B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACvDs1B,EAAsBt1B,UAAU6B,YAAcyzB,EAE9Cp1B,OAAOgB,eAAeo0B,EAAsBt1B,UAAW,EAAG,CACxD,GAAAc,GACE,MAAMowB,EAAQnvB,KAAKi0B,kBAAkB,GAC/Bf,EAAOlzB,KAAKk0B,iBAAiB,GAC7Bf,EAAOnzB,KAAKm0B,iBAAiB,GACnC,OAAO,IAAIrB,GAAU3D,EAAO+D,EAAMC,EACnC,EACDvZ,cAAc,IAGhBzb,OAAOgB,eAAeo0B,EAAsBt1B,UAAW,EAAG,CACxD,GAAAc,GACE,MAAMowB,EAAQnvB,KAAKi0B,kBAAkB,GAC/Bf,EAAOlzB,KAAKk0B,iBAAiB,GAC7Bf,EAAOnzB,KAAKm0B,iBAAiB,GACnC,OAAO,IAAIrB,GAAU3D,EAAO+D,EAAMC,EACnC,EACDvZ,cAAc,IAGhB2Z,EAAsBt1B,UAAUye,OAAS,SAAUC,GACjD,OAAI3c,OAAS2c,GAEFA,aAAgB4W,IAClBvzB,KAAKi0B,kBAAkBvX,OAAOC,EAAKsX,oBACnCj0B,KAAKk0B,iBAAiBxX,OAAOC,EAAKuX,mBAClCl0B,KAAKm0B,iBAAiBzX,OAAOC,EAAKwX,kBAG7C,EAEOZ,CACR,CAvDoC,CAuDlC3H,gBAGG,MAAO+H,WAAwBpJ,EAAAA,OAMnC,WAAAzqB,CAAYs0B,EAA6BC,EAC7BC,EAA6BpK,GACvCnqB,QACAC,KAAKo0B,YAAcA,EACnBp0B,KAAKq0B,WAAaA,EAClBr0B,KAAKs0B,WAAaA,EAClBt0B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO8J,GAAgBhK,MAAME,EAAO7pB,KAAKo0B,YAAap0B,KAAKq0B,WAC9Br0B,KAAKs0B,WAAYt0B,KAAKkqB,KACpD,CAED,YAAAP,CAAaE,EAAcuK,EAA6BC,EAC3CC,EAA6BpK,EAAe,GACvD,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADQ,KAAN9C,GAAyB,KAANA,GAAmBA,GAAK,IAAaA,GAAK,GACxD,EAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,aAEAoK,WADEA,EACWlH,eAAazD,MAAME,GAEnByK,EAAW5H,KAAK7C,IAG7B,GAAIyK,EAAWjK,SACbH,EAAO,OACF,GAAIoK,EAAWhK,UACpB,OAAOgK,EAAW/G,UAIxB,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SACE,KAAN3C,GACFyC,EAAMK,OACNA,EAAO,IAEPmK,EAAaC,EACbA,OAAkB,EAClBpK,EAAO,QAEJ,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADQ,KAAN9C,GAAyB,KAANA,GAAmBA,GAAK,IAAaA,GAAK,GACxD,EAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,aAEAmK,WADEA,EACWjH,eAAazD,MAAME,GAEnBwK,EAAW3H,KAAK7C,IAG7B,GAAIwK,EAAWhK,SACbH,EAAO,OACF,GAAImK,EAAW/J,UACpB,OAAO+J,EAAW9G,UAIxB,GAAa,IAATrD,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,CAIV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,aAEAkK,WADEA,EACYhF,EAAYzF,MAAME,GAElBuK,EAAY1H,KAAK7C,IAG/B,GAAIuK,EAAY/J,SAAU,CACxB,YAAIgK,EAAuB,CACzB,MAAMlB,OAAOmB,IAAAA,EAAwBA,EAAW/tB,OAAS,KACzD,OAAOgkB,SAAOjsB,KAAK,IAAIw0B,GAAUsB,EAAY7tB,OAAQ8tB,EAAW9tB,OAAQ4sB,GACzE,CACCjJ,EAAO,CAEV,MAAM,GAAIkK,EAAY9J,UACrB,OAAO8J,EAAY7G,UAIzB,GAAa,IAATrD,EACF,GAAIL,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAC1CJ,EAAMK,OACNA,EAAO,OACF,IAAKL,EAAMgD,UAAW,CAC3B,MAAMsG,OAAOmB,IAAAA,EAAwBA,EAAW/tB,OAAS,KACzD,OAAOgkB,SAAOjsB,KAAK,IAAIw0B,GAAUsB,EAAa7tB,OAAQ,KAAM4sB,GAC7D,CAEH,GAAa,IAATjJ,aAEAmK,WADEA,EACWjH,eAAazD,MAAME,GAEnBwK,EAAW3H,KAAK7C,IAEJ,CACzB,GAAIwK,EAAWhK,SAAU,CACvB,MAAM8I,OAAOmB,IAAAA,EAAwBA,EAAW/tB,OAAS,KACzD,OAAOgkB,SAAOjsB,KAAK,IAAIw0B,GAAUsB,EAAa7tB,OAAQ8tB,EAAW9tB,OAAQ4sB,GAC1E,CAAM,GAAIkB,EAAW/J,UACpB,OAAO+J,EAAW9G,SAErB,CAEH,OAAO,IAAIoG,GAAgBS,EAAaC,EAAYC,EAAYpK,EACjE,CAED,gBAAA0J,CAAiB/J,GACf,OAAO8J,GAAgBhK,MAAME,OAAY,OAAA,SAAmB,EAC7D,EAIG,MAAOiK,WAA4BvJ,EAAAA,OAKvC,WAAAzqB,CAAYy0B,EAA8BF,EAAgCnK,GACxEnqB,QACAC,KAAKu0B,MAAQA,EACbv0B,KAAKq0B,WAAaA,EAClBr0B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOiK,GAAoBnK,MAAME,OAA2B,IAApB7pB,KAAKu0B,MAAmBv0B,KAAKu0B,MAAMvL,MAAM,QAAA,EAChDhpB,KAAKq0B,WAAYr0B,KAAKkqB,KACxD,CAED,YAAAP,CAAaE,EAAc0K,EAAqBF,EACnCnK,EAAe,GAC1B,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CACd,YAAImK,EAAuB,CACzB,KAAOxK,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAEHL,EAAMgD,YACTwH,EAAaV,GAAgBhK,MAAME,GAEtC,MACCwK,EAAaA,EAAW3H,KAAK7C,GAE/B,YAAIwK,EACF,GAAIA,EAAWhK,kBACTkK,IACFA,EAAQ,IAEVA,EAAM11B,KAAKw1B,EAAW9tB,QACtB8tB,OAAkB,EAClBnK,EAAO,OACF,GAAImK,EAAW/J,UACpB,OAAO+J,EAAW9G,SAGvB,CACD,OAAG,CACD,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,IAAIL,EAAME,UAAkB,KAAN3C,EAIpB,OAAOmD,SAAOjsB,KAAKi2B,GAHnB1K,EAAQA,EAAMK,OACdA,EAAO,CAIV,CACD,GAAa,IAATA,EAAY,CACd,YAAImK,EAAuB,CACzB,KAAOxK,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAMK,OAEHL,EAAMgD,YACTwH,EAAaV,GAAgBC,UAAU/J,GAE1C,MACCwK,EAAaA,EAAW3H,KAAK7C,GAE/B,YAAIwK,EAAuB,CACzB,GAAIA,EAAWhK,SAAU,CACvBkK,EAAO11B,KAAKw1B,EAAW9tB,QACvB8tB,OAAkB,EAClBnK,EAAO,EACP,QACD,CAAM,GAAImK,EAAW/J,UACpB,OAAO+J,EAAW9G,SAErB,CACF,CACD,KACO,CACT,OAAO,IAAIuG,GAAoBS,EAAOF,EAAYnK,EACnD,ECvfU,MAAAsK,GAAqB,CAChC,CAACvX,OAAOC,aAAa2K,GACZA,aAAoB4M,IACpBC,GAAmBzX,OAAOC,aAAa2K,IACnB,iBAAbA,GAWL6M,GAAqB,CAChC,CAACzX,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAWH,EAAU,QAAS,UAKpC4M,MAAAA,GACX,WAAA30B,CAAY60B,EAA4BJ,GACtCv0B,KAAK20B,MAAQA,EACb30B,KAAKu0B,MAAQA,EACbv0B,KAAKomB,iBAAmB,CACzB,CAID,SAAAwO,CAAUD,GAIR,OAHIA,aAAiB5F,EAAAA,OAA0B,iBAAV4F,KACnCA,EAAQ5F,EAAAA,MAAMnmB,SAAS+rB,EAAO,QAEzB,IAAIF,GAAeE,EAAO30B,KAAKu0B,MACvC,CAID,SAAAM,CAAUN,GACR,MAAMxc,EAAIwc,EAAM/1B,OACVs2B,EAAQ,IAAIjd,MAAiBE,GACnC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAC1Bu2B,EAAMv2B,GAAKu0B,GAAUlqB,SAAS2rB,EAAMh2B,IAEtC,OAAO,IAAIk2B,GAAez0B,KAAK20B,MAAOG,EACvC,CAKD,aAAA7L,CAActM,GACZ,OAAIA,aAAgB8X,GACXM,GAA2B/0B,KAAM2c,GAEnC,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgB8X,KAClB/L,EAAAA,OAAOW,WAAWrpB,KAAK20B,MAAOhY,EAAKgY,MAAOvL,IAC1C4L,EAAAA,OAAO3L,WAAWrpB,KAAKu0B,MAAO5X,EAAK4X,MAAOnL,GAGpD,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgB8X,KAClB/L,EAAAA,OAAOC,MAAM3oB,KAAK20B,MAAOhY,EAAKgY,QAC9BK,EAAOrM,OAAAA,MAAM3oB,KAAKu0B,MAAO5X,EAAK4X,OAGxC,CAMD,QAAAxf,GACE,IAAIwU,EAAIvpB,KAAKomB,YACb,YAAImD,EAAc,CAEhB,GADAA,EAAI,mBACAvpB,KAAK20B,iBAAiB5F,QACxBxF,GAAKvpB,KAAK20B,MAAM5f,gBAGhB,GADAwU,GAAK,KACqB,iBAAfvpB,KAAK20B,MACdpL,GAAK,IACLA,GAAKvpB,KAAK20B,WAEV,IAAK,IAAIp2B,EAAI,EAAGA,EAAIyB,KAAK20B,MAAMn2B,OAAQD,GAAK,EAC1CgrB,GAAK,IACLA,GAAKvpB,KAAK20B,MAAMp2B,GAItB,IAAK,IAAIA,EAAI,EAAGA,EAAIyB,KAAKu0B,MAAM/1B,OAAQD,GAAK,EAC1CgrB,GAAK,KACLA,GAAKvpB,KAAKu0B,MAAMh2B,GAAIwW,WAEtBwU,GAAK,IACJvpB,KAAuBomB,YAAcmD,CACvC,CACD,OAAOA,CACR,CAED,aAAA/Z,CAAcmlB,KAAmCJ,IAC3CI,aAAiB5F,EAAAA,OAA0B,iBAAV4F,KACnCA,EAAQ5F,EAAAA,MAAMnmB,SAAS+rB,EAAO,QAEhC,MAAM5c,EAAIwc,EAAM/1B,OACVs2B,EAAQ,IAAIjd,MAAiBE,GACnC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAM20B,EAAOqB,EAAMh2B,GAGfu2B,EAAMv2B,GAFU,iBAAT20B,EACC,IAAN30B,EACSu0B,GAAUnJ,MAAMuJ,GAEhBJ,GAAUc,UAAUV,GAGtBJ,GAAUlqB,SAAS2rB,EAAMh2B,GAEvC,CACD,OAAO,IAAIk2B,GAAeE,EAAOG,EAClC,CAED,eAAAlsB,CAAiEtJ,GAC/D,GAAIA,SAAsCA,aAAiBm1B,GACzD,OAAOn1B,EACF,GAAqB,iBAAVA,EAChB,OAAOm1B,GAAe9K,MAAMrqB,GACvB,GAAqB,iBAAVA,EAChB,OAAOm1B,GAAe/K,SAASpqB,GAEjC,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBzqB,GACd,IAAI01B,EAAiC11B,EAAK01B,OACtCA,aAAiB5F,EAAAA,OAA0B,iBAAV4F,KACnCA,EAAQ5F,EAAAA,MAAMnmB,SAAS+rB,EAAO,QAEhC,MAAM5c,EAAI9Y,EAAKs1B,MAAM/1B,OACfs2B,EAAQ,IAAIjd,MAAiBE,GACnC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAC1Bu2B,EAAMv2B,GAAKu0B,GAAUlqB,SAAS3J,EAAKs1B,MAAMh2B,IAE3C,OAAO,IAAIk2B,GAAeE,EAAOG,EAClC,CAED,YAAAnL,CAAaxD,GACX,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAAS8K,GAAqBtL,MAAME,GACxC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAED,iBAAA2uB,CAAkB/O,GAChB,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASgL,GAA0BxL,MAAME,GAC7C,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,EAkBU,MAAAwuB,GAA6B,SAAWhK,GACnD,MAAMgK,EAA6B,SAAUK,EAAoBC,GAC/D,MAAMnK,EAAe,SAAUC,GAC7B,MAAMwJ,EAAQzJ,EAAaoK,kBAAkBnK,GACvCoK,EAAoBrK,EAAaqK,kBACjCC,EAAYD,EAAkB/2B,OAC9B+1B,EAAQ,IAAI1c,MAAiB2d,GACnC,IAAK,IAAIj3B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAClCg2B,EAAMh2B,GAAKg3B,EAAkBh3B,GAAI4sB,GAEnC,OAAO,IAAIsJ,GAAeE,EAAOJ,EACnC,EACAp2B,OAAOwtB,eAAeT,EAAc6J,EAA2B92B,WAC9DitB,EAA8CoK,kBAAoB1J,eAAawJ,EAAGT,MAAOU,EAAGV,OAC7F,MAAMc,EAASL,EAAGb,MACZmB,EAASL,EAAGd,MACZiB,EAAYrf,KAAKC,IAAIqf,EAAOj3B,OAAQk3B,EAAOl3B,QAC3C+2B,EAAoB,IAAI1d,MAA+B2d,GAC7D,IAAK,IAAIj3B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAClCg3B,EAAkBh3B,GAAKk3B,EAAOl3B,GAAI0qB,cAAcyM,EAAOn3B,IAGzD,OADC2sB,EAA8CqK,kBAAoBA,EAC5DrK,CACT,EA0DA,OAnDA6J,EAA2B92B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WAC5D82B,EAA2B92B,UAAU6B,YAAci1B,EAEnD52B,OAAOgB,eAAe41B,EAA2B92B,UAAW,EAAG,CAC7D,GAAAc,GACE,MAAM41B,EAAQ30B,KAAKs1B,kBAAkB,GAC/BC,EAAoBv1B,KAAKu1B,kBACzBC,EAAYD,EAAkB/2B,OAC9B+1B,EAAQ,IAAI1c,MAAiB2d,GACnC,IAAK,IAAIj3B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAClCg2B,EAAMh2B,GAAKg3B,EAAkBh3B,GAAI,GAEnC,OAAO,IAAIk2B,GAAeE,EAAOJ,EAClC,EACD3a,cAAc,IAGhBzb,OAAOgB,eAAe41B,EAA2B92B,UAAW,EAAG,CAC7D,GAAAc,GACE,MAAM41B,EAAQ30B,KAAKs1B,kBAAkB,GAC/BC,EAAoBv1B,KAAKu1B,kBACzBC,EAAYD,EAAkB/2B,OAC9B+1B,EAAQ,IAAI1c,MAAiB2d,GACnC,IAAK,IAAIj3B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAClCg2B,EAAMh2B,GAAKg3B,EAAkBh3B,GAAI,GAEnC,OAAO,IAAIk2B,GAAeE,EAAOJ,EAClC,EACD3a,cAAc,IAGhBmb,EAA2B92B,UAAUye,OAAS,SAAUC,GACtD,GAAI3c,OAAS2c,EACX,OAAO,EACF,GAAIA,aAAgBoY,GACrB/0B,KAAKs1B,kBAAkB5Y,OAAOC,EAAK2Y,mBAAoB,CACzD,MAAMvd,EAAI/X,KAAKu1B,kBAAkB/2B,OACjC,GAAIuZ,IAAM4E,EAAK4Y,kBAAkB/2B,OAC/B,OAAO,EAET,IAAK,IAAID,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAC1B,IAAKyB,KAAKu1B,kBAAkBh3B,GAAIme,OAAOC,EAAK4Y,kBAAkBh3B,IAC5D,OAAO,EAGX,OAAO,CACR,CAEH,OAAO,CACT,EAEOw2B,CACR,CAlFyC,CAkFvCnJ,gBAGG,MAAOuJ,WAAkC5K,EAAAA,OAM7C,WAAAzqB,CAAYktB,EAA8B2I,EAC9BC,EAA2B1L,GACrCnqB,QACAC,KAAKgtB,YAAcA,EACnBhtB,KAAK21B,YAAcA,EACnB31B,KAAK41B,KAAOA,EACZ51B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOsL,GAA0BxL,MAAME,EAAO7pB,KAAKgtB,YAAahtB,KAAK21B,YAC9B31B,KAAK41B,KAAM51B,KAAKkqB,KACxD,CAED,YAAAP,CAAaE,EAAcmD,EAA8B2I,EAC5CC,EAA2B1L,EAAe,GACrD,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADQ,KAAN9C,GAAyB,KAANA,GAAmBA,GAAK,IAAaA,GAAK,GACxD,EAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,aAEAyL,WADEA,EACY/C,EAAAA,YAAYjJ,MAAME,EAAO,OAEzB8L,EAAYjJ,KAAK7C,IAEL,CAC1B,GAAI8L,EAAYtL,SACd,OAAOsL,EACF,GAAIA,EAAYrL,UACrB,OAAOqL,EAAYpI,SAEtB,CAEH,GAAa,IAATrD,EAAY,CAId,aAHI8C,IACFA,EAAcjG,EAAAA,QAAQO,gBAEjBuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAC1B,GAAc,OAAV4mB,EAIF,OAAO5C,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,cAAgBqY,EAAOtD,IAH9DmD,OAAmB,EACnB9C,EAAO,CAIV,CACF,CACD,GAAa,IAATA,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,iBAAkB/C,IAH1DA,EAAMK,OACNA,EAAO,CAIV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CAId,aAHI8C,IACFA,EAAcjG,EAAAA,QAAQO,gBAEjBuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAE1B,OADAymB,OAAmB,EACXG,GACN,IAAK,OACL,IAAK,QACHyI,EAAOzI,EACPjD,EAAO,EACP,MACF,IAAK,MACL,IAAK,SACH0L,EAAOzI,EACPjD,EAAO,EACP,MACF,QAAS,OAAOK,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,iBAAmBqY,EAAOtD,IAE7E,CACF,CACD,GAAa,IAATK,EAAY,CACd,YAAI8C,EAAwB,CAC1B,KAAOnD,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAYhD,EAAQC,QAAAA,QAAQI,GACpC4F,EAAcjG,EAAAA,QAAQO,oBACjB,IAAKuC,EAAMgD,UAChB,OAAOtC,SAAOjsB,KAAKs3B,EAEtB,CACD,YAAI5I,EAAwB,CAC1B,KAAOnD,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAE1B,OADAymB,OAAmB,EACXG,GACN,IAAK,MACL,IAAK,SAAU,OAAO5C,EAAAA,OAAOjsB,KAAK,CAACs3B,EAA0BzI,IAC7D,QAAS,OAAO5C,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,iBAAmBqY,EAAOtD,IAE7E,CACF,CACF,CACD,GAAa,IAATK,EAAY,CACd,YAAI8C,EAAwB,CAC1B,KAAOnD,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAYhD,EAAQC,QAAAA,QAAQI,GACpC4F,EAAcjG,EAAAA,QAAQO,oBACjB,IAAKuC,EAAMgD,UAChB,OAAOtC,SAAOjsB,KAAKs3B,EAEtB,CACD,YAAI5I,EAAwB,CAC1B,KAAOnD,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAE1B,OADAymB,OAAmB,EACXG,GACN,IAAK,OACL,IAAK,QAAS,OAAO5C,EAAAA,OAAOjsB,KAAK,CAACs3B,EAA0BzI,IAC5D,QAAS,OAAO5C,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,iBAAmBqY,EAAOtD,IAE7E,CACF,CACF,CACD,OAAO,IAAIsL,GAA0BnI,EAAa2I,EAAaC,EAAM1L,EACtE,EAIG,MAAO+K,WAA6B1K,EAAAA,OAMxC,WAAAzqB,CAAYktB,EAA8B2I,EAC9BE,EAAmC3L,GAC7CnqB,QACAC,KAAKgtB,YAAcA,EACnBhtB,KAAK21B,YAAcA,EACnB31B,KAAK61B,YAAcA,EACnB71B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOoL,GAAqBtL,MAAME,EAAO7pB,KAAKgtB,YAAahtB,KAAK21B,YAC9B31B,KAAK61B,YAAa71B,KAAKkqB,KAC1D,CAED,YAAAP,CAAaE,EAAcmD,EAA8B2I,EAC5CE,EAAmC3L,EAAe,GAC7D,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CAId,aAHI8C,IACFA,EAAcjG,EAAAA,QAAQO,gBAEjBuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAQC,QAAAA,QAAQI,IAAY,KAANA,IAChEyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAC1B,GAAc,oBAAV4mB,EAIF,OAAO5C,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,cAAgBqY,EAAOtD,IAH9DmD,OAAmB,EACnB9C,EAAO,CAIV,CACF,CACD,GAAa,IAATA,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,GAAIL,EAAME,UAAkB,KAAN3C,EACpByC,EAAMK,OACNA,EAAO,OACF,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,GAAa,IAATK,aAEAyL,WADEA,EACYR,GAA0BxL,MAAME,GAEhC8L,EAAYjJ,KAAK7C,IAG/B,GAAI8L,EAAYtL,SACdH,EAAO,OACF,GAAIyL,EAAYrL,UACrB,OAAOqL,EAAYpI,UAIzB,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAQA,EAAMK,OAEhB,IAAIL,EAAME,UAAkB,KAAN3C,EAIpB,OAAOmD,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,cAAe/C,IAHvDA,EAAQA,EAAMK,OACdA,EAAO,CAIV,CACD,GAAa,IAATA,aAEA2L,WADEA,EACY/B,GAAoBnK,MAAME,GAE1BgM,EAAYnJ,KAAK7C,IAG/B,GAAIgM,EAAYxL,SACdH,EAAO,OACF,GAAI2L,EAAYvL,UACrB,OAAOuL,EAAYtI,UAIzB,GAAa,IAATrD,EAAY,CACd,KAAOL,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAMK,OAER,GAAIL,EAAME,UAA6B,KAAjBF,EAAMI,OAE1B,OADAJ,EAAMK,OACCK,SAAOjsB,KAAK,IAAIm2B,GAAekB,EAAapvB,OAAQsvB,EAAatvB,SACnE,IAAKsjB,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,IAAK/C,GAEhD,CACD,OAAO,IAAIoL,GAAqBjI,EAAa2I,EAAaE,EAAa3L,EACxE,CAGD,gBAAAsD,CAAiB3D,EAAcmD,GAC7B,OAAOiI,GAAqBtL,MAAME,EAAOmD,OAAAA,SAA6B,EACvE,EC9jBU,MAAA8I,GAAgB,CAC3B,CAAC7Y,OAAOC,aAAa2K,GACZA,aAAoBkO,IACpBC,GAAc/Y,OAAOC,aAAa2K,IACd,iBAAbA,GACPiO,GAAchN,QAAQjB,GAG/B,OAAAiB,CAAQxpB,GACN,IAAKuY,MAAMiR,QAAQxpB,IAA2B,IAAjBA,EAAMd,OACjC,OAAO,EAET,IAAK,IAAID,EAAI,EAAGA,EAAIe,EAAMd,OAAQD,GAAK,EACrC,IAAKu3B,GAAc7Y,OAAOC,aAAa5d,GACrC,OAAO,EAGX,OAAO,CACR,GAcU02B,GAAgB,CAC3B,CAAC/Y,OAAOC,aAAa2K,GACZ3Q,UAAQ+e,UAAUpO,EAAU,QAAS,UAAW,UAAW,aAAc,eAAgB,UAKvFkO,IAAAA,GAAS,uBAATA,OAAAA,EAAAA,MAAAA,EACX,WAAAj2B,CAAYo2B,EAAgBC,EAAiBC,EAAiBC,EAClDC,EAAsBnH,EAActuB,GAC9Cb,KAAKk2B,MAAQA,EACbl2B,KAAKm2B,QAAUA,EACfn2B,KAAKo2B,QAAUA,EACfp2B,KAAKq2B,WAAaA,EAClBr2B,KAAKs2B,aAAeA,EACpBt2B,KAAKmvB,MAAQA,EACbnvB,KAAKa,KAAOA,EACZb,KAAKomB,iBAAmB,CACzB,CAMD,SAAAmQ,CAAUL,GACR,OAAIA,IAAUl2B,KAAKk2B,MACVl2B,KAEF,IAAI+1B,EAAUG,EAAOl2B,KAAKm2B,QAASn2B,KAAKo2B,QAASp2B,KAAKq2B,WACxCr2B,KAAKs2B,aAAct2B,KAAKmvB,MAAOnvB,KAAKa,KAC1D,CAID,WAAA21B,CAAYL,GAEV,OADAA,EAAUlQ,SAAOrd,SAASutB,IACdzZ,OAAO1c,KAAKm2B,SACfn2B,KAEF,IAAI+1B,EAAU/1B,KAAKk2B,MAAOC,EAASn2B,KAAKo2B,QAASp2B,KAAKq2B,WACxCr2B,KAAKs2B,aAAct2B,KAAKmvB,MAAOnvB,KAAKa,KAC1D,CAID,WAAA41B,CAAYL,GAEV,OADAA,EAAUnQ,SAAOrd,SAASwtB,IACd1Z,OAAO1c,KAAKo2B,SACfp2B,KAEF,IAAI+1B,EAAU/1B,KAAKk2B,MAAOl2B,KAAKm2B,QAASC,EAASp2B,KAAKq2B,WACxCr2B,KAAKs2B,aAAct2B,KAAKmvB,MAAOnvB,KAAKa,KAC1D,CAID,cAAA61B,CAAeL,GAEb,OADAA,EAAapQ,SAAOrd,SAASytB,IACd3Z,OAAO1c,KAAKq2B,YAClBr2B,KAEF,IAAI+1B,EAAU/1B,KAAKk2B,MAAOl2B,KAAKm2B,QAASn2B,KAAKo2B,QAASC,EACxCr2B,KAAKs2B,aAAct2B,KAAKmvB,MAAOnvB,KAAKa,KAC1D,CAID,gBAAA81B,CAAiBL,GAEf,OADAA,EAAerQ,SAAOrd,SAAS0tB,IACd5Z,OAAO1c,KAAKs2B,cACpBt2B,KAEF,IAAI+1B,EAAU/1B,KAAKk2B,MAAOl2B,KAAKm2B,QAASn2B,KAAKo2B,QAASp2B,KAAKq2B,WAC7CC,EAAct2B,KAAKmvB,MAAOnvB,KAAKa,KACrD,CAID,SAAAuyB,CAAUjE,GAER,OADAA,EAAQzB,EAAM9kB,SAASumB,IACbzS,OAAO1c,KAAKmvB,OACbnvB,KAEF,IAAI+1B,EAAU/1B,KAAKk2B,MAAOl2B,KAAKm2B,QAASn2B,KAAKo2B,QAASp2B,KAAKq2B,WAC7Cr2B,KAAKs2B,aAAcnH,EAAOnvB,KAAKa,KACrD,CAWD,GAAA+1B,CAAIV,EAA6CC,EAAsBC,EAAkCC,EAAqCC,EAAuCnH,GACnL,IAAItuB,EAQJ,OALEA,EAFgB,OAAdb,KAAKa,KAEAb,KAAKa,KAAK+1B,IAAIC,MAAM72B,KAAKa,KAAMrB,WAG/Bu2B,EAAUvmB,OAAOqnB,MAAMd,EAAWv2B,WAEpC,IAAIu2B,EAAU/1B,KAAKk2B,MAAOl2B,KAAKm2B,QAASn2B,KAAKo2B,QAASp2B,KAAKq2B,WAC7Cr2B,KAAKs2B,aAAct2B,KAAKmvB,MAAOtuB,EACrD,CAKD,aAAAooB,CAActM,GACZ,OAAIA,aAAgBoZ,EACXe,GAAsB92B,KAAM2c,GAE9B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBoZ,IAClB/1B,KAAKk2B,QAAUvZ,EAAKuZ,OACpBl2B,KAAKm2B,QAAQhN,aAAaxM,EAAKwZ,QAAS/M,IACxCppB,KAAKo2B,QAAQjN,aAAaxM,EAAKyZ,QAAShN,IACxCppB,KAAKq2B,WAAWlN,aAAaxM,EAAK0Z,WAAYjN,IAC9CppB,KAAKs2B,aAAanN,aAAaxM,EAAK2Z,aAAclN,IAClDppB,KAAKmvB,MAAMhG,aAAaxM,EAAKwS,MAAO/F,IACpCoK,aAAWxzB,KAAKa,KAAM8b,EAAK9b,KAAMuoB,GAG3C,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBoZ,IAClB/1B,KAAKk2B,QAAUvZ,EAAKuZ,OAASl2B,KAAKm2B,QAAQzZ,OAAOC,EAAKwZ,UACtDn2B,KAAKo2B,QAAQ1Z,OAAOC,EAAKyZ,UAAYp2B,KAAKq2B,WAAW3Z,OAAOC,EAAK0Z,aACjEr2B,KAAKs2B,aAAa5Z,OAAOC,EAAK2Z,eAAiBt2B,KAAKmvB,MAAMzS,OAAOC,EAAKwS,QACtEsE,EAAOzzB,OAAAA,KAAKa,KAAM8b,EAAK9b,MAGjC,CAMD,QAAAkU,GACE,IAAIwU,EAAIvpB,KAAKomB,YAsBb,gBArBImD,IACFA,EAAI,GACAvpB,KAAKk2B,QACP3M,GAAK,QACLA,GAAK,KAEPA,GAAKvpB,KAAKm2B,QAAQphB,WAClBwU,GAAK,IACLA,GAAKvpB,KAAKo2B,QAAQrhB,WAClBwU,GAAK,IACLA,GAAKvpB,KAAKq2B,WAAWthB,WACrBwU,GAAK,IACLA,GAAKvpB,KAAKs2B,aAAavhB,WACvBwU,GAAK,IACLA,GAAKvpB,KAAKmvB,MAAMpa,WACE,OAAd/U,KAAKa,OACP0oB,GAAK,KACLA,GAAKvpB,KAAKa,KAAKkU,YAEhB/U,KAAuBomB,YAAcmD,GAEjCA,CACR,CASD,aAAA/Z,CAAc0mB,EAA6CC,EAAsBC,EAAkCC,EAAqCC,EAAuCnH,GAC7L,GAAyB,IAArB3vB,UAAUhB,OACZ,OAAOu3B,EAAUntB,SAASstB,GACrB,GAAqB,kBAAVA,EAAqB,CACrC,GAAyB,IAArB12B,UAAUhB,OACZ2wB,EAAQzB,EAAM9kB,SAASwtB,GACvBE,EAAerQ,EAAAA,OAAO8Q,OACtBV,EAAapQ,EAAAA,OAAO8Q,OACpBX,EAAUnQ,SAAOrd,SAASutB,GAC1BA,EAAUlQ,SAAOrd,SAASstB,QACrB,GAAyB,IAArB12B,UAAUhB,OACnB2wB,EAAQzB,EAAM9kB,SAASytB,GACvBC,EAAerQ,EAAAA,OAAO8Q,OACtBV,EAAapQ,SAAOrd,SAASwtB,GAC7BA,EAAUnQ,SAAOrd,SAASutB,GAC1BA,EAAUlQ,SAAOrd,SAASstB,OACrB,IAAyB,IAArB12B,UAAUhB,OAOnB,MAAM,IAAI+D,MAAM2zB,EAAQ,KAAOC,EAAU,KAAOC,EAAU,KAAOC,EAAa,KAAOC,EAAe,KAAOnH,GAN3GA,EAAQzB,EAAM9kB,SAAS0tB,GACvBA,EAAerQ,SAAOrd,SAASytB,GAC/BA,EAAapQ,SAAOrd,SAASwtB,GAC7BA,EAAUnQ,SAAOrd,SAASutB,GAC1BA,EAAUlQ,SAAOrd,SAASstB,EAG3B,CACDA,GAAQ,CACT,MACC,GAAyB,IAArB12B,UAAUhB,OACZ2wB,EAAQzB,EAAM9kB,SAASytB,GACvBC,EAAerQ,EAAAA,OAAO8Q,OACtBV,EAAapQ,EAAAA,OAAO8Q,OACpBX,EAAUnQ,SAAOrd,SAASwtB,GAC1BD,EAAUlQ,SAAOrd,SAASutB,QACrB,GAAyB,IAArB32B,UAAUhB,OACnB2wB,EAAQzB,EAAM9kB,SAAS0tB,GACvBA,EAAerQ,EAAAA,OAAO8Q,OACtBV,EAAapQ,SAAOrd,SAASytB,GAC7BD,EAAUnQ,SAAOrd,SAASwtB,GAC1BD,EAAUlQ,SAAOrd,SAASutB,OACrB,IAAyB,IAArB32B,UAAUhB,OAOnB,MAAM,IAAI+D,MAAM2zB,EAAQ,KAAOC,EAAU,KAAOC,EAAU,KAAOC,EAAa,KAAOC,EAAe,KAAOnH,GAN3GA,EAAQzB,EAAM9kB,SAASumB,GACvBmH,EAAerQ,SAAOrd,SAAS0tB,GAC/BD,EAAapQ,SAAOrd,SAASytB,GAC7BD,EAAUnQ,SAAOrd,SAASwtB,GAC1BD,EAAUlQ,SAAOrd,SAASutB,EAG3B,CAEH,OAAO,IAAIJ,EAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAO,KAChF,CAID,eAAAvmB,IAAmBouB,GACjB,IAAI13B,EACJ,GAAyB,IAArBE,UAAUhB,OACZ,OAAO,KAMT,GAJEc,EAD8B,IAArBE,UAAUhB,OACXw4B,EAAO,GAEPA,EAEN13B,SAAsCA,aAAiBy2B,EACzD,OAAOz2B,EACF,GAAqB,iBAAVA,EAChB,OAAOy2B,EAAUpM,MAAMrqB,GAClB,GAAqB,iBAAVA,YAAuBA,EAAcd,OACrD,OAAOu3B,EAAUrM,SAASpqB,GACrB,GAAqB,iBAAVA,GAAgD,IAAzBA,EAAcd,OACrD,OAAOu3B,EAAUkB,UAAU33B,GAE7B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBzqB,GACd,MAAMi3B,EAAQj3B,EAAKi3B,QAAS,EACtBC,OAAgC,IAAtBl3B,EAAKk3B,QAAqBlQ,EAAAA,OAAOrd,SAAS3J,EAAKk3B,SAAWlQ,EAAO8Q,OAAAA,OAC3EX,OAAgC,IAAtBn3B,EAAKm3B,QAAqBnQ,EAAAA,OAAOrd,SAAS3J,EAAKm3B,SAAWnQ,EAAO8Q,OAAAA,OAC3EV,OAAsC,IAAzBp3B,EAAKo3B,WAAwBpQ,EAAAA,OAAOrd,SAAS3J,EAAKo3B,YAAcpQ,EAAO8Q,OAAAA,OACpFT,OAA0C,IAA3Br3B,EAAKq3B,aAA0BrQ,EAAAA,OAAOrd,SAAS3J,EAAKq3B,cAAgBrQ,EAAO8Q,OAAAA,OAC1F5H,OAA4B,IAApBlwB,EAAKkwB,MAAmBzB,EAAM9kB,SAAS3J,EAAKkwB,OAASzB,EAAMa,QACzE,OAAO,IAAIwH,EAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAO,KAChF,CAED,gBAAA8H,CAAiBnC,GACf,IAAIoC,EAAYnB,EAAUntB,SAASksB,EAAM,IACzC,IAAK,IAAIv2B,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EACrC24B,EAAYA,EAAUN,IAAI9B,EAAMv2B,IAElC,OAAO24B,CACR,CAED,gBAAAhR,CAAiB5mB,GACf,IAAI43B,EAA8B,KA+DlC,OA9DA53B,EAAMqnB,SAAAA,SAAkBC,EAAYhC,GAClC,MAAMgF,EAAShD,EAAKgD,OAAO,aAC3B,IAAKA,EAAO/Y,YACV,OAEF,IAAIqlB,EACAC,EACAC,EACAC,EACAC,EACAnH,EACJvF,EAAOjD,SAAAA,SAAkBC,EAAYhC,GACnC,MAAM7mB,EAAM6oB,EAAK7oB,IAAIqoB,uBACjBroB,EACU,UAARA,EACFm4B,EAAQtP,EAAK0F,UAAU6K,aAAajB,GACnB,YAARn4B,EACTo4B,EAAUvP,EAAK0F,UAAUhG,KAAKL,EAAAA,OAAOI,OAAQ8P,GAC5B,YAARp4B,EACTq4B,EAAUxP,EAAK0F,UAAUhG,KAAKL,EAAAA,OAAOI,OAAQ+P,GAC5B,eAARr4B,EACTs4B,EAAazP,EAAK0F,UAAUhG,KAAKL,EAAAA,OAAOI,OAAQgQ,GAC/B,iBAARt4B,EACTu4B,EAAe1P,EAAK0F,UAAUhG,KAAKL,EAAAA,OAAOI,OAAQiQ,GACjC,UAARv4B,IACToxB,EAAQvI,EAAK0F,UAAUhG,KAAKoH,EAAMrH,OAAQ8I,IAEnCvI,aAAgB3W,UACX,IAAV2U,GAAegC,aAAgB4I,EAAQ5I,MAAe,UAAfA,EAAKtnB,MAC9C42B,GAAQ,EACW,IAAVtR,GAAyB,IAAVA,YAAesR,EACvCC,EAAUvP,EAAKN,KAAKL,EAAAA,OAAOI,OAAQ8P,GAChB,IAAVvR,GAAyB,IAAVA,YAAesR,EACvCE,EAAUxP,EAAKN,KAAKL,EAAAA,OAAOI,OAAQ+P,GAChB,IAAVxR,GAAyB,IAAVA,YAAesR,GACvCG,EAAazP,EAAKN,KAAKL,EAAAA,OAAOI,OAAQgQ,YAClCA,IACFlH,EAAQvI,EAAKN,KAAKoH,EAAMrH,OAAQ8I,MAEd,IAAVvK,GAAyB,IAAVA,QAA8B,IAAfsR,aAAqB/G,GAC7DmH,EAAe1P,EAAKN,KAAKL,EAAAA,OAAOI,OAAQiQ,YACpCA,IACFnH,EAAQvI,EAAKN,KAAKoH,EAAMrH,OAAQ8I,MAEd,IAAVvK,GAAyB,IAAVA,QAA8B,IAAfsR,aAAqB/G,IAC7DA,EAAQvI,EAAKN,KAAKoH,EAAMrH,OAAQ8I,IAGtC,IACA+G,OAAQA,IAAAA,GAAmBA,EAC3BC,OAAUA,IAAAA,EAAqBA,EAAUlQ,EAAAA,OAAO8Q,OAChDX,OAAUA,IAAAA,EAAqBA,EAAUnQ,EAAAA,OAAO8Q,OAChDV,OAAaA,IAAAA,EAAwBA,EAAapQ,EAAAA,OAAO8Q,OACzDT,OAAeA,IAAAA,EAA0BA,EAAerQ,EAAAA,OAAO8Q,OAC/D5H,OAAQA,IAAAA,EAAmBA,EAAQzB,EAAMa,QACzC,MAAM1tB,EAAO,IAAIk1B,EAAUG,IAAS,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAO,MAE5F+H,EADgB,OAAdA,EACUA,EAAUN,IAAI/1B,GAEdA,CAEhB,IACOq2B,CACR,CAED,YAAAvN,CAAaxD,GACX,IAAI0D,EAAQ9C,EAAAA,QAAQ+C,YAAY3D,GAChC,KAAO0D,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASiN,GAAgBzN,MAAME,GACnC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,CAGD,WAAO8f,GACL,OAAO,IAAIgR,GAAc,KAC1B,GAHAzM,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAirB,EAAA,CAAA/sB,KAAA,SAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAO0T,OAEN,KAAAyE,GAtWU1rB,EAASQ,EAAAkrB,IAAA,EAAA,GAkYT,MAAAgM,GAAwB,SAAW/L,GAC9C,MAAM+L,EAAwB,SAAUQ,EAAeC,GACrD,MAAMrM,EAAe,SAAUC,GAC7B,MAAM+K,EAAQhL,EAAasM,kBAAkBrM,GACvCgL,EAAUjL,EAAauM,oBAAoBtM,GAC3CiL,EAAUlL,EAAawM,oBAAoBvM,GAC3CkL,EAAanL,EAAayM,uBAAuBxM,GACjDmL,EAAepL,EAAa0M,yBAAyBzM,GACrDgE,EAAQjE,EAAa+I,kBAAkB9I,GACvCtqB,EAAOqqB,EAAa2M,iBAAiB1M,GAC3C,OAAO,IAAI4K,GAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAOtuB,EACjF,EASA,OARA1C,OAAOwtB,eAAeT,EAAc4L,EAAsB74B,WACzDitB,EAA8CsM,kBAAoB5L,eAAa0L,EAAGpB,MAAOqB,EAAGrB,OAC5FhL,EAA8CuM,oBAAsBH,EAAGnB,QAAQlN,cAAcsO,EAAGpB,SAChGjL,EAA8CwM,oBAAsBJ,EAAGlB,QAAQnN,cAAcsO,EAAGnB,SAChGlL,EAA8CyM,uBAAyBL,EAAGjB,WAAWpN,cAAcsO,EAAGlB,YACtGnL,EAA8C0M,yBAA2BN,EAAGhB,aAAarN,cAAcsO,EAAGjB,cAC1GpL,EAA8C+I,kBAAoBqD,EAAGnI,MAAMlG,cAAcsO,EAAGpI,OAC5FjE,EAA8C2M,iBAAmBjM,eAAa0L,EAAGz2B,KAAM02B,EAAG12B,MACpFqqB,CACT,EAqDA,OA9CA4L,EAAsB74B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACvD64B,EAAsB74B,UAAU6B,YAAcg3B,EAE9C34B,OAAOgB,eAAe23B,EAAsB74B,UAAW,EAAG,CACxD,GAAAc,GACE,MAAMm3B,EAAQl2B,KAAKw3B,kBAAkB,GAC/BrB,EAAUn2B,KAAKy3B,oBAAoB,GACnCrB,EAAUp2B,KAAK03B,oBAAoB,GACnCrB,EAAar2B,KAAK23B,uBAAuB,GACzCrB,EAAet2B,KAAK43B,yBAAyB,GAC7CzI,EAAQnvB,KAAKi0B,kBAAkB,GAC/BpzB,EAAOb,KAAK63B,iBAAiB,GACnC,OAAO,IAAI9B,GAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAOtuB,EAChF,EACD+Y,cAAc,IAGhBzb,OAAOgB,eAAe23B,EAAsB74B,UAAW,EAAG,CACxD,GAAAc,GACE,MAAMm3B,EAAQl2B,KAAKw3B,kBAAkB,GAC/BrB,EAAUn2B,KAAKy3B,oBAAoB,GACnCrB,EAAUp2B,KAAK03B,oBAAoB,GACnCrB,EAAar2B,KAAK23B,uBAAuB,GACzCrB,EAAet2B,KAAK43B,yBAAyB,GAC7CzI,EAAQnvB,KAAKi0B,kBAAkB,GAC/BpzB,EAAOb,KAAK63B,iBAAiB,GACnC,OAAO,IAAI9B,GAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAOtuB,EAChF,EACD+Y,cAAc,IAGhBkd,EAAsB74B,UAAUye,OAAS,SAAUC,GACjD,OAAI3c,OAAS2c,GAEFA,aAAgBma,IAClB92B,KAAKw3B,kBAAkB9a,OAAOC,EAAK6a,oBACnCx3B,KAAKy3B,oBAAoB/a,OAAOC,EAAK8a,sBACrCz3B,KAAK03B,oBAAoBhb,OAAOC,EAAK+a,sBACrC13B,KAAK23B,uBAAuBjb,OAAOC,EAAKgb,yBACxC33B,KAAK43B,yBAAyBlb,OAAOC,EAAKib,2BAC1C53B,KAAKi0B,kBAAkBvX,OAAOC,EAAKsX,oBACnCj0B,KAAK63B,iBAAiBnb,OAAOC,EAAKkb,kBAG7C,EAEOf,CACR,CA3EoC,CA2ElClL,gBAGG,MAAOyL,WAAsBxL,EAAAA,KACjC,WAAA/rB,CAAYgsB,GACV/rB,QACA5B,OAAOgB,eAAea,KAAM,OAAQ,CAClCV,MAAOwsB,EACPnS,YAAY,EACZC,cAAc,GAEjB,CAIQ,QAAAmS,CAASD,GAChB,OAAIA,IAAS9rB,KAAK8rB,KACT9rB,KAEF,IAAIq3B,GAAcvL,EAC1B,CAEQ,IAAAE,CAAKkL,GACZ,IAAIY,EAAS/B,GAAUntB,SAASsuB,GAChC,MAAMa,EAAS7L,SAAO1c,SACtB,OAAG,CACD,MAAMoa,EAASsC,EAAAA,OAAO1c,OAAO,GAU7B,GATIsoB,EAAO5B,OACTtM,EAAO/qB,KAAK,SAEd+qB,EAAO/qB,KAAKonB,EAAAA,OAAOI,OAAO2F,KAAK8L,EAAO3B,UACtCvM,EAAO/qB,KAAKonB,EAAAA,OAAOI,OAAO2F,KAAK8L,EAAO1B,UACtCxM,EAAO/qB,KAAKonB,EAAAA,OAAOI,OAAO2F,KAAK8L,EAAOzB,aACtCzM,EAAO/qB,KAAKonB,EAAAA,OAAOI,OAAO2F,KAAK8L,EAAOxB,eACtC1M,EAAO/qB,KAAK6uB,EAAMrH,OAAO2F,KAAK8L,EAAO3I,QACrC4I,EAAOC,KAAK,YAAapO,GACL,OAAhBkO,EAAOj3B,KAIX,MAHEi3B,EAASA,EAAOj3B,IAIX,CACT,OAAOk3B,CACR,CAEQ,IAAAzR,CAAKM,GACZ,MAAMtnB,EAAQsnB,EAAK0F,UACnB,IAAI4K,EACJ,IAEE,GADAA,EAAYnB,GAAU7P,UAAU5mB,YAC5B43B,EAAsB,CACxB,MAAM/Q,EAAS7mB,EAAM8mB,uBACjBD,IACF+Q,EAAYnB,GAAUpM,MAAMxD,GAE/B,CACF,CAAC,MAAOjC,GAER,CACD,OAAOgT,CACR,EAIG,MAAOE,WAAwB7M,EAAAA,OAUnC,WAAAzqB,CAAYo3B,EAAuBlK,EACvBiL,EAAgCC,EAChCC,EAAmCC,EACnChE,EAA6BlK,GACvCnqB,QACAC,KAAKk3B,UAAYA,EACjBl3B,KAAKgtB,YAAcA,EACnBhtB,KAAKi4B,cAAgBA,EACrBj4B,KAAKk4B,cAAgBA,EACrBl4B,KAAKm4B,iBAAmBA,EACxBn4B,KAAKo4B,mBAAqBA,EAC1Bp4B,KAAKo0B,YAAcA,EACnBp0B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAOuN,GAAgBzN,MAAME,EAAO7pB,KAAKk3B,UAAWl3B,KAAKgtB,YAAahtB,KAAKi4B,cAC9Cj4B,KAAKk4B,cAAel4B,KAAKm4B,iBAAkBn4B,KAAKo4B,mBAChDp4B,KAAKo0B,YAAap0B,KAAKkqB,KACrD,CAED,YAAOP,CAAME,EAAcqN,EAAuBlK,EACrCiL,EAAgCC,EAChCC,EAAmCC,EACnChE,EAA6BlK,EAAe,GACvD,IAAI9C,EAAI,EACR,OAAG,CACD,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAENG,EADEnD,EAAAA,QAAQC,QAAQI,GACX,EAEA,OAEJ,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CAEd,IADA8C,EAAcA,GAAejG,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQC,QAAQI,KAC1DyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAC1B,OAAQ4mB,GACN,IAAK,QAASjD,EAAO,EAAG,MACxB,IAAK,OAAQ,OAAOK,SAAOjsB,KAAK,MAChC,QAAS,OAAOisB,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,uBAAyBqY,EAAOtD,IAEnF,CACF,CACD,GAAa,IAATK,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,CAIV,MAAM,GAAIL,EAAMQ,SACf,OAAOE,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CACd,YAAI+N,EAA0B,CAC5B,KAAOpO,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAMK,OAEHL,EAAMgD,YACToL,EAAgB7K,eAAazD,MAAME,GAEtC,MACCoO,EAAgBA,EAAcvL,KAAK7C,GAErC,YAAIoO,EACF,GAAIA,EAAc5N,SAChBH,EAAO,OACF,GAAI+N,EAAc3N,UACvB,OAAO2N,EAAc1K,SAG1B,CACD,GAAa,IAATrD,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,CAIV,MAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CACd,YAAIgO,EAA0B,CAC5B,KAAOrO,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAMK,OAEHL,EAAMgD,YACTqL,EAAgB9K,eAAazD,MAAME,GAEtC,MACCqO,EAAgBA,EAAcxL,KAAK7C,GAErC,YAAIqO,EACF,GAAIA,EAAc7N,SAChBH,EAAO,OACF,GAAIgO,EAAc5N,UACvB,OAAO4N,EAAc3K,SAG1B,CACD,GAAa,IAATrD,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,CAIV,MAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,IAATK,EAAY,CACd,YAAIiO,EAA6B,CAC/B,KAAOtO,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAEJL,EAAME,WAAmB,KAAN3C,GAAmBA,GAAK,IAAaA,GAAK,IAC/D+Q,EAAmB/K,eAAazD,MAAME,GAC5BA,EAAMgD,YAChB3C,EAAO,GAEV,MACCiO,EAAmBA,EAAiBzL,KAAK7C,GAE3C,YAAIsO,EACF,GAAIA,EAAiB9N,SACnBH,EAAO,OACF,GAAIiO,EAAiB7N,UAC1B,OAAO6N,EAAiB5K,SAG7B,CACD,GAAa,IAATrD,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,EAIV,MAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,KAATK,EAAa,CACf,YAAIkO,EAA+B,CACjC,KAAOvO,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAEJL,EAAME,WAAmB,KAAN3C,GAAmBA,GAAK,IAAaA,GAAK,IAC/DgR,EAAqBhL,eAAazD,MAAME,GAC9BA,EAAMgD,YAChB3C,EAAO,GAEV,MACCkO,EAAqBA,EAAmB1L,KAAK7C,GAE/C,YAAIuO,EACF,GAAIA,EAAmB/N,SACrBH,EAAO,QACF,GAAIkO,EAAmB9N,UAC5B,OAAO8N,EAAmB7K,SAG/B,CACD,GAAa,KAATrD,EACF,GAAIL,EAAME,SAAU,CAClB,IAAIhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,QAIxB,OAAOM,EAAAA,OAAOC,MAAMC,EAAWmC,WAAAA,SAAS,QAAS/C,IAHjDA,EAAMK,OACNA,EAAO,EAIV,MAAM,IAAKL,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,IAG9C,GAAa,KAATK,EAAa,CACf,YAAIkK,EAAwB,CAC1B,KAAOvK,EAAME,UAAYhD,EAAAA,QAAQ4F,QAAQ9C,EAAMI,SAC7CJ,EAAMK,OAEHL,EAAMgD,YACTuH,EAAchF,EAAYzF,MAAME,GAEnC,MACCuK,EAAcA,EAAY1H,KAAK7C,GAEjC,YAAIuK,EACF,GAAIA,EAAY/J,SAAU,CACxB,MAAM6L,OAAQlJ,IAAAA,GAAgD,UAAvBA,EAAYzmB,OAC7C4vB,EAAU8B,EAAe1xB,OACzB6vB,EAAU8B,EAAe3xB,OACzB8vB,OAAa8B,IAAAA,EAA8BA,EAAiB5xB,OAAS0f,SAAO8Q,OAC5ET,OAAe8B,IAAAA,EAAgCA,EAAmB7xB,OAAS0f,SAAO8Q,OAClF5H,EAAQiF,EAAa7tB,OACrB1F,EAAO,IAAIk1B,GAAUG,EAAOC,EAASC,EAASC,EAAYC,EAAcnH,EAAO,MAEnF+H,WADEA,EACUr2B,EAEAq2B,EAAUN,IAAI/1B,GAE5BmsB,OAAmB,EACnBiL,OAAqB,EACrBC,OAAqB,EACrBC,OAAwB,EACxBC,OAA0B,EAC1BhE,OAAmB,EACnBlK,EAAO,EACR,MAAM,GAAIkK,EAAY9J,UACrB,OAAO8J,EAAY7G,SAGxB,CACD,GAAa,KAATrD,EAAa,CACf,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,UAAkB,KAAN3C,EAAiB,CACrCyC,EAAMK,OACNA,EAAO,EACP,QACD,CAAM,IAAKL,EAAMgD,UAChB,OAAOtC,SAAOjsB,KAAK44B,EAEtB,CACD,KACO,CACT,OAAO,IAAIE,GAAgBF,EAAWlK,EAAaiL,EAAeC,EACvCC,EAAkBC,EAAoBhE,EAAalK,EAC/E,EC7wBU,MAAAmO,GAAa,CACxB,QAAAzvB,CAAsDtJ,GACpD,GAAIA,SACGA,aAAiBg5B,YACjBh5B,aAAiByvB,EAAAA,OACjBzvB,aAAiB2mB,EAAAA,QACjB3mB,aAAiBouB,GACjBpuB,aAAiBwoB,GACjBxoB,aAAiBy2B,IACjBz2B,aAAiBm1B,IACjBn1B,aAAiBi5B,EACjBj5B,WAAAA,aAAiBssB,EAAAA,cACA,iBAAVtsB,GACU,kBAAVA,EACZ,OAAOA,EACF,GAAIk5B,EAAAA,aAAavb,OAAOC,aAAa5d,GAC1C,OAAOg5B,WAAS1vB,SAAStJ,GACpB,GAAImuB,EAAUxQ,OAAOC,aAAa5d,GACvC,OAAOouB,EAAM9kB,SAAStJ,GACjB,GAAIsoB,EAAS3K,OAAOC,aAAa5d,GACtC,OAAOwoB,EAAKlf,SAAStJ,GAChB,GAAIw2B,GAAc7Y,OAAOC,aAAa5d,GAC3C,OAAOy2B,GAAUntB,SAAStJ,GACrB,GAAIk1B,GAAmBvX,OAAOC,aAAa5d,GAChD,OAAOm1B,GAAe7rB,SAAStJ,GAC1B,GAAqB,iBAAVA,EAChB,OAAO+4B,GAAW1O,MAAMrqB,GAE1B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,EAED,KAAAqqB,CAAME,GAIJ,IAHqB,iBAAVA,IACTA,EAAQ9C,UAAQ+C,YAAYD,IAEvBA,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAEhB,IAAIC,EAASsO,GAAiB9O,MAAME,GACpC,GAAIM,EAAOE,SACT,KAAOR,EAAME,UAAYhD,EAAAA,QAAQiD,aAAaH,EAAMI,SAClDJ,EAAQA,EAAMK,OAMlB,OAHIL,EAAME,WAAaI,EAAOG,YAC5BH,EAASI,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,KAEvCM,EAAO5jB,MACf,EAED8f,KAAMuE,EAAKA,MAAA,WACT,OAAO,IAAI8N,QAAoB,EACjC,KAII,MAAOA,WAAuB7M,EAAAA,KAClC,WAAA/rB,CAAYgsB,GACV/rB,QACA5B,OAAOgB,eAAea,KAAM,OAAQ,CAClCV,MAAOwsB,EACPnS,YAAY,EACZC,cAAc,GAEjB,CAIQ,QAAAmS,CAASD,GAChB,OAAIA,IAAS9rB,KAAK8rB,KACT9rB,KAEF,IAAI04B,GAAe5M,EAC3B,CAEQ,IAAAE,CAAK1sB,GACZ,YAAIA,EACF,OAAOq5B,EAAAA,KAAKC,SAGd,IADAt5B,EAAQ+4B,GAAWzvB,SAAStJ,cACPg5B,EAAAA,SACnB,OAAOA,EAAAA,SAASjS,OAAO2F,KAAK1sB,GACvB,GAAIA,aAAiByvB,QAC1B,OAAOA,EAAAA,MAAM1I,OAAO2F,KAAK1sB,GACpB,GAAIA,aAAiB2mB,SAC1B,OAAOA,EAAAA,OAAOI,OAAO2F,KAAK1sB,GACrB,GAAIA,aAAiBwoB,EAC1B,OAAOA,EAAKzB,OAAO2F,KAAK1sB,GACnB,GAAIA,aAAiBouB,EAC1B,OAAOA,EAAMrH,OAAO2F,KAAK1sB,GACpB,GAAIA,aAAiBy2B,GAC1B,OAAOA,GAAU1P,OAAO2F,KAAK1sB,GACxB,GAAIA,aAAiBi5B,YAC1B,OAAOA,EAAAA,UAAUlS,OAAO2F,KAAK1sB,GACxB,GAAqB,iBAAVA,EAChB,OAAOu5B,MAAIpJ,KAAKnwB,GAElB,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAEQ,IAAAgnB,CAAKM,GACZ,MAAMtnB,EAAQsnB,EAAK0F,UACnB,GAAIhtB,aAAiBu5B,EAAAA,IACnB,OAAOv5B,EAAMqyB,cAEf,GAAIryB,aAAiBw5B,EAAAA,KACnB,OAAOx5B,EAAM63B,eAEf,MAAMhR,EAAS7mB,EAAM8mB,iBAAiB,GACtC,YAAID,EACF,IACE,OAAOkS,GAAW1O,MAAMxD,EACzB,CAAC,MAAOjC,GAER,CAEH,GAAI5kB,aAAiB4sB,EAAAA,OAAQ,CAC3B,MAAM6M,EAAOT,EAAAA,SAASpS,UAAU5mB,GAChC,GAAa,OAATy5B,EACF,OAAOA,EAET,MAAMpE,EAAQ5F,EAAAA,MAAM7I,UAAU5mB,GAC9B,GAAc,OAAVq1B,EACF,OAAOA,EAET,MAAMn2B,EAASynB,EAAAA,OAAOC,UAAU5mB,GAChC,GAAe,OAAXd,EACF,OAAOA,EAET,MAAMytB,EAAOnE,EAAK5B,UAAU5mB,GAC5B,GAAa,OAAT2sB,EACF,OAAOA,EAET,MAAMkD,EAAQzB,EAAMxH,UAAU5mB,GAC9B,GAAc,OAAV6vB,EACF,OAAOA,EAET,MAAM+H,EAAYnB,GAAU7P,UAAU5mB,GACtC,GAAkB,OAAd43B,EACF,OAAOA,EAET,MAAM8B,EAAYT,EAAAA,UAAUrS,UAAU5mB,GACtC,GAAkB,OAAd05B,EACF,OAAOA,CAEV,CAEF,EAIG,MAAOP,WAAyBlO,EAAAA,OAMpC,WAAAzqB,CAAYktB,EAA8BgD,EAC9BiJ,EAA8B/O,GACxCnqB,QACAC,KAAKgtB,YAAcA,EACnBhtB,KAAKgwB,YAAcA,EACnBhwB,KAAKi5B,YAAcA,EACnBj5B,KAAKkqB,KAAOA,CACb,CAEQ,IAAAwC,CAAK7C,GACZ,OAAO4O,GAAiB9O,MAAME,EAAO7pB,KAAKgtB,YAAahtB,KAAKgwB,YAC9BhwB,KAAKi5B,YAAaj5B,KAAKkqB,KACtD,CAED,YAAAP,CAAaE,EAAcmD,EAA8BgD,EAC5CiJ,EAA8B/O,EAAe,GACxD,IAAI9C,EAAI,EACR,GAAa,IAAT8C,EAAY,CACd,KAAOL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,UAAQ4F,QAAQvF,KAC1DyC,EAAMK,OAER,GAAIL,EAAME,SAAU,CAClB,GAAU,KAAN3C,EACF,OAAOsI,EAAe/F,MAAME,GAE5BK,EADSnD,EAAQC,QAAAA,QAAQI,GAClB,EAEA,CAEV,MAAM,IAAKyC,EAAMgD,UAChB,OAAOtC,EAAAA,OAAOC,MAAMC,EAAAA,WAAWC,WAAWb,GAE7C,CACD,GAAa,IAATK,EAAY,CAEd,IADA8C,EAAcA,GAAejG,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAAA,QAAQC,QAAQI,IAAML,EAAAA,QAAQ+F,QAAQ1F,IAAY,KAANA,IACtFyC,EAAQA,EAAMK,OACd8C,EAAYzF,MAAMH,GAEpB,IAAKyC,EAAMgD,UAAW,CACpB,MAAMM,EAAQH,EAAYzmB,OAC1B,OAAQ4mB,GACN,IAAK,MACL,IAAK,OAAQ,OAAOwC,EAAenC,UAAU3D,GAE7C,IAAK,MACL,IAAK,OAAQ,OAAO+F,GAAepC,UAAU3D,GAE7C,IAAK,kBAAmB,OAAOoL,GAAqBzH,UAAU3D,EAAOmD,GAErE,IAAK,SACL,IAAK,SACL,IAAK,UAAW,OAAO5C,EAAWoD,UAAU3D,EAAOsD,GACnD,IAAK,aAAc,OAAO/C,EAAWoD,UAAU3D,OAAAA,EAAesD,GAC9D,IAAK,OACL,IAAK,SACL,IAAK,UAAW,OAAO/C,EAAWoD,UAAU3D,OAAY,OAAA,EAAWsD,GACnE,IAAK,kBACL,IAAK,kBACL,IAAK,iBACL,IAAK,YACL,IAAK,WACL,IAAK,gBACL,IAAK,iBACL,IAAK,iBAAkB,OAAO/C,EAAWoD,UAAU3D,OAAY,OAAA,SAAmBsD,GAClF,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACL,IAAK,WAAY,OAAO/C,EAAWoD,UAAU3D,OAAAA,OAAoB,OAAA,SAAmBsD,GAEpF,IAAK,cACL,IAAK,aACL,IAAK,aACL,IAAK,YAAa,OAAO+L,2BAAyB1L,UAAU3D,EAAOmD,GACnE,IAAK,SACL,IAAK,SACL,IAAK,QAAS,OAAOmM,uBAAqB3L,UAAU3D,EAAOmD,GAC3D,IAAK,SAAU,OAAOoM,wBAAsB5L,UAAU3D,EAAOmD,GAC7D,IAAK,QACL,IAAK,QACL,IAAK,OAAQ,OAAOqM,sBAAoB7L,UAAU3D,EAAOmD,GACzD,IAAK,SAAU,OAAOsM,wBAAsB9L,UAAU3D,EAAOmD,GAC7D,IAAK,OAAQ,OAAOzC,EAAAA,OAAOjsB,KAAKi6B,YAAUgB,YAE1C,IAAK,OAAQ,OAAOhP,SAAOjsB,MAAK,GAChC,IAAK,QAAS,OAAOisB,SAAOjsB,MAAK,GACjC,QAAS,CACP,MAAM6wB,EAAQzB,EAAMwB,QAAQ/B,GAC5B,OAAc,OAAVgC,EACK5E,SAAOjsB,KAAK6wB,GAEd5E,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,wBAA0BqY,EAAOtD,GACzE,EAEJ,CACF,CACD,GAAa,IAATK,EAMF,IAJE8F,WADEA,EACYC,SAAOuJ,aAAa3P,GAEpBmG,EAAYtD,KAAK7C,IAEjBQ,SACdH,EAAO,OACF,GAAI8F,EAAY1F,UACrB,OAAO0F,EAAYzC,UAGvB,GAAa,IAATrD,EAAY,CACd,GAAIL,EAAME,WAAa3C,EAAIyC,EAAMI,OAAc,KAAN7C,GAAkB,CACzDyC,EAAMK,OACN,MAAM6O,EAAO,CAAA,EAEb,OADAA,EAAKU,KAAOzJ,EAAazpB,OAClBmzB,EAAAA,eAAeC,QAAQ,sBAAsBC,UAAU/P,EAAOkP,EACtE,CAAWlP,EAAMgD,YAChB3C,EAAO,EAEV,CACD,GAAa,IAATA,EAAY,CAEd,IADA+O,EAAcA,GAAelS,UAAQO,eAC9BuC,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAQC,QAAAA,QAAQI,IAAY,KAANA,IAChEyC,EAAMK,OACN+O,EAAYp6B,KAAKuoB,GAEdyC,EAAMgD,YACT3C,EAAO,EAEV,CACD,GAAa,IAATA,IACGL,EAAMgD,UAAW,CACpB,MAAMvtB,EAAQ0wB,EAAazpB,OACrB8mB,EAAQ4L,EAAa1yB,OAC3B,IAAIszB,EACJ,OAAQxM,GACN,IAAK,MAAOwM,EAAa9K,QAAM+K,IAAIx6B,GAAQ,MAC3C,IAAK,MAAOu6B,EAAa9K,QAAMgL,IAAIz6B,GAAQ,MAC3C,IAAK,OAAQu6B,EAAa9K,QAAMiL,KAAK16B,GAAQ,MAC7C,IAAK,OAAQu6B,EAAa9K,QAAMkL,KAAK36B,GAAQ,MAE7C,IAAK,KAAMu6B,EAAa5T,SAAOiU,GAAG56B,GAAQ,MAC1C,IAAK,KAAMu6B,EAAa5T,SAAOkU,GAAG76B,GAAQ,MAC1C,IAAK,MAAOu6B,EAAa5T,SAAOmU,IAAI96B,GAAQ,MAC5C,IAAK,IAAKu6B,EAAa5T,SAAOoU,IAAI/6B,GAAQ,MAE1C,IAAK,GAAIu6B,EAAav6B,EAAO,MAC7B,QAAS,OAAOirB,EAAOC,OAAAA,MAAMC,aAAW3V,QAAQ,wBAA0BuY,EAAOxD,IAEnF,GAAIA,EAAME,WAAa3C,EAAIyC,EAAMI,OAAQlD,EAAQ4F,QAAAA,QAAQvF,IAAY,KAANA,GAAkB,CAC/E,GAAIyS,aAAsB5T,EAAAA,OACxB,OAAOmE,EAAWoD,UAAU3D,OAAAA,OAAoB,OAAA,SAAmBgQ,GAC9D,GAA0B,iBAAfA,EAChB,OAAQv6B,GACN,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IAAK,OAAO8qB,EAAWoD,UAAU3D,OAAY,OAAA,EAAWyD,OAAOhuB,IAGzE,CACD,OAAOirB,SAAOjsB,KAAKu7B,EACpB,CAEH,OAAO,IAAIpB,GAAiBzL,EAAagD,EAAaiJ,EAAa/O,EACpE,EC3YG,SAAUoQ,GAAkBh7B,GAChC,MAAqB,iBAAVA,GAAgC,OAAVA,EAC+B,mBAAlDA,EAA4Bi7B,kBAC9Bj7B,EAA4Bi7B,oBAE7Bj7B,EAAMyV,WAGV,GAAKzV,CACd,CCTM,SAAUk7B,GAAcl7B,GAC5B,MAAqB,iBAAVA,GAAgC,OAAVA,EACuB,mBAA1CA,EAAwBm7B,cAC1Bn7B,EAAwBm7B,gBAEzBn7B,EAAMyV,WAGV,GAAKzV,CACd,CCPao7B,MAAAA,GAAa,WACxB,IAAIA,EAgBJ,OAbEA,EAD2B,oBAAlBC,cACI,SAAUr7B,GACrB,MAAqB,iBAAVA,GAAgC,OAAVA,GACe,mBAApCA,EAAqBs7B,WACvBt7B,EAAqBs7B,aACH,iBAAVt7B,EACT,IAAIu7B,aAAav7B,EAAO,UAE1B,IACT,EAEak7B,GAGRE,CACR,CAlByB,GCebI,GAAY,CACvB,CAAC7d,OAAOC,aAAa2K,GACZA,aAAoBkT,IACpBC,GAAU/d,OAAOC,aAAa2K,IACV,kBAAbA,GAaLmT,GAAY,CACvB,CAAC/d,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAsBH,EAAU,QAAS,cAK/CkT,IAAAA,GAAK,yBAALA,OAAAA,EAAAA,MAAAA,EACX,WAAAj7B,CAAYm7B,EAAeC,GACzBl7B,KAAKi7B,MAAQA,EACbj7B,KAAKk7B,UAAYA,CAClB,CASD,SAAAC,CAAUF,GACR,OAAIA,IAAUj7B,KAAKi7B,MACVj7B,KAEF+6B,EAAMvrB,OAAOyrB,EAAOj7B,KAAKk7B,UACjC,CAID,aAAAE,CAAcF,GACZ,OAAIA,IAAcl7B,KAAKk7B,UACdl7B,KAEF+6B,EAAMvrB,OAAOxP,KAAKi7B,MAAOC,EACjC,CAED,aAAIG,GACF,OAAsB,IAAfr7B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,WAAII,GACF,OAAsB,IAAft7B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,YAAIK,GACF,OAAOv7B,KAAKk7B,UAAY,CACzB,CAED,cAAIM,GACF,OAAOx7B,KAAKk7B,UAAY,CACzB,CAED,UAAAO,GACE,OAAIz7B,KAAKu7B,SACAv7B,KAEF+6B,EAAMQ,SAASv7B,KAAKi7B,MAC5B,CAED,YAAAS,GACE,OAAI17B,KAAKw7B,WACAx7B,KAEF+6B,EAAMS,WAAWx7B,KAAKi7B,MAC9B,CAED,UAAAU,GACE,OAAI37B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/BF,EAAMS,WAAWx7B,KAAKi7B,OACpBj7B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrCF,EAAMQ,SAASv7B,KAAKi7B,OAEtBj7B,IACR,CAED,SAAA47B,GACE,OAAI57B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/BF,EAAMM,YACJr7B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrCF,EAAMO,UAERt7B,IACR,CAKD,aAAAipB,CAActM,GACZ,OAAIA,aAAgBoe,EACXc,GAAkB77B,KAAM2c,GAE1B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBoe,IAClBpK,EAAAA,QAAQtH,WAAWrpB,KAAKi7B,MAAOte,EAAKse,MAAO7R,IAC3CuH,EAAAA,QAAQtH,WAAWrpB,KAAKk7B,UAAWve,EAAKue,UAAW9R,GAG7D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBoe,IAClB/6B,KAAKi7B,QAAUte,EAAKse,OAASj7B,KAAKk7B,YAAcve,EAAKue,UAG/D,CAGD,QAAAte,GACE,OAAOC,EAAQC,QAAAA,KAAKD,EAAAA,QAAQ+T,IAAI/T,UAAQ+T,IAAIC,EAAAA,aAAaC,KAAKiK,GAC1DpK,UAAQG,KAAK9wB,KAAKi7B,QAAStK,EAAAA,QAAQG,KAAK9wB,KAAKk7B,YAClD,CAGD,KAAA5R,CAASjC,GAuBP,OAtBAA,EAASA,EAAOE,MAAM,SAASA,MAAM,IAClB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAC3B7T,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACjB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAClC7T,EAASA,EAAOE,MAAM,WAAWA,MAAM,IACX,IAAnBvnB,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,YAAYA,MAAM,IACrB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAEA,IAApBj7B,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,cAAcA,MAAM,IACvB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAG7B5T,EAASA,EAAOE,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKi7B,OACrC,IAAnBj7B,KAAKk7B,YACP7T,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKk7B,aAG3C7T,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,gBAAOq7B,GACL,OAAO,IAAIN,EAAM,EAAG,EACrB,CAGD,cAAOO,GACL,OAAO,IAAIP,EAAM,EAAG,EACrB,CAED,eAAAQ,CAAgBN,GAId,gBAHIA,IACFA,EAAQ,GAEH,IAAIF,EAAME,EAAO,EACzB,CAED,iBAAAO,CAAkBP,GAIhB,gBAHIA,IACFA,EAAQ,GAEH,IAAIF,EAAME,GAAQ,EAC1B,CAED,aAAAzrB,CAAcyrB,EAAeC,GAI3B,gBAHIA,IACFA,EAAY,GAEA,IAAVD,GAA6B,IAAdC,EACVH,EAAMM,YACM,IAAVJ,GAA6B,IAAdC,EACjBH,EAAMO,UAER,IAAIP,EAAME,EAAOC,EACzB,CAED,eAAAtyB,CAAwDtJ,GACtD,GAAIA,SAAsCA,aAAiBy7B,EACzD,OAAOz7B,EACF,GAAI07B,GAAU/d,OAAOC,aAAa5d,GACvC,OAAOy7B,EAAMrR,SAASpqB,GACjB,IAAc,IAAVA,EACT,OAAOy7B,EAAMO,UACR,IAAc,IAAVh8B,EACT,OAAOy7B,EAAMM,YAEf,MAAM,IAAIz9B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBpqB,GACd,OAAO,IAAIy7B,EAAMz7B,EAAM27B,MAAO37B,EAAM47B,UACrC,GAnDAtQ,EAAAA,CAAAA,EAAAA,MAKAA,EAAAA,CAAAA,EAAAA,MAJDztB,EAAAyC,EAAA,KAAAm8B,EAAA,CAAAj+B,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAO0oB,YAEN,KAAAvQ,GAGD3tB,EAAAyC,EAAA,KAAAo8B,EAAA,CAAAl+B,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAO2oB,UAEN,KAAAxQ,GA1JU1rB,EAAKQ,EAAAkrB,IAAA,EAAA,GAyML,MAAA+Q,GAAoB,SAAW9Q,GAC1C,MAAM8Q,EAAoB,SAAU7Q,EAAWC,GAC7C,MAAMC,EAAe,SAAUC,GAC7B,MAAMH,EAAKE,EAAa,GAClBD,EAAKC,EAAa,GAClB+P,EAAQjQ,EAAGiQ,MAAQ9P,GAAKF,EAAGgQ,MAAQjQ,EAAGiQ,OACtCC,EAAkB,IAAN/P,EAAUH,EAAGkQ,UAAYjQ,EAAGiQ,UAC9C,OAAOH,GAAMvrB,OAAOyrB,EAAOC,EAC7B,EAIA,OAHA/8B,OAAOwtB,eAAeT,EAAc2Q,EAAkB59B,WACrDitB,EAA8C,GAAKF,EACnDE,EAA8C,GAAKD,EAC7CC,CACT,EAUA,OAHA2Q,EAAkB59B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACnD49B,EAAkB59B,UAAU6B,YAAc+7B,EAEnCA,CACR,CAxBgC,CAwB9BjQ,gBA0DUqQ,GAAuHlgB,WAASxI,OAAiD,gBAAiB,CAC7M1B,UAAWkpB,GAEX,SAAIE,GACF,MAAM37B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM27B,WAAa,CAChE,EAED,QAAAiB,GACE,OAAOl8B,KAAKkQ,WAAW+qB,KACxB,EAED,UAAAkB,CAAcC,GACZ,MAAM98B,EAAQU,KAAKV,MACnB,OAAIA,QACK88B,EAEF98B,EAAM27B,KACd,EAED,QAAAoB,CAASC,EAAkBzgB,EAAiD0gB,GAC1E,MAAMj9B,EAAQU,KAAKV,MACfA,UAEyB,iBAAXuc,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAASl9B,EAAM67B,UAAUmB,GAAgBzgB,EAAQ0gB,GACvD,EAED,aAAIrB,GACF,MAAM57B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM47B,UAAY,CAC/D,EAED,YAAAuB,CAAaC,EAAsB7gB,EAAiD0gB,GAClF,MAAM/pB,EAAWxS,KAAKV,MAClBkT,UAEyB,iBAAXqJ,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAAShqB,EAAS4oB,cAAcsB,GAAoB7gB,EAAQ0gB,GAClE,EAED,aAAIlB,GACF,MAAM/7B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAM+7B,SACpD,EAED,WAAIC,GACF,MAAMh8B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMg8B,OACpD,EAED,YAAIC,GACF,MAAMj8B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMi8B,QACpD,EAED,cAAIC,GACF,MAAMl8B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMk8B,UACpD,EAED,KAAAmB,CAAM9gB,EAAiD0gB,GACrDv8B,KAAKw8B,SAASzB,GAAMO,UAAgBzf,EAAe0gB,EACpD,EAED,OAAAK,CAAQ/gB,EAAiD0gB,GACvDv8B,KAAKw8B,SAASzB,GAAMM,YAAkBxf,EAAe0gB,EACtD,EAED,MAAA5W,CAAO9J,EAAiD0gB,GACtD,MAAM/pB,EAAWxS,KAAKV,MAClBkT,SACFxS,KAAKw8B,SAAShqB,EAASopB,YAAkB/f,EAAe0gB,EAE3D,EAED,YAAAM,CAAaC,EAAaC,GACxBh9B,MAAM88B,aAAaC,EAAUC,GAC7B,MAAMvqB,EAAWxS,KAAKV,MAClBkT,eAA4CsqB,IAC1CA,EAASxB,QACXt7B,KAAKg9B,SAASxqB,EAASipB,aAAmBxlB,EAAAA,SAASgnB,WAC1CH,EAASzB,WAClBr7B,KAAKg9B,SAASxqB,EAASkpB,eAAqBzlB,EAAAA,SAASgnB,WAG1D,EAED,UAAAC,CAAW3qB,EAAaC,GACtBzS,MAAMm9B,WAAW3qB,EAAUC,GACvBD,eAA4CC,IAErCD,EAASgpB,WAAa/oB,EAAS+oB,SACxCv7B,KAAKm9B,YACI5qB,EAAS+oB,UAAY9oB,EAAS8oB,QACvCt7B,KAAKo9B,WACI7qB,EAASipB,aAAehpB,EAASgpB,WAC1Cx7B,KAAKq9B,cACI9qB,EAAS8oB,YAAc7oB,EAAS6oB,WACzCr7B,KAAKs9B,aAER,EAED,SAAAH,GAEC,EAED,QAAAC,GAEC,EAED,WAAAC,GAEC,EAED,UAAAC,GAEC,EAEDhrB,YAAAA,CAAYwqB,EAAyBC,IAC/BD,QACKA,EAASpgB,OAAOqgB,GAElBD,IAAaC,ICpbXQ,GAAe,CAC1B,CAACtgB,OAAOC,aAAa2K,GACZA,aAAoB2V,IACpBC,GAAaxgB,OAAOC,aAAa2K,IACb,kBAAbA,GAaL4V,GAAe,CAC1B,CAACxgB,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAyBH,EAAU,QAAS,cAKlD2V,IAAAA,GAAQ,yBAARA,OAAAA,EAAAA,MAAAA,EACX,WAAA19B,CAAYm7B,EAAeC,GACzBl7B,KAAKi7B,MAAQA,EACbj7B,KAAKk7B,UAAYA,CAClB,CASD,SAAAC,CAAUF,GACR,OAAIA,IAAUj7B,KAAKi7B,MACVj7B,KAEFw9B,EAAShuB,OAAOyrB,EAAOj7B,KAAKk7B,UACpC,CAID,aAAAE,CAAcF,GACZ,OAAIA,IAAcl7B,KAAKk7B,UACdl7B,KAEFw9B,EAAShuB,OAAOxP,KAAKi7B,MAAOC,EACpC,CAED,aAAIwC,GACF,OAAsB,IAAf19B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,aAAIyC,GACF,OAAsB,IAAf39B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,cAAI0C,GACF,OAAO59B,KAAKk7B,UAAY,CACzB,CAED,cAAI2C,GACF,OAAO79B,KAAKk7B,UAAY,CACzB,CAED,YAAA4C,GACE,OAAI99B,KAAK49B,WACA59B,KAEFw9B,EAASI,WAAW59B,KAAKi7B,MACjC,CAED,YAAA8C,GACE,OAAI/9B,KAAK69B,WACA79B,KAEFw9B,EAASK,WAAW79B,KAAKi7B,MACjC,CAED,UAAAU,GACE,OAAI37B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/BuC,EAASK,WAAW79B,KAAKi7B,OACvBj7B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrCuC,EAASI,WAAW59B,KAAKi7B,OAE3Bj7B,IACR,CAED,SAAA47B,GACE,OAAI57B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/BuC,EAASE,YACP19B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrCuC,EAASG,YAEX39B,IACR,CAKD,aAAAipB,CAActM,GACZ,OAAIA,aAAgB6gB,EACXQ,GAAqBh+B,KAAM2c,GAE7B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgB6gB,IAClB7M,EAAAA,QAAQtH,WAAWrpB,KAAKi7B,MAAOte,EAAKse,MAAO7R,IAC3CuH,EAAAA,QAAQtH,WAAWrpB,KAAKk7B,UAAWve,EAAKue,UAAW9R,GAG7D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgB6gB,IAClBx9B,KAAKi7B,QAAUte,EAAKse,OAASj7B,KAAKk7B,YAAcve,EAAKue,UAG/D,CAGD,QAAAte,GACE,OAAOC,EAAQC,QAAAA,KAAKD,EAAAA,QAAQ+T,IAAI/T,UAAQ+T,IAAIC,EAAAA,aAAaC,KAAK0M,GAC1D7M,UAAQG,KAAK9wB,KAAKi7B,QAAStK,EAAAA,QAAQG,KAAK9wB,KAAKk7B,YAClD,CAGD,KAAA5R,CAASjC,GAuBP,OAtBAA,EAASA,EAAOE,MAAM,YAAYA,MAAM,IACrB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAC3B7T,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACjB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAClC7T,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACb,IAAnBvnB,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,cAAcA,MAAM,IACvB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAEA,IAApBj7B,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,cAAcA,MAAM,IACvB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAG7B5T,EAASA,EAAOE,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKi7B,OACrC,IAAnBj7B,KAAKk7B,YACP7T,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKk7B,aAG3C7T,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,gBAAO09B,GACL,OAAO,IAAIF,EAAS,EAAG,EACxB,CAGD,gBAAOG,GACL,OAAO,IAAIH,EAAS,EAAG,EACxB,CAED,iBAAAI,CAAkB3C,GAIhB,gBAHIA,IACFA,EAAQ,GAEH,IAAIuC,EAASvC,EAAO,EAC5B,CAED,iBAAA4C,CAAkB5C,GAIhB,gBAHIA,IACFA,EAAQ,GAEH,IAAIuC,EAASvC,GAAQ,EAC7B,CAED,aAAAzrB,CAAcyrB,EAAeC,GAI3B,gBAHIA,IACFA,EAAY,GAEA,IAAVD,GAA6B,IAAdC,EACVsC,EAASE,YACG,IAAVzC,GAA6B,IAAdC,EACjBsC,EAASG,YAEX,IAAIH,EAASvC,EAAOC,EAC5B,CAED,eAAAtyB,CAA2DtJ,GACzD,GAAIA,SAAsCA,aAAiBk+B,EACzD,OAAOl+B,EACF,GAAIm+B,GAAaxgB,OAAOC,aAAa5d,GAC1C,OAAOk+B,EAAS9T,SAASpqB,GACpB,IAAc,IAAVA,EACT,OAAOk+B,EAASG,YACX,IAAc,IAAVr+B,EACT,OAAOk+B,EAASE,YAElB,MAAM,IAAI9/B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBpqB,GACd,OAAO,IAAIk+B,EAASl+B,EAAM27B,MAAO37B,EAAM47B,UACxC,GAnDAtQ,EAAAA,CAAAA,EAAAA,MAKAA,EAAAA,CAAAA,EAAAA,MAJDztB,EAAAyC,EAAA,KAAAq+B,EAAA,CAAAngC,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAO+qB,YAEN,KAAA5S,GAGD3tB,EAAAyC,EAAA,KAAAs+B,EAAA,CAAApgC,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAOgrB,YAEN,KAAA7S,GA1JU1rB,EAAQQ,EAAAkrB,IAAA,EAAA,GAyMR,MAAAkT,GAAuB,SAAWjT,GAC7C,MAAMiT,EAAuB,SAAUG,EAAcC,GACnD,MAAMlT,EAAe,SAAUC,GAC7B,MAAMgT,EAAKjT,EAAa,GAClBkT,EAAKlT,EAAa,GAClB+P,EAAQkD,EAAGlD,MAAQ9P,GAAKiT,EAAGnD,MAAQkD,EAAGlD,OACtCC,EAAkB,IAAN/P,EAAUgT,EAAGjD,UAAYkD,EAAGlD,UAC9C,OAAOsC,GAAShuB,OAAOyrB,EAAOC,EAChC,EAIA,OAHA/8B,OAAOwtB,eAAeT,EAAc8S,EAAqB//B,WACxDitB,EAA8C,GAAKiT,EACnDjT,EAA8C,GAAKkT,EAC7ClT,CACT,EAUA,OAHA8S,EAAqB//B,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACtD+/B,EAAqB//B,UAAU6B,YAAck+B,EAEtCA,CACR,CAxBmC,CAwBjCpS,gBA0DUyS,GAAgItiB,WAASxI,OAAoD,mBAAoB,CAC5N1B,UAAW2rB,GAEX,SAAIvC,GACF,MAAM37B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM27B,WAAa,CAChE,EAED,QAAAiB,GACE,OAAOl8B,KAAKkQ,WAAW+qB,KACxB,EAED,UAAAkB,CAAcC,GACZ,MAAM98B,EAAQU,KAAKV,MACnB,OAAIA,QACK88B,EAEF98B,EAAM27B,KACd,EAED,QAAAoB,CAASC,EAAkBzgB,EAAiD0gB,GAC1E,MAAM/pB,EAAWxS,KAAKV,MAClBkT,UAEyB,iBAAXqJ,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAAShqB,EAAS2oB,UAAUmB,GAAgBzgB,EAAQ0gB,GAC1D,EAED,aAAIrB,GACF,MAAM57B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM47B,UAAY,CAC/D,EAED,YAAAuB,CAAaC,EAAsB7gB,EAAiD0gB,GAClF,MAAM/pB,EAAWxS,KAAKV,MAClBkT,UAEyB,iBAAXqJ,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAAShqB,EAAS4oB,cAAcsB,GAAoB7gB,EAAQ0gB,GAClE,EAED,aAAImB,GACF,MAAMp+B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMo+B,SACpD,EAED,aAAIC,GACF,MAAMr+B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMq+B,SACpD,EAED,cAAIC,GACF,MAAMt+B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMs+B,UACpD,EAED,cAAIC,GACF,MAAMv+B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMu+B,UACpD,EAED,OAAAS,CAAQziB,EAAiD0gB,GACvDv8B,KAAKw8B,SAASgB,GAASG,YAAkB9hB,EAAe0gB,EACzD,EAED,OAAAgC,CAAQ1iB,EAAiD0gB,GACvDv8B,KAAKw8B,SAASgB,GAASE,YAAkB7hB,EAAe0gB,EACzD,EAED,MAAA5W,CAAO9J,EAAiD0gB,GACtD,MAAM/pB,EAAWxS,KAAKV,MAClBkT,SACFxS,KAAKw8B,SAAShqB,EAASopB,YAAkB/f,EAAe0gB,EAE3D,EAED,YAAAM,CAAaC,EAAaC,GACxBh9B,MAAM88B,aAAaC,EAAUC,GAC7B,MAAMvqB,EAAWxS,KAAKV,MAClBkT,eAA4CsqB,IAC1CA,EAASa,UACX39B,KAAKg9B,SAASxqB,EAASsrB,eAAqB7nB,EAAAA,SAASgnB,WAC5CH,EAASY,WAClB19B,KAAKg9B,SAASxqB,EAASurB,eAAqB9nB,EAAAA,SAASgnB,WAG1D,EAED,UAAAC,CAAW3qB,EAAaC,GACtBzS,MAAMm9B,WAAW3qB,EAAUC,GACvBD,eAA4CC,IAErCD,EAASqrB,aAAeprB,EAASorB,WAC1C59B,KAAKw+B,cACIjsB,EAASorB,YAAcnrB,EAASmrB,UACzC39B,KAAKy+B,aACIlsB,EAASsrB,aAAerrB,EAASqrB,WAC1C79B,KAAK0+B,cACInsB,EAASmrB,YAAclrB,EAASkrB,WACzC19B,KAAK2+B,aAER,EAED,WAAAH,GAEC,EAED,UAAAC,GAEC,EAED,WAAAC,GAEC,EAED,UAAAC,GAEC,EAEDrsB,YAAAA,CAAYC,EAAyBwqB,IAC/BxqB,QACKA,EAASmK,OAAOqgB,GAElBxqB,IAAawqB,ICpbX6B,GAAgB,CAC3B,CAAC3hB,OAAOC,aAAa2K,GACZA,aAAoBgX,IACpBC,GAAc7hB,OAAOC,aAAa2K,IACd,kBAAbA,GAaLiX,GAAgB,CAC3B,CAAC7hB,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAA0BH,EAAU,QAAS,cAKnDgX,IAAAA,GAAS,yBAATA,OAAAA,EAAAA,MAAAA,EACX,WAAA/+B,CAAYm7B,EAAeC,GACzBl7B,KAAKi7B,MAAQA,EACbj7B,KAAKk7B,UAAYA,CAClB,CASD,SAAAC,CAAUF,GACR,OAAIA,IAAUj7B,KAAKi7B,MACVj7B,KAEF6+B,EAAUrvB,OAAOyrB,EAAOj7B,KAAKk7B,UACrC,CAID,aAAAE,CAAcF,GACZ,OAAIA,IAAcl7B,KAAKk7B,UACdl7B,KAEF6+B,EAAUrvB,OAAOxP,KAAKi7B,MAAOC,EACrC,CAED,aAAI6D,GACF,OAAsB,IAAf/+B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,YAAI8D,GACF,OAAsB,IAAfh/B,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,SACjC,CAED,aAAI+D,GACF,OAAOj/B,KAAKk7B,UAAY,CACzB,CAED,cAAIgE,GACF,OAAOl/B,KAAKk7B,UAAY,CACzB,CAED,WAAAiE,GACE,OAAIn/B,KAAKi/B,UACAj/B,KAEF6+B,EAAUI,UAAUj/B,KAAKi7B,MACjC,CAED,YAAAmE,GACE,OAAIp/B,KAAKk/B,WACAl/B,KAEF6+B,EAAUK,WAAWl/B,KAAKi7B,MAClC,CAED,UAAAU,GACE,OAAI37B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/B4D,EAAUK,WAAWl/B,KAAKi7B,OACxBj7B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrC4D,EAAUI,UAAUj/B,KAAKi7B,OAE3Bj7B,IACR,CAED,SAAA47B,GACE,OAAI57B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,OAAS,GAC/B4D,EAAUE,YACR/+B,KAAKk7B,UAAY,GAAKl7B,KAAKi7B,MAAQ,GACrC4D,EAAUG,WAEZh/B,IACR,CAKD,aAAAipB,CAActM,GACZ,OAAIA,aAAgBkiB,EACXQ,GAAsBr/B,KAAM2c,GAE9B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBkiB,IAClBlO,EAAAA,QAAQtH,WAAWrpB,KAAKi7B,MAAOte,EAAKse,MAAO7R,IAC3CuH,EAAAA,QAAQtH,WAAWrpB,KAAKk7B,UAAWve,EAAKue,UAAW9R,GAG7D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBkiB,IAClB7+B,KAAKi7B,QAAUte,EAAKse,OAASj7B,KAAKk7B,YAAcve,EAAKue,UAG/D,CAGD,QAAAte,GACE,OAAOC,EAAQC,QAAAA,KAAKD,EAAAA,QAAQ+T,IAAI/T,UAAQ+T,IAAIC,EAAAA,aAAaC,KAAK+N,GAC1DlO,UAAQG,KAAK9wB,KAAKi7B,QAAStK,EAAAA,QAAQG,KAAK9wB,KAAKk7B,YAClD,CAGD,KAAA5R,CAASjC,GAuBP,OAtBAA,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACtB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAC3B7T,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACjB,IAAfvnB,KAAKi7B,OAAkC,IAAnBj7B,KAAKk7B,UAClC7T,EAASA,EAAOE,MAAM,YAAYA,MAAM,IACZ,IAAnBvnB,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,aAAaA,MAAM,IACtB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAEA,IAApBj7B,KAAKk7B,WACd7T,EAASA,EAAOE,MAAM,cAAcA,MAAM,IACvB,IAAfvnB,KAAKi7B,QACP5T,EAASA,EAAOiC,MAAMtpB,KAAKi7B,UAG7B5T,EAASA,EAAOE,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKi7B,OACrC,IAAnBj7B,KAAKk7B,YACP7T,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKk7B,aAG3C7T,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,gBAAO++B,GACL,OAAO,IAAIF,EAAU,EAAG,EACzB,CAGD,eAAOG,GACL,OAAO,IAAIH,EAAU,EAAG,EACzB,CAED,gBAAAI,CAAiBhE,GAIf,gBAHIA,IACFA,EAAQ,GAEH,IAAI4D,EAAU5D,EAAO,EAC7B,CAED,iBAAAiE,CAAkBjE,GAIhB,gBAHIA,IACFA,EAAQ,GAEH,IAAI4D,EAAU5D,GAAQ,EAC9B,CAED,aAAAzrB,CAAcyrB,EAAeC,GAI3B,gBAHIA,IACFA,EAAY,GAEA,IAAVD,GAA6B,IAAdC,EACV2D,EAAUE,YACE,IAAV9D,GAA6B,IAAdC,EACjB2D,EAAUG,WAEZ,IAAIH,EAAU5D,EAAOC,EAC7B,CAED,eAAAtyB,CAA4DtJ,GAC1D,GAAIA,SAAsCA,aAAiBu/B,EACzD,OAAOv/B,EACF,GAAIw/B,GAAc7hB,OAAOC,aAAa5d,GAC3C,OAAOu/B,EAAUnV,SAASpqB,GACrB,IAAc,IAAVA,EACT,OAAOu/B,EAAUG,WACZ,IAAc,IAAV1/B,EACT,OAAOu/B,EAAUE,YAEnB,MAAM,IAAInhC,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBpqB,GACd,OAAO,IAAIu/B,EAAUv/B,EAAM27B,MAAO37B,EAAM47B,UACzC,GAnDAtQ,EAAAA,CAAAA,EAAAA,MAKAA,EAAAA,CAAAA,EAAAA,MAJDztB,EAAAyC,EAAA,KAAA0/B,EAAA,CAAAxhC,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAOosB,YAEN,KAAAjU,GAGD3tB,EAAAyC,EAAA,KAAA2/B,EAAA,CAAAzhC,KAAA,SAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAOqsB,WAEN,KAAAlU,GA1JU1rB,EAASQ,EAAAkrB,IAAA,EAAA,GAyMT,MAAAuU,GAAwB,SAAWtU,GAC9C,MAAMsU,EAAwB,SAAUG,EAAeC,GACrD,MAAMvU,EAAe,SAAUC,GAC7B,MAAMqU,EAAKtU,EAAa,GAClBuU,EAAKvU,EAAa,GAClB+P,EAAQuE,EAAGvE,MAAQ9P,GAAKsU,EAAGxE,MAAQuE,EAAGvE,OACtCC,EAAkB,IAAN/P,EAAUqU,EAAGtE,UAAYuE,EAAGvE,UAC9C,OAAO2D,GAAUrvB,OAAOyrB,EAAOC,EACjC,EAIA,OAHA/8B,OAAOwtB,eAAeT,EAAcmU,EAAsBphC,WACzDitB,EAA8C,GAAKsU,EACnDtU,EAA8C,GAAKuU,EAC7CvU,CACT,EAUA,OAHAmU,EAAsBphC,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACvDohC,EAAsBphC,UAAU6B,YAAcu/B,EAEvCA,CACR,CAxBoC,CAwBlCzT,gBA0DU8T,GAAmI3jB,WAASxI,OAAqD,oBAAqB,CACjO1B,UAAWgtB,GAEX,SAAI5D,GACF,MAAM37B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM27B,WAAa,CAChE,EAED,QAAAiB,GACE,OAAOl8B,KAAKkQ,WAAW+qB,KACxB,EAED,UAAAkB,CAAcC,GACZ,MAAM98B,EAAQU,KAAKV,MACnB,OAAIA,QACK88B,EAEF98B,EAAM27B,KACd,EAED,QAAAoB,CAASC,EAAkBzgB,EAAiD0gB,GAC1E,MAAM/pB,EAAWxS,KAAKV,MAClBkT,UAEyB,iBAAXqJ,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAAShqB,EAAS2oB,UAAUmB,GAAgBzgB,EAAQ0gB,GAC1D,EAED,aAAIrB,GACF,MAAM57B,EAAQU,KAAKV,MACnB,OAAOA,QAAqCA,EAAM47B,UAAY,CAC/D,EAED,YAAAuB,CAAaC,EAAsB7gB,EAAiD0gB,GAClF,MAAM/pB,EAAWxS,KAAKV,MAClBkT,UAEyB,iBAAXqJ,IAChB0gB,EAAW1gB,EACXA,OAAc,GAEhB7b,KAAKw8B,SAAShqB,EAAS4oB,cAAcsB,GAAoB7gB,EAAQ0gB,GAClE,EAED,aAAIwC,GACF,MAAMz/B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAMy/B,SACpD,EAED,YAAIC,GACF,MAAM1/B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAM0/B,QACpD,EAED,aAAIC,GACF,MAAM3/B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAM2/B,SACpD,EAED,cAAIC,GACF,MAAM5/B,EAAQU,KAAKV,MACnB,OAAOA,SAAsCA,EAAM4/B,UACpD,EAED,MAAAS,CAAO9jB,EAAiD0gB,GACtDv8B,KAAKw8B,SAASqC,GAAUG,WAAiBnjB,EAAe0gB,EACzD,EAED,QAAAqD,CAAS/jB,EAAiD0gB,GACxDv8B,KAAKw8B,SAASqC,GAAUE,YAAkBljB,EAAe0gB,EAC1D,EAED,MAAA5W,CAAO9J,EAAiD0gB,GACtD,MAAM/pB,EAAWxS,KAAKV,MAClBkT,SACFxS,KAAKw8B,SAAShqB,EAASopB,YAAkB/f,EAAe0gB,EAE3D,EAED,YAAAM,CAAaC,EAAaC,GACxBh9B,MAAM88B,aAAaC,EAAUC,GAC7B,MAAMvqB,EAAWxS,KAAKV,MAClBkT,eAA4CsqB,IAC1CA,EAASkC,SACXh/B,KAAKg9B,SAASxqB,EAAS2sB,cAAoBlpB,EAAAA,SAASgnB,WAC3CH,EAASiC,WAClB/+B,KAAKg9B,SAASxqB,EAAS4sB,eAAqBnpB,EAAAA,SAASgnB,WAG1D,EAED,UAAAC,CAAW3qB,EAAaC,GACtBzS,MAAMm9B,WAAW3qB,EAAUC,GACvBD,eAA4CC,IAErCD,EAAS0sB,YAAczsB,EAASysB,UACzCj/B,KAAK6/B,aACIttB,EAASysB,WAAaxsB,EAASwsB,SACxCh/B,KAAK8/B,YACIvtB,EAAS2sB,aAAe1sB,EAAS0sB,WAC1Cl/B,KAAK+/B,eACIxtB,EAASwsB,YAAcvsB,EAASusB,WACzC/+B,KAAKggC,cAER,EAED,UAAAH,GAEC,EAED,SAAAC,GAEC,EAED,YAAAC,GAEC,EAED,WAAAC,GAEC,EAED1tB,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,ICxbXytB,IAAAA,GAAU,uBAAVA,OAAAA,EAAAA,MAAAA,EACX,WAAAngC,CAAYg1B,EACAlQ,GACV5kB,KAAK80B,MAAQA,EACb90B,KAAK4kB,MAAQA,CACd,CAUD,QAAIxhB,GACF,OAAOpD,KAAK80B,MAAMt2B,MACnB,CAED,OAAAquB,GACE,OAA6B,IAAtB7sB,KAAK80B,MAAMt2B,MACnB,CAID,GAAA+O,CAAI2yB,GAIF,OAHoB,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK7hC,WAEmB,IAA1B2B,KAAK4kB,MAAMsb,EACnB,CAKD,GAAAnhC,CAAImhC,IACkB,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK7hC,MAEM,iBAAT6hC,IACTA,EAAOlgC,KAAK4kB,MAAMsb,IAEpB,MAAMC,EAAwB,iBAATD,EAAoBlgC,KAAK80B,MAAMoL,QAAa,EACjE,YAAOC,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAKD,KAAAC,CAASF,EAA0CG,IAC7B,iBAATH,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK7hC,MAEM,iBAAT6hC,IACTA,EAAOlgC,KAAK4kB,MAAMsb,IAEpB,MAAMC,EAAwB,iBAATD,EAAoBlgC,KAAK80B,MAAMoL,QAAa,EACjE,YAAOC,IAAAA,EAAmBA,EAAM,GAAKE,CACtC,CAID,OAAAC,CAAQC,EAAsCjhC,GAC5C,IAAI4gC,EACAM,EAAWxgC,KAAK80B,MAChB2L,EAAWzgC,KAAK4kB,MAGpB,MAAM8b,EAAc7oB,MAAMiR,QAAQyX,GAAWA,EAAQ/hC,OAAS,EAC9D,IAAK,IAAImiC,EAAc,EAAGA,EAAcD,EAAaC,GAAe,EAAG,CACjD,IAAhBA,GAAsB9oB,MAAMiR,QAAQyX,IAGrCL,EAAM5gC,GAAUihC,EAAiCI,GAFlDT,EAAOK,EAIT,MAAMhiC,EAAIkiC,EAASP,EAAK7hC,MACxB,QAAIiB,IAAAA,QAAoBf,IAAAA,EAAc,CACpC,MAAMqiC,EAAWJ,EAASxX,MAAM,GAChC4X,EAASriC,GAAK,CAAC2hC,EAAM5gC,GAErBkhC,EAAWI,CACZ,MAAM,YAAIthC,EAAkB,CAC3B,MAAMshC,EAAWJ,EAASxX,MAAM,GAC1B6X,EAAiD,CAAA,EACvD,IAAK,MAAMxiC,KAAQoiC,EACjBI,EAASxiC,GAAQoiC,EAASpiC,GAE5BwiC,EAASX,EAAK7hC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAK,CAACqhC,EAAM5gC,IACrBkhC,EAAWI,EACXH,EAAWI,CACZ,MAAM,YAAItiC,EAAc,CACvB,MAAMqiC,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAI9S,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIN,EAAShiC,OAAQsiC,GAAK,EAAG,CAC3C,MAAMX,EAAQK,EAASM,GACnBX,EAAM,KAAOD,IACfU,EAAS7S,GAAKoS,EACdU,EAASV,EAAM,GAAG9hC,MAAQ0vB,EAC1BA,GAAK,EAER,CACDyS,EAAWI,EACXH,EAAWI,CACZ,CACF,CAEC,OAAO7gC,IAGV,CAES,IAAA+gC,CAAKjM,EACAlQ,GACb,OAAOqb,EAAWhJ,UAAUnC,EAAOlQ,EACpC,CAID,OAAA+B,CAAcze,EAAmE7I,GAC/E,MAAMy1B,EAAQ90B,KAAK80B,MACnB,IAAK,IAAIv2B,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAM4hC,EAAQrL,EAAMv2B,GACdO,EAASoJ,EAASzI,KAAKJ,EAAS8gC,EAAM,GAAIA,EAAM,IACtD,YAAIrhC,EACF,OAAOA,CAEV,CAEF,CAGD,MAAA4d,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBsjB,GAClBjL,EAAAA,OAAOrM,MAAM3oB,KAAK80B,MAAOnY,EAAKmY,MAGxC,CAGD,KAAAxL,CAASjC,GACP,MAAMyN,EAAQ90B,KAAK80B,MACb/c,EAAI+c,EAAMt2B,OAChB6oB,EAASA,EAAOE,MAAM,cAAcA,MAAM,IAC1BA,MAAY,IAANxP,EAAU,KAAO,SAASwP,MAAM,IACtD,IAAK,IAAIhpB,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO2hC,EAAM5gC,GAASw1B,EAAMv2B,GAClB,IAANA,IACF8oB,EAASA,EAAOE,MAAM,OAExBF,EAASA,EAAOE,MAAM,IAAW+B,MAAM4W,GAAM3Y,MAAM,MAAM+B,MAAMhqB,GAAOioB,MAAM,GAC7E,CAED,OADAF,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,YAAOghC,GACL,OAAO,IAAIf,EAAWjL,EAAAA,OAAOgM,QAAS,CAAE,EACzC,CAED,SAAA5U,IAAgB6U,GACd,OAAO,IAAIhB,EAAWgB,EAAOhB,EAAWrb,MAAMqc,GAC/C,CAED,eAAAr4B,CAAmEtJ,GACjE,GAAIA,SAAsCA,aAAiB2gC,EACzD,OAAO3gC,EACF,GAAIuY,MAAMiR,QAAQxpB,GACvB,OAAO2gC,EAAWhJ,UAAU33B,GAE9B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,gBAAA23B,CAAoBnC,EACAlQ,GAIlB,gBAHIA,IACFA,EAAQqb,EAAWrb,MAAMkQ,IAEpB,IAAImL,EAAWnL,EAAOlQ,EAC9B,CAGD,YAAAA,CAAgBkQ,GACd,MAAMlQ,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CAExCqmB,EADckQ,EAAMv2B,GACR,GAAGF,MAAQE,CACxB,CACD,OAAOqmB,CACR,GAlCAgG,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAshC,EAAA,CAAApjC,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAOquB,QAEN,KAAAlW,GAvKU1rB,EAAUQ,EAAAkrB,IAAA,EAAA,GCIVqW,GAAU,uBAAVA,OAAAA,EAAAA,MAAAA,EACX,WAAArhC,CAAYg1B,EACAlQ,GACV5kB,KAAK80B,MAAQA,EACb90B,KAAK4kB,MAAQA,CACd,CAUD,QAAIxhB,GACF,OAAOpD,KAAK80B,MAAMt2B,MACnB,CAED,OAAAquB,GACE,OAA6B,IAAtB7sB,KAAK80B,MAAMt2B,MACnB,CAID,GAAA+O,CAAI6zB,GAIF,OAHoB,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,WAEmB,IAA1B2B,KAAK4kB,MAAMwc,EACnB,CAKD,GAAAriC,CAAOqiC,IACe,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,MAEM,iBAAT+iC,IACTA,EAAOphC,KAAK4kB,MAAMwc,IAEpB,MAAMjB,EAAwB,iBAATiB,EAAoBphC,KAAK80B,MAAMsM,QAAa,EACjE,YAAOjB,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAKD,KAAAC,CAAYgB,EAA6Cf,IACnC,iBAATe,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,MAEM,iBAAT+iC,IACTA,EAAOphC,KAAK4kB,MAAMwc,IAEpB,MAAMjB,EAAwB,iBAATiB,EAAoBphC,KAAK80B,MAAMsM,QAAa,EACjE,YAAOjB,IAAAA,EAAmBA,EAAM,GAAKE,CACtC,CAID,OAAAC,CAAQC,EAA4CjhC,GAClD,IAAI8hC,EACAZ,EAAWxgC,KAAK80B,MAChB2L,EAAWzgC,KAAK4kB,MAGpB,MAAM8b,EAAc7oB,MAAMiR,QAAQyX,GAAWA,EAAQ/hC,OAAS,EAC9D,IAAK,IAAImiC,EAAc,EAAGA,EAAcD,EAAaC,GAAe,EAAG,CACjD,IAAhBA,GAAsB9oB,MAAMiR,QAAQyX,IAGrCa,EAAM9hC,GAAUihC,EAA8BI,GAF/CS,EAAOb,EAIT,MAAMhiC,EAAIkiC,EAASW,EAAK/iC,MACxB,QAAIiB,IAAAA,QAAoBf,IAAAA,EAAc,CACpC,MAAMqiC,EAAWJ,EAASxX,MAAM,GAEhC4X,EAASriC,GAAK,CAAC6iC,EAAM9hC,GACrBkhC,EAAWI,CACZ,MAAM,YAAIthC,EAAkB,CAC3B,MAAMshC,EAAWJ,EAASxX,MAAM,GAC1B6X,EAAiD,CAAA,EACvD,IAAK,MAAMxiC,KAAQoiC,EACjBI,EAASxiC,GAAQoiC,EAASpiC,GAE5BwiC,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAK,CAACuiC,EAAM9hC,IACrBkhC,EAAWI,EACXH,EAAWI,CACZ,MAAM,YAAItiC,EAAc,CACvB,MAAMqiC,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAI9S,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIN,EAAShiC,OAAQsiC,GAAK,EAAG,CAC3C,MAAMX,EAAQK,EAASM,GACnBX,EAAM,KAAOiB,IACfR,EAAS7S,GAAKoS,EACdU,EAASV,EAAM,GAAG9hC,MAAQ0vB,EAC1BA,GAAK,EAER,CACDyS,EAAWI,EACXH,EAAWI,CACZ,CACF,CAEC,OAAO7gC,IAGV,CAED,IAAAqwB,CAAK1T,GACH,MAAM0kB,EAAYrhC,KAAK80B,MACjBwM,EAAY3kB,EAAKmY,MACjB8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI8iC,EAAU7iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQkB,EAAU9iC,GAClB6iC,EAAOjB,EAAM,GACb5mB,EAAIoD,EAAK5d,IAAIqiC,GACnBP,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,cAAK0a,EAAe4mB,EAAQ,CAACiB,EAAMA,EAAK5Q,QAAQ2P,EAAM,GAAI5mB,IACpE,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQmB,EAAU/iC,GAClB6iC,EAAOjB,EAAM,QACD9hC,IAAdwiC,EAASO,EAAK/iC,QAChBwiC,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAKshC,GAEjB,CACD,OAAOngC,KAAK+gC,KAAKH,EAAUC,EAC5B,CAED,QAAAU,GACE,MAAMf,EAAWxgC,KAAK80B,MAChB/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAgCE,GACrD,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO6iC,EAAM9nB,GAAKknB,EAASjiC,GAC3BqiC,EAASriC,GAAK,CAAC6iC,EAAMA,EAAK5Q,aAAAA,EAAgBlX,GAAI,GAC/C,CACD,OAAOtZ,KAAK+gC,KAAKH,EAAU5gC,KAAK4kB,MACjC,CAED,KAAA4c,CAAM7kB,GACJ,MAAM0kB,EAAYrhC,KAAK80B,MACjBwM,EAAY3kB,EAAKmY,MACjB8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI8iC,EAAU7iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQkB,EAAU9iC,GAClB6iC,EAAOjB,EAAM,GACb5mB,EAAIoD,EAAK5d,IAAIqiC,GACnBP,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,UAAgB,IAAX0a,EAAe4mB,EAAQ,CAACiB,EAAMA,EAAK5Q,QAAQ2P,EAAM,GAAI5mB,GAAI,IACxE,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAO6iC,EAAM7nB,GAAK+nB,EAAU/iC,QACVF,IAAdwiC,EAASO,EAAK/iC,QAChBwiC,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAK,CAACuiC,EAAMA,EAAK5Q,aAAAA,EAAgBjX,GAAI,KAEjD,CACD,OAAOvZ,KAAK+gC,KAAKH,EAAUC,EAC5B,CAED,KAAAvQ,CAAMC,GACJ,MAAMiQ,EAAWxgC,KAAK80B,MAChB/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAgCE,GACrD,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO6iC,EAAM9nB,GAAKknB,EAASjiC,GAC3BqiC,EAASriC,GAAK,CAAC6iC,EAAMA,EAAK5Q,aAAAA,EAAgBlX,EAAGiX,GAC9C,CACD,OAAOvwB,KAAK+gC,KAAKH,EAAU5gC,KAAK4kB,MACjC,CAES,IAAAmc,CAAKjM,EACAlQ,GACb,OAAOuc,EAAWlK,UAAUnC,EAAOlQ,EACpC,CAID,OAAA+B,CAAcze,EAAyE7I,GACrF,MAAMy1B,EAAQ90B,KAAK80B,MACnB,IAAK,IAAIv2B,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAM4hC,EAAQrL,EAAMv2B,GACdO,EAASoJ,EAASzI,KAAKJ,EAAS8gC,EAAM,GAAIA,EAAM,IACtD,YAAIrhC,EACF,OAAOA,CAEV,CAEF,CAKD,aAAAmqB,CAActM,GACZ,OAAIA,aAAgBwkB,EACXM,GAAuBzhC,KAAM2c,GAE/B,IACR,CAGD,MAAAD,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBwkB,GAClBnM,EAAAA,OAAOrM,MAAM3oB,KAAK80B,MAAOnY,EAAKmY,MAGxC,CAGD,KAAAxL,CAASjC,GACP,MAAMyN,EAAQ90B,KAAK80B,MACb/c,EAAI+c,EAAMt2B,OAChB6oB,EAASA,EAAOE,MAAM,cAAcA,MAAM,IAC1BA,MAAY,IAANxP,EAAU,KAAO,SAASwP,MAAM,IACtD,IAAK,IAAIhpB,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO6iC,EAAM9hC,GAASw1B,EAAMv2B,GAClB,IAANA,IACF8oB,EAASA,EAAOE,MAAM,OAExBF,EAASA,EAAOE,MAAM,IAAW+B,MAAM8X,GAAM7Z,MAAM,MAAM+B,MAAMhqB,GAAOioB,MAAM,GAC7E,CAED,OADAF,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,YAAOghC,GACL,OAAO,IAAIG,EAAWnM,EAAAA,OAAOgM,QAAS,CAAE,EACzC,CAED,SAAA5U,IAAasV,GACX,MAAM3pB,EAAI2pB,EAAMljC,OACVs2B,EAAQ,IAAIjd,MAAgCE,GAC5C6M,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO6iC,EAAM9hC,GAASoiC,EAAMnjC,GAC5Bu2B,EAAMv2B,GAAK,CAAC6iC,EAAMA,EAAKO,OAAOriC,IAC9BslB,EAAMwc,EAAK/iC,MAAQE,CACpB,CACD,OAAO,IAAI4iC,EAAWrM,EAAOlQ,EAC9B,CAED,eAAAhc,CAA6DtJ,GAC3D,GAAIA,SAAsCA,aAAiB6hC,EACzD,OAAO7hC,EACF,GAAIuY,MAAMiR,QAAQxpB,GACvB,OAAO6hC,EAAW/U,MAAM9sB,GAE1B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,gBAAA23B,CAAiBnC,EACAlQ,GAIf,gBAHIA,IACFA,EAAQuc,EAAWvc,MAAMkQ,IAEpB,IAAIqM,EAAWrM,EAAOlQ,EAC9B,CAGD,YAAAA,CAAgBkQ,GACd,MAAMlQ,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CAExCqmB,EADckQ,EAAMv2B,GACR,GAAGF,MAAQE,CACxB,CACD,OAAOqmB,CACR,GA1CAgG,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAshC,EAAA,CAAApjC,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAOquB,QAEN,KAAAlW,GApPU1rB,EAAUQ,EAAAkrB,IAAA,EAAA,GA6SV,MAAA2W,GAAyB,SAAW1W,GAC/C,MAAM0W,EAAyB,SAAUG,EAAgBC,GACvD,MAAM3W,EAAe,SAAUC,GAC7B,MAAM2W,EAAgB5W,EAAa4W,cAC7BC,EAAoBD,EAActjC,OAClCs2B,EAAQ,IAAIjd,MAAgCkqB,GAC5Cnd,EAAQsG,EAAatG,MAC3B,IAAK,IAAIrmB,EAAI,EAAGA,EAAIwjC,EAAmBxjC,GAAK,EAAG,CAC7C,MAAO6iC,EAAMlW,GAAgB4W,EAAcvjC,GACrCe,EAAQ4rB,EAAaC,GAC3B2J,EAAMv2B,GAAK,CAAC6iC,EAAM9hC,EACnB,CACD,OAAO6hC,GAAWlK,UAAUnC,EAAOlQ,EACrC,EACAzmB,OAAOwtB,eAAeT,EAAcuW,EAAuBxjC,WAC3D,MAAM6jC,EAAgB,IAAIjqB,MACpB+M,EAA8C,CAAA,EAWpD,OAVAgd,EAAGjb,SAAAA,SAAqBvN,EAAMgoB,GAC5B,MAAM/nB,EAAIwoB,EAAG9iC,IAAIqiC,GACjB,YAAI/nB,EAAc,CAChB,MAAM6R,EAAekW,EAAKY,QAAQ5oB,EAAGC,GACrCuL,EAAMwc,EAAK/iC,MAAQyjC,EAActjC,OACjCsjC,EAAcjjC,KAAK,CAACuiC,EAAMlW,GAC3B,CACH,IACCA,EAA8C4W,cAAgBA,EAC9D5W,EAA8CtG,MAAQA,EAChDsG,CACT,EA4DA,OArDAuW,EAAuBxjC,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACxDwjC,EAAuBxjC,UAAU6B,YAAc2hC,EAE/CtjC,OAAOgB,eAAesiC,EAAuBxjC,UAAW,EAAG,CACzD,GAAAc,GACE,MAAM+iC,EAAgB9hC,KAAK8hC,cACrBC,EAAoBD,EAActjC,OAClCs2B,EAAQ,IAAIjd,MAAgCkqB,GAC5Cnd,EAAQ5kB,KAAK4kB,MACnB,IAAK,IAAIrmB,EAAI,EAAGA,EAAIwjC,EAAmBxjC,GAAK,EAAG,CAC7C,MAAO6iC,EAAMlW,GAAgB4W,EAAcvjC,GACrCe,EAAQ4rB,EAAa,GAC3B4J,EAAMv2B,GAAK,CAAC6iC,EAAM9hC,EACnB,CACD,OAAO6hC,GAAWlK,UAAUnC,EAAOlQ,EACpC,EACDhL,cAAc,IAGhBzb,OAAOgB,eAAesiC,EAAuBxjC,UAAW,EAAG,CACzD,GAAAc,GACE,MAAM+iC,EAAgB9hC,KAAK8hC,cACrBC,EAAoBD,EAActjC,OAClCs2B,EAAQ,IAAIjd,MAAgCkqB,GAC5Cnd,EAAQ5kB,KAAK4kB,MACnB,IAAK,IAAIrmB,EAAI,EAAGA,EAAIwjC,EAAmBxjC,GAAK,EAAG,CAC7C,MAAO6iC,EAAMlW,GAAgB4W,EAAcvjC,GACrCe,EAAQ4rB,EAAa,GAC3B4J,EAAMv2B,GAAK,CAAC6iC,EAAM9hC,EACnB,CACD,OAAO6hC,GAAWlK,UAAUnC,EAAOlQ,EACpC,EACDhL,cAAc,IAGhB6nB,EAAuBxjC,UAAUye,OAAS,SAAUC,GAClD,GAAI3c,OAAS2c,EACX,OAAO,EACF,GAAIA,aAAgB8kB,EAAwB,CACjD,MAAM1pB,EAAI/X,KAAK8hC,cAActjC,OAC7B,GAAIuZ,IAAM4E,EAAKmlB,cAActjC,OAC3B,OAAO,EAET,IAAK,IAAID,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAC1B,IAAKy2B,SAAOrM,MAAM3oB,KAAK8hC,cAAcvjC,GAAKoe,EAAKmlB,cAAcvjC,IAC3D,OAAO,EAGX,OAAO,CACR,CACD,OAAO,CACT,EAEOkjC,CACR,CAzFqC,CAyFnC7V,gBCzYUqW,IAAAA,GAAU,uBAAVA,OAAAA,EAAAA,MAAAA,EACX,WAAAniC,CAAYg1B,EACAlQ,GACV5kB,KAAK80B,MAAQA,EACb90B,KAAK4kB,MAAQA,CACd,CAUD,QAAIxhB,GACF,OAAOpD,KAAK80B,MAAMt2B,MACnB,CAED,OAAAquB,GACE,OAA6B,IAAtB7sB,KAAK80B,MAAMt2B,MACnB,CAID,GAAA+O,CAAIxP,GAIF,OAHmB,iBAARA,GAA4B,OAARA,GAA+B,mBAARA,KACpDA,EAAMA,EAAIM,WAEoB,IAAzB2B,KAAK4kB,MAAM7mB,EACnB,CAKD,GAAAgB,CAAIhB,IACiB,iBAARA,GAA4B,OAARA,GAA+B,mBAARA,KACpDA,EAAMA,EAAIM,MAEO,iBAARN,IACTA,EAAMiC,KAAK4kB,MAAM7mB,IAEnB,MAAMoiC,EAAuB,iBAARpiC,EAAmBiC,KAAK80B,MAAM/2B,QAAY,EAC/D,YAAOoiC,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAKD,KAAAC,CAASriC,EAAsCsiC,IAC1B,iBAARtiC,GAA4B,OAARA,GAA+B,mBAARA,KACpDA,EAAMA,EAAIM,MAEO,iBAARN,IACTA,EAAMiC,KAAK4kB,MAAM7mB,IAEnB,MAAMoiC,EAAuB,iBAARpiC,EAAmBiC,KAAK80B,MAAM/2B,QAAY,EAC/D,YAAOoiC,IAAAA,EAAmBA,EAAM,GAAKE,CACtC,CAID,OAAAC,CAAQC,EAAmCjhC,GACzC,IAAIvB,EAGA6iC,EACAC,EAHAL,EAAWxgC,KAAK80B,MAChB2L,EAAWzgC,KAAK4kB,MAGpB,MAAM8b,EAAc7oB,MAAMiR,QAAQyX,GAAWA,EAAQ/hC,OAAS,EAC9D,IAAK,IAAImiC,EAAc,EAAGA,EAAcD,EAAaC,GAAe,EAAG,CACjD,IAAhBA,GAAsB9oB,MAAMiR,QAAQyX,IAGrCxiC,EAAKuB,GAAUihC,EAAiCI,GAFjD5iC,EAAMwiC,EAIR,MAAMhiC,EAAIkiC,EAAS1iC,EAAIM,MACvB,QAAIiB,IAAAA,QAAoBf,IAAAA,EACtBqiC,EAAWJ,EAASxX,MAAM,GAC1B6X,EAAWJ,EACXG,EAASriC,GAAK,CAACR,EAAKuB,GACpBkhC,EAAWI,OACN,YAAIthC,EAAkB,CAC3BshC,EAAWJ,EAASxX,MAAM,GAC1B6X,EAAW,CAAA,EACX,IAAK,MAAMxiC,KAAQoiC,EACjBI,EAASxiC,GAAQoiC,EAASpiC,GAE5BwiC,EAAS9iC,EAAIM,MAAQuiC,EAASpiC,OAC9BoiC,EAAS/hC,KAAK,CAACd,EAAKuB,IACpBkhC,EAAWI,EACXH,EAAWI,CACZ,MAAM,YAAItiC,EAAc,CACvBqiC,EAAW,IAAI/oB,MACfgpB,EAAW,CAAA,EACX,IAAI9S,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIN,EAAShiC,OAAQsiC,GAAK,EAAG,CAC3C,MAAMX,EAAQK,EAASM,GACnBX,EAAM,KAAOpiC,IACf6iC,EAAS7S,GAAKoS,EACdU,EAASV,EAAM,GAAG9hC,MAAQ0vB,EAC1BA,GAAK,EAER,CACDyS,EAAWI,EACXH,EAAWI,CACZ,CACF,CACD,YAAID,IAAAA,QAAuBC,IAAAA,EAClB7gC,KAEFA,KAAK+gC,KAAKH,EAAUC,EAC5B,CAED,IAAAxQ,CAAK1T,GACH,MAAM0kB,EAAYrhC,KAAK80B,MACjBwM,EAAY3kB,EAAKmY,MACjB8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI8iC,EAAU7iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQkB,EAAU9iC,GAClBR,EAAMoiC,EAAM,GACZ5mB,EAAIoD,EAAK5d,IAAIhB,GACnB8iC,EAAS9iC,EAAIM,MAAQuiC,EAASpiC,OAC9BoiC,EAAS/hC,UAAgB,IAAX0a,EAAe4mB,EAAQ,CAACpiC,EAAKoiC,EAAM,GAAK5mB,GACvD,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQmB,EAAU/iC,GAClBR,EAAMoiC,EAAM,QACD9hC,IAAbwiC,EAAS9iC,EAAIM,QACfwiC,EAAS9iC,EAAIM,MAAQuiC,EAASpiC,OAC9BoiC,EAAS/hC,KAAKshC,GAEjB,CACD,OAAOngC,KAAK+gC,KAAKH,EAAUC,EAC5B,CAED,QAAAU,GACE,MAAMf,EAAWxgC,KAAK80B,MAChB/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAmBE,GACxC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAOR,EAAKub,GAAKknB,EAASjiC,GAC1BqiC,EAASriC,GAAK,CAACR,GAAMub,EACtB,CACD,OAAOtZ,KAAK+gC,KAAKH,EAAU5gC,KAAK4kB,MACjC,CAED,KAAA4c,CAAM7kB,GACJ,MAAM0kB,EAAYrhC,KAAK80B,MACjBwM,EAAY3kB,EAAKmY,MACjB8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI8iC,EAAU7iC,OAAQD,GAAK,EAAG,CAC5C,MAAM4hC,EAAQkB,EAAU9iC,GAClBR,EAAMoiC,EAAM,GACZ5mB,EAAIoD,EAAK5d,IAAIhB,GACnB8iC,EAAS9iC,EAAIM,MAAQuiC,EAASpiC,OAC9BoiC,EAAS/hC,UAAgB,IAAX0a,EAAe4mB,EAAQ,CAACpiC,EAAKoiC,EAAM,GAAK5mB,GACvD,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAOR,EAAKwb,GAAK+nB,EAAU/iC,QACVF,IAAbwiC,EAAS9iC,EAAIM,QACfwiC,EAAS9iC,EAAIM,MAAQuiC,EAASpiC,OAC9BoiC,EAAS/hC,KAAK,CAACd,GAAMwb,IAExB,CACD,OAAOvZ,KAAK+gC,KAAKH,EAAUC,EAC5B,CAED,KAAAvQ,CAAMC,GACJ,MAAMiQ,EAAWxgC,KAAK80B,MAChB/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAmBE,GACxC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAOR,EAAKub,GAAKknB,EAASjiC,GAC1BqiC,EAASriC,GAAK,CAACR,EAAKub,EAAIiX,EACzB,CACD,OAAOvwB,KAAK+gC,KAAKH,EAAU5gC,KAAK4kB,MACjC,CAED,GAAAsd,CAAIvlB,GACF,MAAMmY,EAAQ90B,KAAK80B,MACnB,IAAIqN,EACJ,IAAK,IAAI5jC,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAOR,EAAKub,GAAKwb,EAAMv2B,GACjBgb,EAAIoD,EAAK5d,IAAIhB,YACfwb,aAEO4oB,EACTA,EAAc7oB,EAAIC,EAElB4oB,GAAe7oB,EAAIC,EAEtB,CACD,OAAO4oB,CACR,CAES,IAAApB,CAAKjM,EACAlQ,GACb,OAAOqd,EAAWhL,UAAUnC,EAAOlQ,EACpC,CAID,OAAA+B,CAAcze,EAAoE7I,GAChF,MAAMy1B,EAAQ90B,KAAK80B,MACnB,IAAK,IAAIv2B,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAM4hC,EAAQrL,EAAMv2B,GACdO,EAASoJ,EAASzI,KAAKJ,EAAS8gC,EAAM,GAAIA,EAAM,IACtD,YAAIrhC,EACF,OAAOA,CAEV,CAEF,CAGD,MAAA4d,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBslB,GAClBjN,EAAAA,OAAOrM,MAAM3oB,KAAK80B,MAAOnY,EAAKmY,MAGxC,CAGD,KAAAxL,CAASjC,GACP,MAAMyN,EAAQ90B,KAAK80B,MACb/c,EAAI+c,EAAMt2B,OAChB6oB,EAASA,EAAOE,MAAM,cAAcA,MAAM,IAC1BA,MAAY,IAANxP,EAAU,KAAO,SAASwP,MAAM,IACtD,IAAK,IAAIhpB,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAOR,EAAKuB,GAASw1B,EAAMv2B,GACjB,IAANA,IACF8oB,EAASA,EAAOE,MAAM,OAExBF,EAASA,EAAOE,MAAM,IAAW+B,MAAMvrB,GAAKwpB,MAAM,MAAM+B,MAAMhqB,GAAOioB,MAAM,GAC5E,CAED,OADAF,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,YAAOghC,GACL,OAAO,IAAIiB,EAAWjN,EAAAA,OAAOgM,QAAS,CAAE,EACzC,CAED,SAAA5U,IAA6BgW,GAC3B,OAAO,IAAIH,EAAWG,EAAMH,EAAWrd,MAAMwd,GAC9C,CAED,eAAAx5B,CAAgFtJ,GAC9E,GAAIA,SAAsCA,aAAiB2iC,EACzD,OAAO3iC,EACF,GAAIuY,MAAMiR,QAAQxpB,GACvB,OAAO2iC,EAAWhL,UAAU33B,GAE9B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,gBAAA23B,CAAiCnC,EACAlQ,GAI/B,gBAHIA,IACFA,EAAQqd,EAAWrd,MAAMkQ,IAEpB,IAAImN,EAAWnN,EAAOlQ,EAC9B,CAGD,YAAAA,CAA6BkQ,GAC3B,MAAMlQ,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CAExCqmB,EADckQ,EAAMv2B,GACR,GAAGF,MAAQE,CACxB,CACD,OAAOqmB,CACR,GAlCAgG,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAshC,EAAA,CAAApjC,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAOquB,QAEN,KAAAlW,GA3PU1rB,EAAUQ,EAAAkrB,IAAA,EAAA,GCPVuX,GAAU,uBAAVA,OAAAA,EAAAA,MAAAA,EACX,WAAAviC,CAAYwiC,EACAC,EACAC,EACAC,GACVziC,KAAKsiC,SAAWA,EAChBtiC,KAAKuiC,SAAWA,EAChBviC,KAAKwiC,SAAWA,EAChBxiC,KAAKyiC,SAAWA,CACjB,CAcD,YAAIC,GACF,OAAO1iC,KAAKsiC,SAAS9jC,MACtB,CAED,YAAImkC,GACF,OAAO3iC,KAAKwiC,SAAShkC,MACtB,CAID,MAAAokC,CAAOC,GAIL,OAHsB,iBAAXA,GAAkC,OAAXA,GAAqC,mBAAXA,KAC1DA,EAASA,EAAOxkC,WAEoB,IAA/B2B,KAAKuiC,SAASM,EACtB,CAID,MAAAC,CAAOC,GAIL,OAHsB,iBAAXA,GAAkC,OAAXA,GAAqC,mBAAXA,KAC1DA,EAASA,EAAO1kC,WAEoB,IAA/B2B,KAAKyiC,SAASM,EACtB,CAKD,MAAAC,CAAOH,IACiB,iBAAXA,GAAkC,OAAXA,GAAqC,mBAAXA,KAC1DA,EAASA,EAAOxkC,MAEI,iBAAXwkC,IACTA,EAAS7iC,KAAKuiC,SAASM,IAEzB,MAAM1C,EAA0B,iBAAX0C,EAAsB7iC,KAAKsiC,SAASO,QAAe,EACxE,YAAO1C,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAKD,MAAA8C,CAAOF,IACiB,iBAAXA,GAAkC,OAAXA,GAAqC,mBAAXA,KAC1DA,EAASA,EAAO1kC,MAEI,iBAAX0kC,IACTA,EAAS/iC,KAAKyiC,SAASM,IAEzB,MAAM5C,EAA0B,iBAAX4C,EAAsB/iC,KAAKwiC,SAASO,QAAe,EACxE,YAAO5C,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAED,IAAA9P,CAAK1T,GACH,MAAMumB,EAAeljC,KAAKwiC,SACpBW,EAAexmB,EAAK6lB,SACpBY,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQ+C,EAAapC,GACrBiC,EAAS5C,EAAM,GACf9mB,EAAIsD,EAAKsmB,OAAOF,GACtBM,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,cAAKwa,EAAe8mB,EAAQ,CAAC4C,EAAQ5C,EAAM,GAAG9P,KAAKhX,IAChE,CACD,IAAK,IAAIynB,EAAI,EAAGA,EAAIqC,EAAa3kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQgD,EAAarC,GACrBiC,EAAS5C,EAAM,QACE9hC,IAAnBglC,EAAYN,EAAO1kC,QACrBglC,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,KAAKshC,GAEpB,CACD,OAAOkC,EAAWiB,aAAaF,EAAaC,EAC7C,CAED,QAAA9B,GACE,MAAMgC,EAAcvjC,KAAKwiC,SACnBzqB,EAAIwrB,EAAY/kC,OAChB4kC,EAAc,IAAIvrB,MAA0BE,GAClD,IAAK,IAAI+oB,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOiC,EAAQ3pB,GAAKmqB,EAAYzC,GAChCsC,EAAYtC,GAAK,CAACiC,EAAQ3pB,EAAEmoB,WAC7B,CACD,OAAOc,EAAWiB,aAAaF,EAAapjC,KAAKyiC,SAClD,CAED,KAAAjB,CAAM7kB,GACJ,MAAMumB,EAAeljC,KAAKwiC,SACpBW,EAAexmB,EAAK6lB,SACpBY,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQ+C,EAAapC,GACrBiC,EAAS5C,EAAM,GACf9mB,EAAIsD,EAAKsmB,OAAOF,GACtBM,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,cAAKwa,EAAe8mB,EAAQ,CAAC4C,EAAQ5C,EAAM,GAAGqB,MAAMnoB,IACjE,CACD,IAAK,IAAIynB,EAAI,EAAGA,EAAIqC,EAAa3kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAOiC,EAAQ1pB,GAAK8pB,EAAarC,QACVziC,IAAnBglC,EAAYN,EAAO1kC,QACrBglC,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,KAAK,CAACkkC,EAAQ1pB,EAAEkoB,aAE/B,CACD,OAAOc,EAAWiB,aAAaF,EAAaC,EAC7C,CAED,KAAA/S,CAAMC,GACJ,MAAMgT,EAAcvjC,KAAKwiC,SACnBzqB,EAAIwrB,EAAY/kC,OAChB4kC,EAAc,IAAIvrB,MAA0BE,GAClD,IAAK,IAAI+oB,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOiC,EAAQ3pB,GAAKmqB,EAAYzC,GAChCsC,EAAYtC,GAAK,CAACiC,EAAQ3pB,EAAEkX,MAAMC,GACnC,CACD,OAAO8R,EAAWiB,aAAaF,EAAapjC,KAAKyiC,SAClD,CAGD,GAAAP,CAAIW,EAAyCW,IACrB,iBAAXX,GAAkC,OAAXA,GAAqC,mBAAXA,KAC1DA,EAASA,EAAOxkC,MAEI,iBAAXwkC,IACTA,EAAS7iC,KAAKuiC,SAASM,IAEzB,MAAM1C,EAA0B,iBAAX0C,EAAsB7iC,KAAKsiC,SAASO,QAAe,EACxE,YAAI1C,EACF,OAEF0C,EAAS1C,EAAM,GAEf,OADYA,EAAM,GACP+B,IAAIsB,EAChB,CAID,QAAAC,CAASD,EAAwBE,GAA4B,GAC3D,MAAMpB,EAAWtiC,KAAKsiC,SAChB1B,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAOskC,EAAQc,GAAOrB,EAAS/jC,GACzBe,EAAQqkC,EAAIzB,IAAIsB,YAClBlkC,IACFuhC,EAASgC,EAAOxkC,MAAQuiC,EAASpiC,OACjCoiC,EAAS/hC,KAAK,CAACgkC,EAAQvjC,IAE1B,CACD,GAAIokC,EAAkB,CACpB,MAAMpC,EAAYkC,EAAI1O,MACtB,IAAK,IAAIv2B,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAMskC,EAASvB,EAAU/iC,GAAI,GACxByB,KAAK4iC,OAAOC,KACfhC,EAASgC,EAAOxkC,MAAQuiC,EAASpiC,OACjCoiC,EAAS/hC,KAAKyiC,EAAU/iC,IAE3B,CACF,CACD,OAAO0jC,GAAWhL,UAAU2J,EAAUC,EACvC,CAID,QAAA+C,CAASD,EAAwBD,GAA4B,GAC3D,MAAMlB,EAAWxiC,KAAKwiC,SAChB5B,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAIikC,EAAShkC,OAAQD,GAAK,EAAG,CAC3C,MAAOwkC,EAAQS,GAAOhB,EAASjkC,GACzBe,EAAQqkC,EAAIzB,IAAIsB,YAClBlkC,IACFuhC,EAASkC,EAAO1kC,MAAQuiC,EAASpiC,OACjCoiC,EAAS/hC,KAAK,CAACkkC,EAAQzjC,IAE1B,CACD,GAAIokC,EAAkB,CACpB,MAAMpC,EAAYqC,EAAI7O,MACtB,IAAK,IAAIv2B,EAAI,EAAGA,EAAI+iC,EAAU9iC,OAAQD,GAAK,EAAG,CAC5C,MAAMwkC,EAASzB,EAAU/iC,GAAI,GACxByB,KAAK8iC,OAAOC,KACflC,EAASkC,EAAO1kC,MAAQuiC,EAASpiC,OACjCoiC,EAAS/hC,KAAKyiC,EAAU/iC,IAE3B,CACF,CACD,OAAO0jC,GAAWhL,UAAU2J,EAAUC,EACvC,CAED,SAAA7H,CAAUrc,EAAwB+mB,GAA4B,GAC5D,MAAMG,EAAe7jC,KAAKsiC,SACpBY,EAAeljC,KAAKwiC,SACpBsB,EAAc,IAAIjsB,MAClBksB,EAAoD,CAAA,EACpDX,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMiC,EAASG,EAAapC,GAAI,GAChC,IAAI0C,EAAM7mB,EAAKsmB,OAAOF,GAItB,QAHIS,IAAAA,GAAkBE,IACpBF,EAAMvB,GAAW7V,GAAG,CAAC2W,EAAQ,cAE3BS,EAGJ,IAAK,IAAIjlC,EAAI,EAAGA,EAAIslC,EAAarlC,OAAQD,GAAK,EAAG,CAC/C,MAAOskC,EAAQc,GAAOE,EAAatlC,GAC7Be,EAAQqkC,EAAIzB,IAAIsB,GACtB,YAAIlkC,EACF,SAEF,MAAM0kC,EAAKD,EAAYlB,EAAOxkC,MAC9B,YAAI2lC,EACFD,EAAYlB,EAAOxkC,MAAQylC,EAAYtlC,OACvCslC,EAAYjlC,KAAK,CAACgkC,EAAQZ,GAAW7V,GAAG,CAAC2W,EAAQzjC,UAC5C,CACL,MAAM2kC,EAASH,EAAYE,GAAK,GAC/BC,EAAOrf,MAA+Cie,EAAOxkC,MAAQ4lC,EAAOnP,MAAMt2B,OAClFylC,EAAOnP,MAAwBj2B,KAAK,CAACkkC,EAAQzjC,GAC/C,CACD,MAAM4kC,EAAKb,EAAYN,EAAO1kC,MAC9B,YAAI6lC,EACFb,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,KAAK,CAACkkC,EAAQd,GAAW7V,GAAG,CAACyW,EAAQvjC,UAC5C,CACL,MAAM6kC,EAASf,EAAYc,GAAK,GAC/BC,EAAOvf,MAA+Cme,EAAO1kC,MAAQ8lC,EAAOrP,MAAMt2B,OAClF2lC,EAAOrP,MAAwBj2B,KAAK,CAACgkC,EAAQvjC,GAC/C,CACF,CACF,CACD,OAAO,IAAI+iC,EAAWyB,EAAaC,EAAaX,EAAaC,EAC9D,CAGD,WAAAe,CAAYznB,GACV,MAAMknB,EAAe7jC,KAAKsiC,SACpBa,EAAexmB,EAAK6lB,SAC1B,IAAIsB,EACAC,EACJ,IAAK,IAAIjD,EAAI,EAAGA,EAAIqC,EAAa3kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMiC,EAASI,EAAarC,GAAI,GAChC,IAAI9gC,KAAK4iC,OAAOG,GAAhB,CAKA,YAHWe,IACTA,EAAcD,EAAa7a,MAAM,aAE/B+a,EAAwB,CAC1BA,EAAc,CAAA,EACd,IAAK,MAAM1lC,KAAQ2B,KAAKuiC,SACtBwB,EAAY1lC,GAAQ2B,KAAKuiC,SAASlkC,EAErC,CACD0lC,EAAYhB,EAAO1kC,MAAQylC,EAAYtlC,OACvCslC,EAAYjlC,KAAK,CAACkkC,EAAQd,GAAW7V,GAAG,CAAC2W,EAAQ,KARhD,CASF,CACD,YAAIe,IAAAA,QAA0BC,IAAAA,EACrB/jC,KAEFqiC,EAAWgC,aAAaP,EAAaC,EAC7C,CAED,GAAAJ,CAAId,EAAWc,YACTA,IACFA,EAAM1B,GAAWr5B,SAAS+6B,IAE5B,MAAMW,EAActkC,KAAKsiC,SACnBiC,EAAcvkC,KAAKuiC,SACnBhkC,EAAIgmC,EAAY1B,EAAOxkC,MAC7B,QAAIslC,IAAAA,QAAkBplC,IAAAA,EAAc,CAClC,MAAMulC,EAAcQ,EAAYtb,MAAM,GAEtC,OADA8a,EAAYvlC,GAAK,CAACskC,EAAQc,GACnBtB,EAAWgC,aAAaP,EAAaS,EAC7C,CAAM,YAAIZ,EAAgB,CACzB,MAAMG,EAAcQ,EAAYtb,MAAM,GAChC+a,EAAoD,CAAA,EAC1D,IAAK,MAAM1lC,KAAQkmC,EACjBR,EAAY1lC,GAAQkmC,EAAYlmC,GAIlC,OAFA0lC,EAAYlB,EAAOxkC,MAAQylC,EAAYtlC,OACvCslC,EAAYjlC,KAAK,CAACgkC,EAAQc,IACnBtB,EAAWgC,aAAaP,EAAaC,EAC7C,CAAM,YAAIxlC,EAAc,CACvB,MAAMulC,EAAc,IAAIjsB,MAClBksB,EAAoD,CAAA,EAC1D,IAAIhW,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIwD,EAAY9lC,OAAQsiC,GAAK,EAAG,CAC9C,MAAMX,EAAQmE,EAAYxD,GACtBX,EAAM,KAAO0C,IACfiB,EAAY/V,GAAKoS,EACjB4D,EAAY5D,EAAM,GAAG9hC,MAAQ0vB,EAC7BA,GAAK,EAER,CACD,OAAOsU,EAAWgC,aAAaP,EAAaC,EAC7C,CACD,OAAO/jC,IACR,CAED,GAAAwjC,CAAIT,EAAWS,YACTA,IACFA,EAAMvB,GAAWr5B,SAAS46B,IAE5B,MAAMD,EAAcvjC,KAAKwiC,SACnBgC,EAAcxkC,KAAKyiC,SACnBlkC,EAAIimC,EAAYzB,EAAO1kC,MAC7B,QAAImlC,IAAAA,QAAkBjlC,IAAAA,EAAc,CAClC,MAAM6kC,EAAcG,EAAYva,MAAM,GAEtC,OADAoa,EAAY7kC,GAAK,CAACwkC,EAAQS,GACnBnB,EAAWiB,aAAaF,EAAaoB,EAC7C,CAAM,YAAIhB,EAAgB,CACzB,MAAMJ,EAAcG,EAAYva,MAAM,GAChCqa,EAAoD,CAAA,EAC1D,IAAK,MAAMhlC,KAAQmmC,EACjBnB,EAAYhlC,GAAQmmC,EAAYnmC,GAIlC,OAFAglC,EAAYN,EAAO1kC,MAAQ+kC,EAAY5kC,OACvC4kC,EAAYvkC,KAAK,CAACkkC,EAAQS,IACnBnB,EAAWiB,aAAaF,EAAaC,EAC7C,CAAM,YAAI9kC,EAAc,CACvB,MAAM6kC,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAItV,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIyC,EAAY/kC,OAAQsiC,GAAK,EAAG,CAC9C,MAAMX,EAAQoD,EAAYzC,GACtBX,EAAM,KAAO4C,IACfK,EAAYrV,GAAKoS,EACjBkD,EAAYlD,EAAM,GAAG9hC,MAAQ0vB,EAC7BA,GAAK,EAER,CACD,OAAOsU,EAAWiB,aAAaF,EAAaC,EAC7C,CACD,OAAOrjC,IACR,CAMD,UAAAykC,CAAW5B,EAAetC,EACfmE,GACT,MAAMC,EAAS3kC,KAAKgjC,OAAOH,GAC3B,IAAIoB,EAASU,EAeb,gBAdIV,KACiB,IAAfS,EACFA,EAAazC,GAAW7V,GAAG,CAACyW,EAAQ,KACZ,IAAf6B,IACTA,OAAkB,GAOpBT,EAJES,WADEA,EACWzC,GAAWjB,QAEXiB,GAAWr5B,SAAS87B,IAIrCT,EAASA,EAAO3D,QAAQC,GACpB0D,EAAOvnB,OAAOioB,GACT3kC,KAEFA,KAAK2jC,IAAId,EAAQoB,EACzB,CAMD,UAAAW,CAAW7B,EAAexC,EACfsE,GACT,MAAMC,EAAS9kC,KAAKijC,OAAOF,GAC3B,IAAIoB,EAASW,EAeb,gBAdIX,KACiB,IAAfU,EACFA,EAAa5C,GAAW7V,GAAG,CAAC2W,EAAQ,KACZ,IAAf8B,IACTA,OAAkB,GAOpBV,EAJEU,WADEA,EACW5C,GAAWjB,QAEXiB,GAAWr5B,SAASi8B,IAIrCV,EAASA,EAAO7D,QAAQC,GACpB4D,EAAOznB,OAAOooB,GACT9kC,KAEFA,KAAKwjC,IAAIT,EAAQoB,EACzB,CAGD,MAAAznB,CAAOC,GACL,GAAI3c,OAAS2c,EACX,OAAO,EACF,GAAIA,aAAgB0lB,EAAY,CAErC,OADcrN,EAAAA,OAAOrM,MAAM3oB,KAAKwiC,SAAU7lB,EAAK6lB,SAEhD,CACD,OAAO,CACR,CAGD,KAAAlZ,CAASjC,GACP,MAAM0d,EAAO/kC,KAAKwiC,SACZzqB,EAAIgtB,EAAKvmC,OACf6oB,EAASA,EAAOE,MAAM,cAAcA,MAAM,IAC1BA,MAAY,IAANxP,EAAU,UAAY,SAASwP,MAAM,IAC3D,IAAK,IAAIuZ,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOiC,EAAQS,GAAOuB,EAAKjE,GACjB,IAANA,IACFzZ,EAASA,EAAOE,MAAM,OAExBF,EAASA,EAAOE,MAAM,IAAW+B,MAAMyZ,GAAQxb,MAAM,MAAM+B,MAAMka,GAAKjc,MAAM,GAC7E,CAED,OADAF,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,YAAOghC,GACL,OAAO,IAAIqB,EAAWrN,EAAOgM,OAAAA,QAAS,CAAIhM,EAAAA,SAAOgM,QAAS,CAAA,EAC3D,CAED,cAAAgE,IAAkDC,GAChD,MAAMC,EAAID,EAAKzmC,OACT8jC,EAAW,IAAIzqB,MAA0BqtB,GAC/C,IAAK,IAAI3mC,EAAI,EAAGA,EAAI2mC,EAAG3mC,GAAK,EAAG,CAC7B,MAAOskC,EAAQc,GAAOsB,EAAK1mC,GAC3B+jC,EAAS/jC,GAAK,CAACskC,EAAQZ,GAAWr5B,SAAS+6B,GAC5C,CACD,OAAO3jC,KAAKqkC,aAAa/B,EAC1B,CAED,cAAA6C,IAAkDJ,GAChD,MAAMG,EAAIH,EAAKvmC,OACTgkC,EAAW,IAAI3qB,MAA0BqtB,GAC/C,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,EAAGpE,GAAK,EAAG,CAC7B,MAAOiC,EAAQS,GAAOuB,EAAKjE,GAC3B0B,EAAS1B,GAAK,CAACiC,EAAQd,GAAWr5B,SAAS46B,GAC5C,CACD,OAAOxjC,KAAKsjC,aAAad,EAC1B,CAED,mBAAA6B,CACI/B,EACAC,YACEA,IACFA,EAAWN,GAAWrd,MAAM0d,IAE9B,MAAME,EAAW,IAAI3qB,MACf4qB,EAAiD,CAAA,EACvD,IAAK,IAAIlkC,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC/B+jC,EAAS/jC,GAAI,GACrBooB,SAAAA,SAAkBrnB,EAAeyjC,QACf1kC,IAAhBokC,EAASM,EAAO1kC,QAClBokC,EAASM,EAAO1kC,MAAQmkC,EAAShkC,OACjCgkC,EAAS3jC,KAAK,CAACkkC,OAAa,IAE7B/iC,GAAAA,KACJ,CACD,IAAK,IAAI8gC,EAAI,EAAGA,EAAI0B,EAAShkC,OAAQsiC,GAAK,EAAG,CAC3C,MAAMX,EAAQqC,EAAS1B,GACjBiC,EAAS5C,EAAM,GACfrL,EAAQ,IAAIjd,MACZ+M,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAOskC,EAAQc,GAAOrB,EAAS/jC,GACzBe,EAAQqkC,EAAI5kC,IAAIgkC,YAClBzjC,IACFslB,EAAMie,EAAOxkC,MAAQy2B,EAAMt2B,OAC3Bs2B,EAAMj2B,KAAK,CAACgkC,EAAQvjC,IAEvB,CACD,MAAMkkC,EAAMvB,GAAWhL,UAAUnC,EAAOlQ,GACxCub,EAAM,GAAKqD,CACZ,CACD,OAAO,IAAInB,EAAWC,EAAUC,EAAUC,EAAUC,EACrD,CAED,mBAAAa,CACId,EACAC,YACEA,IACFA,EAAWR,GAAWrd,MAAM4d,IAE9B,MAAMF,EAAW,IAAIzqB,MACf0qB,EAAiD,CAAA,EACvD,IAAK,IAAIhkC,EAAI,EAAGA,EAAIikC,EAAShkC,OAAQD,GAAK,EAAG,CAC/BikC,EAASjkC,GAAI,GACrBooB,SAAAA,SAAkBrnB,EAAeujC,QACfxkC,IAAhBkkC,EAASM,EAAOxkC,QAClBkkC,EAASM,EAAOxkC,MAAQikC,EAAS9jC,OACjC8jC,EAASzjC,KAAK,CAACgkC,OAAa,IAE7B7iC,GAAAA,KACJ,CACD,IAAK,IAAIzB,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAM4hC,EAAQmC,EAAS/jC,GACjBskC,EAAS1C,EAAM,GACfrL,EAAQ,IAAIjd,MACZ+M,EAA8C,CAAA,EACpD,IAAK,IAAIkc,EAAI,EAAGA,EAAI0B,EAAShkC,OAAQsiC,GAAK,EAAG,CAC3C,MAAOiC,EAAQS,GAAOhB,EAAS1B,GACzBxhC,EAAQkkC,EAAIzkC,IAAI8jC,YAClBvjC,IACFslB,EAAMme,EAAO1kC,MAAQy2B,EAAMt2B,OAC3Bs2B,EAAMj2B,KAAK,CAACkkC,EAAQzjC,IAEvB,CACD,MAAMqkC,EAAM1B,GAAWhL,UAAUnC,EAAOlQ,GACxCub,EAAM,GAAKwD,CACZ,CACD,OAAO,IAAItB,EAAWC,EAAUC,EAAUC,EAAUC,EACrD,GA/FA7X,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAshC,EAAA,CAAApjC,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAOquB,QAEN,KAAAlW,GAtcU1rB,EAAUQ,EAAAkrB,IAAA,EAAA,GCKVsa,GAAW,uBAAXA,OAAAA,EAAAA,MAAAA,EACX,WAAAtlC,CAAYwiC,EACAC,EACAC,EACAC,GACVziC,KAAKsiC,SAAWA,EAChBtiC,KAAKuiC,SAAWA,EAChBviC,KAAKwiC,SAAWA,EAChBxiC,KAAKyiC,SAAWA,CACjB,CAcD,YAAIC,GACF,OAAO1iC,KAAKsiC,SAAS9jC,MACtB,CAED,YAAImkC,GACF,OAAO3iC,KAAKwiC,SAAShkC,MACtB,CAID,MAAAokC,CAAOxB,GAIL,OAHoB,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,WAEsB,IAA7B2B,KAAKuiC,SAASnB,EACtB,CAID,MAAA0B,CAAO5C,GAIL,OAHoB,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK7hC,WAEsB,IAA7B2B,KAAKyiC,SAASvC,EACtB,CAKD,MAAA8C,CAAU5B,IACY,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,MAEM,iBAAT+iC,IACTA,EAAOphC,KAAKuiC,SAASnB,IAEvB,MAAMjB,EAAwB,iBAATiB,EAAoBphC,KAAKsiC,SAASlB,QAAa,EACpE,YAAOjB,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAKD,MAAA8C,CAAO/C,IACe,iBAATA,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK7hC,MAEM,iBAAT6hC,IACTA,EAAOlgC,KAAKyiC,SAASvC,IAEvB,MAAMC,EAAwB,iBAATD,EAAoBlgC,KAAKwiC,SAAStC,QAAa,EACpE,YAAOC,IAAAA,EAAmBA,EAAM,QAAU,CAC3C,CAED,GAAAphC,CAAOqiC,EAAeiE,GACpB,OAAOrlC,KAAKkiC,IAAId,EAAMiE,EACvB,CAED,KAAAjF,CAAYgB,EAAeiE,EAAkBhF,GAC3C,OAAOrgC,KAAKslC,MAAMlE,EAAMiE,EAAMhF,EAC/B,CAED,IAAAhQ,CAAK1T,GACH,MAAMumB,EAAeljC,KAAKwiC,SACpBW,EAAexmB,EAAK6lB,SACpBY,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQ+C,EAAapC,GACrBZ,EAAOC,EAAM,GACb9mB,EAAIsD,EAAKsmB,OAAO/C,GACtBmD,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,cAAKwa,EAAe8mB,EAAQ,CAACD,EAAMC,EAAM,GAAG9P,KAAKhX,IAC9D,CACD,IAAK,IAAIynB,EAAI,EAAGA,EAAIqC,EAAa3kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQgD,EAAarC,GACrBZ,EAAOC,EAAM,QACE9hC,IAAjBglC,EAAYnD,EAAK7hC,QACnBglC,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,KAAKshC,GAEpB,CACD,OAAOiF,EAAY9B,aAAaF,EAAaC,EAC9C,CAED,QAAA9B,GACE,MAAMgC,EAAcvjC,KAAKwiC,SACnBzqB,EAAIwrB,EAAY/kC,OAChB4kC,EAAc,IAAIvrB,MAA0BE,GAClD,IAAK,IAAI+oB,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOZ,EAAM9mB,GAAKmqB,EAAYzC,GAC9BsC,EAAYtC,GAAK,CAACZ,EAAM9mB,EAAEmoB,WAC3B,CACD,OAAO6D,EAAY9B,aAAaF,EAAapjC,KAAKyiC,SACnD,CAED,KAAAjB,CAAM7kB,GACJ,MAAMumB,EAAeljC,KAAKwiC,SACpBW,EAAexmB,EAAK6lB,SACpBY,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMX,EAAQ+C,EAAapC,GACrBZ,EAAOC,EAAM,GACb9mB,EAAIsD,EAAKsmB,OAAO/C,GACtBmD,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,cAAKwa,EAAe8mB,EAAQ,CAACD,EAAMC,EAAM,GAAGqB,MAAMnoB,IAC/D,CACD,IAAK,IAAIynB,EAAI,EAAGA,EAAIqC,EAAa3kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAOZ,EAAM7mB,GAAK8pB,EAAarC,QACVziC,IAAjBglC,EAAYnD,EAAK7hC,QACnBglC,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,KAAK,CAACqhC,EAAM7mB,EAAEkoB,aAE7B,CACD,OAAO6D,EAAY9B,aAAaF,EAAaC,EAC9C,CAED,KAAA/S,CAAMC,GACJ,MAAMgT,EAAcvjC,KAAKwiC,SACnBzqB,EAAIwrB,EAAY/kC,OAChB4kC,EAAc,IAAIvrB,MAA0BE,GAClD,IAAK,IAAI+oB,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOZ,EAAM9mB,GAAKmqB,EAAYzC,GAC9BsC,EAAYtC,GAAK,CAACZ,EAAM9mB,EAAEkX,MAAMC,GACjC,CACD,OAAO6U,EAAY9B,aAAaF,EAAapjC,KAAKyiC,SACnD,CAID,GAAAP,CAAId,EAAmDoC,IACjC,iBAATpC,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,MAEM,iBAAT+iC,IACTA,EAAOphC,KAAKuiC,SAASnB,IAEvB,MAAMjB,EAAwB,iBAATiB,EAAoBphC,KAAKsiC,SAASlB,QAAa,EACpE,YAAIjB,EACF,OAEFiB,EAAOjB,EAAM,GACb,MAAMwD,EAAMxD,EAAM,GAClB,OAAOiB,EAAKc,IAAIyB,EAAKH,EACtB,CAID,KAAA8B,CAAMlE,EAAmDoC,EAAiBnD,IACpD,iBAATe,GAA8B,OAATA,GAAiC,mBAATA,KACtDA,EAAOA,EAAK/iC,MAEM,iBAAT+iC,IACTA,EAAOphC,KAAKuiC,SAASnB,IAEvB,MAAMjB,EAAwB,iBAATiB,EAAoBphC,KAAKsiC,SAASlB,QAAa,EACpE,YAAIjB,EACF,OAAOE,EAETe,EAAOjB,EAAM,GACb,MAAMwD,EAAMxD,EAAM,GAClB,OAAOiB,EAAKkE,MAAM3B,EAAKH,EAAKnD,EAC7B,CAED,QAAAoD,CAASD,GACP,MAAMlB,EAAWtiC,KAAKsiC,SAChB1B,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAO6iC,EAAMuC,GAAOrB,EAAS/jC,GACvBe,EAAQ8hC,EAAKc,IAAIyB,EAAKH,YACxBlkC,IACFuhC,EAASO,EAAK/iC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAK,CAACuiC,EAAM9hC,IAExB,CACD,OAAO6hC,GAAWlK,UAAU2J,EAAUC,EACvC,CAED,SAAA7H,CAAUrc,EAAkB+mB,GAA4B,GACtD,MAAMG,EAAe7jC,KAAKsiC,SACpBY,EAAeljC,KAAKwiC,SACpBsB,EAAc,IAAIjsB,MAClBksB,EAAoD,CAAA,EACpDX,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAK,IAAIvC,EAAI,EAAGA,EAAIoC,EAAa1kC,OAAQsiC,GAAK,EAAG,CAC/C,MAAMZ,EAAOgD,EAAapC,GAAI,GAC9B,IAAI0C,EAAM7mB,EAAKsmB,OAAO/C,GAItB,QAHIsD,IAAAA,GAAkBE,IACpBF,EAAMvB,GAAW7V,GAAG,CAAC8T,EAAM,cAEzBsD,EAGJ,IAAK,IAAIjlC,EAAI,EAAGA,EAAIslC,EAAarlC,OAAQD,GAAK,EAAG,CAC/C,MAAO6iC,EAAMuC,GAAOE,EAAatlC,GAC3Be,EAAQ8hC,EAAKc,IAAIyB,EAAKH,GAC5B,YAAIlkC,EACF,SAEF,MAAM0kC,EAAKD,EAAY3C,EAAK/iC,MAC5B,YAAI2lC,EACFD,EAAY3C,EAAK/iC,MAAQylC,EAAYtlC,OACrCslC,EAAYjlC,KAAK,CAACuiC,EAAMnB,GAAW7T,GAAG,CAAC8T,EAAM5gC,UACxC,CACL,MAAM2kC,EAASH,EAAYE,GAAK,GAC/BC,EAAOrf,MAA+Cwc,EAAK/iC,MAAQ4lC,EAAOnP,MAAMt2B,OAChFylC,EAAOnP,MAA4Bj2B,KAAK,CAACqhC,EAAM5gC,GACjD,CACD,MAAM4kC,EAAKb,EAAYnD,EAAK7hC,MAC5B,YAAI6lC,EACFb,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,KAAK,CAACqhC,EAAMiB,GAAW/U,GAAG,CAACgV,EAAM9hC,UACxC,CACL,MAAM6kC,EAASf,EAAYc,GAAK,GAC/BC,EAAOvf,MAA+Csb,EAAK7hC,MAAQ8lC,EAAOrP,MAAMt2B,OAChF2lC,EAAOrP,MAAqCj2B,KAAK,CAACuiC,EAAM9hC,GAC1D,CACF,CACF,CACD,OAAO,IAAI8lC,EAAYtB,EAAaC,EAAaX,EAAaC,EAC/D,CAED,GAAAM,CAAOvC,EAAeuC,YAChBA,IACFA,EAAM1D,GAAWr3B,SAAS+6B,IAE5B,MAAMW,EAActkC,KAAKsiC,SACnBiC,EAAcvkC,KAAKuiC,SACnBhkC,EAAIgmC,EAAYnD,EAAK/iC,MAC3B,QAAIslC,IAAAA,QAAkBplC,IAAAA,EAAc,CAClC,MAAMulC,EAAcQ,EAAYtb,MAAM,GAEtC,OADA8a,EAAYvlC,GAAK,CAAC6iC,EAAMuC,GACjByB,EAAYf,aAAaP,EAAaS,EAC9C,CAAM,YAAIZ,EAAgB,CACzB,MAAMG,EAAcQ,EAAYtb,MAAM,GAChC+a,EAAoD,CAAA,EAC1D,IAAK,MAAM1lC,KAAQkmC,EACjBR,EAAY1lC,GAAQkmC,EAAYlmC,GAIlC,OAFA0lC,EAAY3C,EAAK/iC,MAAQylC,EAAYtlC,OACrCslC,EAAYjlC,KAAK,CAACuiC,EAAMuC,IACjByB,EAAYf,aAAaP,EAAaC,EAC9C,CAAM,YAAIxlC,EAAc,CACvB,MAAMulC,EAAc,IAAIjsB,MAClBksB,EAAoD,CAAA,EAC1D,IAAIhW,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIwD,EAAY9lC,OAAQsiC,GAAK,EAAG,CAC9C,MAAMX,EAAQmE,EAAYxD,GACtBX,EAAM,KAAOiB,IACf0C,EAAY/V,GAAKoS,EACjB4D,EAAY5D,EAAM,GAAG9hC,MAAQ0vB,EAC7BA,GAAK,EAER,CACD,OAAOqX,EAAYf,aAAaP,EAAaC,EAC9C,CACD,OAAO/jC,IACR,CAED,GAAAwjC,CAAItD,EAAYsD,YACVA,IACFA,EAAMrC,GAAWv4B,SAAS46B,IAE5B,MAAMD,EAAcvjC,KAAKwiC,SACnBgC,EAAcxkC,KAAKyiC,SACnBlkC,EAAIimC,EAAYtE,EAAK7hC,MAC3B,QAAImlC,IAAAA,QAAkBjlC,IAAAA,EAAc,CAClC,MAAM6kC,EAAcG,EAAYva,MAAM,GAEtC,OADAoa,EAAY7kC,GAAK,CAAC2hC,EAAMsD,GACjB4B,EAAY9B,aAAaF,EAAaoB,EAC9C,CAAM,YAAIhB,EAAgB,CACzB,MAAMJ,EAAcG,EAAYva,MAAM,GAChCqa,EAAoD,CAAA,EAC1D,IAAK,MAAMhlC,KAAQmmC,EACjBnB,EAAYhlC,GAAQmmC,EAAYnmC,GAIlC,OAFAglC,EAAYnD,EAAK7hC,MAAQ+kC,EAAY5kC,OACrC4kC,EAAYvkC,KAAK,CAACqhC,EAAMsD,IACjB4B,EAAY9B,aAAaF,EAAaC,EAC9C,CAAM,YAAI9kC,EAAc,CACvB,MAAM6kC,EAAc,IAAIvrB,MAClBwrB,EAAoD,CAAA,EAC1D,IAAItV,EAAI,EACR,IAAK,IAAI+S,EAAI,EAAGA,EAAIyC,EAAY/kC,OAAQsiC,GAAK,EAAG,CAC9C,MAAMX,EAAQoD,EAAYzC,GACtBX,EAAM,KAAOD,IACfkD,EAAYrV,GAAKoS,EACjBkD,EAAYlD,EAAM,GAAG9hC,MAAQ0vB,EAC7BA,GAAK,EAER,CACD,OAAOqX,EAAY9B,aAAaF,EAAaC,EAC9C,CACD,OAAOrjC,IACR,CAED,UAAAykC,CAAcrD,EAAeb,EACfmE,GACZ,MAAMC,EAAS3kC,KAAKgjC,OAAO5B,GAC3B,IAAI6C,EAASU,EAUb,gBATIV,IAMFA,EAJES,WADEA,EACWzE,GAAWr3B,SAAS87B,GAEpBzE,GAAWe,SAI5BiD,EAASA,EAAO3D,QAAQC,GACpB0D,EAAOvnB,OAAOioB,GACT3kC,KAEFA,KAAK2jC,IAAIvC,EAAM6C,EACvB,CAED,UAAAW,CAAW1E,EAAYK,EACZsE,GACT,MAAMC,EAAS9kC,KAAKijC,OAAO/C,GAC3B,IAAIiE,EAASW,EAUb,gBATIX,IAMFA,EAJEU,WADEA,EACW1D,GAAWv4B,SAASi8B,GAEpB1D,GAAWH,SAI5BmD,EAASA,EAAO7D,QAAQC,GACpB4D,EAAOznB,OAAOooB,GACT9kC,KAEFA,KAAKwjC,IAAItD,EAAMiE,EACvB,CAGD,MAAAznB,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgByoB,GAClBpQ,EAAAA,OAAOrM,MAAM3oB,KAAKwiC,SAAU7lB,EAAK6lB,SAG3C,CAGD,KAAAlZ,CAASjC,GACP,MAAM0d,EAAO/kC,KAAKwiC,SACZzqB,EAAIgtB,EAAKvmC,OACf6oB,EAASA,EAAOE,MAAM,eAAeA,MAAM,IAC3BA,MAAY,IAANxP,EAAU,UAAY,SAASwP,MAAM,IAC3D,IAAK,IAAIuZ,EAAI,EAAGA,EAAI/oB,EAAG+oB,GAAK,EAAG,CAC7B,MAAOZ,EAAMsD,GAAOuB,EAAKjE,GACf,IAANA,IACFzZ,EAASA,EAAOE,MAAM,OAExBF,EAASA,EAAOE,MAAM,IAAW+B,MAAM4W,GAAM3Y,MAAM,MAAM+B,MAAMka,GAAKjc,MAAM,GAC3E,CAED,OADAF,EAASA,EAAOE,MAAM,GAEvB,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAGD,YAAOghC,GACL,OAAO,IAAIoE,EAAYpQ,EAAOgM,OAAAA,QAAS,CAAIhM,EAAAA,SAAOgM,QAAS,CAAA,EAC5D,CAED,cAAAgE,IAAkBC,GAChB,MAAMC,EAAID,EAAKzmC,OACT8jC,EAAW,IAAIzqB,MAA4CqtB,GACjE,IAAK,IAAI3mC,EAAI,EAAGA,EAAI2mC,EAAG3mC,GAAK,EAAG,CAC7B,MAAO6iC,EAAMuC,GAAOsB,EAAK1mC,GACzB+jC,EAAS/jC,GAAK,CAAC6iC,EAAMnB,GAAWr3B,SAAS+6B,GAC1C,CACD,OAAO3jC,KAAKqkC,aAAa/B,EAC1B,CAED,cAAA6C,IAAkBJ,GAChB,MAAMG,EAAIH,EAAKvmC,OACTgkC,EAAW,IAAI3qB,MAA0BqtB,GAC/C,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,EAAGpE,GAAK,EAAG,CAC7B,MAAOZ,EAAMsD,GAAOuB,EAAKjE,GACzB0B,EAAS1B,GAAK,CAACZ,EAAMiB,GAAWv4B,SAAS46B,GAC1C,CACD,OAAOxjC,KAAKsjC,aAAad,EAC1B,CAED,mBAAA6B,CAAoB/B,EACAC,YACdA,IACFA,EAAWpB,GAAWvc,MAAM0d,IAE9B,MAAME,EAAW,IAAI3qB,MACf4qB,EAAiD,CAAA,EACvD,IAAK,IAAIlkC,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC/B+jC,EAAS/jC,GAAI,GACrBooB,SAAAA,SAAkBrnB,EAAgB4gC,QAClB7hC,IAAdokC,EAASvC,EAAK7hC,QAChBokC,EAASvC,EAAK7hC,MAAQmkC,EAAShkC,OAC/BgkC,EAAS3jC,KAAK,CAACqhC,OAAW,IAE3BlgC,GAAAA,KACJ,CACD,IAAK,IAAI8gC,EAAI,EAAGA,EAAI0B,EAAShkC,OAAQsiC,GAAK,EAAG,CAC3C,MAAMX,EAAQqC,EAAS1B,GACjBZ,EAAOC,EAAM,GACbrL,EAAQ,IAAIjd,MACZ+M,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAO6iC,EAAMuC,GAAOrB,EAAS/jC,GACvBe,EAAQqkC,EAAI5kC,IAAImhC,YAClB5gC,IACFslB,EAAMwc,EAAK/iC,MAAQy2B,EAAMt2B,OACzBs2B,EAAMj2B,KAAK,CAACuiC,EAAM9hC,IAErB,CACD,MAAMkkC,EAAMrC,GAAWlK,UAAUnC,EAAOlQ,GACxCub,EAAM,GAAKqD,CACZ,CACD,OAAO,IAAI4B,EAAY9C,EAAUC,EAAUC,EAAUC,EACtD,CAED,mBAAAa,CAAoBd,EACAC,YACdA,IACFA,EAAWxC,GAAWrb,MAAM4d,IAE9B,MAAMF,EAAW,IAAIzqB,MACf0qB,EAAiD,CAAA,EACvD,IAAK,IAAIhkC,EAAI,EAAGA,EAAIikC,EAAShkC,OAAQD,GAAK,EAAG,CAC/BikC,EAASjkC,GAAI,GACrBooB,SAAAA,SAAqBrnB,EAAU8hC,QACf/iC,IAAdkkC,EAASnB,EAAK/iC,QAChBkkC,EAASnB,EAAK/iC,MAAQikC,EAAS9jC,OAC/B8jC,EAASzjC,KAAK,CAACuiC,OAAW,IAE3BphC,GAAAA,KACJ,CACD,IAAK,IAAIzB,EAAI,EAAGA,EAAI+jC,EAAS9jC,OAAQD,GAAK,EAAG,CAC3C,MAAM4hC,EAAQmC,EAAS/jC,GACjB6iC,EAAOjB,EAAM,GACbrL,EAAQ,IAAIjd,MACZ+M,EAA8C,CAAA,EACpD,IAAK,IAAIkc,EAAI,EAAGA,EAAI0B,EAAShkC,OAAQsiC,GAAK,EAAG,CAC3C,MAAOZ,EAAMsD,GAAOhB,EAAS1B,GACvBxhC,EAAQkkC,EAAIzkC,IAAIqiC,YAClB9hC,IACFslB,EAAMsb,EAAK7hC,MAAQy2B,EAAMt2B,OACzBs2B,EAAMj2B,KAAK,CAACqhC,EAAM5gC,IAErB,CACD,MAAMqkC,EAAM1D,GAAWhJ,UAAUnC,EAAOlQ,GACxCub,EAAM,GAAKwD,CACZ,CACD,OAAO,IAAIyB,EAAY9C,EAAUC,EAAUC,EAAUC,EACtD,GA7FA7X,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAshC,EAAA,CAAApjC,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAOquB,QAEN,KAAAlW,GA3YU1rB,EAAWQ,EAAAkrB,IAAA,EAAA,GCJX,MAAAya,GAAe,CAC1B,CAACtoB,OAAOC,aAAa2K,GACZ3Q,UAAQ8Q,WAAyBH,EAAU,YCiEzC2d,GAAsFzpB,WAASxI,OAAsD,gBAAiB,CACjL,aAAAkyB,CAAcC,EAAuBC,GAC/BD,EAAczvB,WAASI,WACzBrW,KAAK4lC,QAAQ,KAAMF,GAErB3lC,MAAM0lC,cAAcC,EAAaC,EAClC,EAED,GAAA3mC,CAAIuT,EAA6EsJ,GAQ/E,OAPItJ,aAAoBjG,EAAAA,SACtBtM,KAAKqV,UAAU9C,GACNA,aAAoBszB,GAC7B7lC,KAAK4lC,QAAQrzB,EAAUsJ,EAAQ5F,EAAS6vB,SAAAA,WAExC9lC,KAAKw8B,SAASjqB,EAAUsJ,EAAQ5F,EAAS6vB,SAAAA,WAEpC9lC,KAAKuR,KACb,EAED,YAAAgE,CAAahD,EAA6EsJ,GAQxF,OAPItJ,aAAoBjG,EAAAA,SACtBtM,KAAKqV,UAAU9C,GACNA,aAAoBszB,GAC7B7lC,KAAK4lC,QAAQrzB,EAAUsJ,EAAQ5F,EAASI,SAAAA,WAExCrW,KAAKw8B,SAASjqB,EAAUsJ,EAAQ5F,EAASI,SAAAA,WAEpCrW,KAAKuR,KACb,EAED,aAAIw0B,GACF,MAAM5wB,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiBqwB,GAAgBrwB,EAAMisB,KAAO,IACtD,EAED,YAAA4E,GACE,MAAMD,EAAY/lC,KAAK+lC,UACvB,GAAkB,OAAdA,EACF,MAAM,IAAInoC,UAAUmoC,EAAY,IAAM/lC,KAAK3B,KAAK0W,WAAa,eAE/D,OAAOgxB,CACR,EAED,cAAAE,CAAkBC,GAChB,MAAMH,EAAY/lC,KAAK+lC,UACvB,OAAkB,OAAdA,EACKG,EAEFH,CACR,EAED3E,KAAM,KAEN,QAAA+E,GACE,OAAQhoC,OAAOioC,eAAepmC,MAAoCohC,IACnE,EAED,OAAAiF,GACE,MAAMjF,EAAOphC,KAAKohC,KAClB,GAAa,OAATA,EACF,MAAM,IAAIxjC,UAAUwjC,EAAO,IAAMphC,KAAK3B,KAAK0W,WAAa,SAE1D,OAAOqsB,CACR,EAED,SAAAkF,CAAaJ,GACX,MAAM9E,EAAOphC,KAAKohC,KAClB,OAAa,OAATA,EACK8E,EAEF9E,CACR,EAED,OAAAwE,CAAQW,EAAsC1qB,EAAiD0gB,GAQ7F,GAPsB,iBAAX1gB,IACT0gB,EAAW1gB,EACXA,OAAc,YAEZ0gB,IACFA,EAAWtmB,EAAS6vB,SAAAA,YAEjB9lC,KAAKwmC,YAAYjK,GACpB,OAEF,MAAMkK,EAAUzmC,KAAKohC,KACjBmF,IAAYE,KAQD,KAJb5qB,WADEA,EACO7b,KAAK0mC,WAELC,SAAO/9B,SAASiT,IAIvBA,EADE3E,EAAQ8Q,QAAAA,WAA4BhoB,KAAKuR,MAAO,iBACzCvR,KAAKuR,MAAMq1B,cAAe5mC,MAE1BA,KAAK6b,QAEI,IAAXA,IACTA,EAAS,MAEX7b,KAAK6mC,YAAYN,EAASE,EAAS5qB,GACnC7b,KAAK8mC,mBACJ9mC,KAA8BohC,KAAOmF,EACtCvmC,KAAK+mC,UAAUR,EAASE,EAAS5qB,GACjC7b,KAAKgnC,WAAWT,EAASE,EAAS5qB,GACnC,EAED,WAAAgrB,CAAYN,EAAsCE,EAAsC5qB,GAEvF,EAED,SAAAkrB,CAAUR,EAAsCE,EAAsC5qB,GACpE,OAAZ0qB,GACFvmC,KAAKinC,UAAUV,EAAS1qB,EAE3B,EAED,UAAAmrB,CAAWT,EAAsCE,EAAsC5qB,GAEtF,EAED,SAAAorB,CAAU7F,EAA4BvlB,GACpC,IAAK7b,KAAKyE,UAAY8gC,GAAatoB,OAAOC,aAAald,KAAKuR,OAC1D,OAEF,MAAM21B,EAAQlnC,KAAKuR,MAAM80B,QAAQjF,YAC7B8F,GAGJlnC,KAAKw8B,SAAS0K,EAAOrrB,EAAQ5F,EAASgnB,SAAAA,UACvC,EAED,UAAAkK,CAAWC,EAAoB/B,EAAkBxpB,GAC/C,MAAMulB,EAAOphC,KAAKohC,KAClB,GAAa,OAATA,EACF,OAEF,MAAM8F,EAAQE,EAAMroC,IAAIqiC,EAAMiE,YAC1B6B,KAQW,KAJbrrB,WADEA,EACO7b,KAAK0mC,WAELC,SAAO/9B,SAASiT,IAIvBA,EADE3E,EAAQ8Q,QAAAA,WAA4BhoB,KAAKuR,MAAO,iBACzCvR,KAAKuR,MAAMq1B,cAAe5mC,MAE1BA,KAAK6b,QAEI,IAAXA,IACTA,EAAS,MAEX7b,KAAKw8B,SAAS0K,EAAOrrB,EAAQ5F,EAASgnB,SAAAA,WACvC,EAED,QAAAjwB,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACnB,GAAIA,aAAiB4G,EAAAA,SACnB/b,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACrBnB,aAAiBqwB,GACnBxlC,KAAK4lC,QAAQzwB,EAAMisB,KAAMjsB,EAAM0G,OAAQ5F,EAAAA,SAASgnB,WAEhDj9B,KAAK4lC,QAAQ,KAAM3vB,EAASgnB,SAAAA,WAEZ,OAAdj9B,KAAKohC,KACPphC,KAAKqnC,eAAe16B,GAC8B,IAAxC3M,KAAK2B,MAAQoa,EAAAA,SAASurB,cAChCtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,IAE+B,IAAxC5V,KAAK2B,MAAQoa,EAAAA,SAASurB,cAChCtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,QAEd,GAAIT,aAAiBjG,WAE1B,GADAlP,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,WAASgK,cAAsBtW,KAAKwnC,eAAiBryB,EAAMsyB,QAAS,CACnFznC,KAA8BwnC,aAAeryB,EAAMsyB,QACpD,MAAMC,EAAavyB,EAAMwyB,eAAe3nC,MACxC,GAAI0nC,aAAsB7B,GACxB7lC,KAAK4lC,QAAQ8B,EAAYzxB,EAASgnB,SAAAA,eAC7B,CACLj9B,KAAK4lC,QAAQ,KAAM3vB,EAASgnB,SAAAA,WAC5B,MAAM2K,EAAgB5nC,KAA8C6nC,YAAY1yB,EAAMwyB,eAAe3nC,OACrGA,KAAKw8B,SAASoL,EAAc3xB,EAASgnB,SAAAA,UACtC,CAC4C,IAAxCj9B,KAAK2B,MAAQoa,EAAAA,SAASurB,cACzBtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,EAEpB,MAAmD,IAAxC5V,KAAK2B,MAAQoa,EAAAA,SAASurB,cAChCtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,QAEd,GAAIiC,MAAMiR,QAAQ3T,GAAQ,CAC/BnV,KAAKgW,YAAW,GAChB,MAAM8xB,EAAgB9nC,KAAKwnC,aACrBO,EAAc,IAAIlwB,MAAe1C,EAAM3W,QAC7C,IAAK,IAAID,EAAI,EAAGA,EAAI4W,EAAM3W,OAAQD,GAAK,EAAG,CACxC,KAAI4W,EAAM5W,aAAc2Q,YAMtB,OAFAlP,KAAKgW,YAAW,QAChBhW,KAAK4V,aAAY,GAJjBkyB,EAAcvpC,GAAM4W,EAAM5W,GAAgBkpC,QAC1CM,EAAYxpC,GAAM4W,EAAM5W,GAAgBopC,eAAe3nC,KAM1D,CACD,MAAM4nC,EAAe5nC,KAAK6nC,eAAgBE,GAC1C/nC,KAAKw8B,SAASoL,EAAc3xB,EAASgnB,SAAAA,WACQ,IAAxCj9B,KAAK2B,MAAQoa,EAAAA,SAASurB,cACzBtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,EAEpB,MACC5V,KAAKgW,YAAW,GAC6B,IAAxChW,KAAK2B,MAAQoa,EAAAA,SAASurB,cACzBtnC,KAAKunC,MAAM56B,GAEX3M,KAAK4V,aAAY,EAGtB,EAED,OAAAlT,GACE3C,MAAM2C,UACN,MAAM0+B,EAAOphC,KAAKohC,KACL,OAATA,GACFphC,KAAKinC,UAAU7F,GAAM,EAExB,GACA,CACD,SAAApsB,CAAUgzB,EAAoBz2B,GAG5B,OAFAy2B,EAAWjoC,MAAMiV,UAAUgzB,EAAUz2B,IACE6vB,KAAO4G,EAAS7B,WAChD6B,CACR,IC9KUC,GAA0GzC,GAAcjyB,OAA0E,0BAA2B,CACxO20B,WAAAA,KACS,EAGTC,QAAAA,KACS,EAGTC,UAAAA,KACS,EAGTC,WAAAA,KACS,EAGT,0BAAAC,GAEC,EAED,wBAAAC,CAAyBrB,GACnBlnC,KAAKwoC,aAAexoC,KAAKyoC,SAASzoC,KAAKknC,SAAWA,GACpDlnC,KAAKw8B,SAAS0K,EAAuBjxB,EAASgnB,SAAAA,UAEjD,EAED,YAAAyL,GACE,IAAIC,EAAYxqC,OAAOioC,eAAepmC,MAAkC2oC,SAIxE,gBAHIA,IACFA,EAAWC,EAAmBC,mBAAAA,QAEzBF,CACR,EAED,WAAAG,CAAYH,GACT3oC,KAA8B2oC,SAAWC,EAAAA,mBAAmBhgC,SAAS+/B,EACvE,EAED,eAAII,GACF,OAAO,CACR,EAED,YAAIC,GACF,OAAOhpC,IACR,EAED,SAAIipC,GACF,MAAMA,EAAQ,IAAIC,IAElB,OADAD,EAAMjqC,IAAIgB,KAAM,GACTipC,CACR,EAED,YAAIE,GACF,OAAO,CACR,EAED,IAAA9Y,CAAK1T,GAEH,OAAI3c,QADJ2c,EAAOysB,uBAAqBxgC,SAAS+T,IAE5BysB,uBAAqBC,QAAQ,EAAGrpC,MAElCopC,uBAAqBE,IAAItpC,KAAM2c,EACvC,EAED,QAAA4kB,GACE,OAAO6H,EAAAA,qBAAqBC,SAAS,EAAGrpC,KACzC,EAED,KAAAwhC,CAAM7kB,GAEJ,OAAI3c,QADJ2c,EAAOysB,uBAAqBxgC,SAAS+T,IAE5BysB,EAAAA,qBAAqBrS,OAEvBqS,EAAAA,qBAAqBE,IAAItpC,KAAM2c,EAAK4kB,WAC5C,EAED,KAAAjR,CAAMC,GACJ,OAAO6Y,uBAAqBC,QAAQ9Y,EAAQvwB,KAC7C,EAED,MAAAupC,CAAOhZ,GACL,OAAO6Y,EAAAA,qBAAqBC,QAAQ,EAAI9Y,EAAQvwB,KACjD,EAED,eAAIwoC,GACF,OAAkE,IAA1DxoC,KAAK2B,MAAQsmC,GAAwBuB,gBAC9C,EAED,SAAAC,CAAUjB,YACJA,IACFA,GAAc,GAEhB,MAAM7mC,EAAQ3B,KAAK2B,MAanB,OAZI6mC,GAAqE,IAArD7mC,EAAQsmC,GAAwBuB,kBAClDxpC,KAAKyC,SAASd,EAAQsmC,GAAwBuB,iBAClB,IAAxBxpC,KAAK0pC,gBAAwB1pC,KAAKyE,SACpCzE,KAAK2pC,oBAEGnB,GAAqE,IAArD7mC,EAAQsmC,GAAwBuB,mBAC1DxpC,KAAKyC,SAASd,GAASsmC,GAAwBuB,iBACnB,IAAxBxpC,KAAK0pC,gBAAwB1pC,KAAKyE,UACpCzE,KAAK4pC,oBACL5pC,KAAK6pC,6BAGF7pC,IACR,EAED,sBAAA8pC,CAAuBC,EAAwBC,GAC5ChqC,KAA8B0pC,gBAAkB,GAC5C1pC,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAAwB1pC,KAAKyE,UACzDzE,KAAK4pC,oBACL5pC,KAAK6pC,2BAER,EAED,yBAAAI,CAA0BF,EAAwBC,GAC/ChqC,KAA8B0pC,gBAAkB,GAC5C1pC,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAAwB1pC,KAAKyE,SACzDzE,KAAK2pC,kBAER,EAED,gBAAIO,GACF,OAAmE,IAA3DlqC,KAAK2B,MAAQsmC,GAAwBkC,iBAC9C,EAED,iBAAAP,GACkE,IAA3D5pC,KAAK2B,MAAQsmC,GAAwBkC,oBAG1CnqC,KAAKoqC,wBACLpqC,KAAKyC,SAASzC,KAAK2B,MAAQsmC,GAAwBkC,kBACnDnqC,KAAKqqC,sBACLrqC,KAAKsqC,uBACN,EAED,qBAAAF,GAEC,EAED,mBAAAC,GACE,MAAME,EAAkBvqC,KAAKuR,MACzBi5B,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,IACtCA,EAAgBE,sBAAsBzqC,KAEzC,EAED,oBAAAsqC,GAEC,EAED,gBAAAX,GACkE,IAA3D3pC,KAAK2B,MAAQsmC,GAAwBkC,oBAG1CnqC,KAAK0qC,uBACL1qC,KAAKyC,SAASzC,KAAK2B,OAASsmC,GAAwBkC,kBACpDnqC,KAAK2qC,qBACL3qC,KAAK4qC,sBACN,EAED,oBAAAF,GAEC,EAED,kBAAAC,GACE,MAAMJ,EAAkBvqC,KAAKuR,MACzBi5B,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,IACtCA,EAAgBM,yBAAyB7qC,KAE5C,EAED,mBAAA4qC,GAEC,EAED,wBAAAf,GACE,MAAMU,EAAkBvqC,KAAKuR,MACvBjS,EAAQU,KAAKV,WACA,IAAfA,GAAoBkrC,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,IAC1DA,EAAgBO,sBAAsB9qC,KAAMA,KAAKyoC,SAASnpC,GAE7D,EAED,UAAA49B,CAAW3qB,EAAaC,GACtBzS,MAAMm9B,WAAW3qB,EAAUC,GAC3B,MAAM+3B,EAAkBvqC,KAAKuR,MACzBvR,KAAKkqC,cAAgBM,EAAgBvtB,gBAAAA,OAAOC,aAAaqtB,IAC3DA,EAAgBO,sBAAsB9qC,KAAMuS,QAA2CvS,KAAKyoC,SAASl2B,GAAY,EAEpH,EAED,OAAA7P,GACE3C,MAAM2C,UACD1C,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAC5B1pC,KAAK4pC,mBAER,EAED,SAAAlmC,GACO1D,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAC5B1pC,KAAK2pC,mBAEP5pC,MAAM2D,WACP,EAED+kC,SAASnpC,GACAA,SAAsCA,EAAQ,GAGzD,CACE,SAAA0V,CAAUgzB,EAAoBz2B,GAI5B,OAHAy2B,EAAWjoC,MAAMiV,UAAUgzB,EAAUz2B,IACEo3B,SAAWX,EAASU,eAC1DV,EAAsC0B,eAAiB,EACjD1B,CACR,EAED,MAAAtxB,CAAOq0B,GACLhrC,MAAM2W,OAAOq0B,GACb,MAAMC,EAAoBD,EAAc9sC,UAExC,IAAIwb,EAAYuxB,EAAkBvxB,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKurC,EAAmB,iBACtDA,EAAkBxC,YACpB/uB,GAAawuB,GAAwBuB,gBAErC/vB,IAAcwuB,GAAwBuB,uBAEhCwB,EAAkExC,aAE5ErqC,OAAOgB,eAAe6rC,EAAmB,YAAa,CACpD1rC,MAAOma,EACPE,YAAY,EACZC,cAAc,IAGhB,MAAMqxB,EAAqB9sC,OAAOC,yBAAyB4sC,EAAmB,iBAC1EC,IAAAA,GAAiC,UAAWA,IAC9CA,EAAmB3rC,MAAQspC,EAAmBhgC,mBAAAA,SAASqiC,EAAmB3rC,OAC1EnB,OAAOgB,eAAe6rC,EAAmB,WAAYC,GAExD,EAEDzB,gBAAiB,GAAMhE,GAAcxyB,UAAY,EACjDm3B,iBAAkB,GAAM3E,GAAcxyB,UAAY,EAElDA,UAAWwyB,GAAcxyB,UAAY,EACrCE,UAAW,GAAMsyB,GAAcxyB,UAAY,GAAM,IC5X7B6yB,MAAAA,GACpB,WAAA/lC,CAAYzB,GACV2B,KAAK3B,KAAOA,CACb,CAID,GAAAoP,CAAI2L,EAAkBC,GACpB,MAAM6xB,EAAS9xB,EAAE0b,MACXqW,EAAS9xB,EAAEyb,MACX8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI2sC,EAAO1sC,OAAQD,GAAK,EAAG,CACzC,MAAM4hC,EAAQ+K,EAAO3sC,GACf2hC,EAAOC,EAAM,GACb5mB,EAAIF,EAAEta,IAAImhC,GAChBW,EAASX,EAAK7hC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,UAAgB,IAAX0a,EAAe4mB,EAAQ,CAACD,EAAMA,EAAK1P,QAAQxwB,KAAMmgC,EAAM,GAAI5mB,IAC1E,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI4sC,EAAO3sC,OAAQD,GAAK,EAAG,CACzC,MAAM4hC,EAAQgL,EAAO5sC,GACf2hC,EAAOC,EAAM,QACD9hC,IAAdwiC,EAASX,EAAK7hC,QAChBwiC,EAASX,EAAK7hC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAKshC,GAEjB,CACD,OAAOngC,KAAKi3B,UAAU2J,EAAUC,EACjC,CAED,MAAAuK,CAAOhyB,GACL,MAAMonB,EAAWpnB,EAAE0b,MACb/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAiBE,GACtC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO2hC,EAAM5mB,GAAKknB,EAASjiC,GAC3BqiC,EAASriC,GAAK,CAAC2hC,EAAMA,EAAK1P,QAAQxwB,UAAAA,EAAcsZ,GAAI,GACrD,CACD,OAAOtZ,KAAKi3B,UAAU2J,EAAUxnB,EAAEwL,MACnC,CAED,QAAAymB,CAASjyB,EAAkBC,GACzB,MAAM6xB,EAAS9xB,EAAE0b,MACXqW,EAAS9xB,EAAEyb,MACX8L,EAAW,IAAI/oB,MACfgpB,EAAiD,CAAA,EACvD,IAAK,IAAItiC,EAAI,EAAGA,EAAI2sC,EAAO1sC,OAAQD,GAAK,EAAG,CACzC,MAAM4hC,EAAQ+K,EAAO3sC,GACf2hC,EAAOC,EAAM,GACb5mB,EAAIF,EAAEta,IAAImhC,GAChBW,EAASX,EAAK7hC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,UAAgB,IAAX0a,EAAe4mB,EAAQ,CAACD,EAAMA,EAAK1P,QAAQxwB,KAAMmgC,EAAM,GAAI5mB,GAAI,IAC9E,CACD,IAAK,IAAIhb,EAAI,EAAGA,EAAI4sC,EAAO3sC,OAAQD,GAAK,EAAG,CACzC,MAAO2hC,EAAM3mB,GAAK4xB,EAAO5sC,QACPF,IAAdwiC,EAASX,EAAK7hC,QAChBwiC,EAASX,EAAK7hC,MAAQuiC,EAASpiC,OAC/BoiC,EAAS/hC,KAAK,CAACqhC,EAAMA,EAAK1P,QAAQxwB,UAAAA,EAAcuZ,GAAI,KAEvD,CACD,OAAOvZ,KAAKi3B,UAAU2J,EAAUC,EACjC,CAED,QAAAyK,CAASlyB,EAAkBmX,GACzB,MAAMiQ,EAAWpnB,EAAE0b,MACb/c,EAAIyoB,EAAShiC,OACboiC,EAAW,IAAI/oB,MAAiBE,GACtC,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO2hC,EAAM5mB,GAAKknB,EAASjiC,GAC3BqiC,EAASriC,GAAK,CAAC2hC,EAAMA,EAAK1P,QAAQxwB,UAAAA,EAAcsZ,EAAGiX,GACpD,CACD,OAAOvwB,KAAKi3B,UAAU2J,EAAUxnB,EAAEwL,MACnC,CAED,GAAAsd,CAAI9oB,EAAkBC,GACpB,MAAMyb,EAAQ1b,EAAE0b,MAChB,IAAIqN,EACJ,IAAK,IAAI5jC,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAO2hC,EAAM5gC,GAASw1B,EAAMv2B,GACtB4pB,EAAS9O,EAAEta,IAAImhC,QACjB/X,IAAAA,GAAgC,IAAXA,IACvBga,EAAcjC,EAAK1P,QAAQxwB,KAAMmiC,EAAa7iC,EAAO6oB,GAExD,CACD,OAAOga,CACR,CAED,KAAAmD,CAASlsB,EAAkBC,EAAegnB,GACxC,MAAMvL,EAAQ1b,EAAE0b,MAChB,GAAqB,IAAjBA,EAAMt2B,OACR,OAAO6hC,EAET,IAAI8B,EACJ,IAAK,IAAI5jC,EAAI,EAAGA,EAAIu2B,EAAMt2B,OAAQD,GAAK,EAAG,CACxC,MAAO2hC,EAAM5gC,GAASw1B,EAAMv2B,GACtB4pB,EAAS9O,EAAEta,IAAImhC,QACjB/X,IAAAA,GAAgC,IAAXA,IACvBga,EAAcjC,EAAK1P,QAAQxwB,KAAMmiC,EAAa7iC,EAAO6oB,GAExD,CACD,OAAOga,CACR,CAQD,KAAAnB,GACE,OAAOf,GAAWe,OACnB,CAED,EAAA5U,IAAM6U,GACJ,MAAMlpB,EAAIkpB,EAAMziC,OACVs2B,EAAQ,IAAIjd,MAAiBE,GAC7B6M,EAA8C,CAAA,EACpD,IAAK,IAAIrmB,EAAI,EAAGA,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC7B,MAAO2hC,EAAM5gC,GAAS2hC,EAAM1iC,GAC5Bu2B,EAAMv2B,GAAK,CAAC2hC,EAAMlgC,KAAK2hC,OAAOriC,IAC9BslB,EAAMsb,EAAK7hC,MAAQE,CACpB,CACD,OAAOyB,KAAKi3B,UAAUnC,EAAOlQ,EAC9B,CAED,SAAAqS,CAAUnC,EACAlQ,GACR,OAAOqb,GAAWhJ,UAAUnC,EAAOlQ,EACpC,CAED,QAAA7P,GACE,MAAO,QAAe/U,KAAK3B,IAC5B,EAuCG,MAAOktC,WAAmB1F,GACrB,OAAArV,CAAQ2R,EAAiC7iC,EAAe6oB,GAC/D,gBAAIga,OACEha,IAAAA,GAAgC,IAAXA,EAChB7oB,EACa,IAAX6oB,EACFga,GAEC,EAAMha,GAAUga,EAAcha,EAAS7oB,OAExC6oB,IAAAA,GAAgC,IAAXA,EACvB7oB,EAAQ6oB,EAEV7oB,CACR,CAEQ,OAAA0iC,CAAQ5oB,EAAWC,GAC1B,OAAOmyB,qBAAmBpyB,EAAGC,EAC9B,CAEQ,MAAAsoB,CAAOriC,GACd,OAAOA,CACR,CAED,eAAAsJ,CAAuFtJ,GACrF,OAAIA,SAAsCA,aAAiBumC,GAClDvmC,EAEFqxB,UAAQ/nB,SAAoCtJ,EACpD,EAUG,MAAOmsC,WAAmB5F,GACrB,OAAArV,CAAQ2R,EAAiC7iC,EAAe6oB,GAC/D,gBAAIga,OACEha,IAAAA,GAAgC,IAAXA,EAChB7oB,EACa,IAAX6oB,EACFga,EAEAuJ,EAAAA,mBAAmBvJ,EAAa7iC,EAAhCosC,CAAuCvjB,QAEvCA,IAAAA,GAAgC,IAAXA,EACvB7oB,EAAMgxB,MAAMnI,GAEd7oB,CACR,CAEQ,OAAA0iC,CAAQ5oB,EAAWC,GAC1B,OAAOqyB,qBAAmBtyB,EAAGC,EAC9B,CAEQ,MAAAsoB,CAAOriC,GACd,OAAO2mB,SAAOrd,SAAStJ,EACxB,CAED,eAAAsJ,CAAwEtJ,GACtE,OAAIA,SAAsCA,aAAiBumC,IAAQvmC,aAAiB2mB,SAC3E3mB,EAEF2mB,SAAOrd,SAAqBtJ,EACpC,EAUG,MAAOqsC,WAAkB9F,GACpB,OAAArV,CAAQ2R,EAAgC7iC,EAAc6oB,GAC7D,gBAAIga,OACEha,IAAAA,GAAgC,IAAXA,EAChB7oB,EACa,IAAX6oB,EACFga,EAEAA,EAAYlZ,cAAc3pB,EAA1B6iC,CAAiCha,QAEjCA,IAAAA,GAAgC,IAAXA,EACvB7oB,EAAMgxB,MAAMnI,GAEd7oB,CACR,CAEQ,OAAA0iC,CAAQ5oB,EAAUC,GACzB,OAAOD,EAAE6P,cAAc5P,EACxB,CAEQ,MAAAsoB,CAAOriC,GACd,OAAOouB,EAAM9kB,SAAStJ,EACvB,CAED,eAAAsJ,CAAsEtJ,GACpE,OAAIA,SAAsCA,aAAiBumC,IAAQvmC,aAAiBouB,EAC3EpuB,EAEFouB,EAAM9kB,SAAoBtJ,EAClC,EAUG,MAAOssC,WAAiB/F,GACnB,OAAArV,CAAQ2R,EAA+B7iC,EAAa6oB,GAC3D,YAAIA,IAAAA,GAAgC,IAAXA,EAChB7oB,WACE6iC,EACFA,EAEFra,EAAKpB,OAAOpnB,EAAMonB,OAC1B,CAEQ,OAAAsb,CAAQ5oB,EAASC,GACxB,OAAO6P,EAAiB9P,EAAGC,EAC5B,CAEQ,MAAAsoB,CAAOriC,GACd,OAAOwoB,EAAKlf,SAAStJ,EACtB,CAED,eAAAsJ,CAAoEtJ,GAClE,OAAIA,SAAsCA,aAAiBumC,IAAQvmC,aAAiBwoB,EAC3ExoB,EAEFwoB,EAAKlf,SAA0BtJ,EACvC,EAUG,MAAOusC,WAAmBhG,GACrB,OAAArV,CAAQ2R,EAAoC7iC,EAAkB6oB,GACrE,YAAIA,IAAAA,GAAgC,IAAXA,EAChB7oB,WACE6iC,EACFA,EAEF7iC,CACR,CAEQ,OAAA0iC,CAAQ5oB,EAAcC,GAC7B,OAAOyd,GAAsB1d,EAAGC,EACjC,CAEQ,MAAAsoB,CAAOriC,GACd,OAAOy2B,GAAUntB,SAAStJ,EAC3B,CAED,eAAAsJ,CAA8EtJ,GAC5E,OAAIA,SAAsCA,aAAiBumC,IAAQvmC,aAAiBy2B,GAC3Ez2B,EAEFy2B,GAAUntB,SAAwBtJ,EAC1C,EAUG,MAAOwsC,WAAmBjG,GACrB,OAAArV,CAAQ2R,EAAiC7iC,EAAe6oB,GAC/D,YAAIA,IAAAA,GAAgC,IAAXA,EAChB7oB,WACE6iC,EACFA,EAEF7iC,CACR,CAEQ,OAAA0iC,CAAQ5oB,EAAWC,GAC1B,OAAOuS,eAAaxS,EAAGC,EACxB,CAEQ,MAAAsoB,CAAOriC,GACd,OAAOqnC,SAAO/9B,SAAStJ,EACxB,CAED,eAAAsJ,CAAwEtJ,GACtE,OAAIA,SAAsCA,aAAiBumC,IAAQvmC,aAAiBqnC,SAC3ErnC,EAEFqnC,SAAO/9B,SAAqBtJ,EACpC,EAGHumC,GAAK5Z,KAAO,IAAI2f,GAAS,QACzB/F,GAAKkG,UAAY,IAAIH,GAAS,aAC9B/F,GAAKmG,UAAY,IAAIJ,GAAS,aAE9B/F,GAAKoG,UAAY,IAAIN,GAAU,aAC/B9F,GAAKqG,UAAY,IAAIP,GAAU,aAC/B9F,GAAKsG,WAAa,IAAIR,GAAU,cAChC9F,GAAKuG,YAAc,IAAIT,GAAU,eACjC9F,GAAKwG,iBAAmB,IAAIV,GAAU,oBACtC9F,GAAKyG,eAAiB,IAAIX,GAAU,kBAEpC9F,GAAK0G,YAAc,IAAIZ,GAAU,eACjC9F,GAAK2G,YAAc,IAAIb,GAAU,eAEjC9F,GAAK4G,gBAAkB,IAAId,GAAU,mBACrC9F,GAAK6G,eAAiB,IAAIf,GAAU,kBACpC9F,GAAK8G,YAAc,IAAIhB,GAAU,eACjC9F,GAAK+G,WAAa,IAAIjB,GAAU,cAEhC9F,GAAKgH,UAAY,IAAIlB,GAAU,aAC/B9F,GAAKiH,UAAY,IAAInB,GAAU,aAC/B9F,GAAKkH,UAAY,IAAIpB,GAAU,aAC/B9F,GAAKmH,UAAY,IAAIrB,GAAU,aAE/B9F,GAAKoH,QAAU,IAAI1B,GAAW,WAC9B1F,GAAK/N,OAAS,IAAI+T,GAAW,UAC7BhG,GAAKqH,QAAU,IAAIzB,GAAW,WAC9B5F,GAAKhqB,OAAS,IAAIiwB,GAAW,UC1aPqB,MAAAA,GACpB,WAAArtC,CAAYzB,GACV2B,KAAK3B,KAAOA,CACb,CAOD,KAAA2iC,GACE,OAAOG,GAAWH,OACnB,CAED,EAAA5U,IAAMsV,GACJ,OAAOP,GAAW/U,MAAMsV,EACzB,CAED,IAAAjS,CAAKqF,EACAlQ,GACH,OAAOuc,GAAWlK,UAAUnC,EAAOlQ,EACpC,CAED,QAAA7P,GACE,MAAO,QAAe/U,KAAK3B,IAC5B,EAkCG,MAAO+uC,WAAyBD,GAC3B,OAAA3c,CAAW4Q,EAAee,EACf7iC,EAAU6oB,GAC5B,OAAOiZ,EAAK5Q,QAAQ2R,EAAa7iC,EAAO6oB,EACzC,EAIG,MAAOklB,WAAuBF,GACzB,OAAA3c,CAAW4Q,EAAee,EACf7iC,EAAU6oB,GAC5B,GAAIga,aAAuBzU,GAASpuB,aAAiBouB,EAAO,CAC1D,MAAM4f,OAAyB,IAAhBnlB,EAAoB7oB,EAAMkvB,QAAUlvB,EAAMkvB,QAAUrG,EACnE,OAAImlB,GAAU,EACLnL,EAAYjU,OAAOof,GAEnBnL,EAAYlU,SAASqf,EAE/B,CACD,OAAOlM,EAAK5Q,QAAQ2R,EAAa7iC,EAAO6oB,EACzC,EAIG,MAAOolB,WAAoBJ,GACtB,OAAA3c,CAAW4Q,EAAee,EACf7iC,EAAU6oB,GAC5B,GAAIga,aAAuBzU,GAASpuB,aAAiBouB,EAAO,UACtDvF,IACFA,EAAS,GAEX,MAAMqlB,EAASrL,EAAY3T,QAErBA,GAAS,EAAMrG,GAAUqlB,EAASrlB,GADzBqlB,EAASluC,EAAMkvB,SAG9B,OADc2T,EAAY3T,MAAMA,EAEjC,CACD,OAAO4S,EAAK5Q,QAAQ2R,EAAa7iC,EAAO6oB,EACzC,EAGHglB,GAAKM,QAAU,IAAIL,GAAiB,WACpCD,GAAKO,QAAU,IAAIN,GAAiB,WAEpCD,GAAKQ,QAAU,IAAIP,GAAiB,WACpCD,GAAKS,UAAY,IAAIR,GAAiB,aACtCD,GAAKU,SAAW,IAAIT,GAAiB,YACrCD,GAAKW,SAAW,IAAIV,GAAiB,YACrCD,GAAKY,QAAU,IAAIX,GAAiB,WACpCD,GAAKa,MAAQ,IAAIZ,GAAiB,SAElCD,GAAKc,WAAa,IAAIb,GAAiB,cACvCD,GAAKtnB,SAAW,IAAIunB,GAAiB,YAErCD,GAAKjf,OAAS,IAAImf,GAAe,UACjCF,GAAKlf,QAAU,IAAIof,GAAe,WAClCF,GAAKe,WAAa,IAAIb,GAAe,cAErCF,GAAKgB,OAAS,IAAIf,GAAiB,UACnCD,GAAKiB,QAAU,IAAIhB,GAAiB,WAEpCD,GAAKkB,OAAS,IAAIjB,GAAiB,UACnCD,GAAKmB,SAAW,IAAIlB,GAAiB,YACrCD,GAAKoB,SAAW,IAAIlB,GAAe,YACnCF,GAAKqB,OAAS,IAAInB,GAAe,UACjCF,GAAKsB,SAAW,IAAIpB,GAAe,YACnCF,GAAKuB,YAAc,IAAInB,GAAY,eACnCJ,GAAK9e,YAAc,IAAIkf,GAAY,eAEnCJ,GAAKwB,WAAa,IAAIvB,GAAiB,cC7H1BwB,MAAAA,GAAO,CA8BlB,EAEFA,GAAKnB,QAAUxL,GAAW7V,GAAG,CAAC+gB,GAAKM,QAAS,IAC5CmB,GAAKlB,QAAUzL,GAAW7V,GAAG,CAAC+gB,GAAKO,QAAS,IAE5CkB,GAAKjB,QAAU1L,GAAW7V,GAAG,CAAC+gB,GAAKQ,QAAS,IAC5CiB,GAAKhB,UAAY3L,GAAW7V,GAAG,CAAC+gB,GAAKS,UAAW,IAChDgB,GAAKf,SAAW5L,GAAW7V,GAAG,CAAC+gB,GAAKU,SAAU,IAC9Ce,GAAKd,SAAW7L,GAAW7V,GAAG,CAAC+gB,GAAKW,SAAU,IAC9Cc,GAAKb,QAAU9L,GAAW7V,GAAG,CAAC+gB,GAAKY,QAAS,IAC5Ca,GAAKZ,MAAQ/L,GAAW7V,GAAG,CAAC+gB,GAAKa,MAAO,IAExCY,GAAKX,WAAahM,GAAW7V,GAAG,CAAC+gB,GAAKc,WAAY,IAClDW,GAAK/oB,SAAWoc,GAAW7V,GAAG,CAAC+gB,GAAKtnB,SAAU,IAE9C+oB,GAAK1gB,OAAS+T,GAAW7V,GAAG,CAAC+gB,GAAKjf,OAAQ,IAC1C0gB,GAAK3gB,QAAUgU,GAAW7V,GAAG,CAAC+gB,GAAKlf,QAAS,IAC5C2gB,GAAKV,WAAajM,GAAW7V,GAAG,CAAC+gB,GAAKe,WAAY,IAElDU,GAAKT,OAASlM,GAAW7V,GAAG,CAAC+gB,GAAKgB,OAAQ,IAC1CS,GAAKR,QAAUnM,GAAW7V,GAAG,CAAC+gB,GAAKiB,QAAS,IAE5CQ,GAAKP,OAASpM,GAAW7V,GAAG,CAAC+gB,GAAKkB,OAAQ,IAC1CO,GAAKN,SAAWrM,GAAW7V,GAAG,CAAC+gB,GAAKmB,SAAU,IAC9CM,GAAKvgB,YAAc4T,GAAW7V,GAAG,CAAC+gB,GAAK9e,YAAa,IACpDugB,GAAKF,YAAczM,GAAW7V,GAAG,CAAC+gB,GAAKuB,YAAa,IACpDE,GAAKL,SAAWtM,GAAW7V,GAAG,CAAC+gB,GAAKoB,SAAU,IAC9CK,GAAKJ,OAASvM,GAAW7V,GAAG,CAAC+gB,GAAKqB,OAAQ,IAC1CI,GAAKH,SAAWxM,GAAW7V,GAAG,CAAC+gB,GAAKsB,SAAU,IAE9CG,GAAKD,WAAa1M,GAAW7V,GAAG,CAAC+gB,GAAKwB,WAAY,IC1DrCE,MAAAA,GAAQ,CAGnB,EAEFA,GAAMC,KAAO,WACX,MAAM7iB,EAAOnE,EAAK6B,MAAM,6CAClBoiB,EAAY9f,EAAKxD,SAAS,IAC1BujB,EAAY/f,EAAKxD,SAAS,IAE1BwjB,EAAYve,EAAM/D,MAAM,WACxBuiB,EAAYxe,EAAM/D,MAAM,WACxBwiB,EAAaze,EAAM/D,MAAM,WAAW6E,MAAM,KAC1C4d,EAAc1e,EAAM/D,MAAM,WAAW6E,MAAM,KAC3C6d,EAAmB3e,EAAM/D,MAAM,WAAW6E,MAAM,KAChD8d,EAAiB5e,EAAMe,MAAM,IAE7B+d,EAAc9e,EAAM/D,MAAM,WAC1BolB,EAAerhB,EAAM/D,MAAM,WAC3BqlB,EAAiBthB,EAAM/D,MAAM,WAE7BslB,EAAgBvhB,EAAM/D,MAAM,WAC5BulB,EAAgBxhB,EAAM/D,MAAM,WAC5BwlB,EAAezhB,EAAM/D,MAAM,WAC3BylB,EAAa1hB,EAAM/D,MAAM,WAEzB+iB,EAAiBhf,EAAM/D,MAAM,WAC7B0lB,EAAwB3hB,EAAM/D,MAAM,WACpC2lB,EAA0B5hB,EAAM/D,MAAM,WACtC4lB,EAAwB7hB,EAAM/D,MAAM,WACpC6lB,EAAsB9hB,EAAM/D,MAAM,WAElC8iB,EAAkB/e,EAAM/D,MAAM,WAC9BgjB,EAAcjf,EAAM/D,MAAM,WAAW6E,MAAM,KAC3Coe,EAAamC,EAAavgB,MAAM,IAEhCihB,EAAc/hB,EAAM/D,MAAM,WAC1B+lB,EAAehiB,EAAM/D,MAAM,WAE3BkjB,EAAYnf,EAAM/D,MAAM,WACxBmjB,EAAYpf,EAAM/D,MAAM,WACxBojB,EAAYrf,EAAM/D,MAAM,WACxBqjB,EAAYtf,EAAM/D,MAAM,WAExBujB,EAAUjnB,EAAAA,OAAOiU,GAAG,IAEpByV,EAAcxO,GAAW/U,GAC7B,CAACyZ,GAAK5Z,KAAMA,GACZ,CAAC4Z,GAAKkG,UAAWA,GACjB,CAAClG,GAAKmG,UAAWA,GAEjB,CAACnG,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAKsG,WAAYA,GAClB,CAACtG,GAAKuG,YAAaA,GACnB,CAACvG,GAAKwG,iBAAkBA,GACxB,CAACxG,GAAKyG,eAAgBA,GAEtB,CAACzG,GAAK0G,YAAaN,GACnB,CAACpG,GAAK2G,YAAaA,GAEnB,CAAC3G,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK6G,eAAgBA,GACtB,CAAC7G,GAAK8G,YAAaA,GACnB,CAAC9G,GAAK+G,WAAYA,GAElB,CAAC/G,GAAKgH,UAAWA,GACjB,CAAChH,GAAKiH,UAAWA,GACjB,CAACjH,GAAKkH,UAAWA,GACjB,CAAClH,GAAKmH,UAAWA,GAEjB,CAACnH,GAAKqH,QAASA,GACf,CAACrH,GAAKhqB,OAAQ+zB,SAAOC,OAAOC,aAAa,OAGrCC,EAAc5O,GAAW/U,GAC7B,CAACyZ,GAAK5Z,KAAMA,GACZ,CAAC4Z,GAAKkG,UAAWA,GACjB,CAAClG,GAAKmG,UAAWA,GAEjB,CAACnG,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAKsG,WAAYA,GAClB,CAACtG,GAAKuG,YAAaA,GACnB,CAACvG,GAAKwG,iBAAkBA,GACxB,CAACxG,GAAKyG,eAAgBA,GAEtB,CAACzG,GAAK0G,YAAaN,GACnB,CAACpG,GAAK2G,YAAaA,GAEnB,CAAC3G,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK6G,eAAgBA,GACtB,CAAC7G,GAAK8G,YAAaA,GACnB,CAAC9G,GAAK+G,WAAYA,GAElB,CAAC/G,GAAKgH,UAAWA,GACjB,CAAChH,GAAKiH,UAAWA,GACjB,CAACjH,GAAKkH,UAAWA,GACjB,CAAClH,GAAKmH,UAAWA,GAEjB,CAACnH,GAAKqH,QAASA,GACf,CAACrH,GAAKhqB,OAAQ+zB,SAAOI,SAASF,aAAa,OAGvCG,EAAc9O,GAAW/U,GAC7B,CAACyZ,GAAK2G,YAAauC,GACnB,CAAClJ,GAAK6G,eAAgB2C,IAGlBa,EAAgB/O,GAAW/U,GAC/B,CAACyZ,GAAK2G,YAAawC,GACnB,CAACnJ,GAAK6G,eAAgB4C,IAGlBa,EAAehP,GAAW/U,GAC9B,CAACyZ,GAAKoG,UAAWgD,GACjB,CAACpJ,GAAKqG,UAAW+C,GACjB,CAACpJ,GAAK0G,YAAa0C,GACnB,CAACpJ,GAAK2G,YAAayC,IAGfmB,EAAejP,GAAW/U,GAC9B,CAACyZ,GAAK0G,YAAa2C,GACnB,CAACrJ,GAAK2G,YAAa0C,IAGfmB,EAAclP,GAAW/U,GAC7B,CAACyZ,GAAK0G,YAAa4C,GACnB,CAACtJ,GAAK2G,YAAa2C,GACnB,CAACtJ,GAAK6G,eAAgB6C,IAGlBe,EAAYnP,GAAW/U,GAC3B,CAACyZ,GAAK0G,YAAa6C,GACnB,CAACvJ,GAAK2G,YAAa4C,GACnB,CAACvJ,GAAK6G,eAAgB8C,IAGlBe,EAAiBpP,GAAW/U,GAChC,CAACyZ,GAAKoG,UAAWE,GACjB,CAACtG,GAAKqG,UAAWC,GACjB,CAACtG,GAAK4G,gBAAiBA,EAAgBve,OAAO,KAG1CsiB,EAAerP,GAAW/U,GAC9B,CAACyZ,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAK4G,gBAAiBC,IAGnB+D,EAAatP,GAAW/U,GAC5B,CAACyZ,GAAKsG,WAAYA,EAAWje,OAAO,EAAI,IACxC,CAAC2X,GAAKuG,YAAaA,EAAYle,OAAO,EAAI,IAC1C,CAAC2X,GAAK4G,gBAAiBgD,IAGnBiB,EAAcvP,GAAW/U,GAC7B,CAACyZ,GAAKsG,WAAYA,EAAWje,OAAO,EAAI,IACxC,CAAC2X,GAAKuG,YAAaA,EAAYle,OAAO,EAAI,IAC1C,CAAC2X,GAAK4G,gBAAiBiD,IAGnBiB,EAAaxP,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK8G,YAAaA,IAGfiE,EAAezP,GAAW/U,GAC9B,CAACyZ,GAAK/N,OAAQ/B,GAAUvmB,OAAO,EAAG,EAAG,EAAG,EAAGke,EAAMa,MAAM,OAGnDsiB,EAAa1P,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,IACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,IAClC,CAACsX,GAAKqG,UAAWxe,EAAMa,MAAM,IAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,IAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,IAC/B,CAACsX,GAAKgH,UAAWnf,EAAMa,MAAM,IAC7B,CAACsX,GAAKiH,UAAWpf,EAAMa,MAAM,KAGzBuiB,EAAc3P,GAAW/U,GAC7B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,OAAO,IACpC,CAACsX,GAAK6G,eAAgBhf,EAAMa,OAAO,IACnC,CAACsX,GAAKqG,UAAWxe,EAAMa,OAAO,IAC9B,CAACsX,GAAK0G,YAAa7e,EAAMa,OAAO,IAChC,CAACsX,GAAK2G,YAAa9e,EAAMa,OAAO,IAChC,CAACsX,GAAKgH,UAAWnf,EAAMa,OAAO,IAC9B,CAACsX,GAAKiH,UAAWpf,EAAMa,OAAO,KAG1BwiB,EAAiB5P,GAAW/U,GAChC,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,OAAO,IACpC,CAACsX,GAAK6G,eAAgBhf,EAAMa,OAAO,IACnC,CAACsX,GAAKqG,UAAWxe,EAAMa,OAAO,IAC9B,CAACsX,GAAK0G,YAAa7e,EAAMa,OAAO,IAChC,CAACsX,GAAK2G,YAAa9e,EAAMa,OAAO,IAChC,CAACsX,GAAKgH,UAAWnf,EAAMa,OAAO,IAC9B,CAACsX,GAAKiH,UAAWpf,EAAMa,OAAO,KAG1ByiB,EAAe7P,GAAW/U,GAC9B,CAACyZ,GAAKqG,UAAWxe,EAAMa,MAAM,IAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,IAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,KAG3B0iB,EAAa9P,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,EAAI,IACvC,CAACsX,GAAK8G,YAAajf,EAAMa,MAAM,EAAI,KAG/B2iB,GAAe/P,GAAW/U,GAC9B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,OAAO,IACpC,CAACsX,GAAKgH,UAAWnf,EAAMa,OAAO,IAC9B,CAACsX,GAAKiH,UAAWpf,EAAMa,OAAO,KAG1B4iB,GAAkBhQ,GAAW/U,GACjC,CAACyZ,GAAKqG,UAAWxe,EAAMa,MAAM,KAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,KAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,KAC/B,CAACsX,GAAK4G,gBAAiB/e,EAAMa,MAAM,KACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,MAG9B6iB,GAAkBjQ,GAAW/U,GACjC,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,IACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,KAG9B8iB,GAAiBlQ,GAAW/U,GAChC,CAACyZ,GAAKhqB,OAAQ+zB,EAAAA,OAAOI,SAASF,aAAa,OAmC7C,OAhCc1K,GAAYD,QACxB,CAACgI,GAAKM,QAASkC,GACf,CAACxC,GAAKO,QAASqC,GAEf,CAAC5C,GAAKQ,QAASsC,GACf,CAAC9C,GAAKS,UAAWsC,GACjB,CAAC/C,GAAKU,SAAUsC,GAChB,CAAChD,GAAKW,SAAUsC,GAChB,CAACjD,GAAKY,QAASsC,GACf,CAAClD,GAAKa,MAAOsC,GAEb,CAACnD,GAAKc,WAAYsC,GAClB,CAACpD,GAAKtnB,SAAU2qB,GAEhB,CAACrD,GAAKjf,OAAQ2iB,GACd,CAAC1D,GAAKlf,QAAS6iB,GACf,CAAC3D,GAAKe,WAAY6C,GAElB,CAAC5D,GAAKgB,OAAQsC,GACd,CAACtD,GAAKiB,QAASsC,GAEf,CAACvD,GAAKkB,OAAQsC,GACd,CAACxD,GAAKmB,SAAUsC,GAChB,CAACzD,GAAKoB,SAAUyC,GAChB,CAAC7D,GAAKqB,OAAQyC,GACd,CAAC9D,GAAKsB,SAAUyC,IAChB,CAAC/D,GAAKuB,YAAayC,IACnB,CAAChE,GAAK9e,YAAa+iB,IAEnB,CAACjE,GAAKwB,WAAY0C,IAIrB,CAvQY,GAyQbxC,GAAMyC,MAAQ,WACZ,MAAMrlB,EAAOnE,EAAK6B,MAAM,6CAClBoiB,EAAY9f,EAAKxD,SAAS,IAC1BujB,EAAY/f,EAAKxD,SAAS,IAE1BwjB,EAAYve,EAAM/D,MAAM,WACxBuiB,EAAYxe,EAAM/D,MAAM,WACxBwiB,EAAaze,EAAM/D,MAAM,WAAW6E,MAAM,KAC1C4d,EAAc1e,EAAM/D,MAAM,WAAW6E,MAAM,IAC3C6d,EAAmB3e,EAAM/D,MAAM,WAAW6E,MAAM,KAChD8d,EAAiB5e,EAAMa,MAAM,KAE7Bie,EAAc9e,EAAM/D,MAAM,WAC1BolB,EAAerhB,EAAM/D,MAAM,WAC3BqlB,EAAiBthB,EAAM/D,MAAM,WAE7BslB,EAAgBvhB,EAAM/D,MAAM,WAC5BulB,EAAgBxhB,EAAM/D,MAAM,WAC5BwlB,EAAezhB,EAAM/D,MAAM,WAC3BylB,EAAa1hB,EAAM/D,MAAM,WAEzB+iB,EAAiBhf,EAAM/D,MAAM,WAC7B0lB,EAAwB3hB,EAAM/D,MAAM,WACpC2lB,EAA0B5hB,EAAM/D,MAAM,WACtC4lB,EAAwB7hB,EAAM/D,MAAM,WACpC6lB,EAAsB9hB,EAAM/D,MAAM,WAElC8iB,EAAkB/e,EAAM/D,MAAM,WAC9BgjB,EAAcjf,EAAM/D,MAAM,WAAW6E,MAAM,KAC3Coe,EAAamC,EAAavgB,MAAM,IAEhCihB,EAAc/hB,EAAM/D,MAAM,WAC1B+lB,EAAehiB,EAAM/D,MAAM,WAE3BkjB,EAAYnf,EAAM/D,MAAM,WACxBmjB,EAAYpf,EAAM/D,MAAM,WACxBojB,EAAYrf,EAAM/D,MAAM,WACxBqjB,EAAYtf,EAAM/D,MAAM,WAExBujB,EAAUjnB,EAAAA,OAAOiU,GAAG,IAEpByV,EAAcxO,GAAW/U,GAC7B,CAACyZ,GAAK5Z,KAAMA,GACZ,CAAC4Z,GAAKkG,UAAWA,GACjB,CAAClG,GAAKmG,UAAWA,GAEjB,CAACnG,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAKsG,WAAYA,GAClB,CAACtG,GAAKuG,YAAaA,GACnB,CAACvG,GAAKwG,iBAAkBA,GACxB,CAACxG,GAAKyG,eAAgBA,GAEtB,CAACzG,GAAK0G,YAAaN,GACnB,CAACpG,GAAK2G,YAAaA,GAEnB,CAAC3G,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK6G,eAAgBA,GACtB,CAAC7G,GAAK8G,YAAaA,GACnB,CAAC9G,GAAK+G,WAAYA,GAElB,CAAC/G,GAAKgH,UAAWA,GACjB,CAAChH,GAAKiH,UAAWA,GACjB,CAACjH,GAAKkH,UAAWA,GACjB,CAAClH,GAAKmH,UAAWA,GAEjB,CAACnH,GAAKqH,QAASA,GACf,CAACrH,GAAKhqB,OAAQ+zB,SAAOC,OAAOC,aAAa,OAGrCC,EAAc5O,GAAW/U,GAC7B,CAACyZ,GAAK5Z,KAAMA,GACZ,CAAC4Z,GAAKkG,UAAWA,GACjB,CAAClG,GAAKmG,UAAWA,GAEjB,CAACnG,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAKsG,WAAYA,GAClB,CAACtG,GAAKuG,YAAaA,GACnB,CAACvG,GAAKwG,iBAAkBA,GACxB,CAACxG,GAAKyG,eAAgBA,GAEtB,CAACzG,GAAK0G,YAAaN,GACnB,CAACpG,GAAK2G,YAAaA,GAEnB,CAAC3G,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK6G,eAAgBA,GACtB,CAAC7G,GAAK8G,YAAaA,GACnB,CAAC9G,GAAK+G,WAAYA,GAElB,CAAC/G,GAAKgH,UAAWA,GACjB,CAAChH,GAAKiH,UAAWA,GACjB,CAACjH,GAAKkH,UAAWA,GACjB,CAAClH,GAAKmH,UAAWA,GAEjB,CAACnH,GAAKqH,QAASA,GACf,CAACrH,GAAKhqB,OAAQ+zB,SAAOI,SAASF,aAAa,OAGvCG,EAAc9O,GAAW/U,GAC7B,CAACyZ,GAAK2G,YAAauC,GACnB,CAAClJ,GAAK6G,eAAgB2C,IAGlBa,EAAgB/O,GAAW/U,GAC/B,CAACyZ,GAAK2G,YAAawC,GACnB,CAACnJ,GAAK6G,eAAgB4C,IAGlBa,EAAehP,GAAW/U,GAC9B,CAACyZ,GAAKoG,UAAWgD,GACjB,CAACpJ,GAAKqG,UAAW+C,GACjB,CAACpJ,GAAK0G,YAAa0C,GACnB,CAACpJ,GAAK2G,YAAayC,IAGfmB,EAAejP,GAAW/U,GAC9B,CAACyZ,GAAK0G,YAAa2C,GACnB,CAACrJ,GAAK2G,YAAa0C,IAGfmB,EAAclP,GAAW/U,GAC7B,CAACyZ,GAAK0G,YAAa4C,GACnB,CAACtJ,GAAK2G,YAAa2C,GACnB,CAACtJ,GAAK6G,eAAgB6C,IAGlBe,EAAYnP,GAAW/U,GAC3B,CAACyZ,GAAK0G,YAAa6C,GACnB,CAACvJ,GAAK2G,YAAa4C,GACnB,CAACvJ,GAAK6G,eAAgB8C,IAGlBe,EAAiBpP,GAAW/U,GAChC,CAACyZ,GAAKoG,UAAWE,GACjB,CAACtG,GAAKqG,UAAWC,GACjB,CAACtG,GAAK4G,gBAAiBA,EAAgBve,OAAO,MAG1CsiB,EAAerP,GAAW/U,GAC9B,CAACyZ,GAAKoG,UAAWA,GACjB,CAACpG,GAAKqG,UAAWA,GACjB,CAACrG,GAAK4G,gBAAiBC,IAGnB+D,EAAatP,GAAW/U,GAC5B,CAACyZ,GAAKsG,WAAYA,EAAWje,OAAO,EAAI,IACxC,CAAC2X,GAAKuG,YAAaA,EAAYle,OAAO,EAAI,IAC1C,CAAC2X,GAAK4G,gBAAiBgD,IAGnBiB,EAAcvP,GAAW/U,GAC7B,CAACyZ,GAAKsG,WAAYA,EAAWje,OAAO,EAAI,IACxC,CAAC2X,GAAKuG,YAAaA,EAAYle,OAAO,EAAI,IAC1C,CAAC2X,GAAK4G,gBAAiBiD,IAGnBiB,EAAaxP,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiBA,GACvB,CAAC5G,GAAK8G,YAAaA,IAGfiE,EAAezP,GAAW/U,GAC9B,CAACyZ,GAAK/N,OAAQ/B,GAAUvmB,OAAO,EAAG,EAAG,EAAG,EAAGke,EAAMa,MAAM,OAGnDsiB,EAAa1P,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,IACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,IAClC,CAACsX,GAAKqG,UAAWxe,EAAMa,MAAM,IAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,IAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,IAC/B,CAACsX,GAAKgH,UAAWnf,EAAMa,MAAM,IAC7B,CAACsX,GAAKiH,UAAWpf,EAAMa,MAAM,KAGzBuiB,EAAc3P,GAAW/U,GAC7B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,OAAO,IACpC,CAACsX,GAAK6G,eAAgBhf,EAAMa,OAAO,IACnC,CAACsX,GAAKqG,UAAWxe,EAAMa,OAAO,IAC9B,CAACsX,GAAK0G,YAAa7e,EAAMa,OAAO,IAChC,CAACsX,GAAK2G,YAAa9e,EAAMa,OAAO,IAChC,CAACsX,GAAKgH,UAAWnf,EAAMa,OAAO,IAC9B,CAACsX,GAAKiH,UAAWpf,EAAMa,OAAO,KAG1BwiB,EAAiB5P,GAAW/U,GAChC,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,IACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,IAClC,CAACsX,GAAKqG,UAAWxe,EAAMa,MAAM,IAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,IAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,IAC/B,CAACsX,GAAKgH,UAAWnf,EAAMa,MAAM,IAC7B,CAACsX,GAAKiH,UAAWpf,EAAMa,MAAM,KAGzByiB,EAAe7P,GAAW/U,GAC9B,CAACyZ,GAAKqG,UAAWxe,EAAMa,MAAM,IAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,IAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,KAG3B0iB,EAAa9P,GAAW/U,GAC5B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,EAAI,KACvC,CAACsX,GAAK8G,YAAajf,EAAMa,MAAM,EAAI,MAG/B2iB,GAAe/P,GAAW/U,GAC9B,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,EAAI,IACvC,CAACsX,GAAKgH,UAAWnf,EAAMa,MAAM,EAAI,IACjC,CAACsX,GAAKiH,UAAWpf,EAAMa,MAAM,EAAI,KAG7B4iB,GAAkBhQ,GAAW/U,GACjC,CAACyZ,GAAKqG,UAAWxe,EAAMa,MAAM,KAC7B,CAACsX,GAAK0G,YAAa7e,EAAMa,MAAM,KAC/B,CAACsX,GAAK2G,YAAa9e,EAAMa,MAAM,KAC/B,CAACsX,GAAK4G,gBAAiB/e,EAAMa,MAAM,KACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,MAG9B6iB,GAAkBjQ,GAAW/U,GACjC,CAACyZ,GAAK4G,gBAAiB/e,EAAMa,MAAM,IACnC,CAACsX,GAAK6G,eAAgBhf,EAAMa,MAAM,KAG9B8iB,GAAiBlQ,GAAW/U,GAChC,CAACyZ,GAAKhqB,OAAQ+zB,EAAAA,OAAOI,SAASF,aAAa,OAmC7C,OAhCc1K,GAAYD,QACxB,CAACgI,GAAKM,QAASkC,GACf,CAACxC,GAAKO,QAASqC,GAEf,CAAC5C,GAAKQ,QAASsC,GACf,CAAC9C,GAAKS,UAAWsC,GACjB,CAAC/C,GAAKU,SAAUsC,GAChB,CAAChD,GAAKW,SAAUsC,GAChB,CAACjD,GAAKY,QAASsC,GACf,CAAClD,GAAKa,MAAOsC,GAEb,CAACnD,GAAKc,WAAYsC,GAClB,CAACpD,GAAKtnB,SAAU2qB,GAEhB,CAACrD,GAAKgB,OAAQsC,GACd,CAACtD,GAAKiB,QAASsC,GAEf,CAACvD,GAAKkB,OAAQsC,GACd,CAACxD,GAAKmB,SAAUsC,GAChB,CAACzD,GAAKoB,SAAUyC,GAChB,CAAC7D,GAAKqB,OAAQyC,GACd,CAAC9D,GAAKsB,SAAUyC,IAEhB,CAAC/D,GAAKuB,YAAayC,IACnB,CAAChE,GAAKjf,OAAQ2iB,GACd,CAAC1D,GAAKlf,QAAS6iB,GACf,CAAC3D,GAAKe,WAAY6C,GAClB,CAAC5D,GAAK9e,YAAa+iB,IAEnB,CAACjE,GAAKwB,WAAY0C,IAIrB,CAvQa,GC/ND,MAAAE,GAAa,CACxBxa,KAAMnM,EAAKA,MAAA,WACT,OAAOzsB,OAAOqzC,OAAO,CACnBC,SAAU,EACVC,WAAY,EACZC,YAAa,EACbC,UAAW,GAEf,IAEAjpB,MAAAA,CAAMrP,EAAkCC,IAClCD,IAAMC,GAEc,iBAAND,GAAwB,OAANA,GAA2B,iBAANC,GAAwB,OAANA,IAClED,EAAEm4B,WAAal4B,EAAEk4B,UACjBn4B,EAAEo4B,aAAen4B,EAAEm4B,YACnBp4B,EAAEq4B,cAAgBp4B,EAAEo4B,aACpBr4B,EAAEs4B,YAAcr4B,EAAEq4B,YA+GlBC,IAAAA,GAAI,qEAAJ,OAAAjyC,EAAA,MAAAiyC,UAAahyC,YACxB,WAAAC,GACEC,QA0EQC,KAAA8xC,+BAA4F1yC,EAAAY,KAAAE,GAmgC7FF,KAAAG,QAA2Cf,EAAAY,KAAAI,OAAA,GAwB3CJ,KAAA+xC,OAAuC3yC,EAAAY,KAAAgyC,OAAA,GA4BvChyC,KAAAqlC,KAGPjmC,EAAAY,KAAAiyC,OAAA,GA4BOjyC,KAAAonC,MAGPhoC,EAAAY,KAAAkyC,OAAA,GAwGOlyC,KAAAmyC,aAAiD/yC,EAAAY,KAAAoyC,OAAA,GAmCjDpyC,KAAAqyC,cAAkDjzC,EAAAY,KAAAsyC,OAAA,GA7yCzDtyC,KAAKuyC,YAAc,KACnBvyC,KAAKwyC,oBAAsB,KAG3BxyC,KAAK8xC,0BAA4B,KACjC9xC,KAAKyyC,yBAA2B,KAChCzyC,KAAK0yC,0BAA4B,KACjC1yC,KAAK2yC,yBAA2B,KAChC3yC,KAAK4yC,yBAA2B,KAChC5yC,KAAK6yC,wBAA0B,KAC/B7yC,KAAK8yC,yBAA2B,KAChC9yC,KAAK+yC,wBAA0B,KAC/B/yC,KAAKgzC,mBAAqB,KAC1BhzC,KAAKizC,kBAAoB,KACzBjzC,KAAKkzC,qBAAuB,KAC5BlzC,KAAKmzC,oBAAsB,KAC3BnzC,KAAKozC,oBAAsB,KAC3BpzC,KAAKqzC,mBAAqB,KAC1BrzC,KAAKszC,oBAAsB,KAC3BtzC,KAAKuzC,mBAAqB,KAC1BvzC,KAAKwzC,oBAAsB,KAC3BxzC,KAAKyzC,mBAAqB,KAC1BzzC,KAAK0zC,qBAAuB,KAC5B1zC,KAAK2zC,oBAAsB,KAC3B3zC,KAAK4zC,qBAAuB,KAC5B5zC,KAAK6zC,oBAAsB,KAC3B7zC,KAAK8zC,oBAAsB,KAC3B9zC,KAAK+zC,mBAAqB,KAC1B/zC,KAAKg0C,oBAAsB,KAC3Bh0C,KAAKi0C,mBAAqB,KAC1Bj0C,KAAKk0C,uBAAyB,KAC9Bl0C,KAAKm0C,sBAAwB,KAC7Bn0C,KAAKo0C,uBAAyB,KAC9Bp0C,KAAKq0C,sBAAwB,IAC9B,CAID,iBAAa7zC,GACX,OAAOqxC,CACR,CAGQ,YAAAyC,CAAa5zC,EAAc+F,GAIlC,IAAI0T,EAFJna,KAAKS,iBAAiBC,GACrBV,KAAuBU,OAASA,EAEb,OAAhB+F,GACF0T,EAAkB1T,EAAY0T,gBAC9Bna,KAAKu0C,eAAe9tC,GACpBA,EAAY+tC,mBAAmBx0C,QAE/Bma,EAAkBzZ,EAAO0Z,UACzB1Z,EAAO+zC,aAAaz0C,OAEE,OAApBma,GACFA,EAAgBo6B,eAAev0C,MAC/BA,KAAKw0C,mBAAmBr6B,IAExBzZ,EAAOg0C,cAAc10C,MAEnBU,EAAO+D,UACL/D,EAAOi0C,QACT30C,KAAK40C,cAEP50C,KAAKsC,gBAEPtC,KAAKgB,eAAeN,GACpBV,KAAKiB,gBAAgBP,EACtB,CAIkB,gBAAAD,CAAiBC,GAClC,MAAMoZ,EAAY9Z,KAAK8xC,0BACvB,GAAkB,OAAdh4B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS44B,qBAAqBn0C,EAAQV,KAG3C,CAEkB,cAAAgB,CAAeN,GAEjC,CAIkB,eAAAO,CAAgBP,GACjC,MAAMoZ,EAAY9Z,KAAKyyC,yBACvB,GAAkB,OAAd34B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS64B,oBAAoBp0C,EAAQV,KAG1C,CAIkB,gBAAAkB,CAAiBR,GAClC,MAAMoZ,EAAY9Z,KAAK0yC,0BACvB,GAAkB,OAAd54B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS84B,qBAAqBr0C,EAAQV,KAG3C,CAEkB,cAAAmB,CAAeT,GAEjC,CAIkB,eAAAU,CAAgBV,GACjC,MAAMoZ,EAAY9Z,KAAK2yC,yBACvB,GAAkB,OAAd74B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS+4B,oBAAoBt0C,EAAQV,KAG1C,CAIkB,eAAAqB,CAAgBC,EAAatD,GAC9C+B,MAAMsB,gBAAgBC,EAAOtD,GAC7B,MAAM8b,EAAY9Z,KAAK4yC,yBACvB,GAAkB,OAAd94B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASg5B,oBAAoB3zC,EAAOtD,EAAQgC,KAGjD,CAEkB,aAAAuB,CAAcD,EAAatD,GAC5C+B,MAAMwB,cAAcD,EAAOtD,EAC5B,CAIkB,cAAAwD,CAAeF,EAAatD,GAC7C,MAAM8b,EAAY9Z,KAAK6yC,wBACvB,GAAkB,OAAd/4B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASi5B,mBAAmB5zC,EAAOtD,EAAQgC,MAG/CD,MAAMyB,eAAeF,EAAOtD,EAC7B,CAGQ,aAAAyD,CAAcC,GACmB,IAAnC1B,KAAK2B,MAAQkwC,EAAKjwC,wBACjBF,IACFA,EAAc,GAGyB,KADzCA,GAAe1B,KAAK2B,MAAQkwC,EAAKhwC,YACdgwC,EAAKsD,cACtBn1C,KAAKo1C,eAAe1zC,GAGzB,CAIkB,eAAAM,CAAgBV,GACjCvB,MAAMiC,gBAAgBV,GACtB,MAAMwY,EAAY9Z,KAAK8yC,yBACvB,GAAkB,OAAdh5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASo5B,oBAAoB/zC,EAAOtB,KAGzC,CAEkB,aAAAiC,CAAcX,GAC/BvB,MAAMkC,cAAcX,EACrB,CAIkB,cAAAY,CAAeZ,GAChC,MAAMwY,EAAY9Z,KAAK+yC,wBACvB,GAAkB,OAAdj5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASq5B,mBAAmBh0C,EAAOtB,MAGvCD,MAAMmC,eAAeZ,EACtB,CAEkB,iBAAAa,CAAkBb,EAAatD,GAChD+B,MAAMoC,kBAAkBb,EAAOtD,GAC/BgC,KAAKW,cAAc,wBAAyBW,EAAOtD,EAAQgC,KAC5D,CAEkB,eAAAoC,CAAgBd,EAAatD,GAC9C+B,MAAMqC,gBAAgBd,EAAOtD,EAC9B,CAEkB,gBAAAqE,CAAiBf,EAAatD,GAC/CgC,KAAKW,cAAc,uBAAwBW,EAAOtD,EAAQgC,MAC1DD,MAAMsC,iBAAiBf,EAAOtD,EAC/B,CAGQ,KAAA0d,GACP,MAAM,IAAInZ,KACX,CAGkB,SAAAC,GACjBzC,MAAMyC,YACN,MAAMsX,EAAY9Z,KAAKgzC,mBACvB,GAAkB,OAAdl5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASs5B,cAAcv1C,KAG5B,CAGkB,QAAA6C,GAEjB7C,KAAK8C,cAAc9C,KAAMA,KAAK2B,MAAQkwC,EAAKhwC,YAAY,GACvD7B,KAAK+C,cAAc/C,KAAKgD,YAEnBhD,KAAK20C,QAA8B,OAApB30C,KAAKiD,YAAkD,IAA3BjD,KAAKiD,WAAWzE,QAC9DwB,KAAK+C,cAAc8uC,EAAK2D,YAAc3D,EAAK4D,cAG7Cz1C,KAAKmD,iBAELnD,KAAK01C,iBACL,MAAM57B,EAAY9Z,KAAKizC,kBACvB,GAAkB,OAAdn5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS05B,aAAa31C,MAG1BD,MAAM8C,UACP,CAGQ,OAAA8Y,GACP,MAAM,IAAIpZ,KACX,CAGkB,WAAAgB,GACjBxD,MAAMwD,cACN,MAAMuW,EAAY9Z,KAAKkzC,qBACvB,GAAkB,OAAdp5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS25B,gBAAgB51C,MAG7BA,KAAK61C,kBACN,CAGkB,UAAAlyC,GACjB,MAAMmW,EAAY9Z,KAAKmzC,oBACvB,GAAkB,OAAdr5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS65B,eAAe91C,MAG5BD,MAAM4D,YACP,CAED,UAAIgxC,GACF,OAA0C,IAAlC30C,KAAK2B,MAAQkwC,EAAKkE,WAC3B,CAED,SAAAC,CAAUrB,GACR,MAAMhzC,EAAQ3B,KAAK2B,MACfgzC,GAAwC,IAA7BhzC,EAAQkwC,EAAKoE,YACM,IAA3Bt0C,EAAQkwC,EAAKqE,WAChBl2C,KAAKm2C,WACLn2C,KAAKyC,SAASd,EAAQkwC,EAAKoE,YAC3Bj2C,KAAKo2C,SACLp2C,KAAKq2C,eACLr2C,KAAKs2C,WAELt2C,KAAKyC,SAASd,EAAQkwC,EAAKoE,YAEnBtB,GAAwC,IAA7BhzC,EAAQkwC,EAAKoE,cACF,IAA3Bt0C,EAAQkwC,EAAKqE,WAChBl2C,KAAKu2C,aACLv2C,KAAKyC,SAASd,GAASkwC,EAAKoE,YAC5Bj2C,KAAKw2C,iBACLx2C,KAAKy2C,WACLz2C,KAAK02C,aAEL12C,KAAKyC,SAASd,GAASkwC,EAAKoE,YAGjC,CAGD,WAAArB,GACuC,IAAhC50C,KAAK2B,MAAQkwC,EAAKqE,YAEuB,IAAlCl2C,KAAK2B,MAAQkwC,EAAKoE,aAI9Bj2C,KAAKm2C,WACLn2C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAKqE,UAChCl2C,KAAKo2C,SACLp2C,KAAKq2C,eACLr2C,KAAKs2C,WAPHt2C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAKqE,UAQnC,CAES,QAAAC,GACRn2C,KAAKW,cAAc,eAAgBX,KACpC,CAES,MAAAo2C,GAET,CAES,OAAAE,GACRt2C,KAAKW,cAAc,cAAeX,KACnC,CAGS,YAAAq2C,GACR,IAAI/0C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAnF,EAAMszC,cACO,OAAT/zC,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,qBAElBjB,EAAQT,CACT,CACF,CAGD,aAAA81C,GACuC,IAAhC32C,KAAK2B,MAAQkwC,EAAKqE,YAEuB,IAAlCl2C,KAAK2B,MAAQkwC,EAAKoE,aAI9Bj2C,KAAKu2C,aACLv2C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKqE,UACjCl2C,KAAKw2C,iBACLx2C,KAAKy2C,WACLz2C,KAAK02C,aAPH12C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKqE,UAQpC,CAED,eAAIU,GACF,OAAQ52C,KAAKF,YAA4B+2C,WAC1C,CAES,UAAAN,GACRv2C,KAAKW,cAAc,iBAAkBX,KACtC,CAES,QAAAy2C,GACRz2C,KAAK8C,cAAc9C,KAAMA,KAAK2B,MAAQkwC,EAAKhwC,YAAY,GACvD7B,KAAK+C,cAAc/C,KAAK42C,aAEA,OAApB52C,KAAKiD,YAAkD,IAA3BjD,KAAKiD,WAAWzE,QAC9CwB,KAAK+C,cAAc8uC,EAAK2D,YAAc3D,EAAK4D,cAGzCz1C,KAAKqlC,KAAKyR,SACZ92C,KAAKqlC,KAAKtxB,WAER/T,KAAKonC,MAAM0P,SACb92C,KAAKonC,MAAMrzB,UAEd,CAES,SAAA2iC,GACR12C,KAAKW,cAAc,gBAAiBX,KACrC,CAGS,cAAAw2C,GACR,IAAIl1C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAnF,EAAMq1C,gBACO,OAAT91C,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,uBAElBjB,EAAQT,CACT,CACF,CAMD,UAAIk2C,GACF,OAA0C,IAAlC/2C,KAAK2B,MAAQkwC,EAAKmF,WAC3B,CAQD,SAAAC,CAAUF,GACR,MAAMp1C,EAAQ3B,KAAK2B,MACfo1C,GAAwC,IAA7Bp1C,EAAQkwC,EAAKqF,aAC1Bl3C,KAAKyC,SAASd,EAAQkwC,EAAKqF,YACK,IAA3Bv1C,EAAQkwC,EAAKsF,YAChBn3C,KAAKo3C,WACLp3C,KAAKq3C,SACLr3C,KAAKs3C,eACLt3C,KAAKu3C,YAEGR,GAAwC,IAA7Bp1C,EAAQkwC,EAAKqF,cAClCl3C,KAAKyC,SAASd,GAASkwC,EAAKqF,YACI,IAA3Bv1C,EAAQkwC,EAAKsF,YAChBn3C,KAAKw3C,aACLx3C,KAAKy3C,iBACLz3C,KAAK03C,WACL13C,KAAK23C,aAGV,CAGD,WAAAC,GACuC,IAAhC53C,KAAK2B,MAAQkwC,EAAKsF,YAEuB,IAAlCn3C,KAAK2B,MAAQkwC,EAAKqF,aAI9Bl3C,KAAKo3C,WACLp3C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAKsF,UAChCn3C,KAAKq3C,SACLr3C,KAAKs3C,eACLt3C,KAAKu3C,WAPHv3C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAKsF,UAQnC,CAES,QAAAC,GACRp3C,KAAKW,cAAc,eAAgBX,KACpC,CAES,MAAAq3C,GAET,CAES,OAAAE,GACRv3C,KAAKW,cAAc,cAAeX,KACnC,CAGS,YAAAs3C,GACR,IAAIh2C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAnF,EAAMs2C,cACO,OAAT/2C,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,qBAElBjB,EAAQT,CACT,CACF,CAED,aAAAg3C,GACuC,IAAhC73C,KAAK2B,MAAQkwC,EAAKsF,YAEuB,IAAlCn3C,KAAK2B,MAAQkwC,EAAKqF,aAI9Bl3C,KAAKw3C,aACLx3C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKsF,UACjCn3C,KAAKy3C,iBACLz3C,KAAK03C,WACL13C,KAAK23C,aAPH33C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKsF,UAQpC,CAED,eAAIW,GACF,OAAQ93C,KAAKF,YAA4Bi4C,WAC1C,CAES,UAAAP,GACRx3C,KAAKW,cAAc,iBAAkBX,KACtC,CAES,QAAA03C,GACR13C,KAAK8C,cAAc9C,KAAMA,KAAK2B,MAAQkwC,EAAKhwC,YAAY,GACvD7B,KAAK+C,cAAc/C,KAAK42C,YACzB,CAES,SAAAe,GACR33C,KAAKW,cAAc,gBAAiBX,KACrC,CAGS,cAAAy3C,GACR,IAAIn2C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAnF,EAAMu2C,gBACO,OAATh3C,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,uBAElBjB,EAAQT,CACT,CACF,CAED,aAAIm3C,GACF,OAA6C,IAArCh4C,KAAK2B,MAAQkwC,EAAKoG,cAC3B,CAED,YAAAC,CAAaC,GACPA,KAAyD,IAArCn4C,KAAK2B,MAAQkwC,EAAKoG,kBACxCj4C,KAAKo4C,iBAAiBD,GAClBA,EACFn4C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAKoG,eAEhCj4C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKoG,eAEnCj4C,KAAKq4C,eAAeF,GACpBn4C,KAAKs4C,gBAAgBH,GAExB,CAES,gBAAAC,CAAiBD,GAE1B,CAES,cAAAE,CAAeF,GAExB,CAES,eAAAG,CAAgBH,GAEzB,CAED,cAAII,GACF,OAA8C,IAAtCv4C,KAAK2B,MAAQkwC,EAAK2G,eAC3B,CAED,aAAAC,CAAcF,GACRA,KAAuD,IAAtCv4C,KAAK2B,MAAQkwC,EAAK2G,mBACrCx4C,KAAK04C,kBAAkBH,GACnBA,EACFv4C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,EAAK2G,gBAEhCx4C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK2G,gBAEnCx4C,KAAK24C,gBAAgBJ,GACrBv4C,KAAK44C,iBAAiBL,GAEzB,CAES,iBAAAG,CAAkBH,GAE3B,CAES,eAAAI,CAAgBJ,GAEzB,CAES,gBAAAK,CAAiBL,GAE1B,CAEQ,aAAAx1C,CAAcrB,EAAwByC,GAAqB,GAClE,MAAMxC,EAAQ3B,KAAK2B,MACbyC,EAAmB1C,GAAeC,EAAQkwC,EAAKhwC,WAC5B,IAArBuC,IAGJpE,KAAKyC,SAASd,EAAQyC,GACtBpE,KAAK8C,cAAc9C,KAAMoE,EAAkBD,GAC5C,CAES,WAAAE,CAAY3C,EAAwByC,GAC5C,OAAOzC,CACR,CAED,aAAAoB,CAAc9E,EAAc0D,EAAwByC,GAClD,IAAKnE,KAAK2B,MAAQkwC,EAAKkE,cAAgBlE,EAAKoE,WAC1C,OAEFv0C,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK2B,OAASD,EAAcmwC,EAAKhwC,WAOxD,GANyC,IAApCH,EAAcmwC,EAAKsD,eACtB/wC,GAAoBytC,EAAKgH,cAEc,IAApCn3C,EAAcmwC,EAAKiH,eACtB10C,GAAoBytC,EAAKkH,cAEF,IAArB30C,IAA2BD,EAC7B,OAEFnE,KAAKyC,SAASzC,KAAK2B,MAAQyC,GAC3B,MAAM1D,EAASV,KAAKU,OACpB,GAAe,OAAXA,EACFA,EAAOoC,cAAc9E,EAAQ0D,EAAayC,QACrC,GAAInE,KAAKyE,QAAS,CACvB,MAAMC,EAAiB1E,KAAKG,QAAQwE,QACb,OAAnBD,GACFA,EAAe5B,cAAc9E,EAAQ0D,EAAayC,EAErD,CACF,CAED,YAAIS,GACF,OAA4C,IAApC5E,KAAK2B,MAAQkwC,EAAKhtC,aAC3B,CAED,cAAIm0C,GACF,OAA8C,IAAtCh5C,KAAK2B,MAAQkwC,EAAKoH,eAC3B,CAES,YAAAC,CAAaC,GACrB,OAAOA,CACR,CAED,cAAA/D,CAAe+D,GACb,IAIE,GAHAA,IAAiBtH,EAAKgH,aACtBM,GAAgBn5C,KAAK2B,MAAQkwC,EAAKhwC,WAEQ,KAD1Cs3C,EAAen5C,KAAKk5C,aAAaC,IACbtH,EAAKsD,aACvB,OAEF,IAAIjwC,EAAei0C,EACnBn5C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKgH,aAAehH,EAAKoH,gBACrDj5C,KAAKo5C,YAAYl0C,GACwC,KAAnDlF,KAAK2B,MAAQw3C,GAAgBtH,EAAKwH,eACtCn0C,GAAgB2sC,EAAKwH,YACrBr5C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKwH,aACjCr5C,KAAKs5C,cAEkD,KAAnDt5C,KAAK2B,MAAQw3C,GAAgBtH,EAAK0H,eACtCr0C,GAAgB2sC,EAAK0H,YACrBv5C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK0H,aACjCv5C,KAAKw5C,cAEkD,KAAnDx5C,KAAK2B,MAAQw3C,GAAgBtH,EAAK2D,eACtCtwC,GAAgB2sC,EAAK2D,YACrBx1C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK2D,aACjCx1C,KAAKy5C,cAEmD,KAApDz5C,KAAK2B,MAAQw3C,GAAgBtH,EAAK4D,gBACtCvwC,GAAgB2sC,EAAK4D,aACrBz1C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK4D,cACjCz1C,KAAK05C,eAEmD,KAApD15C,KAAK2B,MAAQw3C,GAAgBtH,EAAK8H,gBACtCz0C,GAAgB2sC,EAAK8H,aACrB35C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK8H,cACjC35C,KAAK45C,eAGP55C,KAAK65C,UAAU30C,GAC2B,IAArCA,EAAe2sC,EAAKwH,cACvBr5C,KAAK85C,WAEmC,IAArC50C,EAAe2sC,EAAK0H,cACvBv5C,KAAK+5C,WAEmC,IAArC70C,EAAe2sC,EAAK2D,cACvBx1C,KAAKg6C,WAEoC,IAAtC90C,EAAe2sC,EAAK4D,eACvBz1C,KAAKi6C,YAEoC,IAAtC/0C,EAAe2sC,EAAK8H,eACvB35C,KAAKk6C,YAGmC,IAArCh1C,EAAe2sC,EAAKsD,cACvBn1C,KAAKm6C,gBAAgBj1C,EAAclF,KAAKo6C,cAGC,IAAtCl1C,EAAe2sC,EAAK8H,eACvB35C,KAAKq6C,aAEoC,IAAtCn1C,EAAe2sC,EAAK4D,eACvBz1C,KAAKs6C,aAEmC,IAArCp1C,EAAe2sC,EAAK2D,cACvBx1C,KAAKu6C,YAEmC,IAArCr1C,EAAe2sC,EAAK0H,cACvBv5C,KAAKw6C,YAEmC,IAArCt1C,EAAe2sC,EAAKwH,cACvBr5C,KAAKy6C,YAEPz6C,KAAK06C,WAAWx1C,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKoH,eAClC,CACF,CAES,WAAAG,CAAYD,GAErB,CAES,SAAAU,CAAUV,GAEnB,CAES,UAAAuB,CAAWvB,GAEpB,CAIS,UAAAG,GACR,MAAMx/B,EAAY9Z,KAAKozC,oBACvB,GAAkB,OAAdt5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS0+B,eAAe36C,MAG5BA,KAAK46C,6BACN,CAES,QAAAd,GAET,CAIS,SAAAW,GACR,MAAM3gC,EAAY9Z,KAAKqzC,mBACvB,GAAkB,OAAdv5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS4+B,cAAc76C,KAG5B,CAIS,UAAAw5C,GACR,MAAM1/B,EAAY9Z,KAAKszC,oBACvB,GAAkB,OAAdx5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS6+B,eAAe96C,KAG7B,CAES,QAAA+5C,GAET,CAIS,SAAAS,GACR,MAAM1gC,EAAY9Z,KAAKuzC,mBACvB,GAAkB,OAAdz5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS8+B,cAAc/6C,KAG5B,CAIS,UAAAy5C,GACR,MAAM3/B,EAAY9Z,KAAKwzC,oBACvB,GAAkB,OAAd15B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS++B,eAAeh7C,KAG7B,CAES,QAAAg6C,GACRh6C,KAAKmG,kBAAkBnG,KAAKoG,WAC7B,CAIS,SAAAm0C,GACR,MAAMzgC,EAAY9Z,KAAKyzC,mBACvB,GAAkB,OAAd35B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASg/B,cAAcj7C,KAG5B,CAIS,WAAA05C,GACR,MAAM5/B,EAAY9Z,KAAK0zC,qBACvB,GAAkB,OAAd55B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASi/B,gBAAgBl7C,KAG9B,CAES,SAAAi6C,GACRj6C,KAAKm7C,kBAAkBn7C,KAAKoG,WAC7B,CAIS,UAAAk0C,GACR,MAAMxgC,EAAY9Z,KAAK2zC,oBACvB,GAAkB,OAAd75B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASm/B,eAAep7C,KAG7B,CAIS,WAAA45C,GACR,MAAM9/B,EAAY9Z,KAAK4zC,qBACvB,GAAkB,OAAd95B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASo/B,gBAAgBr7C,KAG9B,CAES,SAAAk6C,GAET,CAIS,UAAAG,GACR,MAAMvgC,EAAY9Z,KAAK6zC,oBACvB,GAAkB,OAAd/5B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASq/B,eAAet7C,KAG7B,CAES,eAAAm6C,CAAgBhB,EAAyBiB,GACjD,IAAI94C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADA2zC,EAAa36C,KAAKO,KAAMsB,EAAO63C,GAClB,OAATt4C,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAES,YAAAu5C,CAAa94C,EAAa63C,GAClC73C,EAAM8zC,eAAe+D,EACtB,CAED,cAAIoC,GACF,OAA8C,IAAtCv7C,KAAK2B,MAAQkwC,EAAK2J,eAC3B,CAES,YAAAC,CAAaC,GACrB,OAAOA,CACR,CAED,cAAAC,CAAeD,GACb,IAIE,GAHAA,IAAiB7J,EAAKkH,aACtB2C,GAAgB17C,KAAK2B,MAAQkwC,EAAKhwC,WAEQ,KAD1C65C,EAAe17C,KAAKy7C,aAAaC,IACb7J,EAAKiH,aACvB,OAEF,IAAI5zC,EAAew2C,EACnB17C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKkH,aAAelH,EAAK2J,gBACrDx7C,KAAK47C,YAAY12C,GACwC,KAAnDlF,KAAK2B,MAAQ+5C,GAAgB7J,EAAKgK,eACtC32C,GAAgB2sC,EAAKgK,YACrB77C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKgK,aACjC77C,KAAK87C,cAEkD,KAAnD97C,KAAK2B,MAAQ+5C,GAAgB7J,EAAKkK,eACtC72C,GAAgB2sC,EAAKkK,YACrB/7C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKkK,aACjC/7C,KAAKg8C,cAEqD,KAAtDh8C,KAAK2B,MAAQ+5C,GAAgB7J,EAAKoK,kBACtC/2C,GAAgB2sC,EAAKoK,eACrBj8C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKoK,gBACjCj8C,KAAKk8C,iBAEqD,KAAtDl8C,KAAK2B,MAAQ+5C,GAAgB7J,EAAKsK,kBACtCj3C,GAAgB2sC,EAAKsK,eACrBn8C,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAKsK,gBACjCn8C,KAAKo8C,iBAGPp8C,KAAKq8C,UAAUn3C,GAC2B,IAArCA,EAAe2sC,EAAKgK,cACvB77C,KAAKs8C,WAEmC,IAArCp3C,EAAe2sC,EAAKkK,cACvB/7C,KAAKu8C,WAEsC,IAAxCr3C,EAAe2sC,EAAKoK,iBACvBj8C,KAAKw8C,cAEsC,IAAxCt3C,EAAe2sC,EAAKsK,iBACvBn8C,KAAKy8C,cAGmC,IAArCv3C,EAAe2sC,EAAKiH,cAAuB94C,KAAK+2C,QAAW/2C,KAAK20C,QACnE30C,KAAK08C,gBAAgBx3C,EAAclF,KAAK28C,cAGG,IAAxCz3C,EAAe2sC,EAAKsK,iBACvBn8C,KAAK48C,eAEsC,IAAxC13C,EAAe2sC,EAAKoK,iBACvBj8C,KAAK68C,eAEmC,IAArC33C,EAAe2sC,EAAKkK,cACvB/7C,KAAK88C,YAEmC,IAArC53C,EAAe2sC,EAAKgK,cACvB77C,KAAK+8C,YAEP/8C,KAAKg9C,WAAW93C,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAASkwC,EAAK2J,eAClC,CACF,CAES,WAAAI,CAAYF,GAErB,CAES,SAAAW,CAAUX,GAEnB,CAES,UAAAsB,CAAWtB,GAEpB,CAIS,UAAAI,GACR,MAAMhiC,EAAY9Z,KAAK8zC,oBACvB,GAAkB,OAAdh6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASghC,eAAej9C,KAG7B,CAES,QAAAs8C,GAET,CAIS,SAAAS,GACR,MAAMjjC,EAAY9Z,KAAK+zC,mBACvB,GAAkB,OAAdj6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASihC,cAAcl9C,KAG5B,CAIS,UAAAg8C,GACR,MAAMliC,EAAY9Z,KAAKg0C,oBACvB,GAAkB,OAAdl6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASkhC,eAAen9C,KAG7B,CAES,QAAAu8C,GAET,CAIS,SAAAO,GACR,MAAMhjC,EAAY9Z,KAAKi0C,mBACvB,GAAkB,OAAdn6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASmhC,cAAcp9C,KAG5B,CAIS,aAAAk8C,GACR,MAAMpiC,EAAY9Z,KAAKk0C,uBACvB,GAAkB,OAAdp6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASohC,kBAAkBr9C,KAGhC,CAES,WAAAw8C,GAET,CAIS,YAAAK,GACR,MAAM/iC,EAAY9Z,KAAKm0C,sBACvB,GAAkB,OAAdr6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASqhC,iBAAiBt9C,KAG/B,CAIS,aAAAo8C,GACR,MAAMtiC,EAAY9Z,KAAKo0C,uBACvB,GAAkB,OAAdt6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASshC,kBAAkBv9C,KAGhC,CAES,WAAAy8C,GAET,CAIS,YAAAG,GACR,MAAM9iC,EAAY9Z,KAAKq0C,sBACvB,GAAkB,OAAdv6B,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASuhC,iBAAiBx9C,KAG/B,CAES,eAAA08C,CAAgBhB,EAAyBiB,GACjD,IAAIr7C,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAk2C,EAAal9C,KAAKO,KAAMsB,EAAOo6C,GAClB,OAAT76C,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAES,YAAA87C,CAAar7C,EAAao6C,GAClCp6C,EAAMq6C,eAAeD,EACtB,CAED,cAAIt1C,GACF,OAAOpG,KAAKG,QAAQ2O,aAAa1I,UAClC,CAOD,YAAIq3C,GACF,OAAOzuC,EAAAA,SAASC,QACjB,CAsBD,UAAI+6B,GACF,OAAOh7B,EAAAA,SAASC,QACjB,CAgFD,OAAAo3B,CAAWjF,EAAeiE,GACxB,MAAM+B,EAAQpnC,KAAKonC,MAAM9nC,MACzB,IAAIA,EASJ,OARc,OAAV8nC,IACE/B,UACFA,EAAOrlC,KAAKqlC,KAAK/lC,OAEN,OAAT+lC,IACF/lC,EAAQ8nC,EAAMroC,IAAIqiC,EAAMiE,KAGrB/lC,CACR,CAMD,SAAAgnC,CAAgBlF,EAAeiE,EAAmChF,GACvC,IAArB7gC,UAAUhB,SACZ6hC,EAAYgF,EACZA,EAAO,MAET,MAAM+B,EAAQpnC,KAAKonC,MAAM9nC,MACzB,IAAIA,EAaJ,OAZc,OAAV8nC,GACE/B,UACFA,EAAOrlC,KAAKqlC,KAAK/lC,OAGjBA,EADW,OAAT+lC,EACM+B,EAAMhH,MAAMgB,EAAMiE,EAA0BhF,GAE5CA,GAGV/gC,EAAQ+gC,EAEH/gC,CACR,CAGD,UAAA6nC,CAAWC,EAAoB/B,EAAkBxpB,GAE7CA,QADEA,IAAAA,IAAqB7b,KAAKqb,kBAEnBQ,IAAAA,IAAgC,IAAXA,EACrBurB,EAAMhH,MAAMyF,GAAKhqB,OAAQ+yB,GAAKnB,SAAS,GAEvC9G,SAAO/9B,SAASiT,IAE3B7b,KAAK09C,eAAetW,EAAO/B,EAAMxpB,GACjC7b,KAAK29C,aAAavW,EAAO/B,EAAMxpB,GAC/B7b,KAAK49C,cAAcxW,EAAO/B,EAAMxpB,EACjC,CAES,cAAA6hC,CAAetW,EAAoB/B,EAAkBxpB,GAC7D7b,KAAKW,cAAc,qBAAsBymC,EAAO/B,EAAMxpB,EAAQ7b,KAC/D,CAES,YAAA29C,CAAavW,EAAoB/B,EAAkBxpB,GAC3D7b,KAAK69C,cAAczW,EAAO/B,EAAMxpB,EACjC,CAES,aAAA+hC,CAAcxW,EAAoB/B,EAAkBxpB,GAC5D7b,KAAKW,cAAc,oBAAqBymC,EAAO/B,EAAMxpB,EAAQ7b,KAC9D,CAGS,aAAA69C,CAAczW,EAAoB/B,EAAkBxpB,GAC5D,MAAM3P,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,SAChC0F,IAAAA,GAAuB,eAAiBA,GACzCA,EAAiBkjC,WAAWC,EAAO/B,EAAMxpB,EAE7C,CACF,CAwBD,UAAAiiC,CAAW5d,EAAYK,EAAkC1kB,GACvD,IAAK7b,KAAKmyC,aAAa4L,YAAY9nC,EAAAA,SAASI,WAC1C,OAEF,MAAM2nC,EAAkBh+C,KAAKmyC,aAAa8L,WAAW5b,GAAWrB,SAC1Dkd,EAAkBF,EAAgBpZ,WAAW1E,EAAMK,GAAS,GAC9D2d,EAAgBxhC,OAAOshC,KAG3Bh+C,KAAKqlC,KAAKxpB,OAASA,EACnB7b,KAAKmyC,aAAa58B,aAAa2oC,GAChC,CA0BD,WAAAC,CAAYje,EAA2EK,EAA0D1kB,GAC/I,IAAK7b,KAAKqyC,cAAc0L,YAAY9nC,EAAAA,SAASI,WAC3C,OAEF,MAAM+nC,EAAmBp+C,KAAKqyC,cAAc4L,WAAW5b,GAAWrB,SAClE,IAAIqd,EACJ,GAAIne,aAAgBiN,GAClBkR,EAAmBD,EAAiBxZ,WAAW1E,EAAMK,GAAoC,OACpF,CACL8d,EAAmBD,EACnB,MAAMrZ,EAAO7E,EACbrkB,EAAS0kB,EACTA,OAAe,EACf,IAAK,IAAIhiC,EAAI,EAAGA,EAAIwmC,EAAKvmC,OAAQD,GAAK,GACnC2hC,EAAMK,GAAWwE,EAAKxmC,GAErB8/C,WADE9d,EACiB8d,EAAiBzZ,WAAW1E,EAAMK,GAAS,GAE3C8d,EAAiB7a,IAAItD,OAAW,EAGxD,CACIme,EAAiB3hC,OAAO0hC,KAC3Bp+C,KAAKonC,MAAMvrB,OAASA,EACpB7b,KAAKqyC,cAAc98B,aAAa8oC,GAEnC,CAGD,aAAAzX,CAAc3iC,GACZ,OAAOjE,KAAKsmC,UAAUT,GAAKhqB,OAAQ,KACpC,CAGkB,iBAAA/P,CAAkB7H,EAAoB3C,EAAatD,GACpE+B,MAAM+L,kBAAkB7H,EAAU3C,EAAOtD,IACrCiG,aAAoBq6C,IAAgBr6C,aAAoBs6C,KAC1Dt6C,EAASu6C,SAASl9C,EAAOtD,EAE5B,CAGkB,mBAAAgO,CAAoB/H,EAAoB3C,IACrD2C,aAAoBq6C,IAAgBr6C,aAAoBs6C,KAC1Dt6C,EAASw6C,WAAWn9C,GAEtBvB,MAAMiM,oBAAoB/H,EAAU3C,EACrC,CAGkB,eAAAoL,CAAgBzI,GACjClE,MAAM2M,gBAAgBzI,GAClBA,aAAoB8X,EAAAA,SACtB/b,KAAK+C,cAAc8uC,EAAK4D,cAExBz1C,KAAK+C,cAAc8uC,EAAK2D,YAE3B,CAGQ,iBAAArvC,CAAkBwG,GACzB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OAAtC,UAEWmO,IACTA,EAAIC,YAAYC,OAEjB7M,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACtB0F,aAAoB8X,EAAAA,SAGxB/b,KAAK0M,gBAAgBzI,GAFrBA,EAAS+I,SAASL,EAIrB,CACF,CAAS,QACP3M,KAAuB+M,WAAa,IACtC,CAfA,CAgBF,CAGD,iBAAAouC,CAAkBxuC,GAChB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OACpC,OAUF,MAAMqO,EAAMD,YAAYC,MACpBA,EAAMF,GAAK+xC,GAAiBC,qBAC9BhyC,EAAIE,GAEL7M,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACxB0F,aAAoB8X,EAAAA,SACtB9X,EAAS+I,SAASL,GAElB3M,KAAK0M,gBAAgBzI,EAExB,CACF,CAAS,QACPjE,KAAuB+M,WAAa,IACtC,CACF,CAGD,UAAAg9B,CAAW6U,EAA+BC,EAC/BC,EAAgCnW,GACzCiW,EAAMxV,uBAAqBxgC,SAASg2C,GAEpC,MAAMG,OAAaD,KADnBA,EAAM1V,uBAAqBxgC,SAASk2C,IACAF,EAAIpd,MAAMsd,GAAOF,EAEnDjW,WADEA,EACSC,EAAmBoW,mBAAAA,SAEnBpW,qBAAmBhgC,SAAS+/B,GAEzC,MAAMoB,EAAa,IAAIkV,aAAWj/C,KAAM++C,EAAYF,EAAUlW,GAE9D,OADA3oC,KAAKk/C,cAAcnV,GACZA,CACR,CAMD,aAAAoV,CAAcpV,GACZ,MAAMwI,EAAcvyC,KAAKuyC,YACzB,OAAuB,OAAhBA,GAAwBA,EAAYhlC,IAAIw8B,EAChD,CAGD,aAAAmV,CAAcnV,GACZ,IAAIwI,EAAcvyC,KAAKuyC,YACvB,GAAoB,OAAhBA,EACFA,EAAc,IAAIjlC,IACjBtN,KAAuBuyC,YAAcA,OACjC,GAAIA,EAAYhlC,IAAIw8B,GACzB,OAEFwI,EAAY9kC,IAAIs8B,GAChB/pC,KAAKo/C,mBAAmBrV,EACzB,CAGD,gBAAAsV,CAAiBtV,GACf,MAAMwI,EAAcvyC,KAAKuyC,YACL,OAAhBA,GAAyBA,EAAYhlC,IAAIw8B,KAG7C/pC,KAAKs/C,qBAAqBvV,GAC1BwI,EAAYzkC,OAAOi8B,GACpB,CAGD,kBAAAqV,CAAmBrV,GACjB,MAAMwV,EAAgBv/C,KAAKgqC,OAAOrlC,QACZ,OAAlB46C,IAGJA,EAAcH,mBAAmBrV,GACjC/pC,KAAK+C,cAAc8uC,EAAKgK,aACzB,CAGD,oBAAAyD,CAAqBvV,GACnB,MAAMwV,EAAgBv/C,KAAKgqC,OAAOrlC,QACZ,OAAlB46C,IAGJA,EAAcD,qBAAqBvV,GACnC/pC,KAAK+C,cAAc8uC,EAAKgK,aACzB,CAGD,kBAAA2D,CAAmBnhD,EAAciB,EAAgBqpC,YAC3CrpC,IACFA,EAAQ,GAGRqpC,WADEA,EACSC,qBAAmBhgC,SAAS+/B,GAE5BC,EAAmBC,mBAAAA,OAEhC,MAAM/sB,EAAW2jC,EAAAA,mBAAmBjwC,OAAOxP,MAU3C,OATA7B,OAAOgB,eAAe2c,EAAU,OAAQ,CACtCxc,MAAOjB,EACPub,cAAc,aAEZta,GACFwc,EAAS9c,IAAIM,GAEfwc,EAASgtB,YAAYH,GACrB7sB,EAASJ,QACFI,CACR,CAMD,qBAAA4jC,CAAsBF,GACpB,MAAMhN,EAAsBxyC,KAAKwyC,oBACjC,OAA+B,OAAxBA,GAAgCA,EAAoBjlC,IAAIiyC,EAChE,CAGD,qBAAA/U,CAAsB+U,GACpB,IAAIhN,EAAsBxyC,KAAKwyC,oBAC/B,GAA4B,OAAxBA,EACFA,EAAsB,IAAIllC,IACzBtN,KAAuBwyC,oBAAsBA,OACzC,GAAIA,EAAoBjlC,IAAIiyC,GACjC,OAEFhN,EAAoB/kC,IAAI+xC,GACxBx/C,KAAK2/C,2BAA2BH,EACjC,CAGD,wBAAA3U,CAAyB2U,GACvB,MAAMhN,EAAsBxyC,KAAKwyC,oBACL,OAAxBA,GAAiCA,EAAoBjlC,IAAIiyC,KAG7Dx/C,KAAK4/C,6BAA6BJ,GAClChN,EAAoB1kC,OAAO0xC,GAC5B,CAGD,0BAAAG,CAA2BH,GACzB,MAAMD,EAAgBv/C,KAAKgqC,OAAOrlC,QACZ,OAAlB46C,IAGJA,EAAcI,2BAA2BH,GACzCx/C,KAAK+C,cAAc8uC,EAAKgK,aACzB,CAGD,4BAAA+D,CAA6BJ,GAC3B,MAAMD,EAAgBv/C,KAAKgqC,OAAOrlC,QACZ,OAAlB46C,IAGJA,EAAcK,6BAA6BJ,GAC3Cx/C,KAAK+C,cAAc8uC,EAAKgK,aACzB,CAGD,qBAAA/Q,CAAsB0U,EAAwClgD,GAC5D,MAAMigD,EAAgBvwC,EAAS6wC,SAAAA,WAAW7/C,KAAM,UAC1B,OAAlBu/C,GAGJA,EAAczU,sBAAsB0U,EAAoBlgD,EACzD,CAGD,2BAAAs7C,GACE,MAAMpI,EAAsBxyC,KAAKwyC,oBACjC,GAA4B,OAAxBA,EAGJ,IAAK,MAAMgN,KAAsBhN,EAC/BgN,EAAmBlX,4BAEtB,CAGS,cAAAoN,GACR,MAAMnD,EAAcvyC,KAAKuyC,YACzB,GAAoB,OAAhBA,EACF,OAEF,MAAMgN,EAAgBv/C,KAAKgqC,OAAOrlC,QAClC,GAAsB,OAAlB46C,GAA0C,OAAhBhN,EAG9B,IAAK,MAAMxI,KAAcwI,EACvBgN,EAAcH,mBAAmBrV,EAEpC,CAGS,gBAAA8L,GACR,MAAMtD,EAAcvyC,KAAKuyC,YACzB,GAAoB,OAAhBA,EACF,OAEF,MAAMgN,EAAgBv/C,KAAKgqC,OAAOrlC,QAClC,GAAsB,OAAlB46C,EAGJ,IAAK,MAAMxV,KAAcwI,EACvBgN,EAAcD,qBAAqBvV,EAEtC,CAED,kBAAI+V,GACF,OAAO9/C,KAAKy9C,SAAS3uC,aAAagxC,eAAexgD,KAClD,CAED,kBAAIygD,GACF,OAAO//C,KAAKy9C,SAAS3uC,aAAaixC,eAAezgD,KAClD,CAED,aAAI0gD,GACF,OAAOhgD,KAAKy9C,SAAS3uC,aAAakxC,UAAU1gD,KAC7C,CAWD,cAAI2gD,GACF,OAAO/wC,EAAAA,SAASD,QACjB,CAMD,mBAAIixC,GACF,OAAO3nB,EAAAA,UAAUgB,UAClB,CAKD,iBAAI4mB,GACF,MAAMz/C,EAASV,KAAKU,OACpB,OAAe,OAAXA,EACKA,EAAOy/C,cAAcnnB,UAAUh5B,KAAKkgD,iBAEpC3nB,EAAAA,UAAUgB,UAEpB,CAED,cAAI6mB,GACF,MAAMC,EAAergD,KAAKqgD,aACpBC,EAAkBtgD,KAAKsgD,gBAC7B,OAAOD,EAAarnB,UAAUsnB,EAC/B,CAMD,gBAAIC,GACF,OAAOvgD,KAAKogD,UACb,CAKD,mBAAIE,GACF,IAAIA,EACJ,MAAME,EAAUx8B,OAAOy8B,YACjBC,EAAU18B,OAAO28B,YAErBL,EADc,IAAZE,GAA6B,IAAZE,EACDnoB,EAAAA,UAAUqoB,UAAUJ,EAASE,GAE7BnoB,EAAAA,UAAUgB,WAE9B,MAAM4mB,EAAgBngD,KAAKmgD,cAC3B,OAAOG,EAAgBtnB,UAAUmnB,EAClC,CAED,gBAAIE,GACF,OAAOQ,EAAAA,MAAMC,WACd,CAED,kBAAAC,GACE,MAAMC,EAAShhD,KAAKqgD,aACdY,EAAgBv+B,SAASw+B,gBAAgBC,YACzCC,EAAiB1+B,SAASw+B,gBAAgBG,aAChD,OAAQL,EAAOM,KAAO,GAAK,EAAIN,EAAOO,QAAU,GAAKP,EAAOM,KAAON,EAAOM,IAAMF,KACxEJ,EAAOQ,MAAQ,GAAK,EAAIR,EAAOS,OAAS,GAAKT,EAAOQ,MAAQR,EAAOQ,KAAOP,EACnF,CAED,aAAAS,CAAc9+B,GACZ,OAAO,CACR,CAED,gBAAA++B,CAAiBC,EAAcC,EAA8Cl9B,GAE5E,CAED,mBAAAm9B,CAAoBF,EAAcC,EAA8Cl9B,GAE/E,CAEkB,SAAAxI,CAAUF,GAC3Blc,MAAMoc,UAAUF,YACZA,EAAS44B,uBAC4B,OAAnC70C,KAAK8xC,4BACP9xC,KAAK8xC,0BAA4B,IAAIxkC,KAEvCtN,KAAK8xC,0BAA0BrkC,IAAIwO,aAEjCA,EAAS64B,sBAC2B,OAAlC90C,KAAKyyC,2BACPzyC,KAAKyyC,yBAA2B,IAAInlC,KAEtCtN,KAAKyyC,yBAAyBhlC,IAAIwO,aAEhCA,EAAS84B,uBAC4B,OAAnC/0C,KAAK0yC,4BACP1yC,KAAK0yC,0BAA4B,IAAIplC,KAEvCtN,KAAK0yC,0BAA0BjlC,IAAIwO,aAEjCA,EAAS+4B,sBAC2B,OAAlCh1C,KAAK2yC,2BACP3yC,KAAK2yC,yBAA2B,IAAIrlC,KAEtCtN,KAAK2yC,yBAAyBllC,IAAIwO,aAEhCA,EAASg5B,sBAC2B,OAAlCj1C,KAAK4yC,2BACP5yC,KAAK4yC,yBAA2B,IAAItlC,KAEtCtN,KAAK4yC,yBAAyBnlC,IAAIwO,aAEhCA,EAASi5B,qBAC0B,OAAjCl1C,KAAK6yC,0BACP7yC,KAAK6yC,wBAA0B,IAAIvlC,KAErCtN,KAAK6yC,wBAAwBplC,IAAIwO,aAE/BA,EAASo5B,sBAC2B,OAAlCr1C,KAAK8yC,2BACP9yC,KAAK8yC,yBAA2B,IAAIxlC,KAEtCtN,KAAK8yC,yBAAyBrlC,IAAIwO,aAEhCA,EAASq5B,qBAC0B,OAAjCt1C,KAAK+yC,0BACP/yC,KAAK+yC,wBAA0B,IAAIzlC,KAErCtN,KAAK+yC,wBAAwBtlC,IAAIwO,aAE/BA,EAASs5B,gBACqB,OAA5Bv1C,KAAKgzC,qBACPhzC,KAAKgzC,mBAAqB,IAAI1lC,KAEhCtN,KAAKgzC,mBAAmBvlC,IAAIwO,aAE1BA,EAAS05B,eACoB,OAA3B31C,KAAKizC,oBACPjzC,KAAKizC,kBAAoB,IAAI3lC,KAE/BtN,KAAKizC,kBAAkBxlC,IAAIwO,aAEzBA,EAAS25B,kBACuB,OAA9B51C,KAAKkzC,uBACPlzC,KAAKkzC,qBAAuB,IAAI5lC,KAElCtN,KAAKkzC,qBAAqBzlC,IAAIwO,aAE5BA,EAAS65B,iBACsB,OAA7B91C,KAAKmzC,sBACPnzC,KAAKmzC,oBAAsB,IAAI7lC,KAEjCtN,KAAKmzC,oBAAoB1lC,IAAIwO,aAE3BA,EAAS0+B,iBACsB,OAA7B36C,KAAKozC,sBACPpzC,KAAKozC,oBAAsB,IAAI9lC,KAEjCtN,KAAKozC,oBAAoB3lC,IAAIwO,aAE3BA,EAAS4+B,gBACqB,OAA5B76C,KAAKqzC,qBACPrzC,KAAKqzC,mBAAqB,IAAI/lC,KAEhCtN,KAAKqzC,mBAAmB5lC,IAAIwO,aAE1BA,EAAS6+B,iBACsB,OAA7B96C,KAAKszC,sBACPtzC,KAAKszC,oBAAsB,IAAIhmC,KAEjCtN,KAAKszC,oBAAoB7lC,IAAIwO,aAE3BA,EAAS8+B,gBACqB,OAA5B/6C,KAAKuzC,qBACPvzC,KAAKuzC,mBAAqB,IAAIjmC,KAEhCtN,KAAKuzC,mBAAmB9lC,IAAIwO,aAE1BA,EAAS++B,iBACsB,OAA7Bh7C,KAAKwzC,sBACPxzC,KAAKwzC,oBAAsB,IAAIlmC,KAEjCtN,KAAKwzC,oBAAoB/lC,IAAIwO,aAE3BA,EAASg/B,gBACqB,OAA5Bj7C,KAAKyzC,qBACPzzC,KAAKyzC,mBAAqB,IAAInmC,KAEhCtN,KAAKyzC,mBAAmBhmC,IAAIwO,aAE1BA,EAASi/B,kBACuB,OAA9Bl7C,KAAK0zC,uBACP1zC,KAAK0zC,qBAAuB,IAAIpmC,KAElCtN,KAAK0zC,qBAAqBjmC,IAAIwO,aAE5BA,EAASm/B,iBACsB,OAA7Bp7C,KAAK2zC,sBACP3zC,KAAK2zC,oBAAsB,IAAIrmC,KAEjCtN,KAAK2zC,oBAAoBlmC,IAAIwO,aAE3BA,EAASo/B,kBACuB,OAA9Br7C,KAAK4zC,uBACP5zC,KAAK4zC,qBAAuB,IAAItmC,KAElCtN,KAAK4zC,qBAAqBnmC,IAAIwO,aAE5BA,EAASq/B,iBACsB,OAA7Bt7C,KAAK6zC,sBACP7zC,KAAK6zC,oBAAsB,IAAIvmC,KAEjCtN,KAAK6zC,oBAAoBpmC,IAAIwO,aAE3BA,EAASghC,iBACsB,OAA7Bj9C,KAAK8zC,sBACP9zC,KAAK8zC,oBAAsB,IAAIxmC,KAEjCtN,KAAK8zC,oBAAoBrmC,IAAIwO,aAE3BA,EAASihC,gBACqB,OAA5Bl9C,KAAK+zC,qBACP/zC,KAAK+zC,mBAAqB,IAAIzmC,KAEhCtN,KAAK+zC,mBAAmBtmC,IAAIwO,aAE1BA,EAASkhC,iBACsB,OAA7Bn9C,KAAKg0C,sBACPh0C,KAAKg0C,oBAAsB,IAAI1mC,KAEjCtN,KAAKg0C,oBAAoBvmC,IAAIwO,aAE3BA,EAASmhC,gBACqB,OAA5Bp9C,KAAKi0C,qBACPj0C,KAAKi0C,mBAAqB,IAAI3mC,KAEhCtN,KAAKi0C,mBAAmBxmC,IAAIwO,aAE1BA,EAASohC,oBACyB,OAAhCr9C,KAAKk0C,yBACPl0C,KAAKk0C,uBAAyB,IAAI5mC,KAEpCtN,KAAKk0C,uBAAuBzmC,IAAIwO,aAE9BA,EAASqhC,mBACwB,OAA/Bt9C,KAAKm0C,wBACPn0C,KAAKm0C,sBAAwB,IAAI7mC,KAEnCtN,KAAKm0C,sBAAsB1mC,IAAIwO,aAE7BA,EAASshC,oBACyB,OAAhCv9C,KAAKo0C,yBACPp0C,KAAKo0C,uBAAyB,IAAI9mC,KAEpCtN,KAAKo0C,uBAAuB3mC,IAAIwO,aAE9BA,EAASuhC,mBACwB,OAA/Bx9C,KAAKq0C,wBACPr0C,KAAKq0C,sBAAwB,IAAI/mC,KAEnCtN,KAAKq0C,sBAAsB5mC,IAAIwO,GAElC,CAEkB,WAAAK,CAAYL,GAC7Blc,MAAMuc,YAAYL,QACL44B,IAAT54B,EAAS44B,sBAAsE,OAAnC70C,KAAK8xC,2BACnD9xC,KAAK8xC,0BAA0BhkC,OAAOmO,QAE3B64B,IAAT74B,EAAS64B,qBAAoE,OAAlC90C,KAAKyyC,0BAClDzyC,KAAKyyC,yBAAyB3kC,OAAOmO,QAE1B84B,IAAT94B,EAAS84B,sBAAsE,OAAnC/0C,KAAK0yC,2BACnD1yC,KAAK0yC,0BAA0B5kC,OAAOmO,QAE3B+4B,IAAT/4B,EAAS+4B,qBAAoE,OAAlCh1C,KAAK2yC,0BAClD3yC,KAAK2yC,yBAAyB7kC,OAAOmO,QAE1Bg5B,IAATh5B,EAASg5B,qBAAoE,OAAlCj1C,KAAK4yC,0BAClD5yC,KAAK4yC,yBAAyB9kC,OAAOmO,QAE1Bi5B,IAATj5B,EAASi5B,oBAAkE,OAAjCl1C,KAAK6yC,yBACjD7yC,KAAK6yC,wBAAwB/kC,OAAOmO,QAEzBo5B,IAATp5B,EAASo5B,qBAAoE,OAAlCr1C,KAAK8yC,0BAClD9yC,KAAK8yC,yBAAyBhlC,OAAOmO,QAE1Bq5B,IAATr5B,EAASq5B,oBAAkE,OAAjCt1C,KAAK+yC,yBACjD/yC,KAAK+yC,wBAAwBjlC,OAAOmO,QAEzBs5B,IAATt5B,EAASs5B,eAAwD,OAA5Bv1C,KAAKgzC,oBAC5ChzC,KAAKgzC,mBAAmBllC,OAAOmO,QAEpB05B,IAAT15B,EAAS05B,cAAsD,OAA3B31C,KAAKizC,mBAC3CjzC,KAAKizC,kBAAkBnlC,OAAOmO,QAEnB25B,IAAT35B,EAAS25B,iBAA4D,OAA9B51C,KAAKkzC,sBAC9ClzC,KAAKkzC,qBAAqBplC,OAAOmO,QAEtB65B,IAAT75B,EAAS65B,gBAA0D,OAA7B91C,KAAKmzC,qBAC7CnzC,KAAKmzC,oBAAoBrlC,OAAOmO,QAErB0+B,IAAT1+B,EAAS0+B,gBAA0D,OAA7B36C,KAAKozC,qBAC7CpzC,KAAKozC,oBAAoBtlC,OAAOmO,QAErB4+B,IAAT5+B,EAAS4+B,eAAwD,OAA5B76C,KAAKqzC,oBAC5CrzC,KAAKqzC,mBAAmBvlC,OAAOmO,QAEpB6+B,IAAT7+B,EAAS6+B,gBAA0D,OAA7B96C,KAAKszC,qBAC7CtzC,KAAKszC,oBAAoBxlC,OAAOmO,QAErB8+B,IAAT9+B,EAAS8+B,eAAwD,OAA5B/6C,KAAKuzC,oBAC5CvzC,KAAKuzC,mBAAmBzlC,OAAOmO,QAEpB++B,IAAT/+B,EAAS++B,gBAA0D,OAA7Bh7C,KAAKwzC,qBAC7CxzC,KAAKwzC,oBAAoB1lC,OAAOmO,QAErBg/B,IAATh/B,EAASg/B,eAAwD,OAA5Bj7C,KAAKyzC,oBAC5CzzC,KAAKyzC,mBAAmB3lC,OAAOmO,QAEpBi/B,IAATj/B,EAASi/B,iBAA4D,OAA9Bl7C,KAAK0zC,sBAC9C1zC,KAAK0zC,qBAAqB5lC,OAAOmO,QAEtBm/B,IAATn/B,EAASm/B,gBAA0D,OAA7Bp7C,KAAK2zC,qBAC7C3zC,KAAK2zC,oBAAoB7lC,OAAOmO,QAErBo/B,IAATp/B,EAASo/B,iBAA4D,OAA9Br7C,KAAK4zC,sBAC9C5zC,KAAK4zC,qBAAqB9lC,OAAOmO,QAEtBq/B,IAATr/B,EAASq/B,gBAA0D,OAA7Bt7C,KAAK6zC,qBAC7C7zC,KAAK6zC,oBAAoB/lC,OAAOmO,QAErBghC,IAAThhC,EAASghC,gBAA0D,OAA7Bj9C,KAAK8zC,qBAC7C9zC,KAAK8zC,oBAAoBhmC,OAAOmO,QAErBihC,IAATjhC,EAASihC,eAAwD,OAA5Bl9C,KAAK+zC,oBAC5C/zC,KAAK+zC,mBAAmBjmC,OAAOmO,QAEpBkhC,IAATlhC,EAASkhC,gBAA0D,OAA7Bn9C,KAAKg0C,qBAC7Ch0C,KAAKg0C,oBAAoBlmC,OAAOmO,QAErBmhC,IAATnhC,EAASmhC,eAAwD,OAA5Bp9C,KAAKi0C,oBAC5Cj0C,KAAKi0C,mBAAmBnmC,OAAOmO,QAEpBohC,IAATphC,EAASohC,mBAAgE,OAAhCr9C,KAAKk0C,wBAChDl0C,KAAKk0C,uBAAuBpmC,OAAOmO,QAExBqhC,IAATrhC,EAASqhC,kBAA8D,OAA/Bt9C,KAAKm0C,uBAC/Cn0C,KAAKm0C,sBAAsBrmC,OAAOmO,QAEvBshC,IAATthC,EAASshC,mBAAgE,OAAhCv9C,KAAKo0C,wBAChDp0C,KAAKo0C,uBAAuBtmC,OAAOmO,QAExBuhC,IAATvhC,EAASuhC,kBAA8D,OAA/Bx9C,KAAKq0C,uBAC/Cr0C,KAAKq0C,sBAAsBvmC,OAAOmO,EAErC,GA16BA8lC,EAAA,CAAA/yC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAO8wC,EACR,KAMF/wC,EAAA,CAAAjC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOwtC,EACR,EACD,gBAAAttC,CAAiBzM,GACf5E,MAAMqR,iBAAiBzM,GACvBA,EAAQ0M,MAAM4wC,QAAQjiD,KAAKuR,MAC5B,EACD,kBAAAC,CAAmB7M,GACjB5E,MAAMyR,mBAAmB7M,GACzBA,EAAQ0M,MAAM6wC,WAAWliD,KAAKuR,MAC/B,KAIF4wC,EAAA,CAAAnzC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOkxC,EACR,KAMFC,EAAA,CAAArzC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOoxC,EACR,EACD,gBAAAlxC,CAAiBzM,GACf5E,MAAMqR,iBAAiBzM,GACvBA,EAAQ0M,MAAM4wC,QAAQjiD,KAAKuR,MAC5B,EACD,kBAAAC,CAAmB7M,GACjB5E,MAAMyR,mBAAmB7M,GACzBA,EAAQ0M,MAAM6wC,WAAWliD,KAAKuR,MAC/B,KAIFgxC,EAAA,CAAArzC,EAAAA,SAAS,CACR2C,UAAWowB,GACX3iC,MAAO,KACPi9B,SAAUtmB,EAASusC,SAAAA,UACnB1wC,UAAU,EACV,IAAA7S,GACEe,KAAK6b,YAAc,CACpB,EACD,WAAAgsB,CAAY4a,GACV,GAAkB,OAAdA,EAAoB,CACtB,MAAMC,EAAuB1iD,KAAKuR,MAAM4gC,aAClCA,EAAeuQ,aAAgCxzC,EAAAA,SAAWwzC,EAAqBpjD,MAAQ,KACxE,OAAjB6yC,IACFsQ,EAAYtQ,EAAa1O,SAASgf,GAAW,GAEhD,CACD,OAAOA,CACR,EACD,WAAAE,CAAYtd,GACV,MAAM+B,EAAQpnC,KAAKuR,MAAM61B,MAAM9nC,MACjB,OAAV8nC,GAA2B,OAAT/B,IACpBrlC,KAAKuR,MAAM41B,WAAWC,EAAO/B,EAAMrlC,KAAK6b,QACxC7b,KAAK6b,YAAc,EAEtB,KAOF+mC,EAAA,CAAA1zC,EAAAA,SAAS,CACR2C,UAAWuzB,GACX9lC,MAAO,KACPi9B,SAAUtmB,EAASusC,SAAAA,UACnB1wC,UAAU,EACV,IAAA7S,GACEe,KAAK6b,YAAc,CACpB,EACD,WAAAgsB,CAAYgb,GACV,GAAmB,OAAfA,EAAqB,CACvB,MAAMC,EAAwB9iD,KAAKuR,MAAM8gC,cACnCA,EAAgByQ,aAAiC5zC,EAAAA,SAAW4zC,EAAsBxjD,MAAQ,KAC1E,OAAlB+yC,IACFwQ,EAAaA,EAAW7pB,UAAUqZ,GAAe,GAEpD,CACD,OAAOwQ,CACR,EACD,WAAAF,CAAYvb,GACV,MAAM/B,EAAOrlC,KAAKuR,MAAM8zB,KAAK/lC,MACf,OAAV8nC,GAA2B,OAAT/B,IACpBrlC,KAAKuR,MAAM41B,WAAWC,EAAO/B,EAAMrlC,KAAK6b,QACxC7b,KAAK6b,YAAc,EAEtB,KAyFFknC,EAAA,CAAA7zC,EAAAA,SAAS,CACR2C,UAAWwwB,GACX/iC,MAAO,KACP,WAAAqjD,CAAYxQ,GACV,GAAqB,OAAjBA,IAA0BnyC,KAAKuR,MAAM8zB,KAAK0Y,YAAY9nC,WAASusC,WACjE,OAEF,IAAIC,EAAYziD,KAAKuR,MAAM8zB,KAAKqC,WAChC,GAAI+a,QAA4C,CAC9C,MAAMO,EAAgBhjD,KAAKuR,MAAMwgC,OAAOptC,QACpCq+C,UACFP,EAAYO,EAAc3d,KAAK/lC,MAElC,CACD,GAAImjD,QAA4C,CAC9C,MAAMpd,EAAO8M,EAAa1O,SAASgf,GAAW,GAC9CziD,KAAKuR,MAAM8zB,KAAKrI,SAASqI,EAAMpvB,EAAAA,SAASgnB,UACzC,CACF,KAiBFgmB,EAAA,CAAA/zC,EAAAA,SAAS,CACR2C,UAAWwwB,GACX/iC,MAAO,KACP,WAAAqjD,CAAYtQ,GACV,GAAsB,OAAlBA,IAA2BryC,KAAKuR,MAAM61B,MAAM2W,YAAY9nC,WAASusC,WACnE,OAEF,IAAIK,EAAa7iD,KAAKuR,MAAM61B,MAAMM,WAClC,GAAImb,QAA8C,CAChD,MAAMG,EAAgBhjD,KAAKuR,MAAMwgC,OAAOptC,QACpCq+C,UACFH,EAAaG,EAAc5b,MAAM9nC,MAEpC,CACD,GAAIujD,QAA8C,CAChD,MAAMzb,EAAQyb,EAAW7pB,UAAUqZ,GAAe,GAClDryC,KAAKuR,MAAM61B,MAAMpK,SAASoK,EAAOnxB,EAAAA,SAASgnB,UAC3C,CACF,KA0UFimB,EAAA,CAAAh0C,EAAAA,SAAS,CACR2C,UAAW0/B,GACXjyC,MAAOiyC,GAAWxa,OAClBjlB,UAAU,EACV,eAAIpQ,GACF,OAAOmwC,GAAKwH,YAAcxH,GAAK0H,YAAc1H,GAAKgK,WACnD,EACDvpC,YAAai/B,GAAW5oB,SAjkB1BxrB,EAAAyC,EAAA,KAAAmiD,EAAA,CAAAjkD,KAAA,SAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAI8qC,WAEH,KAAAv9C,GAsBD/C,EAAAyC,EAAA,KAAAuiD,EAAA,CAAArkD,KAAA,SAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAIq3B,SAEH,KAAA9pC,GAyiBD/C,EAAAyC,EAAA,KAAAsjD,EAAA,CAAAplD,KAAA,SAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAIstC,aAEH,KAAA//C,GApjBD/C,EAAS,KAAA,KAAA8T,EAAA,CAAAnT,KAAA,QAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAAxS,QAAAnB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAxS,QAA2Cb,CAAAA,IAAAc,EAAAF,GAwBpD/C,EAAS,KAAA,KAAAklD,EAAA,CAAAvkD,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAAo/B,OAAA/yC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAo/B,OAAuCzyC,CAAAA,IAAA0yC,EAAA9xC,GA4BhD/C,EAAS,KAAA,KAAAolD,EAAA,CAAAzkD,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0yB,KAAArmC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0yB,KAGP/lC,CAAAA,IAAA2yC,EAAA/xC,GA4BF/C,EAAS,KAAA,KAAAylD,EAAA,CAAA9kD,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAy0B,MAAApoC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAy0B,MAGP9nC,CAAAA,IAAA4yC,EAAAhyC,GAwGF/C,EAAS,KAAA,KAAA4lD,EAAA,CAAAjlD,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAw/B,aAAAnzC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAw/B,aAAiD7yC,CAAAA,IAAA8yC,EAAAlyC,GAmC1D/C,EAAS,KAAA,KAAA8lD,EAAA,CAAAnlD,KAAA,QAAAO,KAAA,gBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,kBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0/B,cAAArzC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0/B,cAAkD/yC,CAAAA,IAAAgzC,EAAApyC,GAsrB3CN,EAAAgT,IAAoB,WAClC,IAAIC,EAAS,EACb,OAAO,WACL,MAAMC,IAAOD,EAEb,OADAA,GAAU,EACH,OAASC,CAClB,CACD,CAPmC,GAUXlT,EAAWgC,YAAc/B,YAAU+B,YAEnChC,EAAawJ,cAAcvJ,EAAAA,UAAUuJ,cAErCxJ,EAAYmT,aAAclT,EAAUkT,UAAAA,aAE7CnT,EAAcq5C,eAAc,GAAMp5C,YAAUmT,UAAY,EAExDpT,EAAc47C,eAAc,GAAM37C,EAAAA,UAAUmT,UAAY,EAExDpT,EAAQs2C,SAAc,GAAMr2C,EAAAA,UAAUmT,UAAY,EAElDpT,EAAUq2C,WAAc,GAAMp2C,EAAAA,UAAUmT,UAAY,EAEpDpT,EAAQu3C,SAAc,GAAMt3C,EAAAA,UAAUmT,UAAY,EAElDpT,EAAUs3C,WAAc,GAAMr3C,EAAAA,UAAUmT,UAAY,EAEpDpT,EAAaq4C,cAAc,GAAMp4C,EAAAA,UAAUmT,UAAY,EAEvDpT,EAAc44C,eAAc,GAAM34C,EAAAA,UAAUmT,UAAY,EAExDpT,EAAUm2C,WAAcn2C,EAAKs2C,SACLt2C,EAAKq2C,WAE7Br2C,EAAUo3C,WAAcp3C,EAAKu3C,SACLv3C,EAAKs3C,WAE7Bt3C,EAAYiF,aAAcjF,EAAKq5C,eACLr5C,EAAK47C,eAE/B57C,EAAUqT,WAAcrT,EAAKgC,YACLhC,EAAKwJ,cACLxJ,EAAKmT,aACLnT,EAAKq5C,eACLr5C,EAAK47C,eACL57C,EAAKs2C,SACLt2C,EAAKq2C,WACLr2C,EAAKs3C,WACLt3C,EAAKq4C,cACLr4C,EAAK44C,eAE7B54C,EAAYi5C,aAAc,GAAMh5C,EAAAA,UAAUmT,UAAY,EACtDpT,EAAWy5C,YAAc,GAAMx5C,EAAAA,UAAUmT,UAAY,EACrDpT,EAAW25C,YAAc,GAAM15C,EAAAA,UAAUmT,UAAY,GACrDpT,EAAW41C,YAAc,GAAM31C,EAAAA,UAAUmT,UAAY,GACrDpT,EAAY61C,aAAc,GAAM51C,EAAAA,UAAUmT,UAAY,GACtDpT,EAAY+5C,aAAc,GAAM95C,EAAAA,UAAUmT,UAAY,GAEtDpT,EAAWu1C,YAAcv1C,EAAKi5C,aACLj5C,EAAKy5C,YACLz5C,EAAK25C,YACL35C,EAAK41C,YACL51C,EAAK61C,aACL71C,EAAK+5C,aAE9B/5C,EAAYm5C,aAAc,GAAMl5C,EAAAA,UAAUmT,UAAY,GACtDpT,EAAWi8C,YAAc,GAAMh8C,EAAAA,UAAUmT,UAAY,GACrDpT,EAAWm8C,YAAc,GAAMl8C,EAAAA,UAAUmT,UAAY,GACrDpT,EAAcq8C,eAAc,GAAMp8C,EAAAA,UAAUmT,UAAY,GACxDpT,EAAcu8C,eAAc,GAAMt8C,EAAAA,UAAUmT,UAAY,GAExDpT,EAAWk5C,YAAcl5C,EAAKm5C,aACLn5C,EAAKi8C,YACLj8C,EAAKm8C,YACLn8C,EAAKq8C,eACLr8C,EAAKu8C,eAG9Bv8C,EAAUiC,WAAcjC,EAAKu1C,YACLv1C,EAAKk5C,YAGpBl5C,EAAAoT,UAAoBnT,YAAUmT,UAAY,GAE1CpT,EAAQsT,UAAe,GAAKtT,EAAKoT,WAAa,EAE9CpT,EAAAuT,WAAwBtT,EAAAA,UAAUsT,WAAavT,EAAKy5C,YAAcz5C,EAAK41C,YAAc51C,EAAKi8C,YACnGj8C,EAAWi3C,YAAcj3C,EAAKy5C,YAAcz5C,EAAK41C,YAAc51C,EAAKi8C,YACpEj8C,EAAWm4C,YAAcn4C,EAAKi8C,YACrBj8C,EAAAwT,iBAA8BvT,YAAUuT,iBAAmBxT,EAAKi8C,YAChEj8C,EAAAyT,iBAA8BxT,EAAAA,UAAUwT,iBAAmBzT,EAAKi8C,YAChEj8C,EAAA0T,mBAAgCzT,EAAUuT,UAAAA,iBAAmBxT,EAAKi8C,YAAAA,CAlkE5E,EAAA,GCjGJyC,MAAAA,GAAiGhyC,WAASiH,OAAoD,eAAgB,CACzL,gBAAIxP,GACF,OAAOu6C,EACR,EAED6E,SAAU,KAEV1vC,UAAU,EAEV,YAAAC,CAAaC,GACX,IAAIC,EAAU5T,KAAK4T,QACH,OAAZA,IACFA,EAAU,IAAItG,IACbtN,KAA8B4T,QAAUA,GAE3CA,EAAQnG,IAAIkG,EACb,EAED,YAAAE,CAAaF,GACX,MAAMC,EAAU5T,KAAK4T,QACL,OAAZA,GAGJA,EAAQ9F,OAAO6F,EAChB,EAED,eAAAG,GACE,MAAMF,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EACF,IAAK,MAAMD,KAAUC,EACnBD,EAAOI,SAAS/T,KAGrB,EAED,QAAAojD,CAASC,GAER,EAED,cAAAC,CAAeD,EAASrlD,GAEvB,EAED,YAAAulD,CAAaF,EAASrlD,GAChBgC,KAAKyT,UACP4vC,EAAKlvC,QAAQnU,KAEhB,EAED,aAAAwjD,CAAcH,EAASrlD,GAEtB,EAED,UAAAylD,CAAWJ,GAEV,EAED,cAAAK,CAAeL,GAEd,EAED,YAAAM,CAAaN,GACPrjD,KAAKyT,UACP4vC,EAAK7uC,UAAUxU,KAElB,EAED,aAAA4jD,CAAcP,GAEb,EAED,cAAIQ,GACF,MAAMtyC,EAAQvR,KAAKuR,MACnB,OAAOA,aAAiBsgC,GAAOtgC,EAAQ,IACxC,EAED,WAAAoD,CAAYjU,EAAcY,EAAUtD,EAAqBD,GACvD2C,EAAOiU,YAAYrT,EAAOtD,EAAQD,EACnC,EAED,QAAAygD,CAAS6E,EAAYrlD,GAEpB,EAED,UAAAygD,CAAW4E,GAEV,EAEDS,WAAWT,GACF,KAGT,UAAAU,GACE,IAAIV,EACJ,MAAMF,EAAWnjD,KAAKmjD,SAItB,GAHiB,OAAbA,IACFE,EAAOF,EAAS3zC,UAEd6zC,QAAkC,CACpC,IAAIvuC,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOuuC,CACR,EAED,QAAAz6C,CAAStJ,GACP,MAAM6jD,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACKA,EAASv6C,SAAStJ,GAEpBuyC,GAAKjpC,SAAStJ,EACtB,GAEH,CACE,SAAA0V,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEqC,QAAU,KAC1C3P,CACR,ICtEU+/C,GAAuF1F,GAAa/qC,OAA0C,UAAW,CACpK,gBAAIxP,GACF,OAAOigD,EACR,EAED,aAAIC,GACF,MAAM9uC,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiB6uC,GAAU7uC,EAAMkuC,KAAO,IAChD,EAED,YAAAa,GACE,MAAMD,EAAYjkD,KAAKikD,UACvB,GAAIA,QAA4C,CAC9C,IAAInvC,EAAUmvC,EAAY,IAC1B,MAAM5lD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,aACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOmvC,CACR,EAED,GAAAllD,GACE,OAAOiB,KAAKqjD,IACb,EAED,GAAArkD,CAAIqkD,GAMF,OALIA,aAAgB/2C,EAAAA,SAClBtM,KAAKqV,UAAUguC,GAEfrjD,KAAKmkD,QAAQd,GAERrjD,KAAKuR,KACb,EAED,YAAAgE,CAAa8tC,GAMX,OALIA,aAAgB/2C,EAAAA,SAClBtM,KAAKqV,UAAUguC,GAEfrjD,KAAKmkD,QAAQd,GAERrjD,KAAKuR,KACb,EAED6yC,aAAc,EAEd,OAAAC,GACE,MAAMhB,EAAOrjD,KAAKqjD,KAClB,GAAa,OAATA,EAAe,CACjB,IAAIvuC,EAAUuuC,EAAO,IACrB,MAAMhlD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOuuC,CACR,EAED,OAAAc,CAAQG,EAAiCtmD,EAAsBD,GAC7C,OAAZumD,IACFA,EAAUtkD,KAAK4I,SAAS07C,IAE1B,IAOI5jD,EAPA6jD,EAAUvkD,KAAKqjD,KACnB,OAAIkB,IAAYD,GACdtkD,KAAK4V,aAAY,GACV2uC,aACEvmD,IACTA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAK6jD,WAAuB,OAAXnjD,KAC3B,OAAZ6jD,GAAoBA,EAAQ7jD,SAAWA,IAC1B,OAAX1C,IACFA,EAASumD,EAAQ99C,aAEnB89C,EAAQz7C,UAEM,OAAZw7C,aACEvmD,IACFA,EAAMiC,KAAKokD,SAEbpkD,KAAK2U,YAAYjU,EAAQ4jD,EAAStmD,EAAQD,IAE5CwmD,EAAUvkD,KAAKqjD,KACXkB,IAAYD,KAIF,OAAZC,IACFvkD,KAAK61C,mBACJ71C,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEL,OAAZD,IACDtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,IAE9BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAnBMywC,EAqBZ,EAED,UAAAC,CAAWF,EAAkCtmD,GAC3C,MAAMumD,EAAUvkD,KAAKqjD,KAWrB,gBAHIrlD,IACFA,EAAS,MAEPumD,KATFD,EADEA,QACQtkD,KAAK4I,SAAS07C,GACH,OAAZC,EACCvkD,KAAK+jD,aAELQ,KAOW,OAAZA,IACTvkD,KAAK61C,mBACJ71C,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEpBvkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAfIwwC,CAiBV,EAED,UAAAG,GACE,MAAMF,EAAUvkD,KAAKqjD,KACrB,OAAgB,OAAZkB,EACK,MAETvkD,KAAK61C,mBACJ71C,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnBvkD,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEywC,EACR,EAED,UAAAG,CAAWhkD,EAAsB4jD,EAA2BtmD,EAAsBD,GAChF,IAAIwmD,EAAUvkD,KAAKqjD,KAWnB,OATEiB,EADEA,QACQtkD,KAAK4I,SAAS07C,GACH,OAAZC,EACCvkD,KAAK+jD,aAELQ,WAER7jD,IACFA,EAAS,MAENV,KAAKuL,OAASg5C,IAAYD,GAA8B,OAAnBA,EAAQ5jD,QAA8B,OAAXA,QAAmB3C,IAAAA,GAGzE,OAAX2C,IACFA,EAASV,KAAK6jD,qBAEZ7lD,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKokD,SAEE,OAAX1jD,GAAoB4jD,EAAQ5jD,SAAWA,GAAU4jD,EAAQvmD,MAAQA,GACnEiC,KAAK2U,YAAYjU,EAAQ4jD,EAAStmD,EAAQD,GAE5CwmD,EAAUvkD,KAAKqjD,KACXkB,IAAYD,IAEO,OAAZC,IACTvkD,KAAK61C,mBACJ71C,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACfvkD,KAAKuL,OAAoB,OAAX7K,GAAmB6jD,EAAQ7jD,SAAWA,GACtD6jD,EAAQz7C,UAGX9I,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAlBIwwC,GAhBAA,CAoCV,EAED,UAAApC,GACE,MAAMmB,EAAOrjD,KAAKqjD,KAClB,OAAa,OAATA,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,UAAAsB,GACE,MAAMtB,EAAOrjD,KAAKykD,aAClB,OAAa,OAATpB,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,QAAA7E,CAAS6E,EAAYrlD,GACnB,IAAKgC,KAAKuL,OAAuB,OAAdvL,KAAKqjD,KACtB,OAEF,MAAMiB,EAAUtkD,KAAK8jD,WAAWT,GAChB,OAAZiB,IAGHtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,UAAA2qC,CAAW4E,GACT,IAAKrjD,KAAKuL,MACR,OAEF,MAAMg5C,EAAUvkD,KAAK8jD,WAAWT,GAChB,OAAZkB,GAAoBvkD,KAAKqjD,OAASkB,IAGtCvkD,KAAK61C,mBACJ71C,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnBvkD,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,UAAAgwC,CAAWT,GACT,MAAMtlD,EAAMiC,KAAKokD,QACjB,YAAiB,IAAbrmD,GAAkBA,IAAQslD,EAAKtlD,IAC1BslD,EAEF,IACR,EAED,QAAAr2C,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiB6uC,IACnBhkD,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAKmkD,QAAQhvC,EAAMkuC,OAGrBrjD,KAAKgW,YAAW,EAEnB,EAED,UAAA+zB,CAAW6U,EAA+BC,EAA8BC,EAAgCnW,GACtG,IAAK6B,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBq8C,EAAMxV,uBAAqBxgC,SAASg2C,GAEpC,MAAMG,OAAaD,KADnBA,EAAM1V,uBAAqBxgC,SAASk2C,IACAF,EAAIpd,MAAMsd,GAAOF,EAEnDjW,WADEA,EACSC,EAAmBoW,mBAAAA,SAEnBpW,qBAAmBhgC,SAAS+/B,GAEzC,MAAMoB,EAAa,IAAIkV,EAAAA,WAAWj/C,KAAKuR,MAAOwtC,EAAYF,EAAUlW,GAEpE,OADA3oC,KAAKk/C,cAAcnV,GACZA,CACR,EAED,aAAAoV,CAAcpV,GACZ,MAAMwI,EAAcvyC,KAAKuyC,YACzB,OAAuB,OAAhBA,GAAwBA,EAAYhlC,IAAIw8B,EAChD,EAED,aAAAmV,CAAcnV,GACZ,IAAIwI,EAAcvyC,KAAKuyC,YACvB,GAAoB,OAAhBA,EACFA,EAAc,IAAIjlC,IACjBtN,KAA8BuyC,YAAcA,OACxC,GAAIA,EAAYhlC,IAAIw8B,GACzB,OAEFwI,EAAY9kC,IAAIs8B,GAChB/pC,KAAKo/C,mBAAmBrV,EACzB,EAED,gBAAAsV,CAAiBtV,GACf,MAAMwI,EAAcvyC,KAAKuyC,YACL,OAAhBA,GAAyBA,EAAYhlC,IAAIw8B,KAG7C/pC,KAAKs/C,qBAAqBvV,GAC1BwI,EAAYzkC,OAAOi8B,GACpB,EAED,kBAAAqV,CAAmBrV,GACjB,IAAK6a,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,MAAM,IAAIhP,MAAM,yBAElBvC,KAAKuR,MAAM6tC,mBAAmBrV,EAC/B,EAED,oBAAAuV,CAAqBvV,GACnB,IAAK6a,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,MAAM,IAAIhP,MAAM,yBAElBvC,KAAKuR,MAAM+tC,qBAAqBvV,EACjC,EAED,kBAAAyV,CAAmBnhD,EAAciB,EAAgBqpC,YAC3CrpC,IACFA,EAAQ,GAGRqpC,WADEA,EACSC,qBAAmBhgC,SAAS+/B,GAE5BC,EAAmBC,mBAAAA,OAEhC,MAAM/sB,EAAW2jC,EAAAA,mBAAmBjwC,OAAOxP,MAW3C,OAVA7B,OAAOgB,eAAe2c,EAAU,OAAQ,CACtCxc,MAAOjB,EACPsb,YAAY,EACZC,cAAc,aAEZta,GACFwc,EAAS9c,IAAIM,GAEfwc,EAASgtB,YAAYH,GACrB7sB,EAASJ,QACFI,CACR,EAED,qBAAA4jC,CAAsBF,GACpB,MAAMhN,EAAsBxyC,KAAKwyC,oBACjC,OAA+B,OAAxBA,GAAgCA,EAAoBjlC,IAAIiyC,EAChE,EAED,qBAAA/U,CAAsB+U,GACpB,IAAIhN,EAAsBxyC,KAAKwyC,oBAC/B,GAA4B,OAAxBA,EACFA,EAAsB,IAAIllC,IACzBtN,KAA8BwyC,oBAAsBA,OAChD,GAAIA,EAAoBjlC,IAAIiyC,GACjC,OAEFhN,EAAoB/kC,IAAI+xC,GACxBx/C,KAAK2/C,2BAA2BH,EACjC,EAED,wBAAA3U,CAAyB2U,GACvB,MAAMhN,EAAsBxyC,KAAKwyC,oBACL,OAAxBA,GAAiCA,EAAoBjlC,IAAIiyC,KAG7Dx/C,KAAK4/C,6BAA6BJ,GAClChN,EAAoB1kC,OAAO0xC,GAC5B,EAED,0BAAAG,CAA2BH,GACzB,IAAKoF,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,MAAM,IAAIhP,MAAM,yBAElBvC,KAAKuR,MAAMouC,2BAA2BH,EACvC,EAED,4BAAAI,CAA6BJ,GAC3B,IAAKoF,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,MAAM,IAAIhP,MAAM,yBAElBvC,KAAKuR,MAAMquC,6BAA6BJ,EACzC,EAED,qBAAA1U,CAAsB0U,EAAwCtY,GAC5D,IAAK0d,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,MAAM,IAAIhP,MAAM,yBAElBvC,KAAKuR,MAAMu5B,sBAAsB0U,EAAoBtY,EACtD,EAED,cAAAwO,GACE,IAAKkP,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,OAEF,MAAMihC,EAAsBxyC,KAAKwyC,oBACjC,GAA4B,OAAxBA,EACF,IAAK,MAAMgN,KAAsBhN,EAC/BxyC,KAAKuR,MAAMouC,2BAA2BH,GAG1C,MAAMjN,EAAcvyC,KAAKuyC,YACzB,GAAoB,OAAhBA,EACF,IAAK,MAAMxI,KAAcwI,EACvBvyC,KAAKuR,MAAM6tC,mBAAmBrV,EAGnC,EAED,gBAAA8L,GACE,IAAK+O,EAAkB3nC,kBAAAA,OAAOC,aAAald,KAAKuR,OAC9C,OAEF,MAAMghC,EAAcvyC,KAAKuyC,YACzB,GAAoB,OAAhBA,EACF,IAAK,MAAMxI,KAAcwI,EACvBvyC,KAAKuR,MAAM+tC,qBAAqBvV,GAGpC,MAAMyI,EAAsBxyC,KAAKwyC,oBACjC,GAA4B,OAAxBA,EACF,IAAK,MAAMgN,KAAsBhN,EAC/BxyC,KAAKuR,MAAMquC,6BAA6BJ,EAG7C,EAED,OAAA98C,GACE3C,MAAM2C,UACN1C,KAAK01C,gBACN,EAED,SAAAhyC,GACE1D,KAAK61C,mBACL91C,MAAM2D,WACP,GAEH,CACE,OAAAmhD,CAA8CtzC,EAAUzN,GACtD,MAAMoI,EAAYC,EAAAA,yBAAyBpN,IAAIwS,GACzCuzC,EAAwB,OAAd54C,EAAqBA,EAAUuK,YAAYlF,EAAOzN,GAAgB,KAClF,OAAOghD,aAAmBd,GAAUc,EAAQzB,KAAO,IACpD,EAED,SAAAruC,CAAU/Q,EAAoBsN,GAK5B,OAJAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEghC,YAAc,KACpDtuC,EAAsCuuC,oBAAsB,KAC5DvuC,EAAsCo/C,KAAO,KACvCp/C,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElC8mD,EAAoB5mD,OAAOC,yBAAyBwY,EAAmB,gBACzEmuC,IAAAA,GAAgC,UAAWA,KACb,IAA5BA,EAAkBzlD,OACpBylD,EAAkBzlD,MAAQqX,EAActY,KACxCF,OAAOgB,eAAeyX,EAAmB,UAAWmuC,KACf,IAA5BA,EAAkBzlD,QAC3BylD,EAAkBzlD,WAAa,EAC/BnB,OAAOgB,eAAeyX,EAAmB,UAAWmuC,IAGzD,IC9eUC,GAAuF1G,GAAa/qC,OAA0C,UAAW,CACpK,gBAAIxP,GACF,OAAOihD,EACR,EAED,OAAAZ,CAAQf,GAEP,EAED,aAAA4B,CAAcX,EAAYtmD,GACxB,MAAMknD,EAAQllD,KAAKklD,MACJ,OAAXlnD,GAA0D,IAAtCgC,KAAK2B,MAAQqjD,GAAQ/tC,aAC1CjX,KAA8BklD,MAAQhuC,EAAQC,QAAAA,SAAS+tC,EAAOZ,EAAQ1xC,IAAK0xC,EAAStmD,GAErFknD,EAAMZ,EAAQ1xC,KAAO0xC,CAExB,EAED,aAAAa,CAAcZ,UACEvkD,KAAKklD,MACNX,EAAQ3xC,IACtB,EAED,OAAAwyC,CAAQ/B,GACN,YAAqC,IAA9BrjD,KAAKklD,MAAM7B,EAAKzwC,IACxB,EAED,OAAAqvC,CAAQqC,EAA2BtmD,EAAsBD,GASvD,IAAI2C,EAgBJ,OAvBE4jD,EADEA,QACQtkD,KAAK4I,SAAS07C,GAEdtkD,KAAK+jD,sBAEb/lD,IACFA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAK6jD,WAAuB,OAAXnjD,KAC5B,OAAX1C,IAEAA,EADEsmD,EAAQ5jD,SAAWA,EACZ4jD,EAAQ79C,YAERzG,KAAKsX,eAAe5W,EAAQ4jD,aAGrCvmD,IACFA,EAAMiC,KAAKokD,QAAQE,IAEjBA,EAAQ5jD,SAAWA,GAAU4jD,EAAQ79C,cAAgBzI,GAAUsmD,EAAQvmD,MAAQA,GACjFiC,KAAK2U,YAAYjU,EAAQ4jD,EAAStmD,EAAQD,SAGvB6U,IAAnB5S,KAAKklD,MAAMZ,EAAQ1xC,OAGvB5S,KAAKilD,cAAcX,EAAStmD,GAC3BgC,KAA8BqlD,WAAa,EAC5CrlD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIwwC,CAWV,EAED,QAAAgB,CAASC,EAAsDvnD,GAC7D,IAAK,MAAMwnD,KAAUD,EACnBvlD,KAAKiiD,QAAQsD,EAASC,GAAUxnD,EAEnC,EAED,QAAAynD,CAASF,EAAsDvnD,GAC7D,MAAMuN,EAAQvL,KAAKuL,MACb7K,EAAS6K,EAAQvL,KAAK6jD,WAAa,KACnCqB,EAAQllD,KAAKklD,MACnB,IAAK,MAAMM,KAAUN,EACnB,YAAIK,EAASC,GAAoB,CAC/B,MAAMjB,EAAUvkD,KAAKykD,WAAWS,EAAMM,IACtB,OAAZjB,GAAoBh5C,GAAoB,OAAX7K,GAAmB6jD,EAAQ7jD,SAAWA,GACrE6jD,EAAQz7C,QAEX,CAEH,GAA2C,IAAtC9I,KAAK2B,MAAQqjD,GAAQ/tC,aAAoB,CAC5C,MAAMyuC,EAAe,IAAI7tC,MACzB,IAAK,MAAM2tC,KAAUD,EACnBG,EAAa7mD,KAAK0mD,EAASC,IAE7B,IAAK,IAAIjnD,EAAI,EAAGwZ,EAAI2tC,EAAalnD,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CACtD,MAAM+lD,EAAUoB,EAAannD,GAC7B,QAAkBqU,IAAdsyC,EAAMZ,EAAQ1xC,KAAiB,CACjC,MAAM+yC,EAAapnD,EAAIwZ,EAAI,EAAI2tC,EAAannD,EAAI,GAAKP,EACrDgC,KAAKiiD,QAAQqC,EAASqB,EACvB,CACF,CACF,MACC,IAAK,MAAMH,KAAUD,WACfL,EAAMM,IACRxlD,KAAKiiD,QAAQsD,EAASC,GAAUxnD,EAIvC,EAED,UAAAwmD,CAAWF,EAAkCtmD,GAM3C,OAJEsmD,EADEA,QACQtkD,KAAK4I,SAAS07C,GAEdtkD,KAAK+jD,kBAEMnxC,IAAnB5S,KAAKklD,MAAMZ,EAAQ1xC,gBAEZ5U,IACTA,EAAS,MAEXgC,KAAKilD,cAAcX,EAAStmD,GAC3BgC,KAA8BqlD,WAAa,EAC5CrlD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAXIwwC,CAaV,EAED,WAAAsB,CAAYL,EAAsDvnD,GAChE,IAAK,MAAMwnD,KAAUD,EACnBvlD,KAAKwkD,WAAWe,EAASC,GAAUxnD,EAEtC,EAED,UAAAymD,CAAWF,GACT,YAAuB3xC,IAAnB5S,KAAKklD,MAAMX,EAAQ3xC,KACd,MAER5S,KAA8BqlD,WAAa,EAC5CrlD,KAAKmlD,cAAcZ,GACnBvkD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnBvkD,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEywC,EACR,EAED,WAAAsB,CAAYX,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAKykD,WAAWS,EAAMM,GAEzB,EAED,UAAAd,CAAWhkD,EAAsB4jD,EAA2BtmD,EAAsBD,GAShF,OAPEumD,EADEA,QACQtkD,KAAK4I,SAAS07C,GAEdtkD,KAAK+jD,sBAEbrjD,IACFA,EAAS,MAENV,KAAKuL,YAA4BqH,IAAnB5S,KAAKklD,MAAMZ,EAAQ1xC,MAAsC,OAAnB0xC,EAAQ5jD,QAA8B,OAAXA,YAAmB3C,GAGxF,OAAX2C,IACFA,EAASV,KAAK6jD,qBAEZ7lD,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKokD,QAAQE,IAEN,OAAX5jD,GAAoB4jD,EAAQ5jD,SAAWA,GAAU4jD,EAAQvmD,MAAQA,IACpD,OAAXC,IACFA,EAASgC,KAAKsX,eAAe5W,EAAQ4jD,IAEvCtkD,KAAK2U,YAAYjU,EAAQ4jD,EAAStmD,EAAQD,SAErB6U,IAAnB5S,KAAKklD,MAAMZ,EAAQ1xC,OAGvB5S,KAAKilD,cAAcX,EAAStmD,GAC3BgC,KAA8BqlD,WAAa,EAC5CrlD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIwwC,GAlBAA,CA6BV,EAED,WAAAwB,CAAYplD,EAAqB6kD,EAAsDvnD,GACrF,IAAK,MAAMwnD,KAAUD,EACnBvlD,KAAK0kD,WAAWhkD,EAAQ6kD,EAASC,GAAUxnD,EAE9C,EAED,UAAAkkD,CAAWmB,GACT,OAAKrjD,KAAKolD,QAAQ/B,IAGlBA,EAAKv6C,SACEu6C,GAHE,IAIV,EAED,WAAA0C,CAAYb,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAKkiD,WAAWgD,EAAMM,GAEzB,EAED,UAAAb,CAAWtB,GACT,MAAMkB,EAAUvkD,KAAKykD,WAAWpB,GAChC,OAAgB,OAAZkB,EACK,MAETA,EAAQz7C,SACDy7C,EACR,EAED,WAAAyB,CAAYd,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAK2kD,WAAWO,EAAMM,GAEzB,EAED,YAAAS,CAAa5C,EAASrlD,GACpB,QAAkC,IAA9BgC,KAAKklD,MAAM7B,EAAKzwC,WAAoC,IAAhB5U,GAA2D,IAArCgC,KAAK2B,MAAQqjD,GAAQzsC,YACjF,OAEF,MAAM7X,EAAS2iD,EAAK3iD,OACL,OAAXA,aAEO1C,IACTA,EAASgC,KAAKsX,eAAe5W,EAAQ2iD,IAEvC3iD,EAAO8X,cAAc6qC,EAAMrlD,GAC5B,EAED,QAAAwgD,CAAS6E,EAAYrlD,GACnB,IAAKgC,KAAKuL,MACR,OAEF,MAAM+4C,EAAUtkD,KAAK8jD,WAAWT,GAChB,OAAZiB,YAAoBtkD,KAAKklD,MAAMZ,EAAQ1xC,OAG3C5S,KAAKilD,cAAcX,EAAStmD,GAC3BgC,KAA8BqlD,WAAa,EAC5CrlD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC5BgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,UAAA2qC,CAAW4E,GACT,IAAKrjD,KAAKuL,MACR,OAEF,MAAMg5C,EAAUvkD,KAAK8jD,WAAWT,GAChB,OAAZkB,YAAoBvkD,KAAKklD,MAAMX,EAAQ3xC,OAG1C5S,KAA8BqlD,WAAa,EAC5CrlD,KAAKmlD,cAAcZ,GACnBvkD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnBvkD,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,UAAAgwC,CAAWT,GACT,MAA6B,mBAAlBrjD,KAAKmjD,UAA2BE,aAAgBrjD,KAAKmjD,SACvDE,EAEF,IACR,EAED,QAAAr2C,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiB6vC,IACnBhlD,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAKylD,SAAStwC,EAAM+vC,QAGtBllD,KAAKgW,YAAW,EAEnB,EAED,WAAI2C,GACF,OAA8C,IAAtC3Y,KAAK2B,MAAQqjD,GAAQ/tC,YAC9B,EAED,KAAA2B,CAAMD,GASJ,gBARIA,IACFA,GAAU,GAERA,EACF3Y,KAAKyC,SAASzC,KAAK2B,MAAQqjD,GAAQ/tC,aAEnCjX,KAAKyC,SAASzC,KAAK2B,OAASqjD,GAAQ/tC,aAE/BjX,IACR,EAED,UAAI6Y,GACF,OAA6C,IAArC7Y,KAAK2B,MAAQqjD,GAAQzsC,WAC9B,EAED,IAAA9N,CAAKoO,GAIH,YAHIA,IACFA,GAAS,GAEPA,EAAQ,CACV,MAAMnY,EAASV,KAAK6jD,WACpB7jD,KAAK8Y,SAASpY,GACdV,KAAKyC,SAASzC,KAAK2B,MAAQqjD,GAAQzsC,YACnCvY,KAAK+Y,OAAOrY,GACZV,KAAKgZ,QAAQtY,EACd,MACCV,KAAKyC,SAASzC,KAAK2B,OAASqjD,GAAQzsC,YAEtC,OAAOvY,IACR,EAED,QAAA8Y,CAASpY,GAER,EAED,MAAAqY,CAAOrY,GACU,OAAXA,GACFV,KAAKiZ,aAAavY,EAErB,EAED,OAAAsY,CAAQtY,GAEP,EAED,YAAAuY,CAAavY,EAAc6J,GACzB7J,EAAOuY,aAAajZ,KAAKkZ,gBAAgB3S,KAAKvG,MAC/C,EAED,cAAAsX,CAAe5W,EAAcY,GAC3B,OAA0C,IAArCtB,KAAK2B,MAAQqjD,GAAQzsC,YACjB7X,EAAO4W,eAAehW,EAAOtB,KAAKmZ,mBAAmB5S,KAAKvG,OAE5D,IACR,EAED,eAAAkZ,CAAgBE,EAASC,GACvB,MAAM6rC,EAAQllD,KAAKklD,MACb5rC,EAAI4rC,EAAM9rC,EAAExG,KACZ2G,EAAI2rC,EAAM7rC,EAAEzG,KAClB,YAAI0G,IAAAA,QAAgBC,IAAAA,EACXvZ,KAAKwZ,QAAQF,EAAGC,QAEP,IAAXD,EAAe,OAAIC,IAAAA,GAAgB,EAAI,CAC/C,EAED,kBAAAJ,CAAmBC,EAAMC,GACvB,MACME,EADQvZ,KAAKklD,MACH7rC,EAAEzG,KAClB,gBAAI2G,EACKvZ,KAAKwZ,QAAQJ,EAAGG,QAElBA,IAAAA,GAAgB,EAAI,CAC5B,EAEDC,QAAAA,CAAQJ,EAAMC,IACLD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE2zC,MAAQ,GAC9CjhD,EAAsCohD,UAAY,EAC5CphD,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAExC,IAAIwb,EAAY7C,EAAkB6C,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,aACtDA,EAAkB+B,QACpBc,GAAaurC,GAAQ/tC,YAErBwC,IAAcurC,GAAQ/tC,mBAEhBL,EAAkD+B,SAExDxa,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,YACtDA,EAAkBiC,OACpBY,GAAaurC,GAAQzsC,WAErBkB,IAAcurC,GAAQzsC,kBAEhB3B,EAAkDiC,QAE5D1a,OAAOgB,eAAeyX,EAAmB,YAAa,CACpDtX,MAAOma,EACPE,YAAY,EACZC,cAAc,GAEjB,EAED3C,YAAa,GAAMqnC,GAAatrC,UAAY,EAC5CuF,WAAY,GAAM+lC,GAAatrC,UAAY,EAE3CA,UAAWsrC,GAAatrC,UAAY,EACpCE,UAAW,GAAMorC,GAAatrC,UAAY,GAAM,IC3iBrCkzC,MAAAA,GAmCX,WAAApmD,CAAYqmD,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,GAChC3M,KAAKmmD,QAAUA,EACfnmD,KAAKomD,UAAYA,EACjBpmD,KAAKqmD,UAAYA,EAEjBrmD,KAAKhC,OAAS,KACdgC,KAAKsmD,OAAS,EACdtmD,KAAKumD,QAAU,EACfvmD,KAAKwmD,QAAS,EACdxmD,KAAKymD,SAAU,EACfzmD,KAAK0mD,SAAU,EACf1mD,KAAK2mD,UAAW,EAEhB3mD,KAAK4mD,MAAQ,EACb5mD,KAAKwmB,OAAS,EACdxmB,KAAK6mD,MAAQ,EACb7mD,KAAK8mD,MAAQ,EACb9mD,KAAK+mD,MAAQ,EACb/mD,KAAKgnD,SAAW,EAChBhnD,KAAKinD,mBAAqB,EAE1BjnD,KAAKknD,GAAK5tC,EACVtZ,KAAK+zB,GAAKxa,EACVvZ,KAAKyhB,GAAK9U,EACV3M,KAAKmnD,GAAK,EACVnnD,KAAKonD,GAAK,EACVpnD,KAAKqnD,GAAK,EACVrnD,KAAKsZ,EAAIA,EACTtZ,KAAKuZ,EAAIA,EACTvZ,KAAK2M,EAAIA,EAET3M,KAAKsnD,YAAc,EAEnBtnD,KAAKunD,kBAAmB,CACzB,CAED,cAAAC,GACExnD,KAAKunD,kBAAmB,CACzB,CAGD,uBAAAE,CAAwBrB,GACtB,MAAkB,UAAdA,GAAuC,UAAdA,GAAuC,QAAdA,EAC7CA,EAEF,SACR,EAkHU7H,MAAAA,GAAiEjyC,WAASiH,OAAuC,UAAW,CACvI,gBAAIxP,GACF,OAAOw6C,EACR,EAEDmJ,YAAY,EAEZj0C,UAAU,EAEV2wC,aAAc,EAEd,OAAAC,GACE,MAAMhB,EAAOrjD,KAAKqjD,KAClB,GAAa,OAATA,EAAe,CACjB,IAAIvuC,EAAUuuC,EAAO,IACrB,MAAMhlD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOuuC,CACR,EAED,OAAAc,CAAQG,GACN,MAAMC,EAAUvkD,KAAKqjD,KACrB,OAAIkB,IAAYD,IAEO,OAAZC,IACRvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEL,OAAZD,IACDtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,GACpBtkD,KAAKujD,aAAae,GAClBtkD,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,KAbZC,CAgBV,EAED,QAAAnB,CAASC,GAER,EAED,cAAAC,CAAeD,GAEd,EAED,YAAAE,CAAaF,GACiC,IAAvCrjD,KAAK2B,MAAQ2K,EAAAA,SAAS1K,eAG3B5B,KAAK2nD,aAAatE,GACdrjD,KAAKyT,UACP4vC,EAAKlvC,QAAQnU,MAEhB,EAED,aAAAwjD,CAAcH,GAEb,EAED,UAAAI,CAAWJ,GAEV,EAED,cAAAK,CAAeL,GAEd,EAED,YAAAM,CAAaN,GACXrjD,KAAK4nD,cACuC,IAAvC5nD,KAAK2B,MAAQ2K,EAAAA,SAAS1K,eAGvB5B,KAAKyT,UACP4vC,EAAK7uC,UAAUxU,MAEjBA,KAAK6nD,aAAaxE,GACnB,EAED,aAAAO,CAAcP,GAEb,EAED,YAAAsE,CAAatE,GAEZ,EAED,YAAAwE,CAAaxE,GAEZ,EAED,QAAAyE,CAAS3B,GACgB,iBAAZA,IACTA,EAAU,GAAKA,GAEjB,MAAMt8B,EAAQ7pB,KAAK+nD,OAAO5B,GAC1B,YAAOt8B,IAAAA,EAAmBA,EAAQ,IACnC,EAEDm+B,YAAAA,CAAY7B,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,IACzB,IAAIu5C,GAAaC,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAG/D,gBAAAs7C,CAAiB9B,EAA0BC,EAA6BC,EACvD/sC,EAAWC,EAAW5M,GACd,iBAAZw5C,IACTA,EAAU,GAAKA,GAEjB,MAAM4B,EAAS/nD,KAAK+nD,OACpB,IAAIl+B,EAAQk+B,EAAO5B,GAMnB,gBALIt8B,IACFA,EAAQ7pB,KAAKgoD,YAAY7B,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAC9Do7C,EAAO5B,GAAWt8B,EACjB7pB,KAA8BkoD,YAAc,GAExCr+B,CACR,EAED,UAAAs+B,CAAWt+B,UACM7pB,KAAK+nD,OACNl+B,EAAMs8B,SACnBnmD,KAA8BkoD,YAAc,CAC9C,EAED,WAAAN,GACG5nD,KAA8B+nD,OAAS,GACvC/nD,KAA8BkoD,WAAa,CAC7C,EAED,UAAAE,CAAWv+B,GACT7pB,KAAKmoD,WAAWt+B,EACjB,EAED,WAAAw+B,GACE,MAAMN,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACrBnmD,KAAKooD,WAAWv+B,EACjB,CACF,EAED,QAAA20B,CAAS6E,GACP,IAAKrjD,KAAKuL,OAAuB,OAAdvL,KAAKqjD,KACtB,OAEF,MAAMiB,EAAUtkD,KAAK8jD,WAAWT,GAChB,OAAZiB,GAGJtkD,KAAKmkD,QAAQG,EACd,EAED,UAAA7F,CAAW4E,GACJrjD,KAAKuL,OAASvL,KAAKqjD,OAASA,GAGjCrjD,KAAKmkD,QAAQ,KACd,EAED,UAAAL,CAAWT,GACT,YAA0B,IAAtBrjD,KAAKokD,SAAsBpkD,KAAKokD,UAAYf,EAAKtlD,IAC5CslD,EAEF,IACR,EAED,eAAAzN,CAAgByN,GACdrjD,KAAK4nD,aACN,EAED,OAAAllD,GACE3C,MAAM2C,UACN,MAAM2gD,EAAOrjD,KAAKqjD,KACL,OAATA,IACFrjD,KAAK2nD,aAAatE,GACdrjD,KAAKyT,UACP4vC,EAAKlvC,QAAQnU,MAGlB,EAED,SAAA0D,GACE3D,MAAM2D,YACN1D,KAAK4nD,cACL,MAAMvE,EAAOrjD,KAAKqjD,KACL,OAATA,IACErjD,KAAKyT,UACP4vC,EAAK7uC,UAAUxU,MAEjBA,KAAK6nD,aAAaxE,GAErB,GAEH,CACE,MAAA7zC,CAAO+B,GACL,MAAM+2C,EAAUvoD,MAAMyP,OAAO+B,GAI7B,OAHqB,OAAjB+2C,EAAQjF,OAAwC,IAAvBiF,EAAQZ,YAAwBn2C,aAA6BsgC,IACxFyW,EAAQnE,QAAQ5yC,GAEX+2C,CACR,EAED,SAAAtzC,CAAUszC,EAAmB/2C,GAK3B,OAJA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IACE8xC,KAAO,KAC3CiF,EAAoCP,OAAS,GAC7CO,EAAoCJ,WAAa,EAC3CI,CACR,EAED,MAAA5xC,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElC8mD,EAAoB5mD,OAAOC,yBAAyBwY,EAAmB,gBACzEmuC,IAAAA,GAAgC,UAAWA,KACb,IAA5BA,EAAkBzlD,OACpBylD,EAAkBzlD,MAAQqX,EAActY,KACxCF,OAAOgB,eAAeyX,EAAmB,UAAWmuC,KACf,IAA5BA,EAAkBzlD,QAC3BylD,EAAkBzlD,WAAa,EAC/BnB,OAAOgB,eAAeyX,EAAmB,UAAWmuC,IAGzD,IC7aG,MAAOwD,WAA6BrC,GAMxC,WAAApmD,CAAYqmD,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,GAChC5M,MAAMomD,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAC3C3M,KAAKyuC,UAAW,EAChBzuC,KAAKwoD,UAAW,EAChBxoD,KAAKyoD,UAAY,EACjBzoD,KAAK0oD,UAAY,GAClB,CAED,SAAAC,GACE,MAAMxB,EAAKnnD,KAAKsZ,EAAItZ,KAAKknD,GACnBE,EAAKpnD,KAAKuZ,EAAIvZ,KAAK+zB,GACnBszB,EAAKrnD,KAAK2M,EAAI3M,KAAKyhB,GACzB,MAA0B,UAAnBzhB,KAAKomD,WAAyBiB,EAAK,KACnCF,EAAKA,EAAKC,EAAKA,EAAK,GAC5B,CAED,YAAAwB,CAAajrD,GACY,IAAnBqC,KAAK0oD,YAGT1oD,KAAK6oD,iBACL7oD,KAAKyoD,UAAYlnC,WAAW5jB,EAAGqC,KAAK0oD,WACrC,CAED,cAAAG,GACyB,IAAnB7oD,KAAKyoD,YAGTjnC,aAAaxhB,KAAKyoD,WAClBzoD,KAAKyoD,UAAY,EAClB,EAoNUK,MAAAA,GAAiFvK,GAAQhrC,OAAuD,kBAAmB,CAC9K,YAAAo0C,CAAatE,GACXtjD,MAAM4nD,aAAatE,GACnBrjD,KAAK+oD,kBAAkB1F,EACxB,EAED,YAAAwE,CAAaxE,GACXrjD,KAAKgpD,kBAAkB3F,GACvBrjD,KAAKipD,kBAAkB5F,GACvBtjD,MAAM8nD,aAAaxE,EACpB,EAED,iBAAA0F,CAAkB1F,GAEjB,EAED,iBAAA4F,CAAkB5F,GAEjB,EAED,iBAAA6F,CAAkB7F,GAEjB,EAED,iBAAA2F,CAAkB3F,GAEjB,EAED2E,YAAAA,CAAY7B,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,IACzB,IAAI47C,GAAqBpC,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAGvE,UAAAw7C,CAAWt+B,GACJA,EAAM4kB,UAAa5kB,EAAM2+B,UAC5BzoD,MAAMooD,WAAWt+B,EAEpB,EAED,WAAA+9B,GACE7nD,MAAM6nD,cACL5nD,KAA8BmpD,WAAa,EAC3CnpD,KAA8BopD,WAAa,CAC7C,EAED,UAAAhB,CAAWv+B,GACLA,EAAM2+B,UACRxoD,KAAKqpD,YAAYx/B,EAAO,MAEtBA,EAAM4kB,UACRzuC,KAAKspD,SAASz/B,EAAO,MAEvB9pB,MAAMqoD,WAAWv+B,EAClB,EAED,YAAI4kB,GACF,OAA2B,IAApBzuC,KAAKmpD,UACb,EAED,aAAAI,GACEvpD,KAAKwpD,oBACLxpD,KAAKypD,kBACLzpD,KAAK0pD,kBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GAEC,EAED,gBAAAC,GAEC,EAED,YAAAC,GACE3pD,KAAK4pD,mBACL5pD,KAAK6pD,iBACL7pD,KAAK8pD,iBACN,EAED,gBAAAF,GAEC,EAED,cAAAC,GAEC,EAED,eAAAC,GAEC,EAED,UAAAC,CAAWlgC,EAA6BjH,GAClCiH,EAAM4kB,WAGVzuC,KAAKgqD,eAAengC,EAAOjH,GAC3BiH,EAAM4kB,UAAW,EAChBzuC,KAA8BmpD,YAAc,EAC7CnpD,KAAKiqD,aAAapgC,EAAOjH,GACzB5iB,KAAKkqD,cAAcrgC,EAAOjH,GACF,IAApB5iB,KAAKmpD,YACPnpD,KAAKupD,gBAER,EAED,cAAAS,CAAengC,EAA6BjH,GAE3C,EAED,YAAAqnC,CAAapgC,EAA6BjH,GAEzC,EAED,aAAAsnC,CAAcrgC,EAA6BjH,GAE1C,EAED,QAAA0mC,CAASz/B,EAA6BjH,GAC/BiH,EAAM4kB,WAGXzuC,KAAKmqD,aAAatgC,EAAOjH,GACzBiH,EAAM4kB,UAAW,EAChBzuC,KAA8BmpD,YAAc,EAC7CnpD,KAAKoqD,WAAWvgC,EAAOjH,GACvB5iB,KAAKqqD,YAAYxgC,EAAOjH,GACA,IAApB5iB,KAAKmpD,YACPnpD,KAAK2pD,eAEP3pD,KAAKmoD,WAAWt+B,GACjB,EAED,YAAAsgC,CAAatgC,EAA6BjH,GAEzC,EAED,UAAAwnC,CAAWvgC,EAA6BjH,GAEvC,EAED,WAAAynC,CAAYxgC,EAA6BjH,GAExC,EAED,YAAI4lC,GACF,OAA2B,IAApBxoD,KAAKopD,UACb,EAED,aAAAkB,GACEtqD,KAAKuqD,oBACLvqD,KAAKwqD,kBACLxqD,KAAKyqD,kBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GACExqD,KAAKkpD,kBAAkBlpD,KAAKqjD,KAC7B,EAED,gBAAAoH,GAEC,EAED,YAAAC,GACE1qD,KAAK2qD,mBACL3qD,KAAK4qD,iBACL5qD,KAAK6qD,iBACN,EAED,gBAAAF,GAEC,EAED,cAAAC,GACE5qD,KAAKgpD,kBAAkBhpD,KAAKqjD,KAC7B,EAED,eAAAwH,GAEC,EAED,UAAAC,CAAWjhC,EAA6BjH,GACtC,GAAIiH,EAAM2+B,SACR,OAEF,IAAIuC,EAAa/qD,KAAKgrD,eAAenhC,EAAOjH,YACxCmoC,IACFA,GAAa,GAEVA,IAGLlhC,EAAM2+B,UAAW,EACjB3+B,EAAM09B,kBAAmB,EACxBvnD,KAA8BopD,YAAc,EAC7CppD,KAAKirD,aAAaphC,EAAOjH,GACzBiH,EAAM++B,aAAa5oD,KAAKkrD,UAAU3kD,KAAKvG,KAAM6pB,IAC7C7pB,KAAKmrD,cAActhC,EAAOjH,GACF,IAApB5iB,KAAKopD,YACPppD,KAAKsqD,gBAER,EAED,cAAAU,CAAenhC,EAA6BjH,GAE3C,EAED,YAAAqoC,CAAaphC,EAA6BjH,GACxCiH,EAAMq9B,GAAKr9B,EAAMvQ,EACjBuQ,EAAMkK,GAAKlK,EAAMtQ,EACjBsQ,EAAMpI,GAAKoI,EAAMld,EACjBkd,EAAMs9B,GAAK,EACXt9B,EAAMu9B,GAAK,EACXv9B,EAAMw9B,GAAK,CACZ,EAED,aAAA8D,CAActhC,EAA6BjH,GAE1C,EAED,SAAAwoC,CAAUvhC,EAA6BjH,GAChCiH,EAAM2+B,WAGXxoD,KAAKqrD,cAAcxhC,EAAOjH,GAC1B5iB,KAAKsrD,YAAYzhC,EAAOjH,GACxB5iB,KAAKurD,aAAa1hC,EAAOjH,GAC1B,EAED,aAAAyoC,CAAcxhC,EAA6BjH,GAE1C,EAED,WAAA0oC,CAAYzhC,EAA6BjH,GAExC,EAED,YAAA2oC,CAAa1hC,EAA6BjH,GAEzC,EAED,QAAA4oC,CAAS3hC,EAA6BjH,GACpCiH,EAAMg/B,iBACDh/B,EAAM2+B,WAGXxoD,KAAKyrD,aAAa5hC,EAAOjH,GACzBiH,EAAM2+B,UAAW,EAChBxoD,KAA8BopD,YAAc,EAC7CppD,KAAK0rD,WAAW7hC,EAAOjH,GACvB5iB,KAAK2rD,YAAY9hC,EAAOjH,GACA,IAApB5iB,KAAKopD,YACPppD,KAAK0qD,eAEP1qD,KAAKmoD,WAAWt+B,GACjB,EAED,YAAA4hC,CAAa5hC,EAA6BjH,GAEzC,EAED,UAAA8oC,CAAW7hC,EAA6BjH,GAEvC,EAED,WAAA+oC,CAAY9hC,EAA6BjH,GAExC,EAED,WAAAymC,CAAYx/B,EAA6BjH,GACvCiH,EAAMg/B,iBACDh/B,EAAM2+B,WAGXxoD,KAAK4rD,gBAAgB/hC,EAAOjH,GAC5BiH,EAAM2+B,UAAW,EAChBxoD,KAA8BopD,YAAc,EAC7CppD,KAAK6rD,cAAchiC,EAAOjH,GAC1B5iB,KAAK8rD,eAAejiC,EAAOjH,GACH,IAApB5iB,KAAKopD,YACPppD,KAAK0qD,eAEP1qD,KAAKmoD,WAAWt+B,GACjB,EAED,eAAA+hC,CAAgB/hC,EAA6BjH,GAE5C,EAED,aAAAipC,CAAchiC,EAA6BjH,GAE1C,EAED,cAAAkpC,CAAejiC,EAA6BjH,GAE3C,EAED,KAAAmpC,CAAMliC,EAA6BjH,GACjC5iB,KAAKgsD,UAAUniC,EAAOjH,GACtB5iB,KAAKisD,QAAQpiC,EAAOjH,GACpB5iB,KAAKksD,SAASriC,EAAOjH,EACtB,EAED,SAAAopC,CAAUniC,EAA6BjH,GAEtC,EAED,OAAAqpC,CAAQpiC,EAA6BjH,GAEpC,EAED,QAAAspC,CAASriC,EAA6BjH,GAErC,EAED,SAAAsoC,CAAUrhC,GACRA,EAAMg/B,iBACKj8C,YAAYC,MAAQgd,EAAMpI,IAC3B,IAAMoI,EAAM6+B,YAAc7+B,EAAM2+B,WAG1CxoD,KAAKmsD,cAActiC,GACnB7pB,KAAKosD,YAAYviC,GACjB7pB,KAAKqsD,aAAaxiC,GACnB,EAED,aAAAsiC,CAActiC,GAEb,EAED,WAAAuiC,CAAYviC,GACV,MAAMld,EAAIC,YAAYC,MACtBgd,EAAMw9B,GAAK16C,EAAIkd,EAAMld,EACrBkd,EAAMld,EAAIA,CACX,EAED,YAAA0/C,CAAaxiC,GAEZ,GAEH,CACE,SAAA7U,CAAUszC,EAAmB/2C,GAI3B,OAHA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IACE43C,WAAa,EACjDb,EAAoCc,WAAa,EAC3Cd,CACR,EAED,UAAAgE,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM9vC,EAASrN,EAASqN,OAEtB8vC,EADa,YAAX9vC,EACWgwC,GACO,UAAXhwC,EACIiwC,GACO,UAAXjwC,EACIkwC,GACoB,oBAAjBC,aACHH,GACkB,oBAAfI,WACHH,GAEAC,EAEhB,CACD,OAAOJ,CACR,IA2CUE,GAA+F3D,GAAgBv1C,OAA8D,yBAA0B,CAClN,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,eAAgB3hD,KAAK8sD,gBAC3CzJ,EAAK1B,iBAAiB,eAAgB3hD,KAAK+sD,gBAC3C1J,EAAK1B,iBAAiB,cAAe3hD,KAAKgtD,cAC3C,EAED,iBAAA/D,CAAkB5F,GAChBA,EAAKvB,oBAAoB,eAAgB9hD,KAAK8sD,gBAC9CzJ,EAAKvB,oBAAoB,eAAgB9hD,KAAK+sD,gBAC9C1J,EAAKvB,oBAAoB,cAAe9hD,KAAKgtD,cAC9C,EAED,iBAAA9D,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,cAAe3hD,KAAKitD,eACnDvqC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKktD,aACjDxqC,SAAS1S,KAAK2xC,iBAAiB,gBAAiB3hD,KAAKmtD,iBACrDzqC,SAAS1S,KAAK2xC,iBAAiB,eAAgB3hD,KAAKotD,uBACrD,EAED,iBAAApE,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,cAAe9hD,KAAKitD,eACtDvqC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKktD,aACpDxqC,SAAS1S,KAAK8xC,oBAAoB,gBAAiB9hD,KAAKmtD,iBACxDzqC,SAAS1S,KAAK8xC,oBAAoB,eAAgB9hD,KAAKotD,uBACxD,EAED,WAAAC,CAAYxjC,EAA6BjH,GACvCiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,UAEhB3jC,EAAM+8B,MAAQhkC,EAAMgkC,MACpB/8B,EAAMrD,OAAS5D,EAAM4D,OACrBqD,EAAMg9B,MAAQjkC,EAAMikC,MACpBh9B,EAAMi9B,MAAQlkC,EAAMkkC,MACpBj9B,EAAMk9B,MAAQnkC,EAAMmkC,MACpBl9B,EAAMm9B,SAAWpkC,EAAMokC,SACvBn9B,EAAMo9B,mBAAqBrkC,EAAMqkC,kBAClC,EAED,cAAA6F,CAAelqC,GACb,GAA0B,UAAtBA,EAAM6qC,aAA6C,IAAlB7qC,EAAM2jC,QACzC,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACzFxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,cAAAmqC,CAAenqC,GACb,GAA0B,UAAtBA,EAAM6qC,YACR,OAEF,MAAM5jC,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,aAAAoqC,CAAcpqC,GACZ,MAAMiH,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACzFxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEC,UAAtBA,EAAM6qC,aAA4C,IAAjB7qC,EAAM0jC,QACzCtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,aAAAqqC,CAAcrqC,GACZ,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,WAAAsqC,CAAYtqC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,eAAAuqC,CAAgBvqC,GACd,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACzB,EAED,sBAAAwqC,CAAuBxqC,GACrB,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAS3B,OARA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bu7C,eAAiBxE,EAAQwE,eAAevmD,KAAK+hD,GACrDA,EAAQyE,eAAiBzE,EAAQyE,eAAexmD,KAAK+hD,GACrDA,EAAQ0E,cAAgB1E,EAAQ0E,cAAczmD,KAAK+hD,GACnDA,EAAQ2E,cAAgB3E,EAAQ2E,cAAc1mD,KAAK+hD,GACnDA,EAAQ4E,YAAc5E,EAAQ4E,YAAY3mD,KAAK+hD,GAC/CA,EAAQ6E,gBAAkB7E,EAAQ6E,gBAAgB5mD,KAAK+hD,GACvDA,EAAQ8E,uBAAyB9E,EAAQ8E,uBAAuB7mD,KAAK+hD,GAC9DA,CACR,IAkCUoE,GAA2F5D,GAAgBv1C,OAA4D,uBAAwB,CAC1M,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAK2tD,aAC1C,EAED,iBAAA1E,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAK2tD,aAC7C,EAED,iBAAAzE,CAAkB7F,GAChBA,EAAK1B,iBAAiB,YAAa3hD,KAAK4tD,aACxCvK,EAAK1B,iBAAiB,WAAY3hD,KAAK6tD,YACvCxK,EAAK1B,iBAAiB,cAAe3hD,KAAK8tD,cAC3C,EAED,iBAAA9E,CAAkB3F,GAChBA,EAAKvB,oBAAoB,YAAa9hD,KAAK4tD,aAC3CvK,EAAKvB,oBAAoB,WAAY9hD,KAAK6tD,YAC1CxK,EAAKvB,oBAAoB,cAAe9hD,KAAK8tD,cAC9C,EAED,WAAAT,CAAYxjC,EAA6BjH,EAAmBmrC,GAC1DlkC,EAAM7rB,OAAS+vD,EAAM/vD,OACrB6rB,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAK4G,EAAMT,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAK2G,EAAMR,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIy0C,EAAMT,QAChBzjC,EAAMtQ,EAAIw0C,EAAMR,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAG,CAAa/qC,GACX,MAAMorC,EAAUprC,EAAMqrC,cACtB,IAAK,IAAI1vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAKioD,iBAAiB8F,EAAMG,WAAY,SAAS,EAAOH,EAAMT,QAASS,EAAMR,QAAS3qC,EAAM4qC,WAC1GxtD,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC1BlkC,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,EAE1B,CACF,EAED,WAAAgrC,CAAYhrC,GACV,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKorD,UAAUvhC,EAAOjH,GACvB,CACF,EAED,UAAAirC,CAAWjrC,GACT,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBACTvnD,KAAK+rD,MAAMliC,EAAOjH,GAEpB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,EAED,aAAAkrC,CAAclrC,GACZ,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAM3B,OALA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bo8C,aAAerF,EAAQqF,aAAapnD,KAAK+hD,GACjDA,EAAQsF,YAActF,EAAQsF,YAAYrnD,KAAK+hD,GAC/CA,EAAQuF,WAAavF,EAAQuF,WAAWtnD,KAAK+hD,GAC7CA,EAAQwF,cAAgBxF,EAAQwF,cAAcvnD,KAAK+hD,GAC5CA,CACR,IAwCUqE,GAA2F7D,GAAgBv1C,OAA4D,uBAAwB,CAC1M,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAKouD,cACzC/K,EAAK1B,iBAAiB,aAAc3hD,KAAKquD,cACzChL,EAAK1B,iBAAiB,YAAa3hD,KAAKsuD,YACzC,EAED,iBAAArF,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAKouD,cAC5C/K,EAAKvB,oBAAoB,aAAc9hD,KAAKquD,cAC5ChL,EAAKvB,oBAAoB,YAAa9hD,KAAKsuD,YAC5C,EAED,iBAAApF,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKuuD,aACjD7rC,SAAS1S,KAAK2xC,iBAAiB,UAAW3hD,KAAKwuD,WAC/C9rC,SAAS1S,KAAK2xC,iBAAiB,aAAc3hD,KAAKyuD,qBACnD,EAED,iBAAAzF,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKuuD,aACpD7rC,SAAS1S,KAAK8xC,oBAAoB,UAAW9hD,KAAKwuD,WAClD9rC,SAAS1S,KAAK8xC,oBAAoB,aAAc9hD,KAAKyuD,qBACtD,EAED,WAAApB,CAAYxjC,EAA6BjH,GACvCiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMtQ,EACnCsQ,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAY,CAAaxrC,GACX,GAAsB,IAAlBA,EAAM2jC,QACR,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAAMrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WAChGxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,YAAAyrC,CAAazrC,GACX,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,WAAA0rC,CAAY1rC,GACV,MAAMiH,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAAMrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WAChGxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEJ,IAAjBA,EAAM0jC,QACRtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,WAAA2rC,CAAY3rC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,SAAA4rC,CAAU5rC,GACR,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,oBAAA6rC,CAAqB7rC,GACnB,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAQ3B,OAPA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3B68C,aAAe9F,EAAQ8F,aAAa7nD,KAAK+hD,GACjDA,EAAQ+F,aAAe/F,EAAQ+F,aAAa9nD,KAAK+hD,GACjDA,EAAQgG,YAAchG,EAAQgG,YAAY/nD,KAAK+hD,GAC/CA,EAAQiG,YAAcjG,EAAQiG,YAAYhoD,KAAK+hD,GAC/CA,EAAQkG,UAAYlG,EAAQkG,UAAUjoD,KAAK+hD,GAC3CA,EAAQmG,qBAAuBnG,EAAQmG,qBAAqBloD,KAAK+hD,GAC1DA,CACR,ICpkCG,MAAOoG,WAA6BnG,GAUxC,WAAAzoD,CAAYqmD,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,GAChC5M,MAAMomD,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAC3C3M,KAAK2uD,GAAK,EACV3uD,KAAK4uD,GAAK,EACV5uD,KAAK6uD,GAAK,EACV7uD,KAAK8uD,GAAK,EACV9uD,KAAK+uD,KAAO,GACZ/uD,KAAKgvD,UAAW,CACjB,CAGD,cAAAC,CAAeC,GACb,MAAMH,EAAO/uD,KAAK+uD,KACZz1C,EAAItZ,KAAKsZ,EACTC,EAAIvZ,KAAKuZ,EACT5M,EAAI3M,KAAK2M,EAEf,IADAoiD,EAAKlwD,KAAK,CAACya,EAAAA,EAAGC,EAAAA,EAAG5M,EAAAA,IACVoiD,EAAKvwD,OAAS,GAAKmO,EAAIoiD,EAAK,GAAIpiD,EAAIuiD,GACzCH,EAAKI,OAER,CAGD,cAAAC,CAAeC,GACb,MAAMlxB,EAAKn+B,KAAK+uD,KAAK,GACf3wB,EAAKp+B,KAAK+uD,KAAK/uD,KAAK+uD,KAAKvwD,OAAS,GACxC,QAAI4/B,IAAAA,GAAiBA,IAAOD,EAAI,CAC9B,MAAMkpB,EAAKjpB,EAAGzxB,EAAIwxB,EAAGxxB,EACrB,IAAIgiD,EACAC,EACJ,GAAW,IAAPvH,EAAU,CACZsH,GAAMvwB,EAAG9kB,EAAI6kB,EAAG7kB,GAAK+tC,EACrBuH,GAAMxwB,EAAG7kB,EAAI4kB,EAAG5kB,GAAK8tC,EACrB,MAAMiI,EAAKX,EAAKA,EAAKC,EAAKA,EAE1B,GADcS,EAAOA,EACTC,EAAI,CACd,MAAMC,EAAIp5C,KAAKq5C,KAAKF,GACpBX,EAAKA,EAAKU,EAAOE,EACjBX,EAAKA,EAAKS,EAAOE,CAClB,CACF,MACCZ,EAAK,EACLC,EAAK,EAEP5uD,KAAK2uD,GAAKA,EACV3uD,KAAK4uD,GAAKA,CACX,eAAUzwB,IACTn+B,KAAK2uD,GAAK,EACV3uD,KAAK4uD,GAAK,EAEb,CAGD,iBAAAa,CAAkB9iD,GAChB,MAAM06C,EAAK16C,EAAI3M,KAAK2M,EACpB,GAAW,IAAP06C,EACF,OAGF,IACI/tC,EADAq1C,EAAK3uD,KAAK2uD,GAAK3uD,KAAK6uD,GAAKxH,EAEzBsH,EAAK,GAAM3uD,KAAK2uD,GAAK,EACvBr1C,EAAItZ,KAAKsZ,EAAItZ,KAAK2uD,GAAKtH,EAAYrnD,KAAK6uD,GAAKxH,EAAKA,EAAtB,IAE5B/tC,EAAItZ,KAAKsZ,EAAKtZ,KAAK2uD,GAAK3uD,KAAK2uD,IAAO,EAAI3uD,KAAK6uD,IAC7CF,EAAK,EACL3uD,KAAK6uD,GAAK,GAGZ,IACIt1C,EADAq1C,EAAK5uD,KAAK4uD,GAAK5uD,KAAK8uD,GAAKzH,EAEzBuH,EAAK,GAAM5uD,KAAK4uD,GAAK,EACvBr1C,EAAIvZ,KAAKuZ,EAAIvZ,KAAK4uD,GAAKvH,EAAYrnD,KAAK8uD,GAAKzH,EAAKA,EAAtB,IAE5B9tC,EAAIvZ,KAAKuZ,EAAKvZ,KAAK4uD,GAAK5uD,KAAK4uD,IAAO,EAAI5uD,KAAK8uD,IAC7CF,EAAK,EACL5uD,KAAK8uD,GAAK,GAGZ9uD,KAAKmnD,GAAK7tC,EAAItZ,KAAKsZ,EACnBtZ,KAAKonD,GAAK7tC,EAAIvZ,KAAKuZ,EACnBvZ,KAAKqnD,GAAKA,EACVrnD,KAAKsZ,EAAIA,EACTtZ,KAAKuZ,EAAIA,EACTvZ,KAAK2M,EAAIA,EACT3M,KAAK2uD,GAAKA,EACV3uD,KAAK4uD,GAAKA,CACX,EAgMUc,MAAAA,GAAiF5G,GAAgBv1C,OAAuD,kBAAmB,CACtLy0C,YAAAA,CAAY7B,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,IACzB,IAAI+hD,GAAqBvI,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAGvE,UAAAw7C,CAAWt+B,GACJA,EAAMmlC,UACTjvD,MAAMooD,WAAWt+B,EAEpB,EAED,WAAA+9B,GACE7nD,MAAM6nD,cACL5nD,KAA8B2vD,WAAa,CAC7C,EAED,UAAAvH,CAAWv+B,GACLA,EAAMmlC,UACRhvD,KAAK4vD,SAAS/lC,EAAO,MAEvB9pB,MAAMqoD,WAAWv+B,EAClB,EAEDqlC,WAAY,GAEZ,cAAAW,GACE,OAAQ1xD,OAAOioC,eAAepmC,MAA0BkvD,UACzD,EAEDY,aAAc,OAEd,gBAAAC,GACE,OAAQ5xD,OAAOioC,eAAepmC,MAA0B8vD,YACzD,EAEDE,YAAa,KAEb,eAAAC,GACE,OAAQ9xD,OAAOioC,eAAepmC,MAA0BgwD,WACzD,EAED,eAAA9U,CAAgBmI,GACdrjD,KAAKkwD,QAAQ7M,EAAKj9C,WACnB,EAED,SAAA+pD,CAAUvtC,GACR,MAAMmlC,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACrBnmD,KAAK4vD,SAAS/lC,EAAOjH,EACtB,CACF,EAED,MAAAwtC,CAAOxtC,GACL,MAAMmlC,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACrBnmD,KAAKwrD,SAAS3hC,EAAOjH,GACrB5iB,KAAK4vD,SAAS/lC,EAAOjH,EACtB,CACF,EAED,gBAAAytC,GACErwD,KAAKswD,uBACLtwD,KAAKuwD,qBACLvwD,KAAKwwD,qBACN,EAED,oBAAAF,GAEC,EAED,kBAAAC,GAEC,EAED,mBAAAC,GAEC,EAED,eAAAC,GACEzwD,KAAK0wD,sBACL1wD,KAAK2wD,oBACL3wD,KAAK4wD,oBACN,EAED,mBAAAF,GAEC,EAED,iBAAAC,GAEC,EAED,kBAAAC,GAEC,EAED,eAAApG,GACEzqD,MAAMyqD,kBACkB,IAApBxqD,KAAK2vD,YACP3vD,KAAKqwD,kBAER,EAED,cAAAzF,GACE7qD,MAAM6qD,iBACkB,IAApB5qD,KAAK2vD,YACP3vD,KAAKywD,iBAER,EAED,UAAA3F,CAAWjhC,EAA6BjH,GACtC7iB,MAAM+qD,WAAWjhC,EAAOjH,GACxB5iB,KAAKmwD,UAAUvtC,EAChB,EAED,YAAAqoC,CAAaphC,EAA6BjH,GACxC7iB,MAAMkrD,aAAaphC,EAAOjH,GAC1BiH,EAAMolC,eAAejvD,KAAKkvD,YAC1BrlC,EAAMulC,eAAepvD,KAAKgwD,YAC3B,EAED,WAAA1E,CAAYzhC,EAA6BjH,GACvC7iB,MAAMurD,YAAYzhC,EAAOjH,GACzBiH,EAAMolC,eAAejvD,KAAKkvD,YAC1BrlC,EAAMulC,eAAepvD,KAAKgwD,YAC3B,EAED,YAAAvE,CAAa5hC,EAA6BjH,GACxC7iB,MAAM0rD,aAAa5hC,EAAOjH,GAC1B5iB,KAAK6wD,WAAWhnC,EAAOjH,EACxB,EAED,UAAA8oC,CAAW7hC,EAA6BjH,GACtC7iB,MAAM2rD,WAAW7hC,EAAOjH,GACxBiH,EAAMolC,eAAejvD,KAAKkvD,YAC1BrlC,EAAMulC,eAAepvD,KAAKgwD,YAC3B,EAED,aAAAnE,CAAchiC,EAA6BjH,GACzC7iB,MAAM8rD,cAAchiC,EAAOjH,GAC3BiH,EAAMolC,eAAejvD,KAAKkvD,YAC1BrlC,EAAMulC,eAAepvD,KAAKgwD,YAC3B,EAED,YAAIhB,GACF,OAA2B,IAApBhvD,KAAK2vD,UACb,EAED,aAAAmB,GACE9wD,KAAK+wD,oBACL/wD,KAAKgxD,kBACLhxD,KAAKixD,kBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GAC0B,IAApBhxD,KAAKopD,YACPppD,KAAKqwD,mBAEW,OAAdrwD,KAAKqjD,MACPrjD,KAAKqjD,KAAKtgD,cAAc8uC,GAAK4D,aAEhC,EAED,gBAAAwb,GAEC,EAED,YAAAC,GACElxD,KAAKmxD,mBACLnxD,KAAKoxD,iBACLpxD,KAAKqxD,iBACN,EAED,gBAAAF,GAEC,EAED,cAAAC,GAC0B,IAApBpxD,KAAKopD,YACPppD,KAAKywD,iBAER,EAED,eAAAY,GAEC,EAED,UAAAR,CAAWhnC,EAA6BjH,GACtC,GAAIiH,EAAMmlC,UAA0B,IAAbnlC,EAAM8kC,IAAyB,IAAb9kC,EAAM+kC,GAC7C,OAEF,MAAMj6B,EAAQxe,KAAKm7C,MAAMn7C,KAAKo7C,IAAI1nC,EAAM+kC,IAAKz4C,KAAKo7C,IAAI1nC,EAAM8kC,KACtDv1C,EAAIpZ,KAAK8vD,aACTjB,GAAMhlC,EAAM8kC,GAAK,EAAIv1C,EAAIyQ,EAAM8kC,GAAK,GAAKv1C,EAAI,GAAKjD,KAAKq7C,IAAI78B,GAC3Dm6B,GAAMjlC,EAAM+kC,GAAK,EAAIx1C,EAAIyQ,EAAM+kC,GAAK,GAAKx1C,EAAI,GAAKjD,KAAKs7C,IAAI98B,GACjE,GAAW,IAAPk6B,GAAmB,IAAPC,EACd,OAEFjlC,EAAMglC,GAAKA,EACXhlC,EAAMilC,GAAKA,EACX,IAAI4C,EAAa1xD,KAAK2xD,eAAe9nC,EAAOjH,YACxC8uC,IACFA,GAAa,GAEVA,IAGL7nC,EAAMmlC,UAAW,EAChBhvD,KAA8B2vD,YAAc,EAC7C3vD,KAAK4xD,aAAa/nC,EAAOjH,GACzB5iB,KAAK6xD,cAAchoC,EAAOjH,GACF,IAApB5iB,KAAK2vD,YACP3vD,KAAK8wD,gBAER,EAED,cAAAa,CAAe9nC,EAA6BjH,GAE3C,EAED,YAAAgvC,CAAa/nC,EAA6BjH,GACxCiH,EAAMq9B,GAAKr9B,EAAMvQ,EACjBuQ,EAAMkK,GAAKlK,EAAMtQ,EACjBsQ,EAAMpI,GAAKoI,EAAMld,EACjBkd,EAAMs9B,GAAK,EACXt9B,EAAMu9B,GAAK,EACXv9B,EAAMw9B,GAAK,CACZ,EAED,aAAAwK,CAAchoC,EAA6BjH,GAE1C,EAED,QAAAgtC,CAAS/lC,EAA6BjH,GAC/BiH,EAAMmlC,WAGXhvD,KAAK8xD,aAAajoC,EAAOjH,GACzBiH,EAAMmlC,UAAW,EAChBhvD,KAA8B2vD,YAAc,EAC7C3vD,KAAK+xD,WAAWloC,EAAOjH,GACvB5iB,KAAKgyD,YAAYnoC,EAAOjH,GACA,IAApB5iB,KAAK2vD,YACP3vD,KAAKkxD,eAEPlxD,KAAKmoD,WAAWt+B,GACjB,EAED,YAAAioC,CAAajoC,EAA6BjH,GAEzC,EAED,UAAAmvC,CAAWloC,EAA6BjH,GAEvC,EAED,WAAAovC,CAAYnoC,EAA6BjH,GAExC,EAED,OAAAstC,CAAQvjD,GACN,GAAwB,IAApB3M,KAAK2vD,WACP,OAEF3vD,KAAKiyD,YACLjyD,KAAKkyD,UAAUvlD,GACf3M,KAAKmyD,UACL,MAAMpK,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACjBt8B,EAAMmlC,UAAyB,IAAbnlC,EAAMglC,IAAyB,IAAbhlC,EAAMilC,IAC5C9uD,KAAK4vD,SAAS/lC,EAAO,KAExB,CACD7pB,KAAKoyD,WACmB,IAApBpyD,KAAK2vD,YAAkC,OAAd3vD,KAAKqjD,MAChCrjD,KAAKqjD,KAAKtgD,cAAc8uC,GAAK4D,aAEhC,EAED,SAAAwc,GAEC,EAED,OAAAE,GAEC,EAED,QAAAC,GAEC,EAED,SAAAF,CAAUvlD,GACR,MAAMo7C,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACjBt8B,EAAMmlC,UACRnlC,EAAM4lC,kBAAkB9iD,EAE3B,CACF,GAEH,CACE,SAAAqI,CAAUszC,EAAmB/2C,GAM3B,OALA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IACEo+C,WAAa,EAClDrH,EAAQ4G,WAAa5G,EAAQuH,iBAC7BvH,EAAQwH,aAAexH,EAAQyH,mBAC/BzH,EAAQ0H,YAAc1H,EAAQ2H,kBACvB3H,CACR,EAED,UAAAgE,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM9vC,EAASrN,EAASqN,OAEtB8vC,EADa,YAAX9vC,EACW41C,GACO,UAAX51C,EACI61C,GACO,UAAX71C,EACI81C,GACoB,oBAAjB3F,aACHyF,GACkB,oBAAfxF,WACHyF,GAEAC,EAEhB,CACD,OAAOhG,CACR,IA2CU8F,GAA+F3C,GAAgBn8C,OAA8D,yBAA0B,CAClN,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,eAAgB3hD,KAAK8sD,gBAC3CzJ,EAAK1B,iBAAiB,eAAgB3hD,KAAK+sD,gBAC3C1J,EAAK1B,iBAAiB,cAAe3hD,KAAKgtD,cAC3C,EAED,iBAAA/D,CAAkB5F,GAChBA,EAAKvB,oBAAoB,eAAgB9hD,KAAK8sD,gBAC9CzJ,EAAKvB,oBAAoB,eAAgB9hD,KAAK+sD,gBAC9C1J,EAAKvB,oBAAoB,cAAe9hD,KAAKgtD,cAC9C,EAED,iBAAA9D,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,cAAe3hD,KAAKitD,eACnDvqC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKktD,aACjDxqC,SAAS1S,KAAK2xC,iBAAiB,gBAAiB3hD,KAAKmtD,iBACrDzqC,SAAS1S,KAAK2xC,iBAAiB,eAAgB3hD,KAAKotD,uBACrD,EAED,iBAAApE,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,cAAe9hD,KAAKitD,eACtDvqC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKktD,aACpDxqC,SAAS1S,KAAK8xC,oBAAoB,gBAAiB9hD,KAAKmtD,iBACxDzqC,SAAS1S,KAAK8xC,oBAAoB,eAAgB9hD,KAAKotD,uBACxD,EAED,WAAAC,CAAYxjC,EAA6BjH,GACvCiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,UAEhB3jC,EAAM+8B,MAAQhkC,EAAMgkC,MACpB/8B,EAAMrD,OAAS5D,EAAM4D,OACrBqD,EAAMg9B,MAAQjkC,EAAMikC,MACpBh9B,EAAMi9B,MAAQlkC,EAAMkkC,MACpBj9B,EAAMk9B,MAAQnkC,EAAMmkC,MACpBl9B,EAAMm9B,SAAWpkC,EAAMokC,SACvBn9B,EAAMo9B,mBAAqBrkC,EAAMqkC,kBAClC,EAED,cAAA6F,CAAelqC,GACb,GAA0B,UAAtBA,EAAM6qC,aAA6C,IAAlB7qC,EAAM2jC,QACzC,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACzFxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,cAAAmqC,CAAenqC,GACb,GAA0B,UAAtBA,EAAM6qC,YACR,OAEF,MAAM5jC,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,aAAAoqC,CAAcpqC,GACZ,MAAMiH,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACzFxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEC,UAAtBA,EAAM6qC,aAA4C,IAAjB7qC,EAAM0jC,QACzCtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,aAAAqqC,CAAcrqC,GACZ,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,WAAAsqC,CAAYtqC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,eAAAuqC,CAAgBvqC,GACd,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACzB,EAED,sBAAAwqC,CAAuBxqC,GACrB,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAS3B,OARA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bu7C,eAAiBxE,EAAQwE,eAAevmD,KAAK+hD,GACrDA,EAAQyE,eAAiBzE,EAAQyE,eAAexmD,KAAK+hD,GACrDA,EAAQ0E,cAAgB1E,EAAQ0E,cAAczmD,KAAK+hD,GACnDA,EAAQ2E,cAAgB3E,EAAQ2E,cAAc1mD,KAAK+hD,GACnDA,EAAQ4E,YAAc5E,EAAQ4E,YAAY3mD,KAAK+hD,GAC/CA,EAAQ6E,gBAAkB7E,EAAQ6E,gBAAgB5mD,KAAK+hD,GACvDA,EAAQ8E,uBAAyB9E,EAAQ8E,uBAAuB7mD,KAAK+hD,GAC9DA,CACR,IAkCUgK,GAA2F5C,GAAgBn8C,OAA4D,uBAAwB,CAC1M,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAK2tD,aAC1C,EAED,iBAAA1E,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAK2tD,aAC7C,EAED,iBAAAzE,CAAkB7F,GAChBA,EAAK1B,iBAAiB,YAAa3hD,KAAK4tD,aACxCvK,EAAK1B,iBAAiB,WAAY3hD,KAAK6tD,YACvCxK,EAAK1B,iBAAiB,cAAe3hD,KAAK8tD,cAC3C,EAED,iBAAA9E,CAAkB3F,GAChBA,EAAKvB,oBAAoB,YAAa9hD,KAAK4tD,aAC3CvK,EAAKvB,oBAAoB,WAAY9hD,KAAK6tD,YAC1CxK,EAAKvB,oBAAoB,cAAe9hD,KAAK8tD,cAC9C,EAED,WAAAT,CAAYxjC,EAA6BjH,EAAmBmrC,GAC1DlkC,EAAM7rB,OAAS+vD,EAAM/vD,OACrB6rB,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAK4G,EAAMT,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAK2G,EAAMR,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIy0C,EAAMT,QAChBzjC,EAAMtQ,EAAIw0C,EAAMR,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAG,CAAa/qC,GACX,MAAMorC,EAAUprC,EAAMqrC,cACtB,IAAK,IAAI1vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAKioD,iBAAiB8F,EAAMG,WAAY,SAAS,EAAOH,EAAMT,QAASS,EAAMR,QAAS3qC,EAAM4qC,WAC1GxtD,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC1BlkC,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,EAE1B,CACF,EAED,WAAAgrC,CAAYhrC,GACV,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKorD,UAAUvhC,EAAOjH,GACvB,CACF,EAED,UAAAirC,CAAWjrC,GACT,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBACTvnD,KAAK+rD,MAAMliC,EAAOjH,GAEpB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,EAED,aAAAkrC,CAAclrC,GACZ,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAM3B,OALA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bo8C,aAAerF,EAAQqF,aAAapnD,KAAK+hD,GACjDA,EAAQsF,YAActF,EAAQsF,YAAYrnD,KAAK+hD,GAC/CA,EAAQuF,WAAavF,EAAQuF,WAAWtnD,KAAK+hD,GAC7CA,EAAQwF,cAAgBxF,EAAQwF,cAAcvnD,KAAK+hD,GAC5CA,CACR,IAwCUiK,GAA2F7C,GAAgBn8C,OAA4D,uBAAwB,CAC1M,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAKouD,cACzC/K,EAAK1B,iBAAiB,aAAc3hD,KAAKquD,cACzChL,EAAK1B,iBAAiB,YAAa3hD,KAAKsuD,YACzC,EAED,iBAAArF,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAKouD,cAC5C/K,EAAKvB,oBAAoB,aAAc9hD,KAAKquD,cAC5ChL,EAAKvB,oBAAoB,YAAa9hD,KAAKsuD,YAC5C,EAED,iBAAApF,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKuuD,aACjD7rC,SAAS1S,KAAK2xC,iBAAiB,UAAW3hD,KAAKwuD,WAC/C9rC,SAAS1S,KAAK2xC,iBAAiB,aAAc3hD,KAAKyuD,qBACnD,EAED,iBAAAzF,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKuuD,aACpD7rC,SAAS1S,KAAK8xC,oBAAoB,UAAW9hD,KAAKwuD,WAClD9rC,SAAS1S,KAAK8xC,oBAAoB,aAAc9hD,KAAKyuD,qBACtD,EAED,WAAApB,CAAYxjC,EAA6BjH,GACvCiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAY,CAAaxrC,GACX,GAAsB,IAAlBA,EAAM2jC,QACR,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAAMrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WAChGxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,YAAAyrC,CAAazrC,GACX,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,WAAA0rC,CAAY1rC,GACV,MAAMiH,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAAMrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WAChGxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEJ,IAAjBA,EAAM0jC,QACRtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,WAAA2rC,CAAY3rC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,SAAA4rC,CAAU5rC,GACR,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,oBAAA6rC,CAAqB7rC,GACnB,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAQ3B,OAPA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3B68C,aAAe9F,EAAQ8F,aAAa7nD,KAAK+hD,GACjDA,EAAQ+F,aAAe/F,EAAQ+F,aAAa9nD,KAAK+hD,GACjDA,EAAQgG,YAAchG,EAAQgG,YAAY/nD,KAAK+hD,GAC/CA,EAAQiG,YAAcjG,EAAQiG,YAAYhoD,KAAK+hD,GAC/CA,EAAQkG,UAAYlG,EAAQkG,UAAUjoD,KAAK+hD,GAC3CA,EAAQmG,qBAAuBnG,EAAQmG,qBAAqBloD,KAAK+hD,GAC1DA,CACR,ICtkCG,MAAOkK,WAA4C9D,GAMvD,WAAA5uD,CAAYqmD,EAAiBC,EAA6BC,EAC9C/sC,EAAWC,EAAW5M,GAChC5M,MAAMomD,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAC3C3M,KAAKyyD,YAAc,EACnBzyD,KAAK0yD,YAAc,EACnB1yD,KAAK2yD,UAAW,EAChB3yD,KAAK4yD,UAAW,CACjB,EAmLUC,MAAAA,GAA2FnD,GAAgBn8C,OAAuD,eAAgB,CAC7Ly0C,YAAAA,CAAY7B,EAAiBC,EAA6BC,EACL/sC,EAAWC,EAAW5M,IAClE,IAAI6lD,GAAkBrM,EAASC,EAAWC,EAAW/sC,EAAGC,EAAG5M,GAGpE,WAAAi7C,GACE7nD,MAAM6nD,cACN5nD,KAAKyC,SAASzC,KAAK2B,OAASkxD,GAAaC,aAC1C,EAEDC,YAAa,GAEb,eAAAC,GACE,OAAQ70D,OAAOioC,eAAepmC,MAAuB+yD,WACtD,EAED,uBAAIE,GACF,OAA+D,IAAvDjzD,KAAK2B,MAAQkxD,GAAaK,wBACnC,EAED,uBAAAD,CAAwBA,GAClBA,EACFjzD,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaK,yBAExClzD,KAAKyC,SAASzC,KAAK2B,OAASkxD,GAAaK,wBAE5C,EAED,SAAIC,GACF,OAAiD,IAAzCnzD,KAAK2B,MAAQkxD,GAAaO,UACnC,EAED,SAAAD,CAAUA,GACJA,EACFnzD,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaO,WAExCpzD,KAAKyC,SAASzC,KAAK2B,OAASkxD,GAAaO,UAE5C,EAEDC,UAAAA,IACS,KAGT,SAAAC,CAAUC,EAA2C13C,GAEpD,EAED23C,UAAAA,IACS,KAGT,SAAAC,CAAUC,EAA2C73C,GAEpD,EAED,cAAA83C,CAAerG,EAAiBiG,EAAoCvS,GAClE,MAAM4S,EAAQtG,EAAUtM,EAAO6S,KACzBC,EAASP,EAAOQ,MACtB,OAAID,EAAO,IAAMA,EAAO,GACfA,EAAO,GAAKF,EAEd5S,EAAOgT,KAAOJ,EAAQE,EAAO,EACrC,EAED,cAAAG,CAAe1G,EAAiBmG,EAAoC1S,GAClE,MAAMkT,EAAQ3G,EAAUvM,EAAOmT,KACzBC,EAASV,EAAOK,MACtB,OAAIK,EAAO,IAAMA,EAAO,GACfA,EAAO,GAAKF,EAEdlT,EAAOqT,KAAOH,EAAQE,EAAO,EACrC,EAED,QAAAE,CAAShH,EAAiBiG,EAAoCvS,GAC5D,OAAOuS,EAAOgB,QAAQv0D,KAAK2zD,eAAerG,EAASiG,EAAQvS,GAC5D,EAED,QAAAwT,CAASjH,EAAiBmG,EAAoC1S,GAC5D,OAAO0S,EAAOa,QAAQv0D,KAAKi0D,eAAe1G,EAASmG,EAAQ1S,GAC5D,EAED,eAAA9F,CAAgBmI,GACdtjD,MAAMm7C,gBAAgBmI,GAC2B,IAA5CrjD,KAAK2B,MAAQkxD,GAAaC,eAC7B9yD,KAAKy0D,SAER,EAED,YAAAxJ,CAAaphC,EAAgCjH,GAC3C7iB,MAAMkrD,aAAaphC,EAAOjH,GAC1B5iB,KAAK00D,kBAAkB7qC,GACvB7pB,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,WAAAxH,CAAYzhC,EAAgCjH,GAC1C7iB,MAAMurD,YAAYzhC,EAAOjH,GACzB5iB,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,UAAApH,CAAW7hC,EAAgCjH,GACzC7iB,MAAM2rD,WAAW7hC,EAAOjH,GACxB5iB,KAAK00D,kBAAkB7qC,GACvB7pB,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,aAAAjH,CAAchiC,EAAgCjH,GAC5C7iB,MAAM8rD,cAAchiC,EAAOjH,GAC3B5iB,KAAK00D,kBAAkB7qC,GACvB7pB,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,UAAAjC,CAAWhnC,EAAgCjH,GACrC5iB,KAAK2vD,WAAa,GACpB5vD,MAAM8wD,WAAWhnC,EAAOjH,EAE3B,EAED,YAAAgvC,CAAa/nC,EAAgCjH,GAC3C7iB,MAAM6xD,aAAa/nC,EAAOjH,GAC1B5iB,KAAK00D,kBAAkB7qC,GACvB7pB,KAAK20D,iBAAiB9qC,GACtB7pB,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,UAAAf,CAAWloC,EAAgCjH,GACzC7iB,MAAMgyD,WAAWloC,EAAOjH,GACxBiH,EAAM8oC,UAAW,EACjB9oC,EAAM+oC,UAAW,EACjB5yD,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,OAAAX,GACEpyD,MAAMoyD,UACNnyD,KAAKqjD,KAAMtgD,cAAc8uC,GAAK4D,cAC9Bz1C,KAAKyC,SAASzC,KAAK2B,MAAQkxD,GAAaC,aACzC,EAED,iBAAA4B,CAAkB7qC,EAAgC0pC,EAChCG,EAA4C1S,YACxDuS,IACFA,EAASvzD,KAAKqzD,aAED,OAAXE,aACEvS,IACFA,EAAShhD,KAAKqjD,KAAMhD,cAEtBx2B,EAAM4oC,OAASzyD,KAAKs0D,SAASzqC,EAAMq9B,GAAIqM,EAAQvS,aAE7C0S,IACFA,EAAS1zD,KAAKwzD,aAED,OAAXE,aACE1S,IACFA,EAAShhD,KAAKqjD,KAAMhD,cAEtBx2B,EAAM6oC,OAAS1yD,KAAKw0D,SAAS3qC,EAAMkK,GAAI2/B,EAAQ1S,GAElD,EAED,WAAA4T,GACE,MAAM7M,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GAChBt8B,EAAMmlC,WAGXnlC,EAAM8oC,UAAW,EACjB9oC,EAAM8kC,GAAK,EACX9kC,EAAMglC,GAAK,EACZ,CACF,EAED,WAAAgG,GACE,MAAM9M,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GAChBt8B,EAAMmlC,WAGXnlC,EAAM+oC,UAAW,EACjB/oC,EAAM+kC,GAAK,EACX/kC,EAAMilC,GAAK,EACZ,CACF,EAED,OAAA2F,GACE,IAAIK,EACAC,EACJ,MAAMhN,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,IAChBt8B,EAAM2+B,UAAa3+B,EAAMmlC,qBAEnB8F,EACTA,EAASjrC,WACAkrC,EACTA,EAASlrC,EACAA,EAAMpI,GAAKqzC,EAAOrzC,GAC3BqzC,EAASjrC,EACAA,EAAMpI,GAAKszC,EAAOtzC,KAC3BszC,EAASlrC,GAEZ,CACD,YAAIirC,EAAmB,CACrB,MAAM9T,EAAShhD,KAAKqjD,KAAMhD,aACpBkT,EAASvzD,KAAKqzD,YACdK,EAAS1zD,KAAKwzD,YACL,OAAXD,GAA8B,OAAXG,OACjBqB,IAAAA,GAAqB/0D,KAAKizD,oBAC5BjzD,KAAKg1D,cAAczB,EAAQG,EAAQoB,EAAQC,EAAQ/T,GAEnDhhD,KAAKi1D,UAAU1B,EAAQG,EAAQoB,EAAQC,EAAQ/T,GAE7B,OAAXuS,EACTvzD,KAAKk1D,SAAS3B,EAAQuB,EAAQC,EAAQ/T,GAClB,OAAX0S,GACT1zD,KAAKm1D,SAASzB,EAAQoB,EAAQC,EAAQ/T,EAEzC,CACDhhD,KAAKyC,SAASzC,KAAK2B,OAASkxD,GAAaC,aAC1C,EAED,aAAAkC,CAAcI,EAAuCC,EACvCP,EAAiCC,EAAiC/T,GAC9E,MAAMkG,EAAK4N,EAAOrC,OACZ1+B,EAAK+gC,EAAOpC,OACZ4C,EAAMt1D,KAAK2zD,eAAemB,EAAO5N,GAAIkO,EAAWpU,GAChDuU,EAAMv1D,KAAKi0D,eAAea,EAAO/gC,GAAIshC,EAAWrU,GAChDwU,EAAMx1D,KAAK2zD,eAAemB,EAAOx7C,EAAG87C,EAAWpU,GAC/CyU,EAAMz1D,KAAKi0D,eAAea,EAAOv7C,EAAG87C,EAAWrU,GAC/C0U,EAAMZ,EAAOnG,GACbgH,EAAMb,EAAOlG,GACbgH,EAAMd,EAAOjG,GACbgH,EAAMf,EAAOhG,GAEbgH,EAAKf,EAAOtC,OACZz+B,EAAK+gC,EAAOrC,OACZqD,EAAM/1D,KAAK2zD,eAAeoB,EAAO7N,GAAIkO,EAAWpU,GAChDgV,EAAMh2D,KAAKi0D,eAAec,EAAOhhC,GAAIshC,EAAWrU,GAChDiV,EAAMj2D,KAAK2zD,eAAeoB,EAAOz7C,EAAG87C,EAAWpU,GAC/CkV,EAAMl2D,KAAKi0D,eAAec,EAAOx7C,EAAG87C,EAAWrU,GAC/CmV,EAAMpB,EAAOpG,GACbyH,EAAMrB,EAAOnG,GACbyH,EAAMtB,EAAOlG,GACbyH,EAAMvB,EAAOjG,GAGbyH,EAAMR,EAAMT,EACZkB,EAAMR,EAAMT,EAEZkB,EAAKtgD,KAAK2L,IAAI9hB,KAAK+yD,YAAa58C,KAAKq5C,KAAK+G,EAAMA,EAAMC,EAAMA,IAC5DE,EAAMH,EAAME,EACZE,EAAMH,EAAMC,EAIZG,EAAQpB,EAAMF,EACduB,EAAQpB,EAAMF,EACduB,EAAQb,EAAMF,EACdgB,EAAQb,EAAMF,EAIdgB,EAAMJ,EAAQF,EAAMG,EAAQF,EAC5BM,EAAMH,EAAQJ,EAAMK,EAAQJ,EAQ5BO,EAAMN,EAAQD,EAAME,GAASH,EAC7BS,EAAML,EAAQH,EAAMI,GAASL,EAM7BU,GALMF,EAAMP,EAENQ,EAAMR,GAGQ,EACpBU,GALMH,GAAOR,EAEPS,GAAOT,GAGO,EAIpBY,EAAMhC,EAnBA0B,EAAMN,EAmBMU,EAClBG,EAAMhC,EAnBAyB,EAAML,EAmBMU,EAClBG,EAAMzB,EAnBAkB,EAAMP,EAmBMU,EAClBK,EAAMzB,EAnBAiB,EAAMN,EAmBMU,EAIlBK,EAAMhC,EAAMgB,EAAMf,EAAMgB,EACxBgB,EAAMxB,EAAMO,EAAMN,EAAMO,EAQxBiB,EAAMlC,EAAMiB,EAAMhB,GAAOe,EACzBmB,EAAM1B,EAAMQ,EAAMP,GAAOM,EAMzBoB,GALOF,EAAMjB,EAENkB,EAAMlB,GAGS,EACtBoB,GALOH,GAAOlB,EAEPmB,GAAOnB,GAGQ,EAG5B,IAAIsB,EAlBSN,EAAMhB,EAkBDoB,EACdG,EAlBSP,EAAMf,EAkBDoB,EACdG,EAlBSP,EAAMjB,EAkBDoB,EACdK,EAlBSR,EAAMhB,EAkBDoB,EAGlB,MAAMn2B,GAAKzrB,KAAKq5C,KAAKwI,EAAOA,EAAOC,EAAOA,GACpCp2B,GAAK1rB,KAAKq5C,KAAK0I,EAAOA,EAAOC,EAAOA,GACpCC,GAAc,IAAPx2B,GAAWo2B,EAAOp2B,GAAK,EAC9By2B,GAAc,IAAPz2B,GAAWq2B,EAAOr2B,GAAK,EAC9B02B,GAAc,IAAPz2B,GAAWq2B,EAAOr2B,GAAK,EAC9B02B,GAAc,IAAP12B,GAAWs2B,EAAOt2B,GAAK,EAGpCm2B,EAAOI,GAAOx2B,GACdq2B,EAAOI,GAAOz2B,GACds2B,EAAOI,GAAOz2B,GACds2B,EAAOI,GAAO12B,GAGd,MAAM22B,GAAKriD,KAAKq5C,KAAKoG,EAAMA,EAAMC,EAAMA,GACjC4C,GAAKtiD,KAAKq5C,KAAK6G,EAAMA,EAAMC,EAAMA,GAGjCoC,GAAOF,IAAMJ,GACbO,GAAOH,IAAMH,GACbO,GAAOH,IAAMH,GACbO,GAAOJ,IAAMF,GAEnB,IAAIO,GAA+C,KACnD,MAAMC,GAAe3D,EAAU4D,YAAY9R,EAAIoQ,EAAKxB,EAAI0B,GACnDuB,GAAar8C,OAAO04C,KACvB0D,GAAYC,GACZ/4D,KAAKszD,UAAUwF,KAGjB,IAAIG,GAA+C,KACnD,MAAMC,GAAe7D,EAAU2D,YAAYjlC,EAAIwjC,EAAKvjC,EAAIyjC,GAMxD,GALKyB,GAAax8C,OAAO24C,KACvB4D,GAAYC,GACZl5D,KAAKyzD,UAAUwF,KAGC,OAAdH,IAAoC,OAAdG,GACxB,OA6BF,GA3BkB,OAAdH,KACFhE,EAAO5N,GAAK4N,EAAOx7C,EACnBw7C,EAAO3N,GAAK,EACZ2N,EAAOnG,GAAKqJ,EACZlD,EAAOjG,GAAK6J,GACZ5D,EAAOrC,OAASzyD,KAAKs0D,SAASQ,EAAO5N,GAAI4R,GAAW9X,GAEpD+T,EAAO7N,GAAK6N,EAAOz7C,EACnBy7C,EAAO5N,GAAK,EACZ4N,EAAOpG,GAAKuJ,EACZnD,EAAOlG,GAAK+J,GACZ7D,EAAOtC,OAASzyD,KAAKs0D,SAASS,EAAO7N,GAAI4R,GAAW9X,IAEpC,OAAdiY,KACFnE,EAAO/gC,GAAK+gC,EAAOv7C,EACnBu7C,EAAO1N,GAAK,EACZ0N,EAAOlG,GAAKqJ,EACZnD,EAAOhG,GAAK6J,GACZ7D,EAAOpC,OAAS1yD,KAAKw0D,SAASM,EAAO/gC,GAAIklC,GAAWjY,GAEpD+T,EAAOhhC,GAAKghC,EAAOx7C,EACnBw7C,EAAO3N,GAAK,EACZ2N,EAAOnG,GAAKuJ,EACZpD,EAAOjG,GAAK+J,GACZ9D,EAAOrC,OAAS1yD,KAAKw0D,SAASO,EAAOhhC,GAAIklC,GAAWjY,IAGlDhhD,KAAKkoD,YAAc,EACrB,OAEF,MAAMH,GAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,GAAQ,CAC5B,MAAMl+B,EAAQk+B,GAAO5B,GACjBt8B,IAAUirC,GAAUjrC,IAAUkrC,IAGhB,OAAd+D,KACFjvC,EAAMq9B,GAAKr9B,EAAMvQ,EACjBuQ,EAAMs9B,GAAK,EACXt9B,EAAM4oC,OAASzyD,KAAKs0D,SAASzqC,EAAMq9B,GAAI4R,GAAW9X,IAElC,OAAdiY,KACFpvC,EAAMkK,GAAKlK,EAAMtQ,EACjBsQ,EAAMu9B,GAAK,EACXv9B,EAAM6oC,OAAS1yD,KAAKw0D,SAAS3qC,EAAMkK,GAAIklC,GAAWjY,IAErD,CACF,EAED,SAAAiU,CAAUG,EAAuCC,EACvCP,EAAiCC,EAA6C/T,GACtF,MAAMkG,EAAK4N,EAAOrC,OACZ1+B,EAAK+gC,EAAOpC,OAClB,IAKIoD,EACA9hC,EACAmlC,EACAC,EARAC,EAAMr5D,KAAK2zD,eAAemB,EAAOx7C,EAAG87C,EAAWpU,GAC/CsY,EAAMt5D,KAAKi0D,eAAea,EAAOv7C,EAAG87C,EAAWrU,GAC/C2R,EAAWmC,EAAOnC,SAClBC,EAAWkC,EAAOlC,SAOtB,YAAImC,EAAmB,CACrBe,EAAKf,EAAOtC,OACZz+B,EAAK+gC,EAAOrC,OACZyG,EAAMn5D,KAAK2zD,eAAeoB,EAAOz7C,EAAG87C,EAAWpU,GAC/CoY,EAAMp5D,KAAKi0D,eAAec,EAAOx7C,EAAG87C,EAAWrU,GAC/C2R,EAAWA,GAAYoC,EAAOpC,SAC9BC,EAAWA,GAAYmC,EAAOnC,SAC9B,MAAM2G,EAAMpjD,KAAKo7C,IAAI4H,EAAME,GACrBG,EAAMrjD,KAAKo7C,IAAI6H,EAAME,GAErBvG,EAAc/yD,KAAK+yD,YACzB,GAAIwG,EAAMxG,EAAa,CACrB,MAAM0G,GAAO1G,EAAcwG,GAAO,EAC9BF,GAAOF,GACTE,GAAOI,EACPN,GAAOM,IAEPJ,GAAOI,EACPN,GAAOM,EAEV,CACD,GAAID,EAAMzG,EAAa,CACrB,MAAM2G,GAAO3G,EAAcyG,GAAO,EAC9BF,GAAOF,GACTE,GAAOI,EACPN,GAAOM,IAEPJ,GAAOI,EACPN,GAAOM,EAEV,CACF,CAED,IAAIZ,EAA+C,KAC9CnG,IACHmG,EAAY1D,EAAU4D,YAAY9R,EAAImS,EAAKvD,EAAIqD,GAC1CL,EAAUp8C,OAAO04C,IACpBp1D,KAAKszD,UAAUwF,IAInB,IAAIG,EAA+C,KAQnD,GAPKrG,IACHqG,EAAY5D,EAAU2D,YAAYjlC,EAAIulC,EAAKtlC,EAAIolC,GAC1CH,EAAUv8C,OAAO24C,IACpBr1D,KAAKyzD,UAAUwF,IAIA,OAAdH,GAAoC,OAAdG,IAAwBj5D,KAAKizD,oBACtD,OAEF,MAAMlL,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACH,OAAd2S,IACFjvC,EAAMq9B,GAAKr9B,EAAMvQ,EACjBuQ,EAAMs9B,GAAK,EACXt9B,EAAM4oC,OAASzyD,KAAKs0D,SAASzqC,EAAMq9B,GAAI4R,EAAW9X,IAElC,OAAdiY,IACFpvC,EAAMkK,GAAKlK,EAAMtQ,EACjBsQ,EAAMu9B,GAAK,EACXv9B,EAAM6oC,OAAS1yD,KAAKw0D,SAAS3qC,EAAMkK,GAAIklC,EAAWjY,GAErD,CACF,EAED,QAAAkU,CAASE,EAAuCN,EACvCC,EAA6C/T,GACpD,MAAMkG,EAAK4N,EAAOrC,OAClB,IACI0G,EACArD,EAFAuD,EAAMr5D,KAAK2zD,eAAemB,EAAOx7C,EAAG87C,EAAWpU,GAG/C2R,EAAWmC,EAAOnC,SACtB,YAAIoC,EAAmB,CACrBe,EAAKf,EAAOtC,OACZ0G,EAAMn5D,KAAK2zD,eAAeoB,EAAOz7C,EAAG87C,EAAWpU,GAC/C2R,EAAWA,GAAYoC,EAAOpC,SAC9B,MAAM4G,EAAMpjD,KAAKo7C,IAAI4H,EAAME,GACrBtG,EAAc/yD,KAAK+yD,YACzB,GAAIwG,EAAMxG,EAAa,CACrB,MAAM0G,GAAO1G,EAAcwG,GAAO,EAC9BF,GAAOF,GACTE,GAAOI,EACPN,GAAOM,IAEPJ,GAAOI,EACPN,GAAOM,EAEV,CACF,CACD,GAAI9G,EACF,OAEF,MAAMmG,EAAY1D,EAAU4D,YAAY9R,EAAImS,EAAKvD,EAAIqD,GAChDL,EAAUp8C,OAAO04C,IACpBp1D,KAAKszD,UAAUwF,EAElB,EAED,QAAA3D,CAASE,EAAuCP,EACvCC,EAA6C/T,GACpD,MAAMjtB,EAAK+gC,EAAOpC,OAClB,IACI0G,EACAplC,EAFAslC,EAAMt5D,KAAKi0D,eAAea,EAAOv7C,EAAG87C,EAAWrU,GAG/C4R,EAAWkC,EAAOlC,SACtB,YAAImC,EAAmB,CACrB/gC,EAAK+gC,EAAOrC,OACZ0G,EAAMp5D,KAAKi0D,eAAec,EAAOx7C,EAAG87C,EAAWrU,GAC/C4R,EAAWA,GAAYmC,EAAOnC,SAC9B,MAAM4G,EAAMrjD,KAAKo7C,IAAI6H,EAAME,GACrBvG,EAAc/yD,KAAK+yD,YACzB,GAAIyG,EAAMzG,EAAa,CACrB,MAAM2G,GAAO3G,EAAcyG,GAAO,EAC9BF,GAAOF,GACTE,GAAOI,EACPN,GAAOM,IAEPJ,GAAOI,EACPN,GAAOM,EAEV,CACF,CACD,GAAI9G,EACF,OAEF,MAAMqG,EAAY5D,EAAU2D,YAAYjlC,EAAIulC,EAAKtlC,EAAIolC,GAChDH,EAAUv8C,OAAO24C,IACpBr1D,KAAKyzD,UAAUwF,EAElB,EAED,gBAAAtE,CAAiBG,GACf,IAAIC,EACJ,MAAMhN,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GAChBt8B,EAAMmlC,oBAEA+F,GAEAlrC,EAAMpI,GAAKszC,EAAOtzC,MAD3BszC,EAASlrC,EAIZ,CACD,YAAIkrC,EACF,OAEF,MAAMxB,EAASvzD,KAAKqzD,YACdK,EAAS1zD,KAAKwzD,YACL,OAAXD,GAA8B,OAAXG,EACrB1zD,KAAK25D,qBAAqB7E,EAAQC,GACd,OAAXxB,EACTvzD,KAAK45D,oBAAoB9E,EAAQC,GACb,OAAXrB,GACT1zD,KAAK65D,oBAAoB/E,EAAQC,EAEpC,EAED,oBAAA4E,CAAqB7E,EAAiCC,GACpD,MAAMW,EAAMZ,EAAOnG,GACbgH,EAAMb,EAAOlG,GACbuH,EAAMpB,EAAOpG,GACbyH,EAAMrB,EAAOnG,GACbhtB,EAAKzrB,KAAKq5C,KAAKkG,EAAMA,EAAMC,EAAMA,GACjC9zB,EAAK1rB,KAAKq5C,KAAK2G,EAAMA,EAAMC,EAAMA,GACjCgC,EAAc,IAAPx2B,EAAW8zB,EAAM9zB,EAAK,EAC7By2B,EAAc,IAAPz2B,EAAW+zB,EAAM/zB,EAAK,EAC7B02B,EAAc,IAAPz2B,EAAWs0B,EAAMt0B,EAAK,EAC7B02B,EAAc,IAAP12B,EAAWu0B,EAAMv0B,EAAK,EAC7B0tB,GAAK3tB,EAAKC,GAAM,EACtBizB,EAAOnG,GAAKyJ,EAAO7I,EACnBuF,EAAOlG,GAAKyJ,EAAO9I,EACnBwF,EAAOpG,GAAK2J,EAAO/I,EACnBwF,EAAOnG,GAAK2J,EAAOhJ,EAEnB,MAAMqG,EAAMd,EAAOjG,GACbgH,EAAMf,EAAOhG,GACbuH,EAAMtB,EAAOlG,GACbyH,EAAMvB,EAAOjG,GACb0J,EAAKriD,KAAKq5C,KAAKoG,EAAMA,EAAMC,EAAMA,GACjC4C,EAAKtiD,KAAKq5C,KAAK6G,EAAMA,EAAMC,EAAMA,GACjCwD,EAAc,IAAPtB,EAAW5C,EAAM4C,EAAK,EAC7BuB,EAAc,IAAPvB,EAAW3C,EAAM2C,EAAK,EAC7BwB,EAAc,IAAPvB,EAAWpC,EAAMoC,EAAK,EAC7BwB,EAAc,IAAPxB,EAAWnC,EAAMmC,EAAK,EAC7Br/C,GAAKo/C,EAAKC,GAAM,EACtB3D,EAAOjG,GAAKiL,EAAO1gD,EACnB07C,EAAOhG,GAAKiL,EAAO3gD,EACnB27C,EAAOlG,GAAKmL,EAAO5gD,EACnB27C,EAAOjG,GAAKmL,EAAO7gD,CACpB,EAED,mBAAAwgD,CAAoB9E,EAAiCC,GACnD,MAAMW,EAAMZ,EAAOnG,GACbwH,EAAMpB,EAAOpG,GACb/sB,EAAKzrB,KAAKo7C,IAAImE,GACd7zB,EAAK1rB,KAAKo7C,IAAI4E,GACdiC,EAAc,IAAPx2B,EAAW8zB,EAAM9zB,EAAK,EAC7B02B,EAAc,IAAPz2B,EAAWs0B,EAAMt0B,EAAK,EAC7B0tB,GAAK3tB,EAAKC,GAAM,EACtBizB,EAAOnG,GAAKyJ,EAAO7I,EACnBwF,EAAOpG,GAAK2J,EAAO/I,EAEnB,MAAMqG,EAAMd,EAAOjG,GACbwH,EAAMtB,EAAOlG,GACb2J,EAAKriD,KAAKo7C,IAAIqE,GACd6C,EAAKtiD,KAAKo7C,IAAI8E,GACdyD,EAAc,IAAPtB,EAAW5C,EAAM4C,EAAK,EAC7BwB,EAAc,IAAPvB,EAAWpC,EAAMoC,EAAK,EAC7Br/C,GAAKo/C,EAAKC,GAAM,EACtB3D,EAAOjG,GAAKiL,EAAO1gD,EACnB27C,EAAOlG,GAAKmL,EAAO5gD,CACpB,EAED,mBAAAygD,CAAoB/E,EAAiCC,GACnD,MAAMY,EAAMb,EAAOlG,GACbwH,EAAMrB,EAAOnG,GACbhtB,EAAKzrB,KAAKq5C,KAAKmG,GACf9zB,EAAK1rB,KAAKq5C,KAAK4G,GACfiC,EAAc,IAAPz2B,EAAW+zB,EAAM/zB,EAAK,EAC7B22B,EAAc,IAAP12B,EAAWu0B,EAAMv0B,EAAK,EAC7B0tB,GAAK3tB,EAAKC,GAAM,EACtBizB,EAAOlG,GAAKyJ,EAAO9I,EACnBwF,EAAOnG,GAAK2J,EAAOhJ,EAEnB,MAAMsG,EAAMf,EAAOhG,GACbwH,EAAMvB,EAAOjG,GACb0J,EAAKriD,KAAKq5C,KAAKqG,GACf4C,EAAKtiD,KAAKq5C,KAAK8G,GACfyD,EAAc,IAAPvB,EAAW3C,EAAM2C,EAAK,EAC7ByB,EAAc,IAAPxB,EAAWnC,EAAMmC,EAAK,EAC7Br/C,GAAKo/C,EAAKC,GAAM,EACtB3D,EAAOhG,GAAKiL,EAAO3gD,EACnB27C,EAAOjG,GAAKmL,EAAO7gD,CACpB,EAED,SAAA84C,CAAUvlD,GACR,IAAIutD,EACAC,EACJ,MAAMpS,EAAS/nD,KAAK+nD,OACpB,IAAK,MAAM5B,KAAW4B,EAAQ,CAC5B,MAAMl+B,EAAQk+B,EAAO5B,GACrB,GAAKt8B,EAAMmlC,SAEJ,YAAIkL,EACTA,EAASrwC,OACJ,YAAIswC,EAAmB,CAC5BA,EAAStwC,EACT,MAAMuwC,EAAMD,EAAO7gD,EAAI4gD,EAAO5gD,EACxB+gD,EAAMF,EAAO5gD,EAAI2gD,EAAO3gD,EACxB+gD,EAAKnkD,KAAKq5C,KAAK4K,EAAMA,EAAMC,EAAMA,GACvCH,EAAOzK,kBAAkB9iD,GACzBwtD,EAAO1K,kBAAkB9iD,GACzB,MAAM4tD,EAAMJ,EAAO7gD,EAAI4gD,EAAO5gD,EACxBkhD,EAAML,EAAO5gD,EAAI2gD,EAAO3gD,EAExBgQ,EADKpT,KAAKq5C,KAAK+K,EAAMA,EAAMC,EAAMA,GACxBF,EACfJ,EAAOvL,IAAMplC,EACb2wC,EAAOtL,IAAMrlC,EACb2wC,EAAOrL,IAAMtlC,EACb2wC,EAAOpL,IAAMvlC,EACb4wC,EAAOxL,IAAMplC,EACb4wC,EAAOvL,IAAMrlC,EACb4wC,EAAOtL,IAAMtlC,EACb4wC,EAAOrL,IAAMvlC,CACd,MACCM,EAAM4lC,kBAAkB9iD,EAE3B,MACGutD,IAAAA,QAAqBC,IAAAA,GACvBD,EAAOzK,kBAAkB9iD,EAE5B,EAED,IAAA8tD,CAAKnhD,EAAWC,EAAWmhD,EAAY93C,GACrC,GAAW,IAAP83C,EACF,OAEF,MAAM/tD,EAAc,OAAViW,EAAiBA,EAAM4qC,UAAY5gD,YAAYC,MACnDuM,EAAIpZ,KAAK8vD,aACf,IAAIjB,EAAKz1C,EAAIjD,KAAKq7C,IAAIr7C,KAAKwkD,GAAK,GAC5B7L,EAAK11C,EAAIjD,KAAKs7C,IAAIt7C,KAAKwkD,GAAK,GAChC,MAAMtL,EAAOrvD,KAAKgwD,YACZrB,EAAK,GAAMU,EAAOl5C,KAAKq7C,IAAIr7C,KAAKwkD,GAAK,GACrC/L,EAAK,GAAMS,EAAOl5C,KAAKs7C,IAAIt7C,KAAKwkD,GAAK,GACrCxT,EAAM,EAAIwH,EAAKA,EAAME,EACrBzH,EAAM,EAAIwH,EAAKA,EAAME,EAErB/G,EAAS/nD,KAAK+nD,OACpB,IAAI6S,EAAQ7S,EAAO6S,MACfC,EAAQ9S,EAAO8S,MACnB,QAAID,IAAAA,QAAoBC,IAAAA,EAAkB,CACxC,MAAMxT,EAAK16C,EAAIiuD,EAAMjuD,EACrB,GAAI06C,EAAK,EAAG,CACV,MAAMyT,EAAM3kD,KAAKo7C,IAAIsJ,EAAMvhD,EAAIshD,EAAMthD,GAAK,EACpCyhD,EAAM5kD,KAAKo7C,IAAIsJ,EAAMthD,EAAIqhD,EAAMrhD,GAAK,EAEpCyhD,GADNN,EAAKvkD,KAAKC,IAAID,KAAK2L,KAAKutC,EAAOhI,EAAIqT,GAAKrL,EAAOhI,IAC9ByT,EAAM3kD,KAAKq7C,IAAIr7C,KAAKwkD,GAAK,GAAMxT,EAC1C8T,EAAMP,EAAKK,EAAM5kD,KAAKs7C,IAAIt7C,KAAKwkD,GAAK,GAAMvT,EAChDyH,EAAMA,EAAKiM,EAAO3T,EAClB2H,EAAMA,EAAKiM,EAAO3T,EAElBwT,EAAMthD,GAAK0hD,EACXJ,EAAMrhD,GAAK0hD,EACXL,EAAMjuD,EAAIA,EACViuD,EAAMzT,GAAK6T,EACXJ,EAAMxT,GAAK6T,EACXL,EAAMvT,GAAKA,EACXuT,EAAMjM,GAAKqM,EAAK3T,EAChBuT,EAAMhM,GAAKqM,EAAK5T,EAChBuT,EAAM/L,GAAK+L,EAAMjM,GAAK,EAAIE,EAAK+L,EAAMjM,GAAK,GAAKE,EAAK,EACpD+L,EAAM9L,GAAK8L,EAAMhM,GAAK,EAAIE,EAAK8L,EAAMhM,GAAK,GAAKE,EAAK,EAEpD+L,EAAMvhD,GAAK0hD,EACXH,EAAMthD,GAAK0hD,EACXJ,EAAMluD,EAAIA,EACViuD,EAAMzT,IAAM6T,EACZJ,EAAMxT,IAAM6T,EACZL,EAAMvT,GAAKA,EACXwT,EAAMlM,IAAMqM,EAAK3T,EACjBwT,EAAMjM,IAAMqM,EAAK5T,EACjBwT,EAAMhM,GAAKgM,EAAMlM,GAAK,EAAIE,EAAKgM,EAAMlM,GAAK,GAAKE,EAAK,EACpDgM,EAAM/L,GAAK+L,EAAMjM,GAAK,EAAIE,EAAK+L,EAAMjM,GAAK,GAAKE,EAAK,CACrD,CACF,MACC9uD,KAAKmwD,UAAUvtC,GAEX83C,EAAK,GACPE,EAAQ56D,KAAKgoD,YAAY,QAAS,WAAW,EAAO1uC,EAAI6tC,EAAI5tC,EAAI6tC,EAAIz6C,GACpEiuD,EAAMjM,IAAMA,EACZiM,EAAMhM,IAAMA,EACZgM,EAAM/L,GAAKA,EACX+L,EAAM9L,GAAKA,EACX+L,EAAQ76D,KAAKgoD,YAAY,QAAS,WAAW,EAAO1uC,EAAI6tC,EAAI5tC,EAAI6tC,EAAIz6C,GACpEkuD,EAAMlM,GAAKA,EACXkM,EAAMjM,GAAKA,EACXiM,EAAMhM,IAAMA,EACZgM,EAAM/L,IAAMA,IAEZ8L,EAAQ56D,KAAKgoD,YAAY,QAAS,WAAW,EAAO1uC,EAAI6tC,EAAI5tC,EAAI6tC,EAAIz6C,GACpEiuD,EAAMjM,GAAKA,EACXiM,EAAMhM,GAAKA,EACXgM,EAAM/L,IAAMA,EACZ+L,EAAM9L,IAAMA,EACZ+L,EAAQ76D,KAAKgoD,YAAY,QAAS,WAAW,EAAO1uC,EAAI6tC,EAAI5tC,EAAI6tC,EAAIz6C,GACpEkuD,EAAMlM,IAAMA,EACZkM,EAAMjM,IAAMA,EACZiM,EAAMhM,GAAKA,EACXgM,EAAM/L,GAAKA,GAGb/G,EAAO6S,MAAQA,EACf7S,EAAO8S,MAAQA,EACd76D,KAA8BkoD,YAAc,EAC7CloD,KAAK6wD,WAAW+J,EAAOh4C,GACvB5iB,KAAK6wD,WAAWgK,EAAOj4C,EAE1B,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAG3B,OAFA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3BwhD,YAAczK,EAAQ0K,kBACvB1K,CACR,EAED,UAAAgE,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM9vC,EAASrN,EAASqN,OAEtB8vC,EADa,YAAX9vC,EACWy+C,GACO,UAAXz+C,EACI0+C,GACO,UAAX1+C,EACI2+C,GACoB,oBAAjBxO,aACHsO,GACkB,oBAAfrO,WACHsO,GAEAC,EAEhB,CACD,OAAO7O,CACR,EAED,MAAA71C,CAAO2kD,GACLt7D,MAAM2W,OAAO2kD,GACb,MAAMzkD,EAAoBykD,EAAap9D,UAEvC,IAAIwb,EAAY7C,EAAkB6C,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,yBACtDA,EAAkBq8C,oBACpBx5C,GAAao5C,GAAaK,wBAE1Bz5C,IAAco5C,GAAaK,+BAErBt8C,EAAiEq8C,qBAEvE90D,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,WACtDA,EAAkBu8C,MACpB15C,GAAao5C,GAAaO,UAE1B35C,IAAco5C,GAAaO,iBAErBx8C,EAAiEu8C,OAE3Eh1D,OAAOgB,eAAeyX,EAAmB,YAAa,CACpDtX,MAAOma,EACPE,YAAY,EACZC,cAAc,GAEjB,EAEDs5C,wBAAyB,GAAMxD,GAAgB18C,UAAY,EAC3DogD,UAAW,GAAM1D,GAAgB18C,UAAY,EAC7C8/C,aAAc,GAAMpD,GAAgB18C,UAAY,EAEhDA,UAAW08C,GAAgB18C,UAAY,EACvCE,UAAW,GAAMw8C,GAAgB18C,UAAY,GAAM,IA8CxCkoD,GAAyGrI,GAAat/C,OAA8D,sBAAuB,CACtN4/C,OAAO,EAEP,iBAAApK,CAAkB1F,GAChBA,EAAK1B,iBAAiB,eAAgB3hD,KAAK8sD,gBAC3CzJ,EAAK1B,iBAAiB,eAAgB3hD,KAAK+sD,gBAC3C1J,EAAK1B,iBAAiB,cAAe3hD,KAAKgtD,eAC1C3J,EAAK1B,iBAAiB,QAAS3hD,KAAKs7D,QACrC,EAED,iBAAArS,CAAkB5F,GAChBA,EAAKvB,oBAAoB,eAAgB9hD,KAAK8sD,gBAC9CzJ,EAAKvB,oBAAoB,eAAgB9hD,KAAK+sD,gBAC9C1J,EAAKvB,oBAAoB,cAAe9hD,KAAKgtD,eAC7C3J,EAAKvB,oBAAoB,QAAS9hD,KAAKs7D,QACxC,EAED,iBAAApS,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,cAAe3hD,KAAKitD,eACnDvqC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKktD,aACjDxqC,SAAS1S,KAAK2xC,iBAAiB,gBAAiB3hD,KAAKmtD,iBACrDzqC,SAAS1S,KAAK2xC,iBAAiB,eAAgB3hD,KAAKotD,uBACrD,EAED,iBAAApE,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,cAAe9hD,KAAKitD,eACtDvqC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKktD,aACpDxqC,SAAS1S,KAAK8xC,oBAAoB,gBAAiB9hD,KAAKmtD,iBACxDzqC,SAAS1S,KAAK8xC,oBAAoB,eAAgB9hD,KAAKotD,uBACxD,EAED,WAAAC,CAAYxjC,EAAgCjH,GAC1CiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,UAEhB3jC,EAAM+8B,MAAQhkC,EAAMgkC,MACpB/8B,EAAMrD,OAAS5D,EAAM4D,OACrBqD,EAAMg9B,MAAQjkC,EAAMikC,MACpBh9B,EAAMi9B,MAAQlkC,EAAMkkC,MACpBj9B,EAAMk9B,MAAQnkC,EAAMmkC,MACpBl9B,EAAMm9B,SAAWpkC,EAAMokC,SACvBn9B,EAAMo9B,mBAAqBrkC,EAAMqkC,kBAClC,EAED,cAAA6F,CAAelqC,GACb,GAA0B,UAAtBA,EAAM6qC,aAA6C,IAAlB7qC,EAAM2jC,QACzC,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACpF3jC,EAAMmlC,UACThvD,KAAKqtD,YAAYxjC,EAAOjH,GAErBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,cAAAmqC,CAAenqC,GACb,GAA0B,UAAtBA,EAAM6qC,YACR,OAEF,MAAM5jC,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAEQA,EAAMmlC,UAChBhvD,KAAKqtD,YAAYxjC,EAAOjH,GAE1B5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,aAAAoqC,CAAcpqC,GACZ,MAAMiH,EAAQ7pB,KAAKioD,iBAAiBrlC,EAAM8qC,UAAWxH,GAAauB,iBAAiB7kC,EAAM6qC,aACrD7qC,EAAMyjC,UAAWzjC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACzFxtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEC,UAAtBA,EAAM6qC,aAA4C,IAAjB7qC,EAAM0jC,QACzCtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,aAAAqqC,CAAcrqC,GACZ,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,WAAAsqC,CAAYtqC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,eAAAuqC,CAAgBvqC,GACd,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACzB,EAED,sBAAAwqC,CAAuBxqC,GACrB,MAAMiH,EAAQ7pB,KAAK8nD,SAASllC,EAAM8qC,WACpB,OAAV7jC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,OAAA04C,CAAQ14C,GACD5iB,KAAKmzD,QAGVvwC,EAAM4kC,iBACNxnD,KAAKy6D,KAAK73C,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM24C,OAAQ34C,GACvD,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAU3B,OATA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bu7C,eAAiBxE,EAAQwE,eAAevmD,KAAK+hD,GACrDA,EAAQyE,eAAiBzE,EAAQyE,eAAexmD,KAAK+hD,GACrDA,EAAQ0E,cAAgB1E,EAAQ0E,cAAczmD,KAAK+hD,GACnDA,EAAQ2E,cAAgB3E,EAAQ2E,cAAc1mD,KAAK+hD,GACnDA,EAAQ4E,YAAc5E,EAAQ4E,YAAY3mD,KAAK+hD,GAC/CA,EAAQ6E,gBAAkB7E,EAAQ6E,gBAAgB5mD,KAAK+hD,GACvDA,EAAQ8E,uBAAyB9E,EAAQ8E,uBAAuB7mD,KAAK+hD,GACrEA,EAAQgT,QAAUhT,EAAQgT,QAAQ/0D,KAAK+hD,GAChCA,CACR,IAkCU6S,GAAqGtI,GAAat/C,OAA4D,oBAAqB,CAC9M,iBAAAw1C,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAK2tD,aAC1C,EAED,iBAAA1E,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAK2tD,aAC7C,EAED,iBAAAzE,CAAkB7F,GAChBA,EAAK1B,iBAAiB,YAAa3hD,KAAK4tD,aACxCvK,EAAK1B,iBAAiB,WAAY3hD,KAAK6tD,YACvCxK,EAAK1B,iBAAiB,cAAe3hD,KAAK8tD,cAC3C,EAED,iBAAA9E,CAAkB3F,GAChBA,EAAKvB,oBAAoB,YAAa9hD,KAAK4tD,aAC3CvK,EAAKvB,oBAAoB,WAAY9hD,KAAK6tD,YAC1CxK,EAAKvB,oBAAoB,cAAe9hD,KAAK8tD,cAC9C,EAED,WAAAT,CAAYxjC,EAAgCjH,EAAmBmrC,GAC7DlkC,EAAM7rB,OAAS+vD,EAAM/vD,OACrB6rB,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAK4G,EAAMT,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAK2G,EAAMR,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIy0C,EAAMT,QAChBzjC,EAAMtQ,EAAIw0C,EAAMR,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAG,CAAa/qC,GACX,MAAMorC,EAAUprC,EAAMqrC,cACtB,IAAK,IAAI1vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAKioD,iBAAiB8F,EAAMG,WAAY,SAAS,EAC3BH,EAAMT,QAASS,EAAMR,QAAS3qC,EAAM4qC,WACxExtD,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC1BlkC,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,EAE1B,CACF,EAED,WAAAgrC,CAAYhrC,GACV,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKorD,UAAUvhC,EAAOjH,GACvB,CACF,EAED,UAAAirC,CAAWjrC,GACT,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBACTvnD,KAAK+rD,MAAMliC,EAAOjH,GAEpB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,EAED,aAAAkrC,CAAclrC,GACZ,MAAMorC,EAAUprC,EAAMurC,eACtB,IAAK,IAAI5vD,EAAI,EAAGA,EAAIyvD,EAAQxvD,OAAQD,GAAK,EAAG,CAC1C,MAAMwvD,EAAQC,EAAQzvD,GAChBsrB,EAAQ7pB,KAAK8nD,SAASiG,EAAMG,YACpB,OAAVrkC,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,EAAOmrC,GAC/B/tD,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,CACF,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAM3B,OALA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3Bo8C,aAAerF,EAAQqF,aAAapnD,KAAK+hD,GACjDA,EAAQsF,YAActF,EAAQsF,YAAYrnD,KAAK+hD,GAC/CA,EAAQuF,WAAavF,EAAQuF,WAAWtnD,KAAK+hD,GAC7CA,EAAQwF,cAAgBxF,EAAQwF,cAAcvnD,KAAK+hD,GAC5CA,CACR,IA2CU8S,GAAqGvI,GAAat/C,OAA4D,oBAAqB,CAC9M4/C,OAAO,EAEP,iBAAApK,CAAkB1F,GAChBA,EAAK1B,iBAAiB,aAAc3hD,KAAKouD,cACzC/K,EAAK1B,iBAAiB,aAAc3hD,KAAKquD,cACzChL,EAAK1B,iBAAiB,YAAa3hD,KAAKsuD,aACxCjL,EAAK1B,iBAAiB,QAAS3hD,KAAKs7D,QACrC,EAED,iBAAArS,CAAkB5F,GAChBA,EAAKvB,oBAAoB,aAAc9hD,KAAKouD,cAC5C/K,EAAKvB,oBAAoB,aAAc9hD,KAAKquD,cAC5ChL,EAAKvB,oBAAoB,YAAa9hD,KAAKsuD,aAC3CjL,EAAKvB,oBAAoB,QAAS9hD,KAAKs7D,QACxC,EAED,iBAAApS,CAAkB7F,GAChB3gC,SAAS1S,KAAK2xC,iBAAiB,YAAa3hD,KAAKuuD,aACjD7rC,SAAS1S,KAAK2xC,iBAAiB,UAAW3hD,KAAKwuD,WAC/C9rC,SAAS1S,KAAK2xC,iBAAiB,aAAc3hD,KAAKyuD,qBACnD,EAED,iBAAAzF,CAAkB3F,GAChB3gC,SAAS1S,KAAK8xC,oBAAoB,YAAa9hD,KAAKuuD,aACpD7rC,SAAS1S,KAAK8xC,oBAAoB,UAAW9hD,KAAKwuD,WAClD9rC,SAAS1S,KAAK8xC,oBAAoB,aAAc9hD,KAAKyuD,qBACtD,EAED,WAAApB,CAAYxjC,EAAgCjH,GAC1CiH,EAAM7rB,OAAS4kB,EAAM5kB,OACrB6rB,EAAMy8B,OAAS1jC,EAAM0jC,OACrBz8B,EAAM08B,QAAU3jC,EAAM2jC,QACtB18B,EAAM28B,OAAS5jC,EAAM4jC,OACrB38B,EAAM48B,QAAU7jC,EAAM6jC,QACtB58B,EAAM68B,QAAU9jC,EAAM8jC,QACtB78B,EAAM88B,SAAW/jC,EAAM+jC,SAEvB98B,EAAMs9B,GAAKvkC,EAAM0qC,QAAUzjC,EAAMvQ,EACjCuQ,EAAMu9B,GAAKxkC,EAAM2qC,QAAU1jC,EAAMtQ,EACjCsQ,EAAMw9B,GAAKzkC,EAAM4qC,UAAY3jC,EAAMld,EACnCkd,EAAMvQ,EAAIsJ,EAAM0qC,QAChBzjC,EAAMtQ,EAAIqJ,EAAM2qC,QAChB1jC,EAAMld,EAAIiW,EAAM4qC,SACjB,EAED,YAAAY,CAAaxrC,GACX,GAAsB,IAAlBA,EAAM2jC,QACR,OAEF,MAAM18B,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAClBrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACnE3jC,EAAMmlC,UACThvD,KAAKqtD,YAAYxjC,EAAOjH,GAErBiH,EAAM4kB,UACTzuC,KAAK+pD,WAAWlgC,EAAOjH,EAE1B,EAED,YAAAyrC,CAAazrC,GACX,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAEQA,EAAMmlC,UAChBhvD,KAAKqtD,YAAYxjC,EAAOjH,GAE1B5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,WAAA0rC,CAAY1rC,GACV,MAAMiH,EAAQ7pB,KAAKioD,iBAAiB,QAAS,SAAS,EAClBrlC,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM4qC,WACxExtD,KAAKqtD,YAAYxjC,EAAOjH,GACnBiH,EAAM2+B,UACTxoD,KAAK8qD,WAAWjhC,EAAOjH,GAEJ,IAAjBA,EAAM0jC,QACRtmD,KAAKqpD,YAAYx/B,EAAOjH,EAE3B,EAED,WAAA2rC,CAAY3rC,GACV,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKorD,UAAUvhC,EAAOjH,GACvB,EAED,SAAA4rC,CAAU5rC,GACR,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKwrD,SAAS3hC,EAAOjH,GAChBiH,EAAM09B,kBAAqC,IAAjB3kC,EAAM0jC,QACnCtmD,KAAK+rD,MAAMliC,EAAOjH,GAErB,EAED,oBAAA6rC,CAAqB7rC,GACnB,MAAMiH,EAAQ7pB,KAAK8nD,SAAS,SACd,OAAVj+B,IAGJ7pB,KAAKqtD,YAAYxjC,EAAOjH,GACxB5iB,KAAKqpD,YAAYx/B,EAAOjH,GACxB5iB,KAAKspD,SAASz/B,EAAOjH,GACtB,EAED,OAAA04C,CAAQ14C,GACD5iB,KAAKmzD,QAGVvwC,EAAM4kC,iBACNxnD,KAAKy6D,KAAK73C,EAAM0qC,QAAS1qC,EAAM2qC,QAAS3qC,EAAM24C,OAAQ34C,GACvD,GAEH,CACE,SAAA5N,CAAUszC,EAAmB/2C,GAS3B,OARA+2C,EAAUvoD,MAAMiV,UAAUszC,EAAS/2C,IAC3B68C,aAAe9F,EAAQ8F,aAAa7nD,KAAK+hD,GACjDA,EAAQ+F,aAAe/F,EAAQ+F,aAAa9nD,KAAK+hD,GACjDA,EAAQgG,YAAchG,EAAQgG,YAAY/nD,KAAK+hD,GAC/CA,EAAQiG,YAAcjG,EAAQiG,YAAYhoD,KAAK+hD,GAC/CA,EAAQkG,UAAYlG,EAAQkG,UAAUjoD,KAAK+hD,GAC3CA,EAAQmG,qBAAuBnG,EAAQmG,qBAAqBloD,KAAK+hD,GACjEA,EAAQgT,QAAUhT,EAAQgT,QAAQ/0D,KAAK+hD,GAChCA,CACR,ICphDUkT,GAAiB,CAC5B7yC,MAAAA,CAAMrP,EAAsCC,IACtCD,IAAMC,GAEc,iBAAND,GAAwB,OAANA,GAA2B,iBAANC,GAAwB,OAANA,IAClED,EAAEstC,QAAUrtC,EAAEqtC,OACdttC,EAAEkN,SAAWjN,EAAEiN,QACflN,EAAEmiD,WAAaliD,EAAEkiD,UACjBniD,EAAEoiD,UAAYniD,EAAEmiD,UAkBhBC,GAAiB,CAC5BhzC,MAAAA,CAAMrP,EAAsCC,IACtCD,IAAMC,GAEc,iBAAND,GAAwB,OAANA,GAA2B,iBAANC,GAAwB,OAANA,IAClED,EAAEstC,QAAUrtC,EAAEqtC,OACdttC,EAAEkN,SAAWjN,EAAEiN,QACflN,EAAEmiD,WAAaliD,EAAEkiD,UACjBniD,EAAEoiD,UAAYniD,EAAEmiD,SAChBpiD,EAAEsiD,aAAeriD,EAAEqiD,YACnBtiD,EAAEuiD,YAActiD,EAAEsiD,WAClBviD,EAAEwW,QAAUvW,EAAEuW,QCnBdkyB,IAAAA,GAAe,kGAAf,OAAApiD,EAAA,cAAwBugB,4CAiC1BngB,KAAA8/C,gBAGP1gD,EAAAY,KAAAE,GAAAd,EAAAY,KAAA87D,OAAA,IAeO97D,KAAA+7D,qBAAwC38D,EAAAY,KAAAg8D,OAAA,GA2CxCh8D,KAAA+/C,eAGP3gD,EAAAY,KAAAi8D,OAAA,GAeOj8D,KAAAk8D,qBAAwC98D,EAAAY,KAAAm8D,OAAA,GAyCxCn8D,KAAAo8D,SAGPh9D,EAAAY,KAAAq8D,OAAA,GA8BOr8D,KAAAs8D,YAGPl9D,EAAAY,KAAAu8D,OAAA,GAcOv8D,KAAAw8D,kBAAuCp9D,EAAAY,KAAAy8D,OAAA,GA4BvCz8D,KAAA08D,YAGPt9D,EAAAY,KAAA28D,OAAA,GAcO38D,KAAA48D,kBAAuCx9D,EAAAY,KAAA68D,OAAA,GA6BvC78D,KAAAggD,UAGP5gD,EAAAY,KAAA88D,OAAA,GAmBO98D,KAAA+8D,KAAwB39D,EAAAY,KAAAg9D,OAAA,EAClC,GAzSEC,EAAA,CAAA/tD,EAAAA,SAAS,CACR2C,UAAW2pD,GACX,SAAArpD,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAMypC,EAAiB9/C,KAAKk9D,SAC5Bl9D,KAAKuV,aAAauqC,EACnB,CACF,EACDod,OAAAA,KACS,CACLtW,MAAOlkC,SAASw+B,gBAAgBC,YAChC36B,OAAQ9D,SAASw+B,gBAAgBG,aACjCoa,SAAUz3C,OAAOy8B,YACjBib,QAAS13C,OAAO28B,cAGpB,WAAAgC,CAAYya,EAAmCC,GACzCD,EAAkBxW,QAAUyW,EAAkBzW,OAASwW,EAAkB52C,SAAW62C,EAAkB72C,QACxGxmB,KAAKuR,MAAM5Q,cAAc,iCAAkCy8D,EAAmBp9D,KAAKuR,OACnFvR,KAAKuR,MAAM6qD,SAASe,SACpBn9D,KAAKuR,MAAMyuC,UAAUmd,UAErBn9D,KAAKuR,MAAM5Q,cAAc,iCAAkCy8D,EAAmBp9D,KAAKuR,MAEtF,EACDe,YAAakpD,GAAe7yC,SAO7B20C,EAAA,CAAAC,EAAAA,WAAW,CACVC,MAAO,GACP/6C,UAAW,CAAC,SAAU,UACtBg7C,WAAAA,IACwB,oBAAXz5C,OACFA,OAEF,KAET,MAAArB,CAAOC,GACL5iB,KAAKuR,MAAMuuC,eAAeqd,QAC3B,KAIFO,EAAA,CAAAxuD,EAAAA,SAAS,CACR2C,UAAW8pD,GACX,SAAAxpD,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAM0pC,EAAiB//C,KAAKk9D,SAC5Bl9D,KAAKuV,aAAawqC,EACnB,CACF,EACD,MAAAmd,GACE,IAAInd,EAsBJ,OApBEA,OADSA,IAAP/7B,OAAO+7B,gBAAuD,OAA1B/7B,OAAO+7B,eAC5B,CACf6G,MAAO5iC,OAAO+7B,eAAe6G,MAC7BpgC,OAAQxC,OAAO+7B,eAAev5B,OAC9Bi1C,SAAUz3C,OAAO+7B,eAAe0b,SAChCC,QAAS13C,OAAO+7B,eAAe2b,QAC/BE,WAAY53C,OAAO+7B,eAAe6b,WAClCC,UAAW73C,OAAO+7B,eAAe8b,UACjC/rC,MAAO9L,OAAO+7B,eAAejwB,OAGd,CACf82B,MAAOlkC,SAASw+B,gBAAgBC,YAChC36B,OAAQ9D,SAASw+B,gBAAgBG,aACjCoa,SAAUz3C,OAAOy8B,YACjBib,QAAS13C,OAAO28B,YAChBib,WAAY,EACZC,UAAW,EACX/rC,MAAO,GAGJiwB,CACR,EACD,WAAA4C,CAAY5C,GACV//C,KAAKuR,MAAM5Q,cAAc,iCAAkCo/C,EAAgB//C,KAAKuR,MACjF,EACDe,YAAaqpD,GAAehzC,SAO7Bg1C,EAAA,CAAAJ,EAAAA,WAAW,CACVC,MAAO,GACP/6C,UAAW,SACXg7C,WAAAA,IACwB,oBAAXz5C,aAAiC+7B,IAAP/7B,OAAO+7B,eACnC/7B,OAAO+7B,eAET,KAET,MAAAp9B,CAAOC,GACL5iB,KAAKuR,MAAMwuC,eAAeod,QAC3B,KAIFS,EAAA,CAAA1uD,EAAAA,SAAS,CACR2C,UAAW0/B,GACXjyC,MAAOiyC,GAAWxa,OAClB,MAAAomC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAM+lD,EAAWp8D,KAAKk9D,SACtBl9D,KAAKuV,aAAa6mD,EACnB,CACF,EACD,MAAAc,GACE,IAAId,EACJ,IACE,MAAMyB,EAAgBC,iBAAiBp7C,SAASw+B,iBAC1CzP,EAAWxrB,EAAAA,OAAO0D,MAAMk0C,EAAcE,iBAAiB,0BAA0BC,UACjFtsB,EAAazrB,EAAAA,OAAO0D,MAAMk0C,EAAcE,iBAAiB,4BAA4BC,UACrFrsB,EAAc1rB,EAAAA,OAAO0D,MAAMk0C,EAAcE,iBAAiB,6BAA6BC,UAE7F5B,EAAW,CAAC3qB,SAAAA,EAAUC,WAAAA,EAAYC,YAAAA,EAAaC,UAD7B3rB,EAAAA,OAAO0D,MAAMk0C,EAAcE,iBAAiB,2BAA2BC,UAE1F,CAAC,MAAOC,GACP7B,EAAW7qB,GAAWxa,MACvB,CACD,OAAOqlC,CACR,EACD,WAAAzZ,CAAYyZ,GACVp8D,KAAKuR,MAAM5Q,cAAc,mCAAoCy7D,EAAUp8D,KAAKuR,MAC7E,EACDe,YAAai/B,GAAW5oB,MACxB,QAAA9lB,GACE,GAAmB,oBAARq7D,cAAuBA,IAAIC,UAClCD,IAAIC,SAAS,mDAAoD,CACnE,MAAMN,EAAgBn7C,SAASw+B,gBAAgBj5B,MAC/C41C,EAAcO,YAAY,wBAAyB,4BACnDP,EAAcO,YAAY,0BAA2B,8BACrDP,EAAcO,YAAY,2BAA4B,+BACtDP,EAAcO,YAAY,yBAA0B,6BACpDp+D,KAAKm9D,QACN,CACF,KAOFkB,EAAA,CAAAnvD,EAAAA,SAAS,CACR2C,UAAWyb,OACX,SAAAnb,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAMimD,EAAct8D,KAAKk9D,SACzBl9D,KAAKuV,aAAa+mD,EACnB,CACF,EACD,MAAAY,GACE,IAAIZ,EAQJ,OANEA,EADoB,oBAAXt4C,QAA0BA,OAAOs6C,WAAW,2BAA2BC,QAClE,YACa,oBAAXv6C,QAA0BA,OAAOs6C,WAAW,4BAA4BC,QAC1E,aAITjC,CACR,EACD,WAAA3Z,CAAY2Z,GACVt8D,KAAKuR,MAAM5Q,cAAc,mCAAoC27D,EAAat8D,KAAKuR,OAC/EvR,KAAKuR,MAAM6qD,SAASe,SACpBn9D,KAAKuR,MAAMyuC,UAAUmd,QACtB,KAOFqB,EAAA,CAAAh8C,EAAAA,aAAa,CACZC,UAAW,SACXg7C,WAAAA,IACwB,oBAAXz5C,OACFA,OAAOs6C,WAAW,4BAEpB,KAET,MAAA37C,CAAOC,GACL5iB,KAAKuR,MAAM+qD,YAAYa,QACxB,KAIFsB,EAAA,CAAAvvD,EAAAA,SAAS,CACR2C,UAAWyb,OACX,SAAAnb,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAMqmD,EAAc18D,KAAKk9D,SACzBl9D,KAAKuV,aAAamnD,EACnB,CACF,EACD,MAAAQ,GACE,IAAIR,EAQJ,OANEA,EADoB,oBAAX14C,QAA0BA,OAAOs6C,WAAW,gCAAgCC,QACvE,OACa,oBAAXv6C,QAA0BA,OAAOs6C,WAAW,iCAAiCC,QAC/E,QAEA,gBAET7B,CACR,EACD,WAAA/Z,CAAY+Z,GACV18D,KAAKuR,MAAM5Q,cAAc,mCAAoC+7D,EAAa18D,KAAKuR,MAChF,KAOFmtD,EAAA,CAAAl8C,EAAAA,aAAa,CACZC,UAAW,SACXg7C,WAAAA,IACwB,oBAAXz5C,OACFA,OAAOs6C,WAAW,gCAEpB,KAET,MAAA37C,CAAOC,GACL5iB,KAAKuR,MAAMmrD,YAAYS,QACxB,KAIFwB,EAAA,CAAAzvD,EAAAA,SAAS,CACR2C,UAAWyb,OACX,SAAAnb,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAM2pC,EAAYhgD,KAAKk9D,SACvBl9D,KAAKuV,aAAayqC,EACnB,CACF,EACD,MAAAkd,GACE,IAAIld,EACJ,MAAMvC,EAAWz9C,KAAKuR,MAAMuuC,eAAexgD,MAQ3C,OANE0gD,EADEvC,EAASmJ,MAAQ,IACP,SACHnJ,EAASmJ,MAAQ,IACd,SAEA,UAEP5G,CACR,EACD,WAAA2C,CAAY3C,GACV,OAAOhgD,KAAKuR,MAAM5Q,cAAc,yBAA0Bq/C,EAAWhgD,KAAKuR,MAC3E,KAOFqtD,EAAA,CAAArB,EAAAA,WAAW,CACVC,MAAO,IACP/6C,UAAW,OACXg7C,WAAAA,IACwB,oBAAXz5C,OACFA,OAEF,KAET,MAAArB,CAAOC,GACL5iB,KAAKuR,MAAMuuC,eAAeqd,SAC1Bn9D,KAAKuR,MAAMwuC,eAAeod,SAC1Bn9D,KAAKuR,MAAM6qD,SAASe,SACpBn9D,KAAKuR,MAAM+qD,YAAYa,SACvBn9D,KAAKuR,MAAMmrD,YAAYS,QACxB,KAxQHhgE,EAAS,KAAA,KAAA8/D,EAAA,CAAAn/D,KAAA,QAAAO,KAAA,iBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,mBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAmtC,eAAA9gD,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAmtC,eAGPxgD,CAAAA,IAAAw8D,EAAA57D,GAeF/C,EAAS,KAAA,KAAAmgE,EAAA,CAAAx/D,KAAA,QAAAO,KAAA,uBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,yBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAopD,qBAAA/8D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAopD,qBAAwCz8D,CAAAA,IAAA08D,EAAA97D,GA2CjD/C,EAAS,KAAA,KAAAugE,EAAA,CAAA5/D,KAAA,QAAAO,KAAA,iBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,mBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAotC,eAAA/gD,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAotC,eAGPzgD,CAAAA,IAAA28D,EAAA/7D,GAeF/C,EAAS,KAAA,KAAAwgE,EAAA,CAAA7/D,KAAA,QAAAO,KAAA,uBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,yBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAupD,qBAAAl9D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAupD,qBAAwC58D,CAAAA,IAAA68D,EAAAj8D,GAyCjD/C,EAAS,KAAA,KAAAygE,EAAA,CAAA9/D,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAAypD,SAAAp9D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAypD,SAGP98D,CAAAA,IAAA+8D,EAAAn8D,GA8BF/C,EAAS,KAAA,KAAAkhE,EAAA,CAAAvgE,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2pD,YAAAt9D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2pD,YAGPh9D,CAAAA,IAAAi9D,EAAAr8D,GAcF/C,EAAS,KAAA,KAAAqhE,EAAA,CAAA1gE,KAAA,QAAAO,KAAA,oBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,sBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA6pD,kBAAAx9D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA6pD,kBAAuCl9D,CAAAA,IAAAm9D,EAAAv8D,GA4BhD/C,EAAS,KAAA,KAAAshE,EAAA,CAAA3gE,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+pD,YAAA19D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+pD,YAGPp9D,CAAAA,IAAAq9D,EAAAz8D,GAcF/C,EAAS,KAAA,KAAAuhE,EAAA,CAAA5gE,KAAA,QAAAO,KAAA,oBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,sBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAiqD,kBAAA59D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAiqD,kBAAuCt9D,CAAAA,IAAAu9D,EAAA38D,GA6BhD/C,EAAS,KAAA,KAAAwhE,EAAA,CAAA7gE,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAqtC,UAAAhhD,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAqtC,UAGP1gD,CAAAA,IAAAw9D,EAAA58D,GAmBF/C,EAAS,KAAA,KAAAyhE,EAAA,CAAA9gE,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAAoqD,KAAA/9D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAoqD,KAAwBz9D,CAAAA,IAAA09D,EAAA98D,IA3SP,EAAA,GCHfw+C,GAAgB,0CAAhB,OAAA9+C,EAAA,MAAA8+C,UAAyBv+B,UACpC,WAAArgB,GACEC,QAuCOC,KAAAqR,OAGPjS,EAAAY,KAAAE,GAAAd,EAAAY,KAAAogB,OAAA,IA2COpgB,KAAAy9C,SAAuEr+C,EAAAY,KAAA6+D,OAAA,GAoMvE7+D,KAAAqgB,iBAAsCjhB,EAAAY,KAAAsgB,OAAA,GAxR7CtgB,KAAK0B,YAAc,EACnB1B,KAAKoG,WAAawG,YAAYC,MAC9B7M,KAAKugB,YAAcm+B,EAAiBl+B,eACpCxgB,KAAK8+D,aAAe,EACpB9+D,KAAK++D,aAAe,EAEpB/+D,KAAKg/D,eAAiBh/D,KAAKg/D,eAAez4D,KAAKvG,MAC/CA,KAAKi/D,eAAiBj/D,KAAKi/D,eAAe14D,KAAKvG,KAChD,CAkFD,cAAA6gB,CAAenf,GACZ1B,KAAuB0B,YAAcA,CACvC,CAOS,WAAA2C,CAAY3C,EAAwByC,GAC5C,OAAOzC,CACR,CAED,aAAAoB,CAAc9E,EAAc0D,EAAwByC,GAClDzC,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK0B,aAAeA,EAAcmwC,GAAKhwC,WACrB,IAApCH,EAAcmwC,GAAKsD,eACtB/wC,GAAoBytC,GAAKgH,cAEc,IAApCn3C,EAAcmwC,GAAKiH,eACtB10C,GAAoBytC,GAAKkH,cAE3B/4C,KAAK6gB,eAAe7gB,KAAK0B,YAAc0C,GACnCD,GAAkF,IAApEnE,KAAK0B,aAAemwC,GAAKoH,eAAiBpH,GAAK2J,kBAA0Bx7C,KAAKugB,aAAem+B,EAAiBC,mBAC9H3+C,KAAK+gB,mBAEL/gB,KAAKghB,gBAER,CAES,cAAAA,GACR,MAAMtf,EAAc1B,KAAK0B,YACmB,IAAvCA,EAAcmwC,GAAKoH,iBAA8D,IAApCv3C,EAAcmwC,GAAKsD,aACnEn1C,KAAKk/D,oBAAoBl/D,KAAKugB,aACmB,IAAvC7e,EAAcmwC,GAAK2J,iBAA8D,IAApC95C,EAAcmwC,GAAKiH,cAC1E94C,KAAKm/D,qBAER,CAES,YAAA/9C,GACRphB,KAAKo/D,oBACLp/D,KAAKq/D,mBACN,CAES,gBAAAt+C,GACsC,IAAzC/gB,KAAK0B,YAAcmwC,GAAKsD,eAC3Bn1C,KAAKohB,eACLphB,KAAKg/D,gBAAe,IAEwB,IAAzCh/D,KAAK0B,YAAcmwC,GAAKiH,cAAsB94C,KAAKugB,aAAem+B,EAAiBC,qBACtF3+C,KAAKohB,eACLphB,KAAKi/D,uBAAuB,GAE/B,CAKS,mBAAAC,CAAoB3+C,GACF,IAAtBvgB,KAAK8+D,eACP9+D,KAAK8+D,aAAev9C,WAAWvhB,KAAKg/D,eAAgBz+C,GAEvD,CAES,iBAAA6+C,GACkB,IAAtBp/D,KAAK8+D,eACPt9C,aAAaxhB,KAAK8+D,cAClB9+D,KAAK8+D,aAAe,EAEvB,CAES,cAAAE,CAAe76D,GAAqB,GACvCA,IACHnE,KAAK8+D,aAAe,GAEtB9+D,KAAK6gB,eAAe7gB,KAAK0B,aAAemwC,GAAKsD,YAActD,GAAKoH,gBAChE,IACE,MAAMx3B,EAAK7U,YAAYC,MACtB7M,KAAuBoG,WAAaqb,EAErC,MAAM69C,EAAYt/D,KAAKqR,MAAM6zC,MAC7B,IAAK,MAAMM,KAAU8Z,EAAW,CAC9B,MAAMC,EAAWD,EAAU9Z,GACiB,IAAvC+Z,EAAS59D,MAAQkwC,GAAKsD,cACzBoqB,EAASnqB,eAAe,EAE3B,CAED,MAAMxzB,EAAKhV,YAAYC,MACvB,IAAI2yD,EAAerpD,KAAK2L,IAAI48B,EAAiB+gB,mBAAoBz/D,KAAKugB,aAEpEvgB,KAAKugB,YADHqB,EAAKH,EAAK+9C,EACOrpD,KAAKC,IAAID,KAAK2L,IAAI,EAAsB,EAAnB9hB,KAAKugB,aAAkBm+B,EAAiB38B,gBAE7D5L,KAAKC,IAAIsoC,EAAiBl+B,eAAgBxgB,KAAKugB,YAAc,GAGlFvgB,KAAKo/D,oBACyC,IAAzCp/D,KAAK0B,YAAcmwC,GAAKiH,aAC3B94C,KAAKm/D,sBAC8C,IAAzCn/D,KAAK0B,YAAcmwC,GAAKsD,eAC9BhxC,IACFq7D,EAAerpD,KAAK2L,IAAI48B,EAAiBC,mBAAoB6gB,IAE/Dx/D,KAAKq/D,oBACLr/D,KAAKk/D,oBAAoBM,GAE5B,CAAS,QACRx/D,KAAK6gB,eAAe7gB,KAAK0B,aAAemwC,GAAKoH,eAC9C,CACF,CAKS,mBAAAkmB,GACkB,IAAtBn/D,KAAK++D,eACP/+D,KAAK++D,aAAeW,sBAAsB1/D,KAAKi/D,gBAElD,CAES,iBAAAI,GACkB,IAAtBr/D,KAAK++D,eACPY,qBAAqB3/D,KAAK++D,cAC1B/+D,KAAK++D,aAAe,EAEvB,CAES,cAAAE,CAAeh9C,EAAe9d,GAAqB,GACtDA,IACHnE,KAAK++D,aAAe,GAEtB/+D,KAAK6gB,eAAe7gB,KAAK0B,aAAemwC,GAAKiH,YAAcjH,GAAK2J,gBAChE,aACMv5B,IACFA,EAAOrV,YAAYC,OAEpB7M,KAAuBoG,WAAa6b,EAErC,MAAMq9C,EAAYt/D,KAAKqR,MAAM6zC,MAC7B,IAAK,MAAMM,KAAU8Z,EAAW,CAC9B,MAAMC,EAAWD,EAAU9Z,GACiB,IAAvC+Z,EAAS59D,MAAQkwC,GAAKiH,cACzBymB,EAAS5jB,eAAe,EAE3B,CAGD,GADA37C,KAAKq/D,oBACyC,IAAzCr/D,KAAK0B,YAAcmwC,GAAKsD,aAAoB,CAC/C,IAAIqqB,EAAex/D,KAAKugB,YACpBpc,IACFq7D,EAAerpD,KAAK2L,IAAI48B,EAAiBC,mBAAoB6gB,IAE/Dx/D,KAAKk/D,oBAAoBM,EAC1B,MAAoD,IAAzCx/D,KAAK0B,YAAcmwC,GAAKiH,eAClC94C,KAAKo/D,oBACLp/D,KAAKm/D,sBAER,CAAS,QACRn/D,KAAK6gB,eAAe7gB,KAAK0B,aAAemwC,GAAK2J,eAC9C,CACF,CAED,cAAIr5B,GACF,OAAO0vB,GAAKwH,YAAcxH,GAAK0H,WAChC,CAED,KAAAn3B,GACE,MAAMk9C,EAAYt/D,KAAKqR,MAAM6zC,MAC7B,IAAK,MAAMM,KAAU8Z,EAAW,CACbA,EAAU9Z,GAClBziD,cAAc/C,KAAKmiB,WAC7B,CACF,CAED,OAAAE,GACEriB,KAAKohB,eACLphB,KAAKugB,YAAcm+B,EAAiBl+B,cACrC,GA/PA8B,EAAA,CAAA0iC,GAAQ,CACP,QAAA5B,CAASmc,GACPv/D,KAAKuR,MAAMzO,cAAcy8D,EAAUA,EAAS59D,MAAQkwC,GAAKhwC,YAAY,GACrE,MAAMu6D,EAAWp8D,KAAKuR,MAAMksC,SAAS3uC,aAAastD,SAAS98D,MAC3DigE,EAAStf,WAAWjjB,SAASo/B,EAAUnmD,EAASusC,SAAAA,UACjD,EACD,cAAAc,CAAeic,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAiyC,CAAc+b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,EACD,cAAAmyC,CAAe6b,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAqyC,CAAc2b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,EACD,cAAAquD,CAAexD,GACb,MAAMkD,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EACFA,EAAU9Z,GAClBvF,WAAWjjB,SAASo/B,EAAUnmD,EAASusC,SAAAA,UAEnD,KAOFqd,EAAA,CAAA7wD,EAAAA,SAAS,CACRkC,YAAa8wC,GACbvuC,UAAU,EACV,WAAAqsD,CAAYC,GACV//D,KAAKuR,MAAMF,MAAMuuD,eAAeG,EAAgB3D,SAAS98D,MAC1D,EACD,8BAAA0gE,CAA+BlgB,GAC7B,MAAMwf,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EACFA,EAAU9Z,GAClBziD,cAAc8uC,GAAK0H,YAE/B,EACD,8BAAA0mB,CAA+BngB,GAC7B,MAAMwf,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EACFA,EAAU9Z,GAClBziD,cAAc8uC,GAAKwH,YAAcxH,GAAK0H,YAElD,EACD,8BAAA2mB,CAA+BngB,GAE9B,EACD,gCAAAogB,CAAiC/D,GAC/Bp8D,KAAKuR,MAAMF,MAAMuuD,eAAexD,EACjC,EACD,gCAAAgE,CAAiC9D,GAC/B,MAAMgD,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EACFA,EAAU9Z,GAClBziD,cAAc8uC,GAAKwH,YAAcxH,GAAK0H,YAAc1H,GAAKgK,YAErE,EACD,sBAAAwkB,CAAuBrgB,GACrB,MAAMsf,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EACFA,EAAU9Z,GAClBziD,cAAc8uC,GAAKwH,YAAcxH,GAAKgK,YAElD,KA2LFt5B,EAAA,CAAAC,EAAAA,aAAa,CACZC,UAAW,mBACXzkB,OAA4B,oBAAb0kB,SAA2BA,SAAW,KACrD,MAAAC,CAAOC,GAC4B,YAA7BF,SAASG,gBACX7iB,KAAKuR,MAAM6Q,QAEXpiB,KAAKuR,MAAM8Q,SAEd,KAhPHllB,EAAS,KAAA,KAAAmlB,EAAA,CAAAxkB,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAtB,MAAArS,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAtB,MAGP/R,CAAAA,IAAA8gB,EAAAlgB,GA2CF/C,EAAS,KAAA,KAAA0iE,EAAA,CAAA/hE,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA8qC,SAAAz+C,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA8qC,SAAuEn+C,CAAAA,IAAAu/D,EAAA3+D,GAoMhF/C,EAAS,KAAA,KAAAolB,EAAA,CAAAzkB,KAAA,QAAAO,KAAA,mBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,qBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0N,iBAAArhB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0N,iBAAsC/gB,CAAAA,IAAAghB,EAAApgB,GAGxCN,EAAA4gB,eAAyB,EAEzB5gB,EAAAmiB,eAAyB,IAEzBniB,EAAA6/D,mBAA6B,GAE7B7/D,EAAA++C,mBAA6B,GAAA/+C,CApST,EAAA,GCjBvB,MAAOwiD,WAAsBjiC,EAAAA,QACjC,WAAArgB,GACEC,QACAC,KAAKgqC,OAAShqC,KAAKsgE,cACpB,CAOS,YAAAA,GACR,OAAO,IAAIC,EAAAA,gBACZ,CAGD,kBAAAnhB,CAAmBrV,GACjB/pC,KAAKgqC,OAAOkV,cAAcnV,EAC3B,CAGD,oBAAAuV,CAAqBvV,GACnB/pC,KAAKgqC,OAAOqV,iBAAiBtV,EAC9B,CAGD,0BAAA4V,CAA2B3W,GACzBhpC,KAAKgqC,OAAOS,sBAAsBzB,EACnC,CAGD,4BAAA4W,CAA6B5W,GAC3BhpC,KAAKgqC,OAAOa,yBAAyB7B,EACtC,CAGD,qBAAA8B,CAAsB9B,EAA8B1pC,GAClDU,KAAKgqC,OAAOc,sBAAsB9B,EAAU1pC,EAC7C,ECdUgjD,IAAAA,GAAa,iDAAb,OAAA1iD,EAAA,cAAsBugB,4CAsBxBngB,KAAAqR,OAA4BjS,EAAAY,KAAAE,GAAAd,EAAAY,KAAAogB,OAAA,IAS5BpgB,KAAAy9C,SAAuEr+C,EAAAY,KAAA6+D,OAAA,GAgCvE7+D,KAAAonC,MAGPhoC,EAAAY,KAAAkyC,OAAA,GAiBOlyC,KAAAqlC,KAAkCjmC,EAAAY,KAAAiyC,OAAA,EAC5C,GAjFE3vB,EAAA,CAAA0iC,GAAQ,CACP,QAAA5B,CAASmc,GACPA,EAASl6B,KAAKrI,SAASh9B,KAAKuR,MAAM8zB,KAAK/lC,MAAO2W,WAASusC,WACvD+c,EAASn4B,MAAMpK,SAASh9B,KAAKuR,MAAM61B,MAAM9nC,MAAO2W,WAASusC,WACzD+c,EAASx8D,cAAc8uC,GAAK2D,YAC7B,EACD,cAAA8N,CAAeic,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAiyC,CAAc+b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,EACD,cAAAmyC,CAAe6b,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAqyC,CAAc2b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,KAIFsuD,EAAA,CAAA7wD,EAAAA,SAAS,CACRkC,YAAa8wC,GACbvuC,UAAU,EACV,gCAAA+sD,CAAiC9D,GAC/B18D,KAAKuR,MAAM61B,MAAM+1B,QAClB,KAIFva,EAAA,CAAA1zC,EAAAA,SAAS,CACR2C,UAAWuzB,GACX,SAAAjzB,GACE,OAAOnS,KAAKk9D,QACb,EACD,MAAAC,GACE,GAAIn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAAY,CACxC,MAAM+wB,EAAQpnC,KAAKk9D,SACnBl9D,KAAKuV,aAAa6xB,EACnB,CACF,EACD,MAAA81B,GAGE,MAAoB,SAFIl9D,KAAKuR,MAAMksC,SAAS3uC,aACR4tD,YAAYp9D,MAEvCuvC,GAAMC,KAEND,GAAMyC,KAEhB,EACD,WAAAqR,CAAYvb,GACV,MAAMk4B,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EAAW,CAC9B,MAAMC,EAAWD,EAAU9Z,GAC3B+Z,EAASn4B,MAAMpK,SAASoK,EAAOnxB,EAASusC,SAAAA,WACxC+c,EAASx8D,cAAc8uC,GAAK2D,YAC7B,CACDx1C,KAAKuR,MAAM5Q,cAAc,qBAAsBymC,EAAOpnC,KAAKuR,MAC5D,KAOFgxC,EAAA,CAAArzC,EAAAA,SAAS,CACR2C,UAAWowB,GACX9vB,UAAAA,IACSy8B,GAAKlB,QAEd,WAAAiV,CAAYtd,GACV,MAAMi6B,EAAYt/D,KAAKuR,MAAMF,MAAM6zC,MACnC,IAAK,MAAMM,KAAU8Z,EAAW,CAC9B,MAAMC,EAAWD,EAAU9Z,GAC3B+Z,EAASl6B,KAAKrI,SAASqI,EAAMpvB,EAASusC,SAAAA,WACtC+c,EAASx8D,cAAc8uC,GAAK2D,YAC7B,CACDx1C,KAAKuR,MAAM5Q,cAAc,oBAAqB0kC,EAAMrlC,KAAKuR,MAC1D,KA3DHpU,EAAS,KAAA,KAAAmlB,EAAA,CAAAxkB,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAtB,MAAArS,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAtB,MAA4B/R,CAAAA,IAAA8gB,EAAAlgB,GASrC/C,EAAS,KAAA,KAAA0iE,EAAA,CAAA/hE,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA8qC,SAAAz+C,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA8qC,SAAuEn+C,CAAAA,IAAAu/D,EAAA3+D,GAgChF/C,EAAS,KAAA,KAAAylD,EAAA,CAAA9kD,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAy0B,MAAApoC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAy0B,MAGP9nC,CAAAA,IAAA4yC,EAAAhyC,GAiBF/C,EAAS,KAAA,KAAAolD,EAAA,CAAAzkD,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0yB,KAAArmC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0yB,KAAkC/lC,CAAAA,IAAA2yC,EAAA/xC,IAnFnB,EAAA,GC3Bb,MAAAugE,GAAmB,CAC9B,CAACxjD,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAA6BH,EAAU,eAAgB,iBC6B7D64C,GAA8Fl7B,GAAcjyB,OAA8D,oBAAqB,CAC1M,iBAAIotD,GACF,MAAM,IAAIp+D,MAAM,oBACjB,EAED,kBAAIq+D,GACF,GAAIH,GAAiBxjD,OAAOC,aAAald,KAAKuR,OAAQ,CACpD,MAAMjS,EAAQU,KAAKuR,MAAMsvD,aAAa7gE,KAAK2gE,eAC3C,GAAc,OAAVrhE,EACF,IACE,OAAOU,KAAK2pB,MAAMrqB,EACnB,CAAC,MAAO4kB,GAER,CAEJ,CACD,OAAQ/lB,OAAOioC,eAAepmC,MAAqCV,KACpE,EAED,iBAAAwhE,GACE,MAAMF,EAAiB5gE,KAAK4gE,eAC5B,GAAIA,QAAsD,CACxD,IAAI9rD,EAAU8rD,EAAiB,IAC/B,MAAMviE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,kBACL,IAAIlX,UAAUkX,EACrB,CACD,OAAO8rD,CACR,EAED,UAAA1jC,CAAW3qB,EAAaC,GAClBiuD,GAAiBxjD,OAAOC,aAAald,KAAKuR,QAC5CvR,KAAKuR,MAAMwvD,aAAa/gE,KAAK2gE,cAAepuD,GAE9CxS,MAAMm9B,WAAW3qB,EAAUC,EAC5B,EAED,KAAAmX,GACE,MAAM,IAAIpnB,KACX,GAEH,CACE,SAAAyS,CAAUgzB,EAAoBz2B,GAE5B,OADAy2B,EAAWjoC,MAAMiV,UAAUgzB,EAAUz2B,EAEtC,EAED,UAAA+6C,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM16C,EAAYzC,EAASyC,UAEzB06C,EADE16C,IAAcyb,OACH0zC,GACJnvD,IAAcovD,OACVC,GACJrvD,IAAcsvD,QACVC,GACJvvD,IAAcoU,SACVo7C,GACJxvD,IAAc6b,EACV4zC,GACJzvD,IAAc0mB,YACVgpC,GAEAvhE,IAEhB,CACD,OAAOusD,CACR,IAQUyU,GAAqIN,GAAkBntD,OAAoE,0BAA2B,CACjQ1B,UAAWyb,OAEXhb,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtBmX,MAAMrqB,GACGA,EAGTsJ,SAAStJ,GACAA,IASE4hE,GAAqIR,GAAkBntD,OAAoE,0BAA2B,CACjQ1B,UAAWovD,OAEX3uD,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtB,KAAAmX,CAAMrqB,GACJ,MAAMkiE,GAAUliE,EAChB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,EAED,QAAA54D,CAAStJ,GACP,GAAqB,iBAAVA,EACT,OAAOA,EAET,MAAMkiE,GAAWliE,EACjB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,IAQUJ,GAAwIV,GAAkBntD,OAAqE,2BAA4B,CACtQ1B,UAAWsvD,QAEX7uD,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtBmX,MAAMrqB,KACKA,EAGXsJ,SAAStJ,KACEA,IASA+hE,GAA4IX,GAAkBntD,OAAoE,0BAA2B,CACxQ1B,UAAWoU,EAAAA,OACX3mB,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACG2mB,SAAO0D,MAAMrqB,GAGtB,QAAAsJ,CAAStJ,GACP,IACE,OAAO2mB,SAAOrd,SAAStJ,EACxB,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IAQUqD,GAAyIZ,GAAkBntD,OAAmE,yBAA0B,CACnQ1B,UAAW6b,EACXpuB,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACGouB,EAAM/D,MAAMrqB,GAGrB,QAAAsJ,CAAStJ,GACP,IACE,OAAOouB,EAAM9kB,SAAStJ,EACvB,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IAQUsD,GAAqJb,GAAkBntD,OAAuE,6BAA8B,CACvR1B,UAAW0mB,EAAAA,UACXj5B,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACGi5B,YAAU5O,MAAMrqB,GAGzB,QAAAsJ,CAAStJ,GACP,IACE,OAAOi5B,YAAU3vB,SAAStJ,EAC3B,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IC/PUwD,GAAe,CAC1B,CAACxkD,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAAyBH,EAAU,WAAY,aC2DrD65C,GAAsFl8B,GAAcjyB,OAAsD,gBAAiB,CACtL,iBAAIouD,GACF,MAAM,IAAIp/D,MAAM,oBACjB,EAED,iBAAIq/D,GACF,GAAIH,GAAaxkD,OAAOC,aAAald,KAAKuR,OAAQ,CAChD,IAAIjS,EAAgDU,KAAKuR,MAAMswD,SAAS7hE,KAAK2hE,eAC7E,GAA6B,oBAAlBhnC,eAAiCr7B,aAAiBq7B,cAC3D,IACEr7B,EAAQU,KAAK8hE,aAAaxiE,EAC3B,CAAC,MAAO4kB,GACP5kB,EAAQ,GAAKA,CACd,CAEH,GAAqB,iBAAVA,GAAuC,IAAjBA,EAAMd,OACrC,IACE,OAAOwB,KAAK2pB,MAAMrqB,EACnB,CAAC,MAAO4kB,GAER,CAEJ,CACD,OAAQ/lB,OAAOioC,eAAepmC,MAAiCV,KAChE,EAED,gBAAAy+D,GACE,MAAM6D,EAAgB5hE,KAAK4hE,cAC3B,GAAIA,QAAoD,CACtD,IAAI9sD,EAAU8sD,EAAgB,IAC9B,MAAMvjE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,iBACL,IAAIlX,UAAUkX,EACrB,CACD,OAAO8sD,CACR,EAED,iBAAIG,GACF,IAAIA,EACJ,MAAMC,EAAOP,GAAaxkD,OAAOC,aAAald,KAAKuR,OAASvR,KAAKuR,MAAMywD,UAAY,EACnF,GAAIA,aAAgBC,QAAS,CAC3B,MAAMC,EAASpE,iBAAiBkE,GAC1BL,EAAgB3hE,KAAK2hE,cAC3B,IAAIC,EAAgB,GACpB,GAA6B,iBAAlBD,EACTC,EAAgBM,EAAOnE,iBAAiB4D,QAExC,IAAK,IAAIpjE,EAAI,EAAGA,EAAIojE,EAAcnjE,QAAmC,IAAzBojE,EAAcpjE,OAAcD,GAAK,EAC3EqjE,EAAgBM,EAAOnE,iBAAiB4D,EAAcpjE,IAG1D,GAA6B,IAAzBqjE,EAAcpjE,OAChB,IACEujE,EAAgB/hE,KAAK2pB,MAAMi4C,EAC5B,CAAC,MAAO19C,GAER,CAEJ,CAID,gBAHI69C,IACFA,EAAiB5jE,OAAOioC,eAAepmC,MAAiCV,OAEnEyiE,CACR,EAED,YAAII,GACF,MAAM7iE,EAAQU,KAAKV,MACnB,OAAKU,KAAKoiE,aAAa9iE,GAGhBA,EAFEU,KAAK+hE,aAGf,EAED,WAAAM,GACE,MAAMF,EAAWniE,KAAKmiE,SACtB,GAAIA,QAA0C,CAC5C,IAAIrtD,EAAUqtD,EAAW,IACzB,MAAM9jE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,YACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOqtD,CACR,EAED,YAAIG,GACF,MAAMp7B,EAAQlnC,KAAKknC,MACnB,OAAKlnC,KAAKoiE,aAAal7B,GAGhBA,EAFElnC,KAAK+hE,aAGf,EAED,WAAAQ,GACE,MAAMD,EAAWtiE,KAAKsiE,SACtB,GAAIA,QAA0C,CAC5C,IAAIxtD,EAAUwtD,EAAW,IACzB,MAAMjkE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,YACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOwtD,CACR,EAED,UAAAplC,CAAW3qB,EAAaC,GACtBxS,KAAKwiE,WAAWjwD,EAAUvS,KAAKyiE,UAC/B1iE,MAAMm9B,WAAW3qB,EAAUC,EAC5B,EAEDiwD,cAAe,EAEf,YAAAC,GACE,OAAQvkE,OAAOioC,eAAepmC,MAAiCyiE,QAChE,EAED,WAAAE,CAAYF,GACTziE,KAA8ByiE,SAAWA,EAC1CziE,KAAKwiE,WAAWxiE,KAAKV,MAAOmjE,EAC7B,EAED,UAAAD,CAAWljE,EAAUmjE,GACnB,IAAKhB,GAAaxkD,OAAOC,aAAald,KAAKuR,OACzC,OAEF,MAAMowD,EAAgB3hE,KAAK2hE,cAC3B,GAA6B,iBAAlBA,EACT3hE,KAAKuR,MAAMqxD,SAASjB,EAAeriE,EAAOmjE,QAE1C,IAAK,IAAIlkE,EAAI,EAAGA,EAAKojE,EAAcnjE,OAAQD,GAAK,EAC9CyB,KAAKuR,MAAMqxD,SAASjB,EAAcpjE,GAAKe,EAAOmjE,EAGnD,EAED,KAAA94C,GACE,MAAM,IAAIpnB,MAAM,WACjB,EAED,YAAAu/D,CAAaxiE,GACX,MAAM,IAAIiD,MAAM,cACjB,GAEH,CACE,SAAAyS,CAAUgzB,EAAoBz2B,GAG5B,OAFAy2B,EAAWjoC,MAAMiV,UAAUgzB,EAAUz2B,IACEkxD,SAAWz6B,EAAS06B,eACpD16B,CACR,EAED,UAAAskB,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM16C,EAAYzC,EAASyC,UAEzB06C,EADE16C,IAAcyb,OACHu1C,GACJhxD,IAAcovD,OACV6B,GACJjxD,IAAcoU,SACV88C,GACJlxD,IAAc6b,EACVs1C,GACJnxD,IAAc4U,EACVw8C,GACJpxD,IAAckkB,GACVmtC,GACJrxD,IAAc0mB,YACV4qC,GAEAnjE,IAEhB,CACD,OAAOusD,CACR,IAQUsW,GAA6HnB,GAAcnuD,OAA4D,sBAAuB,CACzO1B,UAAWyb,OAEXhb,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtBmX,MAAMrqB,GACGA,EAGTwiE,aAAaxiE,GACJA,EAAMyV,WAGfnM,SAAStJ,GACAA,IASEwjE,GAA6HpB,GAAcnuD,OAA4D,sBAAuB,CACzO1B,UAAWovD,OAEX3uD,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtB,KAAAmX,CAAMrqB,GACJ,MAAMkiE,GAAUliE,EAChB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,EAED,YAAAM,CAAaxiE,GACX,GAAIA,aAAiB8jE,gBACnB,OAAO9jE,EAAM+jE,GAAG,UAAU/jE,KAG7B,EAED,QAAAsJ,CAAStJ,GACP,GAAqB,iBAAVA,EACT,OAAOA,EAET,MAAMkiE,GAAWliE,EACjB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,IAwDUuB,GAAoIrB,GAAcnuD,OAA4D,sBAAuB,CAChP1B,UAAWoU,EAAAA,OACX3mB,MAAO,KAEP,SAAI+tB,GACF,MAAM/tB,EAAQU,KAAKmiE,SACnB,OAAO7iE,QAAqCA,EAAM+tB,WAAa,CAChE,EAED,OAAA2wC,CAAQsF,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAM0+D,QAAQsF,GACtB,EAED,OAAAE,CAAQF,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMkkE,QAAQF,GACtB,EAED,QAAAG,CAASH,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMmkE,SAASH,GACvB,EAED,QAAAI,CAASJ,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMokE,SAASJ,GACvB,EAED,OAAAK,CAAQL,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAM0+D,QAAQsF,GACtB,EAED,OAAAM,CAAQN,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMkkE,QAAQF,GACtB,EAED,QAAAO,CAASP,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMmkE,SAASH,GACvB,EAED,QAAAQ,CAASR,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMokE,SAASJ,GACvB,EAED,EAAAppC,CAAGopC,EAA8BC,GAC/B,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACKykE,EAAAA,SAAS33C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACnDD,IACTA,EAAQtjE,MAEHV,EAAM46B,GAAGopC,GACjB,EAED,EAAAnpC,CAAGmpC,EAA8BC,GAC/B,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK0kE,EAAAA,SAAS53C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACnDD,IACTA,EAAQtjE,MAEHV,EAAM66B,GAAGmpC,GACjB,EAED,GAAAlpC,CAAIkpC,EAA8BC,GAChC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK2kE,EAAAA,UAAU73C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACpDD,IACTA,EAAQtjE,MAEHV,EAAM86B,IAAIkpC,GAClB,EAED,GAAAjpC,CAAIipC,EAA8BC,GAChC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK4kE,EAAAA,UAAU93C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACpDD,IACTA,EAAQtjE,MAEHV,EAAM+6B,IAAIipC,GAClB,EAED,EAAAD,CAAGh2C,EAAoBi2C,EAA8BC,GACnD,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK2mB,EAAOmG,OAAAA,QAAyB,IAAtBm3C,EAA0BA,EAAe,EAAGl2C,aACpDi2C,IACTA,EAAQtjE,MAEHV,EAAM+jE,GAAGh2C,EAAOi2C,GACxB,EAED,UAAIa,GACF,GAAI1C,GAAaxkD,OAAOC,aAAald,KAAKuR,OAAQ,CAChD,MAAMywD,EAAOhiE,KAAKuR,MAAMywD,KACxB,YAAIA,EACF,OAAOA,CAEV,CACD,OAAO,CACR,EAED,WAAIoC,GACF,OAAO,CACR,EAED,WAAIC,GACF,OAAO,CACR,EAED/xD,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACG2mB,SAAO0D,MAAMrqB,GAGtBwiE,aAAaxiE,GACJ2mB,SAAO67C,aAAaxiE,GAG7B,QAAAsJ,CAAStJ,GACP,IACE,OAAO2mB,SAAOrd,SAAStJ,EACxB,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IAQU+E,GAAiItB,GAAcnuD,OAA2D,qBAAsB,CAC3O1B,UAAW6b,EACXpuB,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACGouB,EAAM/D,MAAMrqB,GAGrB,QAAAsJ,CAAStJ,GACP,IACE,OAAOouB,EAAM9kB,SAAStJ,EACvB,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IAQUgF,GAAiKvB,GAAcnuD,OAAgE,0BAA2B,CACrR1B,UAAW4U,EAEXkD,MAAMrqB,GACGwoB,EAAK6B,MAAMrqB,GAAOonB,OAG3B9d,SAAStJ,GACAwoB,EAAKpB,OAAOpnB,GAA6ConB,SASvDw8C,GAA6IxB,GAAcnuD,OAA+D,yBAA0B,CAC/P1B,UAAWkkB,GACXz2B,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACGy2B,GAAUpM,MAAMrqB,GAGzB,QAAAsJ,CAAStJ,GACP,IACE,OAAOy2B,GAAUntB,SAAStJ,EAC3B,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IAQUkF,GAA6IzB,GAAcnuD,OAA+D,yBAA0B,CAC/P1B,UAAW0mB,EAAAA,UACXj5B,MAAO,KAEPgT,YAAAA,CAAYC,EAAaC,IACnBD,QACKA,EAASmK,OAAOlK,GAElBD,IAAaC,EAGtBmX,MAAMrqB,GACGi5B,YAAU5O,MAAMrqB,GAGzBwiE,aAAaxiE,GACJi5B,YAAUupC,aAAaxiE,GAGhC,QAAAsJ,CAAStJ,GACP,IACE,OAAOi5B,YAAU3vB,SAAStJ,EAC3B,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,ICteUqG,GAA0G5C,GAAcnuD,OAA0E,0BAA2B,CACxO20B,WAAAA,KACS,EAGTC,QAAAA,KACS,EAGTC,UAAAA,KACS,EAGTC,WAAAA,KACS,EAGT,mBAAIk8B,GACF,OAAOvkE,KAAK+hE,aACb,EAED,0BAAAz5B,GACE,MAAMiC,EAAkBvqC,KAAKuR,MAC7B,IAAKi5B,kBAAgBvtB,OAAOC,aAAaqtB,IAAoBvqC,KAAKwoC,cAAgBxoC,KAAKkqC,aACrF,OAEF,MAAM5qC,EAAQU,KAAKukE,gBACdvkE,KAAKoiE,aAAa9iE,IAGvBirC,EAAgBO,sBAAsB9qC,KAAMA,KAAKyoC,SAASnpC,GAC3D,EAED,wBAAAipC,CAAyBrB,GACnBlnC,KAAKwoC,aAAexoC,KAAKyoC,SAASzoC,KAAKknC,SAAWA,GACpDlnC,KAAKw8B,SAAS0K,EAAuBjxB,EAASgnB,SAAAA,UAEjD,EAED,YAAAyL,GACE,IAAIC,EAAYxqC,OAAOioC,eAAepmC,MAAkC2oC,SAIxE,gBAHIA,IACFA,EAAWC,EAAmBC,mBAAAA,QAEzBF,CACR,EAED,WAAAG,CAAYH,GACT3oC,KAA8B2oC,SAAWC,EAAAA,mBAAmBhgC,SAAS+/B,EACvE,EAED,eAAII,GACF,OAAO,CACR,EAED,YAAIC,GACF,OAAOhpC,IACR,EAED,SAAIipC,GACF,MAAMA,EAAQ,IAAIC,IAElB,OADAD,EAAMjqC,IAAIgB,KAAM,GACTipC,CACR,EAED,YAAIE,GACF,OAAO,CACR,EAED,IAAA9Y,CAAK1T,GAEH,OAAI3c,QADJ2c,EAAOysB,uBAAqBxgC,SAAS+T,IAE5BysB,uBAAqBC,QAAQ,EAAGrpC,MAElCopC,uBAAqBE,IAAItpC,KAAM2c,EACvC,EAED,QAAA4kB,GACE,OAAO6H,EAAAA,qBAAqBC,SAAS,EAAGrpC,KACzC,EAED,KAAAwhC,CAAM7kB,GAEJ,OAAI3c,QADJ2c,EAAOysB,uBAAqBxgC,SAAS+T,IAE5BysB,EAAAA,qBAAqBrS,OAEvBqS,EAAAA,qBAAqBE,IAAItpC,KAAM2c,EAAK4kB,WAC5C,EAED,KAAAjR,CAAMC,GACJ,OAAO6Y,uBAAqBC,QAAQ9Y,EAAQvwB,KAC7C,EAED,MAAAupC,CAAOhZ,GACL,OAAO6Y,EAAAA,qBAAqBC,QAAQ,EAAI9Y,EAAQvwB,KACjD,EAED,eAAIwoC,GACF,OAAkE,IAA1DxoC,KAAK2B,MAAQ2iE,GAAwB96B,gBAC9C,EAED,SAAAC,CAAUjB,YACJA,IACFA,GAAc,GAEhB,MAAM7mC,EAAQ3B,KAAK2B,MAanB,OAZI6mC,GAAqE,IAArD7mC,EAAQ2iE,GAAwB96B,kBAClDxpC,KAAKyC,SAASd,EAAQ2iE,GAAwB96B,iBAClB,IAAxBxpC,KAAK0pC,gBAAwB1pC,KAAKyE,SACpCzE,KAAK2pC,oBAEGnB,GAAqE,IAArD7mC,EAAQ2iE,GAAwB96B,mBAC1DxpC,KAAKyC,SAASd,GAAS2iE,GAAwB96B,iBACnB,IAAxBxpC,KAAK0pC,gBAAwB1pC,KAAKyE,UACpCzE,KAAK4pC,oBACL5pC,KAAK6pC,6BAGF7pC,IACR,EAED,sBAAA8pC,CAAuBC,EAAwBC,GAC5ChqC,KAA8B0pC,gBAAkB,GAC5C1pC,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAAwB1pC,KAAKyE,UACzDzE,KAAK4pC,oBACL5pC,KAAK6pC,2BAER,EAED,yBAAAI,CAA0BF,EAAwBC,GAC/ChqC,KAA8B0pC,gBAAkB,GAC5C1pC,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAAwB1pC,KAAKyE,SACzDzE,KAAK2pC,kBAER,EAED,gBAAIO,GACF,OAAmE,IAA3DlqC,KAAK2B,MAAQ2iE,GAAwBn6B,iBAC9C,EAED,iBAAAP,GACkE,IAA3D5pC,KAAK2B,MAAQ2iE,GAAwBn6B,oBAG1CnqC,KAAKoqC,wBACLpqC,KAAKyC,SAASzC,KAAK2B,MAAQ2iE,GAAwBn6B,kBACnDnqC,KAAKqqC,sBACLrqC,KAAKsqC,uBACN,EAED,qBAAAF,GAEC,EAED,mBAAAC,GACE,MAAME,EAAkBvqC,KAAKuR,MACzBi5B,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,IACtCA,EAAgBE,sBAAsBzqC,KAEzC,EAED,oBAAAsqC,GAEC,EAED,gBAAAX,GACkE,IAA3D3pC,KAAK2B,MAAQ2iE,GAAwBn6B,oBAG1CnqC,KAAK0qC,uBACL1qC,KAAKyC,SAASzC,KAAK2B,OAAS2iE,GAAwBn6B,kBACpDnqC,KAAK2qC,qBACL3qC,KAAK4qC,sBACN,EAED,oBAAAF,GAEC,EAED,kBAAAC,GACE,MAAMJ,EAAkBvqC,KAAKuR,MACzBi5B,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,IACtCA,EAAgBM,yBAAyB7qC,KAE5C,EAED,mBAAA4qC,GAEC,EAED,wBAAAf,GACE,MAAMU,EAAkBvqC,KAAKuR,MAC7B,GAAIi5B,EAAAA,gBAAgBvtB,OAAOC,aAAaqtB,GAAkB,CACxD,IAAIjrC,EAAQU,KAAKV,MACZU,KAAKoiE,aAAa9iE,KACrBA,EAAQU,KAAKukE,iBAEfh6B,EAAgBO,sBAAsB9qC,KAAMA,KAAKyoC,SAASnpC,GAC3D,CACF,EAED,UAAA49B,CAAW3qB,EAAaC,GACtBzS,MAAMm9B,WAAW3qB,EAAUC,GAC3B,MAAM+3B,EAAkBvqC,KAAKuR,MACzBvR,KAAKkqC,cAAgBM,EAAgBvtB,gBAAAA,OAAOC,aAAaqtB,IAC3DA,EAAgBO,sBAAsB9qC,KAAMuS,QAA2CvS,KAAKyoC,SAASl2B,GAAY,EAEpH,EAED,OAAA7P,GACE3C,MAAM2C,UACD1C,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAC5B1pC,KAAK4pC,mBAER,EAED,SAAAlmC,GACO1D,KAAKwoC,aAAuC,IAAxBxoC,KAAK0pC,gBAC5B1pC,KAAK2pC,mBAEP5pC,MAAM2D,WACP,EAED+kC,SAASnpC,GACAA,SAAsCA,EAAQ,GAGzD,CACE,SAAA0V,CAAUgzB,EAAoBz2B,GAI5B,OAHAy2B,EAAWjoC,MAAMiV,UAAUgzB,EAAUz2B,IACEo3B,SAAWX,EAASU,eAC1DV,EAAsC0B,eAAiB,EACjD1B,CACR,EAED,UAAAskB,CAAWl9C,GACT,IAAIm9C,EAAan9C,EAASo9C,QAC1B,GAAID,QAA8C,CAChD,MAAM16C,EAAYzC,EAASyC,UAEzB06C,EADE16C,IAAcovD,OACHuD,GACJ3yD,IAAcoU,SACVw+C,GAEAzkE,IAEhB,CACD,OAAOusD,CACR,EAED,MAAA71C,CAAOq0B,GACLhrC,MAAM2W,OAAOq0B,GACb,MAAMC,EAAoBD,EAAc9sC,UAExC,IAAIwb,EAAYuxB,EAAkBvxB,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKurC,EAAmB,iBACtDA,EAAkBxC,YACpB/uB,GAAa6qD,GAAwB96B,gBAErC/vB,IAAc6qD,GAAwB96B,uBAEhCwB,EAAkExC,aAE5ErqC,OAAOgB,eAAe6rC,EAAmB,YAAa,CACpD1rC,MAAOma,EACPE,YAAY,EACZC,cAAc,IAGhB,MAAMqxB,EAAqB9sC,OAAOC,yBAAyB4sC,EAAmB,iBAC1EC,IAAAA,GAAiC,UAAWA,IAC9CA,EAAmB3rC,MAAQspC,EAAmBhgC,mBAAAA,SAASqiC,EAAmB3rC,OAC1EnB,OAAOgB,eAAe6rC,EAAmB,WAAYC,GAExD,EAEDzB,gBAAiB,GAAMk4B,GAAc1uD,UAAY,EACjDm3B,iBAAkB,GAAMu3B,GAAc1uD,UAAY,EAElDA,UAAW0uD,GAAc1uD,UAAY,EACrCE,UAAW,GAAMwuD,GAAc1uD,UAAY,GAAM,IAQtCwxD,GAAiJF,GAAwB/wD,OAAgF,gCAAiC,CACrS1B,UAAWovD,OAEXx4B,SAASnpC,GACiB,iBAAVA,EAAqBA,EAAQ,EAG7CgT,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtB,KAAAmX,CAAMrqB,GACJ,MAAMkiE,GAAUliE,EAChB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,EAED,YAAAM,CAAaxiE,GACX,GAAIA,aAAiB8jE,gBACnB,OAAO9jE,EAAM+jE,GAAG,UAAU/jE,KAG7B,EAED,QAAAsJ,CAAStJ,GACP,GAAqB,iBAAVA,EACT,OAAOA,EAET,MAAMkiE,GAAWliE,EACjB,OAAO8wB,SAASoxC,GAAUA,OAAmB,CAC9C,IAwDUiD,GAAwJH,GAAwB/wD,OAAgF,gCAAiC,CAC5S1B,UAAWoU,EAAAA,OACX3mB,MAAO,KAEP,SAAI+tB,GACF,MAAM/tB,EAAQU,KAAKmiE,SACnB,OAAO7iE,QAAqCA,EAAM+tB,WAAa,CAChE,EAED,OAAA2wC,CAAQsF,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAM0+D,QAAQsF,GACtB,EAED,OAAAE,CAAQF,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMkkE,QAAQF,GACtB,EAED,QAAAG,CAASH,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMmkE,SAASH,GACvB,EAED,QAAAI,CAASJ,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMokE,SAASJ,GACvB,EAED,OAAAK,CAAQL,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAM0+D,QAAQsF,GACtB,EAED,OAAAM,CAAQN,EAA8BC,GACpC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMkkE,QAAQF,GACtB,EAED,QAAAO,CAASP,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMmkE,SAASH,GACvB,EAED,QAAAQ,CAASR,EAA8BC,GACrC,MAAMjkE,EAAQU,KAAKsiE,SACnB,OAAIhjE,aACKikE,IAAAA,EAA0BA,EAAe,YACvCD,IACTA,EAAQtjE,MAEHV,EAAMokE,SAASJ,GACvB,EAED,EAAAppC,CAAGopC,EAA8BC,GAC/B,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACKykE,EAAAA,SAAS33C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACnDD,IACTA,EAAQtjE,MAEHV,EAAM46B,GAAGopC,GACjB,EAED,EAAAnpC,CAAGmpC,EAA8BC,GAC/B,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK0kE,EAAAA,SAAS53C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACnDD,IACTA,EAAQtjE,MAEHV,EAAM66B,GAAGmpC,GACjB,EAED,GAAAlpC,CAAIkpC,EAA8BC,GAChC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK2kE,EAAAA,UAAU73C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACpDD,IACTA,EAAQtjE,MAEHV,EAAM86B,IAAIkpC,GAClB,EAED,GAAAjpC,CAAIipC,EAA8BC,GAChC,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK4kE,EAAAA,UAAU93C,QAAyB,IAAtBm3C,EAA0BA,EAAe,aACpDD,IACTA,EAAQtjE,MAEHV,EAAM+6B,IAAIipC,GAClB,EAED,EAAAD,CAAGh2C,EAAoBi2C,EAA8BC,GACnD,MAAMjkE,EAAQU,KAAKmiE,SACnB,OAAI7iE,QACK2mB,EAAOmG,OAAAA,QAAyB,IAAtBm3C,EAA0BA,EAAe,EAAGl2C,aACpDi2C,IACTA,EAAQtjE,MAEHV,EAAM+jE,GAAGh2C,EAAOi2C,GACxB,EAED,UAAIa,GACF,MAAMO,EAAe1kE,KAAKuR,MAC1B,GAAIkwD,GAAaxkD,OAAOC,aAAawnD,GAAe,CAClD,MAAM1C,EAAO0C,EAAa1C,KAC1B,YAAIA,EACF,OAAOA,CAEV,CACD,OAAO,CACR,EAED,WAAIoC,GACF,OAAO,CACR,EAED,WAAIC,GACF,OAAO,CACR,EAED57B,SAASnpC,GACAA,QAAqCA,EAAM0+D,UAAY,EAGhE1rD,YAAAA,CAAYC,EAAaC,IAChBD,IAAaC,EAGtBmX,MAAMrqB,GACG2mB,SAAO0D,MAAMrqB,GAGtBwiE,aAAaxiE,GACJ2mB,SAAO67C,aAAaxiE,GAG7B,QAAAsJ,CAAStJ,GACP,IACE,OAAO2mB,SAAOrd,SAAStJ,EACxB,CAAC,MAAO2+D,GACP,OAAO,IACR,CACF,IChUU0G,GAA0Dr4D,WAASiH,OAAkD,iBAAkB,CAClJ,gBAAIxP,GACF,OAAO4gE,EACR,EAED,GAAA3lE,CAAI4c,EAA8KC,GAChL,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAaiB,IAAT8c,EAAS9c,IAClB,MAAM,IAAIuD,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAAS9c,IAAIM,EAAOuc,GAEpBC,EAAS9c,IAAIM,EAEhB,CACD,OAAOU,KAAKuR,KACb,EAED,YAAAgE,CAAaqG,EAAgMC,GAC3M,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAawX,IAATuG,EAASvG,aAClB,MAAM,IAAIhT,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAASvG,aAAajW,EAAOuc,GAE7BC,EAASvG,aAAajW,EAEzB,CACD,OAAOU,KAAKuR,KACb,EAED,QAAIywD,GACF,OAAQhiE,KAAKuR,MAAuBywD,IACrC,EAED,QAAAH,CAASF,GACP,OAAQ3hE,KAAKuR,MAAuBswD,SAASF,EAC9C,EAED,QAAAiB,CAASgC,EAAsBtlE,EAAgBmjE,GAE7C,OADCziE,KAAKuR,MAAuBqxD,SAASgC,EAActlE,EAAOmjE,GACpDziE,IACR,EAED,YAAA6kE,CAAaD,EAAsBtlE,EAAgBmjE,GAElD,EAED,UAAAqC,CAAWF,EAAsBtlE,EAAgBmjE,GAEhD,EAED,WAAAsC,CAAYH,EAAsBtlE,EAAgBmjE,GAEjD,EAED,WAAAuC,GACE,MAAM94D,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,IAChC0F,aAAoBy9D,IACtBz9D,EAASu+D,WAAWv+D,EAAS3E,MAAO2E,EAASw+D,SAEhD,CACF,EAED,UAAA14B,CAAW6U,EAA+BC,EAC/BC,EAAgCnW,GACzC,IAAK6B,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMw4B,WAAW6U,EAAKC,EAAUC,EAAKnW,EAClD,EAED,aAAAwW,CAAcpV,GACZ,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAM4tC,cAAcpV,EACjC,EAED,aAAAmV,CAAcnV,GACZ,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAM2tC,cAAcnV,EAC1B,EAED,gBAAAsV,CAAiBtV,GACf,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAM8tC,iBAAiBtV,EAC7B,EAED,kBAAAyV,CAAmBnhD,EAAciB,EAAgBqpC,GAC/C,IAAK6B,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMiuC,mBAAmBnhD,EAAMiB,EAAOqpC,EACnD,EAED,qBAAA+W,CAAsBF,GACpB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMmuC,sBAAsBF,EACzC,EAED,qBAAA/U,CAAsB+U,GACpB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMk5B,sBAAsB+U,EAClC,EAED,wBAAA3U,CAAyB2U,GACvB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMs5B,yBAAyB2U,EACrC,EAED,qBAAA1U,CAAsB0U,EAAwCtY,GAC5D,IAAKsD,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMu5B,sBAAsB0U,EAAoBtY,EACtD,EAED,OAAAb,CAAWjF,EAAeiE,GACxB,GAAKE,GAAatoB,OAAOC,aAAald,KAAKuR,OAG3C,OAAOvR,KAAKuR,MAAM80B,QAAQjF,EAAMiE,EACjC,EAED,SAAAiB,CAAgBlF,EAAeiE,EAAmChF,GAChE,OAAIkF,GAAatoB,OAAOC,aAAald,KAAKuR,OACf,IAArB/R,UAAUhB,OACLwB,KAAKuR,MAAM+0B,UAAUlF,EAAMiE,GAE3BrlC,KAAKuR,MAAM+0B,UAAUlF,EAAMiE,EAAiChF,GAEvC,IAArB7gC,UAAUhB,OACZ6mC,EAEFhF,CACR,EAED,UAAA8G,CAAWC,EAAoB/B,EAAkBxpB,GAC/C,MAAM3P,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEA2P,EADSA,UAAmD,IAAXA,EACxCurB,EAAMhH,MAAMyF,GAAKhqB,OAAQ+yB,GAAKnB,SAAS,GAEvC9G,SAAO/9B,SAASiT,GAE3B,MAAMzP,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,SAChC0F,IAAAA,GAAuB,eAAiBA,GACzCA,EAAiBkjC,WAAWC,EAAO/B,EAAMxpB,EAE7C,CACF,GAEH,CACE,YAAAopD,CAAajD,GACX,GAAIA,aAAgBkD,YAAa,CAC/B,MAAMC,EAAenD,EAAKmD,aAC1B,GAAIA,aAAwBD,YAC1B,OAAOC,EAAaC,WAEvB,CACD,OAAIpD,IAASt/C,SAAS1S,MAAQgyD,IAASt/C,SAASw+B,gBACvCl9B,OAAOqhD,WAET,CACR,EAED,aAAAC,CAActD,GACZ,GAAIA,aAAgBkD,YAAa,CAC/B,MAAMC,EAAenD,EAAKmD,aAC1B,GAAIA,aAAwBD,YAC1B,OAAOC,EAAaI,YAEvB,CACD,OAAIvD,IAASt/C,SAAS1S,MAAQgyD,IAASt/C,SAASw+B,gBACvCl9B,OAAOwhD,YAET,CACR,EAED,SAAAxwD,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IAC5Bk0D,cAAcd,IAChB1gE,CACR,IAGH0gE,GAAee,aAAa,eAAgB,CAAChE,GAAc,CACzDC,cAAe,gBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,cACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,CAAC,aAAc,sBAC9B9vD,UAAWyb,WAGbq3C,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,CAAC,kBAAmB,2BACnC9vD,UAAWyb,WAGbq3C,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,CAAC,kBAAmB,2BACnC9vD,UAAWyb,WAGbq3C,GAAee,aAAa,kBAAmB,CAAChE,GAAc,CAC5DC,cAAe,mBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,kBAAmB,CAAChE,GAAc,CAC5DC,cAAe,mBACfriE,MAAO,KACP,KAAAqqB,CAAMrqB,GACJ,IACE,OAAOm1B,GAAe9K,MAAMrqB,EAC7B,CAAC,MAAO2+D,GACP,OAAO3+D,CACR,CACF,EACD,QAAAsJ,CAAStJ,GACP,GAAqB,iBAAVA,EAOT,OAAOm1B,GAAe7rB,SAAStJ,GAN/B,IACE,OAAOm1B,GAAe9K,MAAMrqB,EAC7B,CAAC,MAAO2+D,GACP,OAAO3+D,CACR,CAIJ,MAGHqlE,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,kBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,cAAe,CAACp5D,WAKvC,CACH,GAAAvN,GACE,MAAM4mE,EAAiB3lE,KAAKuR,MAAMo0D,eAAermE,MAC3CsmE,EAAmB5lE,KAAKuR,MAAMq0D,iBAAiBtmE,MAC/CumE,EAAoB7lE,KAAKuR,MAAMs0D,kBAAkBvmE,MACjDwmE,EAAkB9lE,KAAKuR,MAAMu0D,gBAAgBxmE,MACnD,OAAIopB,EAAAA,OAAOC,MAAMg9C,EAAgBC,IAC1Bl9C,EAAAA,OAAOC,MAAMi9C,EAAkBC,IAC/Bn9C,EAAAA,OAAOC,MAAMk9C,EAAmBC,GAC9BH,EAEF,CAACA,EAAgBC,EAAkBC,EAAmBC,EAC9D,EACD,GAAA9mE,CAAIM,EAA0Iuc,GAE5I,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAoJuc,GAE/J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAoJuc,EAAiD0gB,GAC5M,IAAIopC,EACAC,EACAC,EACAC,EACJ,GAAKjuD,MAAMiR,QAAQxpB,GAKZ,GAAqB,IAAjBA,EAAMd,OACfmnE,EAAiBrmE,EAAM,GACvBsmE,EAAmBtmE,EAAM,GACzBumE,EAAoBvmE,EAAM,GAC1BwmE,EAAkBxmE,EAAM,QACnB,GAAqB,IAAjBA,EAAMd,OACfmnE,EAAiBrmE,EAAM,GACvBsmE,EAAmBtmE,EAAM,GACzBumE,EAAoBvmE,EAAM,GAC1BwmE,EAAkBxmE,EAAM,QACnB,GAAqB,IAAjBA,EAAMd,OACfmnE,EAAiBrmE,EAAM,GACvBsmE,EAAmBtmE,EAAM,GACzBumE,EAAoBvmE,EAAM,GAC1BwmE,EAAkBxmE,EAAM,OACnB,IAAqB,IAAjBA,EAAMd,OAMf,MAAM,IAAIZ,UAAU,GAAK0B,GALzBqmE,EAAiBrmE,EAAM,GACvBsmE,EAAmBtmE,EAAM,GACzBumE,EAAoBvmE,EAAM,GAC1BwmE,EAAkBxmE,EAAM,EAGzB,MA1BCqmE,EAAiBrmE,EACjBsmE,EAAmBtmE,EACnBumE,EAAoBvmE,EACpBwmE,EAAkBxmE,EAwBhBqmE,aAA0B9/B,GAC5B7lC,KAAKuR,MAAMo0D,eAAe//B,QAAQ+/B,EAAgB9pD,EAAQ0gB,GAE1Dv8B,KAAKuR,MAAMo0D,eAAenpC,SAASmpC,EAAgB9pD,EAAQ0gB,GAEzDqpC,aAA4B//B,GAC9B7lC,KAAKuR,MAAMq0D,iBAAiBhgC,QAAQggC,EAAkB/pD,EAAQ0gB,GAE9Dv8B,KAAKuR,MAAMq0D,iBAAiBppC,SAASopC,EAAkB/pD,EAAQ0gB,GAE7DspC,aAA6BhgC,GAC/B7lC,KAAKuR,MAAMs0D,kBAAkBjgC,QAAQigC,EAAmBhqD,EAAQ0gB,GAEhEv8B,KAAKuR,MAAMs0D,kBAAkBrpC,SAASqpC,EAAmBhqD,EAAQ0gB,GAE/DupC,aAA2BjgC,GAC7B7lC,KAAKuR,MAAMu0D,gBAAgBlgC,QAAQkgC,EAAiBjqD,EAAQ0gB,GAE5Dv8B,KAAKuR,MAAMu0D,gBAAgBtpC,SAASspC,EAAiBjqD,EAAQ0gB,EAEhE,MAGHooC,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,mBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,mBAAoB,CAAChE,GAAc,CAC7DC,cAAe,qBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,oBAAqB,CAAChE,GAAc,CAC9DC,cAAe,sBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,kBAAmB,CAAChE,GAAc,CAC5DC,cAAe,oBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,eAAgB,CAACp5D,WAKxC,CACH,GAAAvN,GACE,MAAMgnE,EAAsB/lE,KAAKuR,MAAMw0D,oBAAoBzmE,MACrD0mE,EAAuBhmE,KAAKuR,MAAMy0D,qBAAqB1mE,MACvD2mE,EAA0BjmE,KAAKuR,MAAM00D,wBAAwB3mE,MAC7D4mE,EAAyBlmE,KAAKuR,MAAM20D,uBAAuB5mE,MACjE,OAAIm0B,SAAOsyC,EAAqBC,IACzBvyC,EAAAA,OAAOuyC,EAAsBC,IAC7BxyC,EAAAA,OAAOwyC,EAAyBC,GAC9BH,EAEF,CAACA,EAAqBC,EAAsBC,EAAyBC,EAC7E,EACD,GAAAlnE,CAAIM,EAAyJuc,GAE3J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAyJuc,GAEpK,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAyJuc,EAAiD0gB,GACjN,IAAIwpC,EACAC,EACAC,EACAC,EACJ,GAAKruD,MAAMiR,QAAQxpB,GAKZ,GAAqB,IAAjBA,EAAMd,OACfunE,EAAsBzmE,EAAM,GAC5B0mE,EAAuB1mE,EAAM,GAC7B2mE,EAA0B3mE,EAAM,GAChC4mE,EAAyB5mE,EAAM,QAC1B,GAAqB,IAAjBA,EAAMd,OACfunE,EAAsBzmE,EAAM,GAC5B0mE,EAAuB1mE,EAAM,GAC7B2mE,EAA0B3mE,EAAM,GAChC4mE,EAAyB5mE,EAAM,QAC1B,GAAqB,IAAjBA,EAAMd,OACfunE,EAAsBzmE,EAAM,GAC5B0mE,EAAuB1mE,EAAM,GAC7B2mE,EAA0B3mE,EAAM,GAChC4mE,EAAyB5mE,EAAM,OAC1B,IAAqB,IAAjBA,EAAMd,OAMf,MAAM,IAAIZ,UAAU,GAAK0B,GALzBymE,EAAsBzmE,EAAM,GAC5B0mE,EAAuB1mE,EAAM,GAC7B2mE,EAA0B3mE,EAAM,GAChC4mE,EAAyB5mE,EAAM,EAGhC,MA1BCymE,EAAsBzmE,EACtB0mE,EAAuB1mE,EACvB2mE,EAA0B3mE,EAC1B4mE,EAAyB5mE,EAwBvBymE,aAA+BlgC,GACjC7lC,KAAKuR,MAAMw0D,oBAAoBngC,QAAQmgC,EAAqBlqD,EAAQ0gB,GAEpEv8B,KAAKuR,MAAMw0D,oBAAoBvpC,SAASupC,EAAqBlqD,EAAQ0gB,GAEnEypC,aAAgCngC,GAClC7lC,KAAKuR,MAAMy0D,qBAAqBpgC,QAAQogC,EAAsBnqD,EAAQ0gB,GAEtEv8B,KAAKuR,MAAMy0D,qBAAqBxpC,SAASwpC,EAAsBnqD,EAAQ0gB,GAErE0pC,aAAmCpgC,GACrC7lC,KAAKuR,MAAM00D,wBAAwBrgC,QAAQqgC,EAAyBpqD,EAAQ0gB,GAE5Ev8B,KAAKuR,MAAM00D,wBAAwBzpC,SAASypC,EAAyBpqD,EAAQ0gB,GAE3E2pC,aAAkCrgC,GACpC7lC,KAAKuR,MAAM20D,uBAAuBtgC,QAAQsgC,EAAwBrqD,EAAQ0gB,GAE1Ev8B,KAAKuR,MAAM20D,uBAAuB1pC,SAAS0pC,EAAwBrqD,EAAQ0gB,EAE9E,MAGHooC,GAAee,aAAa,sBAAuB,CAAC3C,GAAoB,CACtEpB,cAAe,yBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,uBAAwB,CAAC3C,GAAoB,CACvEpB,cAAe,0BACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,0BAA2B,CAAC3C,GAAoB,CAC1EpB,cAAe,6BACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,yBAA0B,CAAC3C,GAAoB,CACzEpB,cAAe,4BACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,gBAAiB,CAAChE,GAAc,CAC1DC,cAAe,iBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,cAAe,CAACp5D,WAKvC,CACH,GAAAvN,GACE,MAAMonE,EAAiBnmE,KAAKuR,MAAM40D,eAAe7mE,MAC3C8mE,EAAmBpmE,KAAKuR,MAAM60D,iBAAiB9mE,MAC/C+mE,EAAoBrmE,KAAKuR,MAAM80D,kBAAkB/mE,MACjDgnE,EAAkBtmE,KAAKuR,MAAM+0D,gBAAgBhnE,MACnD,OAAI6mE,IAAmBC,GAChBA,IAAqBC,GACrBA,IAAsBC,EACpBH,EAEF,CAACA,EAAgBC,EAAkBC,EAAmBC,EAC9D,EACD,GAAAtnE,CAAIM,EAAyJuc,GAE3J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAyJuc,GAEpK,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAyJuc,EAAiD0gB,GAC5M1kB,MAAMiR,QAAQxpB,GAKS,IAAjBA,EAAMd,QACfwB,KAAKuR,MAAM40D,eAAe3pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACrDv8B,KAAKuR,MAAM60D,iBAAiB5pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACvDv8B,KAAKuR,MAAM80D,kBAAkB7pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACxDv8B,KAAKuR,MAAM+0D,gBAAgB9pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,IAC5B,IAAjBj9B,EAAMd,QACfwB,KAAKuR,MAAM40D,eAAe3pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACrDv8B,KAAKuR,MAAM60D,iBAAiB5pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACvDv8B,KAAKuR,MAAM80D,kBAAkB7pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACxDv8B,KAAKuR,MAAM+0D,gBAAgB9pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,IAC5B,IAAjBj9B,EAAMd,QACfwB,KAAKuR,MAAM40D,eAAe3pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACrDv8B,KAAKuR,MAAM60D,iBAAiB5pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACvDv8B,KAAKuR,MAAM80D,kBAAkB7pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACxDv8B,KAAKuR,MAAM+0D,gBAAgB9pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,IAC5B,IAAjBj9B,EAAMd,SACfwB,KAAKuR,MAAM40D,eAAe3pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACrDv8B,KAAKuR,MAAM60D,iBAAiB5pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACvDv8B,KAAKuR,MAAM80D,kBAAkB7pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GACxDv8B,KAAKuR,MAAM+0D,gBAAgB9pC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,KAvBtDv8B,KAAKuR,MAAM40D,eAAe3pC,SAASl9B,EAAkCuc,EAAQ0gB,GAC7Ev8B,KAAKuR,MAAM60D,iBAAiB5pC,SAASl9B,EAAkCuc,EAAQ0gB,GAC/Ev8B,KAAKuR,MAAM80D,kBAAkB7pC,SAASl9B,EAAkCuc,EAAQ0gB,GAChFv8B,KAAKuR,MAAM+0D,gBAAgB9pC,SAASl9B,EAAkCuc,EAAQ0gB,GAsBjF,MAGHooC,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,mBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,mBAAoB,CAAChE,GAAc,CAC7DC,cAAe,qBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,oBAAqB,CAAChE,GAAc,CAC9DC,cAAe,sBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,kBAAmB,CAAChE,GAAc,CAC5DC,cAAe,oBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,cAAe,CAACp5D,WAKvC,CACH,GAAAvN,GACE,MAAMwnE,EAAiBvmE,KAAKuR,MAAMg1D,eAAejnE,MAC3CknE,EAAmBxmE,KAAKuR,MAAMi1D,iBAAiBlnE,MAC/CmnE,EAAoBzmE,KAAKuR,MAAMk1D,kBAAkBnnE,MACjDonE,EAAkB1mE,KAAKuR,MAAMm1D,gBAAgBpnE,MACnD,OAAIopB,EAAAA,OAAOC,MAAM49C,EAAgBC,IAC1B99C,EAAAA,OAAOC,MAAM69C,EAAkBC,IAC/B/9C,EAAAA,OAAOC,MAAM89C,EAAmBC,GAC9BH,EAEF,CAACA,EAAgBC,EAAkBC,EAAmBC,EAC9D,EACD,GAAA1nE,CAAIM,EAAyJuc,GAE3J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAyJuc,GAEpK,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAyJuc,EAAiD0gB,GACjN,IAAIgqC,EACAC,EACAC,EACAC,EACJ,GAAK7uD,MAAMiR,QAAQxpB,GAKZ,GAAqB,IAAjBA,EAAMd,OACf+nE,EAAiBjnE,EAAM,GACvBknE,EAAmBlnE,EAAM,GACzBmnE,EAAoBnnE,EAAM,GAC1BonE,EAAkBpnE,EAAM,QACnB,GAAqB,IAAjBA,EAAMd,OACf+nE,EAAiBjnE,EAAM,GACvBknE,EAAmBlnE,EAAM,GACzBmnE,EAAoBnnE,EAAM,GAC1BonE,EAAkBpnE,EAAM,QACnB,GAAqB,IAAjBA,EAAMd,OACf+nE,EAAiBjnE,EAAM,GACvBknE,EAAmBlnE,EAAM,GACzBmnE,EAAoBnnE,EAAM,GAC1BonE,EAAkBpnE,EAAM,OACnB,IAAqB,IAAjBA,EAAMd,OAMf,MAAM,IAAIZ,UAAU,GAAK0B,GALzBinE,EAAiBjnE,EAAM,GACvBknE,EAAmBlnE,EAAM,GACzBmnE,EAAoBnnE,EAAM,GAC1BonE,EAAkBpnE,EAAM,EAGzB,MA1BCinE,EAAiBjnE,EACjBknE,EAAmBlnE,EACnBmnE,EAAoBnnE,EACpBonE,EAAkBpnE,EAwBhBinE,aAA0B1gC,GAC5B7lC,KAAKuR,MAAMg1D,eAAe3gC,QAAQ2gC,EAAgB1qD,EAAQ0gB,GAE1Dv8B,KAAKuR,MAAMg1D,eAAe/pC,SAAS+pC,EAAgB1qD,EAAQ0gB,GAEzDiqC,aAA4B3gC,GAC9B7lC,KAAKuR,MAAMi1D,iBAAiB5gC,QAAQ4gC,EAAkB3qD,EAAQ0gB,GAE9Dv8B,KAAKuR,MAAMi1D,iBAAiBhqC,SAASgqC,EAAkB3qD,EAAQ0gB,GAE7DkqC,aAA6B5gC,GAC/B7lC,KAAKuR,MAAMk1D,kBAAkB7gC,QAAQ6gC,EAAmB5qD,EAAQ0gB,GAEhEv8B,KAAKuR,MAAMk1D,kBAAkBjqC,SAASiqC,EAAmB5qD,EAAQ0gB,GAE/DmqC,aAA2B7gC,GAC7B7lC,KAAKuR,MAAMm1D,gBAAgB9gC,QAAQ8gC,EAAiB7qD,EAAQ0gB,GAE5Dv8B,KAAKuR,MAAMm1D,gBAAgBlqC,SAASkqC,EAAiB7qD,EAAQ0gB,EAEhE,MAGHooC,GAAee,aAAa,iBAAkB,CAAC3C,GAAoB,CACjEpB,cAAe,mBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,mBAAoB,CAAC3C,GAAoB,CACnEpB,cAAe,qBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,oBAAqB,CAAC3C,GAAoB,CACpEpB,cAAe,sBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,kBAAmB,CAAC3C,GAAoB,CAClEpB,cAAe,oBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,SAAU,CAACjB,GAA8B,CACnE9C,cAAe,SACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeW,cAActlE,KAAKuR,MAAMywD,KAChD,MAGH2C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWkkB,GACXz2B,MAAO,SAGTqlE,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,QAAS,CAAChE,GAAc,CAClDC,cAAe,QACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,SAAU,CAAChE,GAAc,CACnDC,cAAe,SACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,UAAW,CAAChE,GAAc,CACpDC,cAAe,UACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,SAAU,CAAChE,GAAc,CACnDC,cAAe,SACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,gBAAiB,CAAChE,GAAc,CAC1DC,cAAe,iBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,WAAY,CAAChE,GAAc,CACrDC,cAAe,YACf9vD,UAAWovD,WAGb0D,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,cACf9vD,UAAWovD,WAGb0D,GAAee,aAAa,WAAY,CAAChE,GAAc,CACrDC,cAAe,YACf9vD,UAAWovD,WAGb0D,GAAee,aAAa,OAAQ,CAACp5D,WAKhC,CACH,GAAAvN,GACE,MAAMkpB,EAAQjoB,KAAKuR,MAAMo1D,UAAUrnE,MAC7B4oB,EAAUloB,KAAKuR,MAAMq1D,YAAYtnE,MACjC6oB,EAASnoB,KAAKuR,MAAMs1D,WAAWvnE,MAC/B8oB,EAAUpoB,KAAKuR,MAAMu1D,YAAYxnE,MACjC8D,EAAOpD,KAAKuR,MAAMw1D,SAASznE,MAC3BknB,EAASxmB,KAAKuR,MAAMy1D,WAAW1nE,MAC/BonB,EAAS1mB,KAAKuR,MAAM01D,WAAW3nE,MACrC,gBAAIonB,EACK,KAEFoB,EAAKtY,OAAOyY,EAAOC,EAASC,EAAQC,EAAShlB,EAAMojB,EAAQE,EACnE,EACD,GAAA1nB,CAAIM,EAAwBuc,GAE1B,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAwBuc,GAEnC,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAwBuc,EAAiD0gB,GAChF,GAAc,OAAVj9B,EAQF,OAPAU,KAAKuR,MAAMo1D,UAAUnqC,cAAc,EAAG3gB,EAAQ0gB,GAC9Cv8B,KAAKuR,MAAMq1D,YAAYpqC,cAAc,EAAG3gB,EAAQ0gB,GAChDv8B,KAAKuR,MAAMs1D,WAAWrqC,cAAc,EAAG3gB,EAAQ0gB,GAC/Cv8B,KAAKuR,MAAMu1D,YAAYtqC,cAAc,EAAG3gB,EAAQ0gB,GAChDv8B,KAAKuR,MAAMw1D,SAASvqC,SAAS,KAAM3gB,EAAQ0gB,GAC3Cv8B,KAAKuR,MAAMy1D,WAAWxqC,SAAS,KAAM3gB,EAAQ0gB,QAC7Cv8B,KAAKuR,MAAM01D,WAAWzqC,cAAc,EAAG3gB,EAAQ0gB,GAGjDj9B,EAAQwoB,EAAKlf,SAAStJ,GACtBU,KAAKuR,MAAMo1D,UAAUnqC,SAASl9B,EAAM2oB,MAAOpM,EAAQ0gB,GACnDv8B,KAAKuR,MAAMq1D,YAAYpqC,SAASl9B,EAAM4oB,QAASrM,EAAQ0gB,GACvDv8B,KAAKuR,MAAMs1D,WAAWrqC,SAASl9B,EAAM6oB,OAAQtM,EAAQ0gB,GACrDv8B,KAAKuR,MAAMu1D,YAAYtqC,SAASl9B,EAAM8oB,QAASvM,EAAQ0gB,GACvDv8B,KAAKuR,MAAMw1D,SAASvqC,SAASl9B,EAAM8D,KAAMyY,EAAQ0gB,GACjDv8B,KAAKuR,MAAMy1D,WAAWxqC,SAASl9B,EAAMknB,OAAQ3K,EAAQ0gB,GACrDv8B,KAAKuR,MAAM01D,WAAWzqC,SAASl9B,EAAMonB,OAAQ7K,EAAQ0gB,EACtD,MAGHooC,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,cACf9vD,UAAW4U,MAGbk+C,GAAee,aAAa,WAAY,CAAC3C,GAAoB,CAC3DpB,cAAe,YACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,cAAe,CAAChE,GAAc,CACxDC,cAAe,eACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,cAAe,CAAChE,GAAc,CACxDC,cAAe,eACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,cACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,SAAU,CAACjB,GAA8B,CACnE9C,cAAe,SACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeW,cAActlE,KAAKuR,MAAMywD,KAChD,MAGH2C,GAAee,aAAa,iBAAkB,CAAChE,GAAc,CAC3DC,cAAe,kBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,OAAQ,CAACjB,GAA8B,CACjE9C,cAAe,OACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,aAAc,CAAC3C,GAAoB,CAC7DpB,cAAe,cACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,SAAU,CAACp5D,WAKlC,CACH,GAAAvN,GACE,MAAMmoE,EAAYlnE,KAAKuR,MAAM21D,UAAU5nE,MACjC6nE,EAAcnnE,KAAKuR,MAAM41D,YAAY7nE,MACrC8nE,EAAepnE,KAAKuR,MAAM61D,aAAa9nE,MACvC+nE,EAAarnE,KAAKuR,MAAM81D,WAAW/nE,MACzC,OAAIopB,EAAAA,OAAOC,MAAMu+C,EAAWC,IACrBz+C,EAAAA,OAAOC,MAAMw+C,EAAaC,IAC1B1+C,EAAAA,OAAOC,MAAMy+C,EAAcC,GACzBH,EAEF,CAACA,EAAWC,EAAaC,EAAcC,EAC/C,EACD,GAAAroE,CAAIM,EAAyJuc,GAE3J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAyJuc,GAEpK,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAyJuc,EAAiD0gB,GACjN,IAAI2qC,EACAC,EACAC,EACAC,EACJ,GAAKxvD,MAAMiR,QAAQxpB,GAKZ,GAAqB,IAAjBA,EAAMd,OACf0oE,EAAY5nE,EAAM,GAClB6nE,EAAc7nE,EAAM,GACpB8nE,EAAe9nE,EAAM,GACrB+nE,EAAa/nE,EAAM,QACd,GAAqB,IAAjBA,EAAMd,OACf0oE,EAAY5nE,EAAM,GAClB6nE,EAAc7nE,EAAM,GACpB8nE,EAAe9nE,EAAM,GACrB+nE,EAAa/nE,EAAM,QACd,GAAqB,IAAjBA,EAAMd,OACf0oE,EAAY5nE,EAAM,GAClB6nE,EAAc7nE,EAAM,GACpB8nE,EAAe9nE,EAAM,GACrB+nE,EAAa/nE,EAAM,OACd,IAAqB,IAAjBA,EAAMd,OAMf,MAAM,IAAIZ,UAAU,GAAK0B,GALzB4nE,EAAY5nE,EAAM,GAClB6nE,EAAc7nE,EAAM,GACpB8nE,EAAe9nE,EAAM,GACrB+nE,EAAa/nE,EAAM,EAGpB,MA1BC4nE,EAAY5nE,EACZ6nE,EAAc7nE,EACd8nE,EAAe9nE,EACf+nE,EAAa/nE,EAwBX4nE,aAAqBrhC,GACvB7lC,KAAKuR,MAAM21D,UAAUthC,QAAQshC,EAAWrrD,EAAQ0gB,GAEhDv8B,KAAKuR,MAAM21D,UAAU1qC,SAAS0qC,EAAWrrD,EAAQ0gB,GAE/C4qC,aAAuBthC,GACzB7lC,KAAKuR,MAAM41D,YAAYvhC,QAAQuhC,EAAatrD,EAAQ0gB,GAEpDv8B,KAAKuR,MAAM41D,YAAY3qC,SAAS2qC,EAAatrD,EAAQ0gB,GAEnD6qC,aAAwBvhC,GAC1B7lC,KAAKuR,MAAM61D,aAAaxhC,QAAQwhC,EAAcvrD,EAAQ0gB,GAEtDv8B,KAAKuR,MAAM61D,aAAa5qC,SAAS4qC,EAAcvrD,EAAQ0gB,GAErD8qC,aAAsBxhC,GACxB7lC,KAAKuR,MAAM81D,WAAWzhC,QAAQyhC,EAAYxrD,EAAQ0gB,GAElDv8B,KAAKuR,MAAM81D,WAAW7qC,SAAS6qC,EAAYxrD,EAAQ0gB,EAEtD,MAGHooC,GAAee,aAAa,YAAa,CAACjB,GAA8B,CACtE9C,cAAe,aACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,cAAe,CAACjB,GAA8B,CACxE9C,cAAe,eACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,eAAgB,CAACjB,GAA8B,CACzE9C,cAAe,gBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,aAAc,CAACjB,GAA8B,CACvE9C,cAAe,cACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,YAAa,CAAC3C,GAAoB,CAC5DpB,cAAe,aACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,WAAY,CAAC3C,GAAoB,CAC3DpB,cAAe,YACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,YAAa,CAAC3C,GAAoB,CAC5DpB,cAAe,aACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,WAAY,CAAC3C,GAAoB,CAC3DpB,cAAe,YACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,UAAW,CAAChE,GAAc,CACpDC,cAAe,UACf9vD,UAAWovD,WAGb0D,GAAee,aAAa,QAAS,CAAChE,GAAc,CAClDC,cAAe,QACf9vD,UAAWovD,WAGb0D,GAAee,aAAa,eAAgB,CAAChE,GAAc,CACzDC,cAAe,gBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,gBAAiB,CAAC3C,GAAoB,CAChEpB,cAAe,iBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,eAAgB,CAAChE,GAAc,CACzDC,cAAe,gBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,eAAgB,CAAC3C,GAAoB,CAC/DpB,cAAe,gBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTqlE,GAAee,aAAa,WAAY,CAACp5D,WAKpC,CACH,GAAAvN,GACE,MAAMuoE,EAAYtnE,KAAKuR,MAAM+1D,UAAUhoE,MACjCioE,EAAYvnE,KAAKuR,MAAMg2D,UAAUjoE,MACvC,OAAIgoE,IAAcC,EACTD,EAEF,CAACA,EAAWC,EACpB,EACD,GAAAvoE,CAAIM,EAAwFuc,GAE1F,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAwFuc,GAEnG,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAwFuc,EAAiD0gB,GAC3I1kB,MAAMiR,QAAQxpB,GAGS,IAAjBA,EAAMd,QACfwB,KAAKuR,MAAM+1D,UAAU9qC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GAChDv8B,KAAKuR,MAAMg2D,UAAU/qC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,IACtB,IAAjBj9B,EAAMd,SACfwB,KAAKuR,MAAM+1D,UAAU9qC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GAChDv8B,KAAKuR,MAAMg2D,UAAU/qC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,KAPhDv8B,KAAKuR,MAAM+1D,UAAU9qC,SAASl9B,EAA+Buc,EAAQ0gB,GACrEv8B,KAAKuR,MAAMg2D,UAAU/qC,SAASl9B,EAA+Buc,EAAQ0gB,GAQxE,MAGHooC,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,oBAAqB,CAAChE,GAAc,CAC9DC,cAAe,6BACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,qBAAsB,CAACp5D,WAK9C,CACH,GAAAvN,GACE,MAAMyoE,EAAsBxnE,KAAKuR,MAAMi2D,oBAAoBloE,MACrDmoE,EAAsBznE,KAAKuR,MAAMk2D,oBAAoBnoE,MAC3D,OAAIkoE,IAAwBC,EACnBD,EAEF,CAACA,EAAqBC,EAC9B,EACD,GAAAzoE,CAAIM,EAAsHuc,GAExH,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAsHuc,GAEjI,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAsHuc,EAAiD0gB,GACzK1kB,MAAMiR,QAAQxpB,GAGS,IAAjBA,EAAMd,QACfwB,KAAKuR,MAAMi2D,oBAAoBhrC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GAC1Dv8B,KAAKuR,MAAMk2D,oBAAoBjrC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,IAChC,IAAjBj9B,EAAMd,SACfwB,KAAKuR,MAAMi2D,oBAAoBhrC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,GAC1Dv8B,KAAKuR,MAAMk2D,oBAAoBjrC,SAASl9B,EAAM,GAAIuc,EAAQ0gB,KAP1Dv8B,KAAKuR,MAAMi2D,oBAAoBhrC,SAASl9B,EAAyCuc,EAAQ0gB,GACzFv8B,KAAKuR,MAAMk2D,oBAAoBjrC,SAASl9B,EAAyCuc,EAAQ0gB,GAQ5F,MAGHooC,GAAee,aAAa,sBAAuB,CAAChE,GAAc,CAChEC,cAAe,wBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,sBAAuB,CAAChE,GAAc,CAChEC,cAAe,wBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,UAAW,CAACp5D,WAKnC,CACH,GAAAvN,GACE,MAAM2oE,EAAa1nE,KAAKuR,MAAMm2D,WAAWpoE,MACnCqoE,EAAe3nE,KAAKuR,MAAMo2D,aAAaroE,MACvCsoE,EAAgB5nE,KAAKuR,MAAMq2D,cAActoE,MACzCuoE,EAAc7nE,KAAKuR,MAAMs2D,YAAYvoE,MAC3C,OAAIopB,EAAAA,OAAOC,MAAM++C,EAAYC,IACtBj/C,EAAAA,OAAOC,MAAMg/C,EAAcC,IAC3Bl/C,EAAAA,OAAOC,MAAMi/C,EAAeC,GAC1BH,EAEF,CAACA,EAAYC,EAAcC,EAAeC,EAClD,EACD,GAAA7oE,CAAIM,EAAyJuc,GAE3J,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAAS6vB,SAAAA,WAC/B9lC,KAAKuR,KACb,EACD,YAAAgE,CAAajW,EAAyJuc,GAEpK,OADA7b,KAAKw8B,SAASl9B,EAAOuc,EAAQ5F,EAASI,SAAAA,WAC/BrW,KAAKuR,KACb,EACD,QAAAirB,CAASl9B,EAAyJuc,EAAiD0gB,GACjN,IAAImrC,EACAC,EACAC,EACAC,EACJ,GAAKhwD,MAAMiR,QAAQxpB,GAKZ,GAAqB,IAAjBA,EAAMd,OACfkpE,EAAapoE,EAAM,GACnBqoE,EAAeroE,EAAM,GACrBsoE,EAAgBtoE,EAAM,GACtBuoE,EAAcvoE,EAAM,QACf,GAAqB,IAAjBA,EAAMd,OACfkpE,EAAapoE,EAAM,GACnBqoE,EAAeroE,EAAM,GACrBsoE,EAAgBtoE,EAAM,GACtBuoE,EAAcvoE,EAAM,QACf,GAAqB,IAAjBA,EAAMd,OACfkpE,EAAapoE,EAAM,GACnBqoE,EAAeroE,EAAM,GACrBsoE,EAAgBtoE,EAAM,GACtBuoE,EAAcvoE,EAAM,OACf,IAAqB,IAAjBA,EAAMd,OAMf,MAAM,IAAIZ,UAAU,GAAK0B,GALzBooE,EAAapoE,EAAM,GACnBqoE,EAAeroE,EAAM,GACrBsoE,EAAgBtoE,EAAM,GACtBuoE,EAAcvoE,EAAM,EAGrB,MA1BCooE,EAAapoE,EACbqoE,EAAeroE,EACfsoE,EAAgBtoE,EAChBuoE,EAAcvoE,EAwBZooE,aAAsB7hC,GACxB7lC,KAAKuR,MAAMm2D,WAAW9hC,QAAQ8hC,EAAY7rD,EAAQ0gB,GAElDv8B,KAAKuR,MAAMm2D,WAAWlrC,SAASkrC,EAAY7rD,EAAQ0gB,GAEjDorC,aAAwB9hC,GAC1B7lC,KAAKuR,MAAMo2D,aAAa/hC,QAAQ+hC,EAAc9rD,EAAQ0gB,GAEtDv8B,KAAKuR,MAAMo2D,aAAanrC,SAASmrC,EAAc9rD,EAAQ0gB,GAErDqrC,aAAyB/hC,GAC3B7lC,KAAKuR,MAAMq2D,cAAchiC,QAAQgiC,EAAe/rD,EAAQ0gB,GAExDv8B,KAAKuR,MAAMq2D,cAAcprC,SAASorC,EAAe/rD,EAAQ0gB,GAEvDsrC,aAAuBhiC,GACzB7lC,KAAKuR,MAAMs2D,YAAYjiC,QAAQiiC,EAAahsD,EAAQ0gB,GAEpDv8B,KAAKuR,MAAMs2D,YAAYrrC,SAASqrC,EAAahsD,EAAQ0gB,EAExD,MAGHooC,GAAee,aAAa,aAAc,CAACjB,GAA8B,CACvE9C,cAAe,cACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,eAAgB,CAACjB,GAA8B,CACzE9C,cAAe,gBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,gBAAiB,CAACjB,GAA8B,CAC1E9C,cAAe,iBACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,cAAe,CAACjB,GAA8B,CACxE9C,cAAe,eACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,gBAAiB,CAAChE,GAAc,CAC1DC,cAAe,iBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,WAAY,CAAChE,GAAc,CACrDC,cAAe,WACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,QAAS,CAACjB,GAA8B,CAClE9C,cAAe,QACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,sBAAuB,CAAChE,GAAc,CAChEC,cAAe,wBACf9vD,UAAW6b,EACXpuB,MAAO,SAGTqlE,GAAee,aAAa,qBAAsB,CAAChE,GAAc,CAC/DC,cAAe,uBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,sBAAuB,CAAChE,GAAc,CAChEC,cAAe,wBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,eAAgB,CAAChE,GAAc,CACzDC,cAAe,gBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,gBAAiB,CAAChE,GAAc,CAC1DC,cAAe,iBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,MAAO,CAACjB,GAA8B,CAChE9C,cAAe,MACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeW,cAActlE,KAAKuR,MAAMywD,KAChD,MAGH2C,GAAee,aAAa,cAAe,CAAChE,GAAc,CACxDC,cAAe,eACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,YAAa,CAAChE,GAAc,CACtDC,cAAe,YACf9vD,UAAW0mB,EAAAA,UACXj5B,MAAO,SAGTqlE,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,CAAC,cAAe,sBAAuB,mBAAoB,mBAC1E9vD,UAAWyb,WAGbq3C,GAAee,aAAa,gBAAiB,CAAChE,GAAc,CAC1DC,cAAe,iBACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,aACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,aAAc,CAAChE,GAAc,CACvDC,cAAe,cACf9vD,UAAWyb,WAGbq3C,GAAee,aAAa,QAAS,CAACjB,GAA8B,CAClE9C,cAAe,QACf9vD,UAAWoU,EAAAA,OACX3mB,MAAO,KACP,WAAI+kE,GACF,OAAOM,GAAeM,aAAajlE,KAAKuR,MAAMywD,KAC/C,MAGH2C,GAAee,aAAa,SAAU,CAAChE,GAAc,CACnDC,cAAe,UACf9vD,UAAWovD,WClnDA6G,MAAAA,GAAsFx7D,WAASiH,OAAyC,WAAY,CAC/J,gBAAIxP,GACF,OAAO+jE,EACR,EAED,aAAAC,CAAc5yD,GACZpV,MAAMgoE,cAAc5yD,GACpBnV,KAAKgoE,WACN,EAED,YAAAt0D,CAAaC,GACX,IAAIC,EAAU5T,KAAK4T,QACH,OAAZA,IACFA,EAAU,IAAItG,IACbtN,KAA8B4T,QAAUA,GAE3CA,EAAQnG,IAAIkG,EACb,EAED,YAAAE,CAAaF,GACX,MAAMC,EAAU5T,KAAK4T,QACL,OAAZA,GAGJA,EAAQ9F,OAAO6F,EAChB,EAED,eAAAG,GACE,MAAMF,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EACF,IAAK,MAAMD,KAAUC,EACnBD,EAAOI,SAAS/T,KAGrB,EAED,YAAAioE,CAAat0D,GACX,OAAO3T,KAAKkoE,GACb,EAED,YAAIC,GACF,MAAMhzD,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiB2yD,GAAW3yD,EAAM8yD,aAAajoE,MAAQ,IAC/D,EAED,WAAAooE,GACE,MAAMD,EAAWnoE,KAAKmoE,SACtB,GAAIA,QAA0C,CAC5C,IAAIrzD,EAAUqzD,EAAW,IACzB,MAAM9pE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,YACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOqzD,CACR,EAEDE,kBAAkBF,GACT,KAGT,MAAAG,GACE,MAAMJ,EAAMloE,KAAKkoE,IACjB,GAAY,OAARA,EAAc,CAChB,IAAIpzD,EAAUozD,EAAM,IACpB,MAAM7pE,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,MACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOozD,CACR,EAED,MAAAK,CAAOC,GACL,MAAMC,EAASzoE,KAAKkoE,IACpB,OAAIO,IAAWD,GACbxoE,KAAK4V,aAAY,GACV6yD,IACa,OAAXA,IACRzoE,KAA8BkoE,IAAM,KACrCloE,KAAK0oE,cAAcD,GACnBzoE,KAAK2oE,YAAYF,GACjBzoE,KAAK4oE,UAAUH,GACfzoE,KAAK6oE,aAAaJ,IAEL,OAAXD,IACDxoE,KAA8BkoE,IAAMM,EACrCxoE,KAAK8oE,cAAcN,GACnBxoE,KAAK+oE,YAAYP,GACjBxoE,KAAKgpE,QAAQR,GACbxoE,KAAKipE,aAAaT,IAEpBxoE,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACE20D,EACR,EAED,SAAAS,CAAUV,GACR,MAAMC,EAASzoE,KAAKkoE,IACpB,OAAIO,IAAWD,IAGA,OAAXC,IACDzoE,KAA8BkoE,IAAM,KACrCloE,KAAK0oE,cAAcD,GACnBzoE,KAAK2oE,YAAYF,GACjBzoE,KAAK4oE,UAAUH,GACfzoE,KAAK6oE,aAAaJ,IAEnBzoE,KAA8BkoE,IAAMM,EACrCxoE,KAAK8oE,cAAcN,GACnBxoE,KAAK+oE,YAAYP,GACjBxoE,KAAKgpE,QAAQR,GACbxoE,KAAKipE,aAAaT,GAClBxoE,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAfI00D,CAiBV,EAED,OAAAQ,CAAQd,GAEP,EAED,aAAAY,CAAcZ,GAEb,EAED,WAAAa,CAAYb,GAEX,EAED,YAAAe,CAAaf,GAEZ,EAED,SAAAF,GACE,MAAMS,EAASzoE,KAAKkoE,IACpB,OAAe,OAAXO,IAGHzoE,KAA8BkoE,IAAM,KACrCloE,KAAK0oE,cAAcD,GACnBzoE,KAAK2oE,YAAYF,GACjBzoE,KAAK4oE,UAAUH,GACfzoE,KAAK6oE,aAAaJ,GAClBzoE,KAAK4V,aAAY,GACjB5V,KAAK8T,mBARI20D,CAUV,EAED,SAAAG,CAAUV,GAET,EAED,aAAAQ,CAAcR,GAEb,EAED,WAAAS,CAAYT,GAEX,EAED,YAAAW,CAAaX,GAEZ,EAED,UAAA/gC,CAAWC,EAAoB/B,EAAkBxpB,GAC/C,MAAMjI,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EAGJ,IAAK,MAAMD,KAAUC,EACfD,aAAkBm0D,IACpBn0D,EAAOwzB,WAAWC,EAAO/B,EAAMxpB,EAGpC,EAED,QAAA7O,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACnB,GAAIA,aAAiB2yD,IAEnB,GADA9nE,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,aAAoB,CAC7C,MAAM6xD,EAAWhzD,EAAM8yD,aAAajoE,MACnB,OAAbmoE,GAAkC,OAAbnoE,KAAKkoE,IAC5BloE,KAAKuoE,OAAOvoE,KAAKqoE,kBAAkBF,IACb,OAAbA,GAAkC,OAAbnoE,KAAKkoE,IACnCloE,KAAKuoE,OAAO,MAEZvoE,KAAKgW,YAAW,EAEnB,OAEDhW,KAAKgW,YAAW,EAEnB,GAEH,CACE,SAAAhB,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEqC,QAAU,KAChD3P,EAAsCikE,IAAM,KACtCjkE,CACR,IClRUklE,GAAkDrB,GAASv0D,OAA0C,aAAc,CAC9H,gBAAIxP,GACF,OAAOolE,EACR,EAEDd,kBAAkBF,GACZA,aAAoBiB,cACfjB,EAEF,MAGX,CACE,SAAAnzD,CAAU/Q,EAAoBsN,GAE5B,OADAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,EAEtC,ICVU83D,GAAoEvB,GAASv0D,OAAuC,UAAW,CAC1I,gBAAIxP,GACF,OAAOslE,EACR,EAEDC,SAAU,IAEV,WAAIC,GACF,OAAOvpE,KAAKspE,SAAW,KACxB,EAED,iBAAAjB,CAAkBF,GAChB,OAAIA,aAAoBiB,eAAiBjB,aAAoBqB,gBACpDxpE,KAAKypE,WAAWtB,GAElB,IACR,EAED,UAAAsB,CAAWtB,GACT,MAAMvjD,EAAQujD,EAASuB,WAAW1pE,KAAKupE,SACvC,OAAOpB,EAASwB,SAAS/iD,KAAKhC,EAC/B,GAEH,CACE,SAAA5P,CAAU/Q,EAAoBsN,GAE5B,OADAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,EAEtC,ICuDUq4D,GAAgDP,GAAQ91D,OAAwC,YAAa,CACxH,gBAAIxP,GACF,OAAO6lE,EACR,EAEDN,SAAU,IAEV,iBAAAjB,CAAkBF,GAIhB,OAHiB,OAAbA,IACDA,EAAiB0B,iBAAmB1zD,KAAK2zD,UAExC3B,aAAoB4B,aACf5B,EACEA,aAAoBiB,eAAiBjB,aAAoBqB,gBAC3DxpE,KAAKypE,WAAWtB,GAElB,IACR,EAED,UAAAsB,CAAWtB,GACT,MAAMvjD,EAAQujD,EAASuB,WAAW1pE,KAAKupE,SACjCS,EAAO7B,EAASwB,SAAS/iD,KAAKhC,GACpC,KAAMolD,aAAgBD,cACpB,MAAM,IAAInsE,UAAU,qBAAuBosE,GAE7C,OAAOA,CACR,EAED,WAAAjB,CAAYb,GACNloE,KAAKyE,SACPzE,KAAKioB,MAAM+8C,aAEd,EAED,QAAAnD,CAASF,GACP,MAAMuG,EAAMloE,KAAKkoE,IACjB,GAAY,OAARA,EACF,OAEF,GAA6B,oBAAlBvtC,cAA+B,CACxC,MAAM1S,EAAQigD,EAAI+B,SAClB,GAA6B,iBAAlBtI,EACT,OAAO15C,EAAMlpB,IAAI4iE,GAEnB,IAAK,IAAIpjE,EAAI,EAAGA,EAAIojE,EAAcnjE,OAAQD,GAAK,EAAG,CAChD,MAAMe,EAAQ2oB,EAAMlpB,IAAI4iE,EAAcpjE,IACtC,YAAIe,EACF,OAAOA,CAEV,CACD,MAAO,EACR,CACD,MAAM2oB,EAAQigD,EAAIjgD,MAClB,GAA6B,iBAAlB05C,EACT,OAAO15C,EAAM81C,iBAAiB4D,GAEhC,IAAK,IAAIpjE,EAAI,EAAGA,EAAIojE,EAAcnjE,OAAQD,GAAK,EAAG,CAChD,MAAMe,EAAQ2oB,EAAM81C,iBAAiB4D,EAAcpjE,IACnD,GAAqB,IAAjBe,EAAMd,OACR,OAAOc,CAEV,CACD,MAAO,EACR,EAED,QAAAsjE,CAASgC,EAAsBtlE,EAAgBmjE,GAC7C,MAAMyF,EAAMloE,KAAKkoE,IACjB,GAAY,OAARA,EACF,OAAOloE,KAGT,GADAA,KAAK6kE,aAAaD,EAActlE,EAAOmjE,GACV,oBAAlB9nC,cACT,GAAIr7B,QAAoC,CACtC,MAAM6iE,EAAWznC,GAAWp7B,GAC5B,GAAiB,OAAb6iE,EACF,IACE+F,EAAI+B,SAASjrE,IAAI4lE,EAAczC,EAChC,CAAC,MAAOj+C,GAER,MAEDgkD,EAAIjgD,MAAMm2C,YAAYwG,EAAcpqC,GAAcl7B,GAAQmjE,EAE7D,MACC,IACEyF,EAAI+B,SAASn8D,OAAO82D,EACrB,CAAC,MAAO1gD,GAER,MAEM5kB,QACT4oE,EAAIjgD,MAAMm2C,YAAYwG,EAAcpqC,GAAcl7B,GAAQmjE,GAE1DyF,EAAIjgD,MAAMiiD,eAAetF,GAI3B,OAFA5kE,KAAK8kE,WAAWF,EAActlE,EAAOmjE,GACrCziE,KAAK+kE,YAAYH,EAActlE,EAAOmjE,GAC/BziE,IACR,EAED,YAAA6kE,CAAaD,EAAsBtlE,EAAgBmjE,GAElD,EAED,UAAAqC,CAAWF,EAAsBtlE,EAAgBmjE,GAEhD,EAED,WAAAsC,CAAYH,EAAsBtlE,EAAgBmjE,GAEjD,EAED,UAAA14B,CAAW6U,EAA+BC,EAC/BC,EAAgCnW,GACzC,IAAK6B,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMw4B,WAAW6U,EAAKC,EAAUC,EAAKnW,EAClD,EAED,aAAAwW,CAAcpV,GACZ,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAM4tC,cAAcpV,EACjC,EAED,aAAAmV,CAAcnV,GACZ,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAM2tC,cAAcnV,EAC1B,EAED,gBAAAsV,CAAiBtV,GACf,IAAKS,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAM8tC,iBAAiBtV,EAC7B,EAED,kBAAAyV,CAAmBnhD,EAAciB,EAAgBqpC,GAC/C,IAAK6B,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMiuC,mBAAmBnhD,EAAMiB,EAAOqpC,EACnD,EAED,qBAAA+W,CAAsBF,GACpB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElB,OAAOvC,KAAKuR,MAAMmuC,sBAAsBF,EACzC,EAED,qBAAA/U,CAAsB+U,GACpB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMk5B,sBAAsB+U,EAClC,EAED,wBAAA3U,CAAyB2U,GACvB,IAAKhV,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMs5B,yBAAyB2U,EACrC,EAED,qBAAA1U,CAAsB0U,EAAwCtY,GAC5D,IAAKsD,EAAgBvtB,gBAAAA,OAAOC,aAAald,KAAKuR,OAC5C,MAAM,IAAIhP,MAAM,uBAElBvC,KAAKuR,MAAMu5B,sBAAsB0U,EAAoBtY,EACtD,EAED,OAAAb,CAAWjF,EAAeiE,GACxB,GAAKE,GAAatoB,OAAOC,aAAald,KAAKuR,OAG3C,OAAOvR,KAAKuR,MAAM80B,QAAQjF,EAAMiE,EACjC,EAED,SAAAiB,CAAgBlF,EAAeiE,EAAmChF,GAChE,OAAIkF,GAAatoB,OAAOC,aAAald,KAAKuR,OACf,IAArB/R,UAAUhB,OACLwB,KAAKuR,MAAM+0B,UAAUlF,EAAMiE,GAE3BrlC,KAAKuR,MAAM+0B,UAAUlF,EAAMiE,EAAiChF,GAEvC,IAArB7gC,UAAUhB,OACZ6mC,EAEFhF,CACR,EAED,UAAA8G,CAAWC,EAAoB/B,EAAkBxpB,GAC/C,MAAM3P,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEA2P,EADSA,UAAmD,IAAXA,EACxCurB,EAAMhH,MAAMyF,GAAKhqB,OAAQ+yB,GAAKnB,SAAS,GAEvC9G,SAAO/9B,SAASiT,GAE3B,MAAMzP,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,SAChC0F,IAAAA,GAAuB,eAAiBA,GACzCA,EAAiBkjC,WAAWC,EAAO/B,EAAMxpB,EAE7C,CACD9b,MAAMonC,WAAWC,EAAO/B,EAAMxpB,EAC/B,EAED,QAAAhZ,GACE9C,MAAM8C,WACW,OAAb7C,KAAKkoE,KACPloE,KAAKioB,MAAM+8C,aAEd,GAEH,CACE,SAAAhwD,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IAC5Bk0D,cAAcmE,IAChB3lE,CACR,IAGH2lE,GAAUO,YAAY,QAAS,CAACxF,GAAe,CAAA,KCzTlCyF,MAAAA,GAAgDf,GAAQ91D,OAAwC,YAAa,CACxH,gBAAIxP,GACF,OAAOqmE,EACR,EAEDd,SAAU,SAEV,iBAAAjB,CAAkBF,GAChB,OAAIA,aAAoBkC,aACflC,EACEA,aAAoBiB,eAAiBjB,aAAoBqB,gBAC3DxpE,KAAKypE,WAAWtB,GAElB,IACR,EAED,UAAAsB,CAAWtB,GACT,MAAMvjD,EAAQujD,EAASuB,WAAW1pE,KAAKupE,SACjCS,EAAO7B,EAASwB,SAAS/iD,KAAKhC,GACpC,KAAMolD,aAAgBK,cACpB,MAAM,IAAIzsE,UAAU,qBAAuBosE,GAE7C,OAAOA,CACR,GAEH,CACE,SAAAh1D,CAAU/Q,EAAoBsN,GAE5B,OADAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,EAEtC,ICZU+4D,GAAgDh+D,WAASiH,OAAuC,YAAa,CACxH,gBAAIxP,GACF,OAAOumE,EACR,EAED,SAAIhrE,GAEF,OADoBU,KAAKuR,MAAcywD,KAAiBuI,UACvCjrE,KAClB,EAED,GAAAP,GACE,OAASiB,KAAKuR,MAAcywD,KAAiBuI,SAC9C,EAED,GAAAvrE,CAAIwrE,GACF,OAAOxqE,KAAKyN,OAAO+8D,EACpB,EAED,YAAAj1D,CAAai1D,GACX,OAAOxqE,KAAKyN,OAAO+8D,EACpB,EAED,QAAAC,CAASC,GAEP,OADoB1qE,KAAKuR,MAAcywD,KAAiBuI,UACvCE,SAASC,EAC3B,EAED,GAAAj9D,IAAO+8D,GACL,MAAMD,EAAcvqE,KAAKuR,MAAcywD,KAAiBuI,UACxD,IAAK,IAAIhsE,EAAI,EAAGA,EAAIisE,EAAWhsE,OAAQD,GAAK,EAAG,CAC7C,MAAMmsE,EAAYF,EAAWjsE,GACxBgsE,EAAUE,SAASC,KACtB1qE,KAAK2qE,QAAQD,GACbH,EAAU98D,IAAIi9D,GACd1qE,KAAK4qE,MAAMF,GACX1qE,KAAK6qE,OAAOH,GAEf,CACD,OAAO1qE,KAAKuR,KACb,EAED,OAAAo5D,CAAQD,GAEP,EAED,KAAAE,CAAMF,GAEL,EAED,MAAAG,CAAOH,GAEN,EAED,MAAA5hE,IAAU0hE,GACR,MAAMD,EAAcvqE,KAAKuR,MAAcywD,KAAiBuI,UACxD,IAAK,IAAIhsE,EAAI,EAAGA,EAAIisE,EAAWhsE,OAAQD,GAAK,EAAG,CAC7C,MAAMmsE,EAAYF,EAAWjsE,GACzBgsE,EAAUE,SAASC,KACrB1qE,KAAK8qE,WAAWJ,GAChBH,EAAUzhE,OAAO4hE,GACjB1qE,KAAK+qE,SAASL,GACd1qE,KAAKgrE,UAAUN,GAElB,CACD,OAAO1qE,KAAKuR,KACb,EAED,UAAAu5D,CAAWJ,GAEV,EAED,QAAAK,CAASL,GAER,EAED,SAAAM,CAAUN,GAET,EAED,OAAAO,CAAQC,EAAsBC,GAC5B,MAAMZ,EAAcvqE,KAAKuR,MAAcywD,KAAiBuI,UACxD,QAAKA,EAAUE,SAASS,KAIxBlrE,KAAK8qE,WAAWI,GAChBX,EAAUzhE,OAAOoiE,GACjBlrE,KAAK+qE,SAASG,GACdlrE,KAAKgrE,UAAUE,GAEflrE,KAAK2qE,QAAQQ,GACbZ,EAAU98D,IAAI09D,GACdnrE,KAAK4qE,MAAMO,GACXnrE,KAAK6qE,OAAOM,IAEL,EACR,EAED,MAAAxlD,CAAO+kD,EAAmBxjC,GACxB,MAAMqjC,EAAcvqE,KAAKuR,MAAcywD,KAAiBuI,UACxD,OAAc,IAAVrjC,GACGqjC,EAAUE,SAASC,KACtB1qE,KAAK2qE,QAAQD,GACbH,EAAU98D,IAAIi9D,GACd1qE,KAAK4qE,MAAMF,GACX1qE,KAAK6qE,OAAOH,KAEP,IACY,IAAVxjC,GACLqjC,EAAUE,SAASC,KACrB1qE,KAAK8qE,WAAWJ,GAChBH,EAAUzhE,OAAO4hE,GACjB1qE,KAAK+qE,SAASL,GACd1qE,KAAKgrE,UAAUN,KAEV,GACGH,EAAUE,SAASC,IAO7B1qE,KAAK8qE,WAAWJ,GAChBH,EAAUzhE,OAAO4hE,GACjB1qE,KAAK+qE,SAASL,GACd1qE,KAAKgrE,UAAUN,IACR,IAVP1qE,KAAK2qE,QAAQD,GACbH,EAAU98D,IAAIi9D,GACd1qE,KAAK4qE,MAAMF,GACX1qE,KAAK6qE,OAAOH,IACL,EAQV,EAED,OAAA/jD,CAAcze,EAA0G7I,GACtH,MAAMkrE,EAAcvqE,KAAKuR,MAAcywD,KAAiBuI,UACxD,IAAK,IAAIhsE,EAAI,EAAGA,EAAIgsE,EAAU/rE,OAAQD,GAAK,EAAG,CAC5C,MAAMmsE,EAAYH,EAAUhsE,GACtBO,EAASoJ,EAASzI,KAAKJ,EAASqrE,EAAWnsE,EAAGyB,MACpD,YAAIlB,EACF,OAAOA,CAEV,CAEF,IC7JG,MAAOssE,WAAiBv5B,GAC5B,WAAA/xC,CAAYkiE,GAIV,GAHAjiE,QACAC,KAAKgiE,KAAOA,EAERoJ,GAASC,QAAQ99D,IAAIy0D,GACvB,MAAM,IAAIz/D,MAAMy/D,EAAO,mCAEzBoJ,GAASC,QAAQrsE,IAAIgjE,EAAMhiE,KAC5B,CAUQ,QAAAwa,CAASzc,EAAa0c,GACzBA,aAAoB6wD,KACtB7wD,EAAW2wD,GAASG,SAAS9wD,GACP,OAAbA,IACTA,EAAWo3B,GAAKjpC,SAAS6R,IAE3B,MAAMG,EAAW5a,KAAKsa,SAASvc,GAC/B,IAAIC,EAEJ,GAAiB,OAAb4c,GAAkC,OAAbH,GAAqBG,IAAaH,EAAU,CAkBnE,GAjBAA,EAAS3R,SACT9K,EAAS4c,EAASnU,YAE2B,IAAxCmU,EAASjZ,MAAQkwC,GAAK9+B,gBACzB6H,EAASnY,SAASmY,EAASjZ,MAAQkwC,GAAK9+B,cACxC/S,KAAKgC,gBAAgB4Y,GACrBA,EAAS4wD,aAAaxrE,MACtBA,KAAKyrE,eAAe7wD,GACpB5a,KAAKiC,cAAc2Y,GACnB5a,KAAKkC,eAAe0Y,GACpBA,EAASzR,YAAY,GACrByR,EAASnY,SAASmY,EAASjZ,OAASkwC,GAAK9+B,eAG3C0H,EAAShY,SAASgY,EAAS9Y,MAAQkwC,GAAKzoC,eACxCqR,EAAStR,OAAOyR,EAAS7c,KACzBiC,KAAKqB,gBAAgBoZ,EAAUzc,GAC3Byc,aAAoB2wD,GACtB,GAAIxwD,aAAoBwwD,GACtBprE,KAAKgiE,KAAKrnD,aAAaF,EAASunD,KAAMpnD,EAASonD,WAC1C,GAAe,OAAXhkE,EAAiB,CAC1B,IAAI0tE,EAA0B,KAC1BC,EAAwB3tE,EAC5B,EAAG,CACD,GAAI2tE,aAAoBP,GAAU,CAChCM,EAAaC,EAAS3J,KACtB,KACD,CACD2J,EAAWA,EAASllE,kBACA,OAAbklE,GACT3rE,KAAKgiE,KAAK4J,aAAanxD,EAASunD,KAAM0J,EACvC,MACC1rE,KAAKgiE,KAAKrxD,YAAY8J,EAASunD,WAExBpnD,aAAoBwwD,IAC7BprE,KAAKgiE,KAAKt4D,YAAYkR,EAASonD,MAEjChiE,KAAK6rE,eAAepxD,GACpBA,EAAS65B,aAAat0C,KAAMhC,GAC5BgC,KAAKuB,cAAckZ,EAAUzc,GAC7BgC,KAAKwB,eAAeiZ,EAAUzc,GAC9Byc,EAAShZ,gBACTgZ,EAAShY,SAASgY,EAAS9Y,OAASkwC,GAAKzoC,cAC1C,MAAM,IAAIqR,IAAaG,GAAyB,OAAbH,GAAqBA,EAAS1c,MAAQA,KACvD,OAAb6c,GACF5c,EAAS4c,EAASnU,YAC2B,IAAxCmU,EAASjZ,MAAQkwC,GAAK9+B,gBACzB6H,EAASnY,SAASmY,EAASjZ,MAAQkwC,GAAK9+B,cACxC/S,KAAKgC,gBAAgB4Y,GACrBA,EAAS4wD,aAAaxrE,MACtBA,KAAKyrE,eAAe7wD,GAChBA,aAAoBwwD,IACtBprE,KAAKgiE,KAAKt4D,YAAYkR,EAASonD,MAEjChiE,KAAKiC,cAAc2Y,GACnB5a,KAAKkC,eAAe0Y,GACpBA,EAASzR,YAAY,GACrByR,EAASnY,SAASmY,EAASjZ,OAASkwC,GAAK9+B,gBAG3C/U,EAAS,KAGM,OAAbyc,GAAmB,CAMrB,GALAA,EAAS3R,SAET2R,EAAShY,SAASgY,EAAS9Y,MAAQkwC,GAAKzoC,eACxCqR,EAAStR,OAAOpL,GAChBiC,KAAKqB,gBAAgBoZ,EAAUzc,GAC3Byc,aAAoB2wD,GAAU,CAChC,IAAIM,EAA0B,KAC9B,GAAe,OAAX1tE,EAAiB,CACnB,IAAI2tE,EAAwB3tE,EAC5B,EAAG,CACD,GAAI2tE,aAAoBP,GAAU,CAChCM,EAAaC,EAAS3J,KACtB,KACD,CACD2J,EAAWA,EAASllE,kBACA,OAAbklE,EACV,CACD3rE,KAAKgiE,KAAK4J,aAAanxD,EAASunD,KAAM0J,EACvC,CACD1rE,KAAK6rE,eAAepxD,GACpBA,EAAS65B,aAAat0C,KAAMhC,GAC5BgC,KAAKuB,cAAckZ,EAAUzc,GAC7BgC,KAAKwB,eAAeiZ,EAAUzc,GAC9Byc,EAAShZ,gBACTgZ,EAAShY,SAASgY,EAAS9Y,OAASkwC,GAAKzoC,cAC1C,CAGH,OAAOwR,CACR,CAKQ,WAAAjK,CAAYrP,EAAkCvD,GAyBrD,OAvBEuD,EADEA,aAAiBgqE,KACXF,GAASG,SAASjqE,GAElBuwC,GAAKjpC,SAAStH,IAGlBwH,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAGnBuD,EAAMmB,SAASnB,EAAMK,MAAQkwC,GAAKzoC,eAClC9H,EAAM6H,OAAOpL,GACbiC,KAAKqB,gBAAgBC,EAAO,MACxBA,aAAiB8pE,IACnBprE,KAAKgiE,KAAKrxD,YAAYrP,EAAM0gE,MAE9BhiE,KAAK6rE,eAAevqE,GACpBA,EAAMgzC,aAAat0C,KAAM,MACzBA,KAAKuB,cAAcD,EAAO,MAC1BtB,KAAKwB,eAAeF,EAAO,MAC3BA,EAAMG,gBACNH,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAKzoC,eAE5B9H,CACR,CAKQ,YAAAoZ,CAAapZ,EAAkCvD,IAEpDuD,EADEA,aAAiBgqE,KACXF,GAASG,SAASjqE,GAElBuwC,GAAKjpC,SAAStH,IAGlBwH,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAEnB,MAAMC,EAASgC,KAAKwG,WAepB,OAbAlF,EAAMmB,SAASnB,EAAMK,MAAQkwC,GAAKzoC,eAClC9H,EAAM6H,OAAOpL,GACbiC,KAAKqB,gBAAgBC,EAAOtD,GACxBsD,aAAiB8pE,IACnBprE,KAAKgiE,KAAK4J,aAAatqE,EAAM0gE,KAAMhiE,KAAKgiE,KAAKx7D,YAE/CxG,KAAK6rE,eAAevqE,GACpBA,EAAMgzC,aAAat0C,KAAMhC,GACzBgC,KAAKuB,cAAcD,EAAOtD,GAC1BgC,KAAKwB,eAAeF,EAAOtD,GAC3BsD,EAAMG,gBACNH,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAKzoC,eAE5B9H,CACR,CAKQ,WAAAqT,CAAYrT,EAAkCtD,EAA4BD,GAgBjF,IAAI4nD,EACA+lB,EACJ,IAjBI1tE,aAAkB6zC,IAAQ7zC,EAAO0C,SAAWV,MAAQhC,aAAkBstE,MAAQttE,EAAO8tE,aAAe9rE,KAAKgiE,QAC3GhkE,EAAS,OAITsD,EADEA,aAAiBgqE,KACXF,GAASG,SAASjqE,GAElBuwC,GAAKjpC,SAAStH,IAGlBwH,kBACF/K,GACFiC,KAAK0J,YAAY3L,GAKfC,aAAkBstE,KAAM,CAC1B3lB,EAAa,KACb+lB,EAAa1tE,EACb,IAAI+tE,EAAwB/tE,EAC5B,EAAG,CACD,MAAM2tE,EAAWP,GAASrsE,IAAIgtE,GAC9B,GAAiB,OAAbJ,EAAmB,CACrBhmB,EAAagmB,EACb,KACD,CACDI,EAAWA,EAAStlE,kBACA,OAAbslE,EACV,MACCpmB,EAAa3nD,EACb0tE,EAAa,KAMf,GAHApqE,EAAMmB,SAASnB,EAAMK,MAAQkwC,GAAKzoC,eAClC9H,EAAM6H,OAAOpL,GACbiC,KAAKqB,gBAAgBC,EAAOqkD,GACxBrkD,aAAiB8pE,GAAU,CAC7B,GAAmB,OAAfM,GAAsC,OAAf/lB,EAAqB,CAC9C,IAAIgmB,EAAwBhmB,EAC5B,EAAG,CACD,GAAIgmB,aAAoBP,GAAU,CAChCM,EAAaC,EAAS3J,KACtB,KACD,CACD2J,EAAWA,EAASllE,kBACA,OAAbklE,EACV,CACD3rE,KAAKgiE,KAAK4J,aAAatqE,EAAM0gE,KAAM0J,EACpC,CAQD,OAPA1rE,KAAK6rE,eAAevqE,GACpBA,EAAMgzC,aAAat0C,KAAM2lD,GACzB3lD,KAAKuB,cAAcD,EAAOqkD,GAC1B3lD,KAAKwB,eAAeF,EAAOqkD,GAC3BrkD,EAAMG,gBACNH,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAKzoC,eAE5B9H,CACR,CAKD,WAAA0qE,CAAY1qE,EAAsCtD,EAAgCD,GAChF,GAAIC,aAAkB6zC,IAAQ7zC,EAAO0C,SAAWV,MAAQhC,aAAkBstE,MAAQttE,EAAO8tE,aAAe9rE,KAAKgiE,KAC3G,MAAM,IAAIpkE,UAAU,GAAKI,GAS3B,GANAsD,EAAQ8pE,GAASxiE,SAAStH,YAEtBvD,GACFiC,KAAK0J,YAAY3L,GAGfC,aAAkBstE,KAAM,CAC1B,IAAIS,EAAwB/tE,EAC5BA,EAAS,KACT,EAAG,CACD,MAAM2tE,EAAWP,GAASrsE,IAAIgtE,GAC9B,GAAiB,OAAbJ,EAAmB,CACrB3tE,EAAS2tE,EACT,KACD,CACDI,EAAWA,EAAStlE,kBACA,OAAbslE,EACV,CAYD,OAVAzqE,EAAMmB,SAASnB,EAAMK,MAAQkwC,GAAKzoC,eAClC9H,EAAM6H,OAAOpL,GACbiC,KAAKqB,gBAAgBC,EAAOtD,GAC5BgC,KAAK6rE,eAAevqE,GACpBA,EAAMgzC,aAAat0C,KAAMhC,GACzBgC,KAAKuB,cAAcD,EAAOtD,GAC1BgC,KAAKwB,eAAeF,EAAOtD,GAC3BsD,EAAMG,gBACNH,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAKzoC,eAE5B9H,CACR,CAKQ,YAAAqZ,CAAaF,EAAqCG,GACzD,GAAIA,EAASla,SAAWV,KACtB,MAAM,IAAIpC,UAAU,GAAKgd,GAM3B,IAJEH,EADSA,aAAoB6wD,KAClBF,GAASG,SAAS9wD,GAElBo3B,GAAKjpC,SAAS6R,MAEVG,EACf,OAAOA,EAGTH,EAAS3R,SACT,MAAM9K,EAAS4c,EAASnU,YAgBxB,GAd6C,IAAxCmU,EAASjZ,MAAQkwC,GAAK9+B,gBACzB6H,EAASnY,SAASmY,EAASjZ,MAAQkwC,GAAK9+B,cACxC/S,KAAKgC,gBAAgB4Y,GACrBA,EAAS4wD,aAAaxrE,MACtBA,KAAKyrE,eAAe7wD,GACpB5a,KAAKiC,cAAc2Y,GACnB5a,KAAKkC,eAAe0Y,GACpBA,EAASzR,YAAY,GACrByR,EAASnY,SAASmY,EAASjZ,OAASkwC,GAAK9+B,eAG3C0H,EAAShY,SAASgY,EAAS9Y,MAAQkwC,GAAKzoC,eACxCqR,EAAStR,OAAOyR,EAAS7c,KACzBiC,KAAKqB,gBAAgBoZ,EAAUzc,GAC3Byc,aAAoB2wD,GACtB,GAAIxwD,aAAoBwwD,GACtBprE,KAAKgiE,KAAKrnD,aAAaF,EAASunD,KAAMpnD,EAASonD,WAC1C,GAAe,OAAXhkE,EAAiB,CAC1B,IAAI0tE,EAA0B,KAC1BC,EAAwB3tE,EAC5B,EAAG,CACD,GAAI2tE,aAAoBP,GAAU,CAChCM,EAAaC,EAAS3J,KACtB,KACD,CACD2J,EAAWA,EAASllE,kBACA,OAAbklE,GACT3rE,KAAKgiE,KAAK4J,aAAanxD,EAASunD,KAAM0J,EACvC,MACC1rE,KAAKgiE,KAAKrxD,YAAY8J,EAASunD,WAExBpnD,aAAoBwwD,IAC7BprE,KAAKgiE,KAAKt4D,YAAYkR,EAASonD,MASjC,OAPAhiE,KAAK6rE,eAAepxD,GACpBA,EAAS65B,aAAat0C,KAAMhC,GAC5BgC,KAAKuB,cAAckZ,EAAUzc,GAC7BgC,KAAKwB,eAAeiZ,EAAUzc,GAC9Byc,EAAShZ,gBACTgZ,EAAShY,SAASgY,EAAS9Y,OAASkwC,GAAKzoC,eAElCwR,CACR,CAKQ,WAAAlR,CAAY3L,GACnB,IAAIuD,EACJ,GAAmB,iBAARvD,GAET,GADAuD,EAAQtB,KAAKsa,SAASvc,GACR,OAAVuD,EACF,OAAO,UAEJ,GAAIvD,aAAeutE,KAAM,CAC9B,GAAIvtE,EAAI+tE,aAAe9rE,KAAKgiE,KAC1B,MAAM,IAAIz/D,MAAM,oBAElB,MAAM8gD,EAAO+nB,GAASrsE,IAAIhB,GAC1B,GAAa,OAATslD,EAIF,OADArjD,KAAKgiE,KAAKt4D,YAAY3L,GACfA,EAHPuD,EAAQ+hD,CAKX,MAEC,GADA/hD,EAAQvD,EACJuD,EAAMZ,SAAWV,KACnB,MAAM,IAAIuC,MAAM,eAkBpB,OAd0C,IAArCjB,EAAMK,MAAQkwC,GAAK9+B,gBACtBzR,EAAMmB,SAASnB,EAAMK,MAAQkwC,GAAK9+B,cAClC/S,KAAKgC,gBAAgBV,GACrBA,EAAMkqE,aAAaxrE,MACnBA,KAAKyrE,eAAenqE,GAChBA,aAAiB8pE,IACnBprE,KAAKgiE,KAAKt4D,YAAYpI,EAAM0gE,MAE9BhiE,KAAKiC,cAAcX,GACnBtB,KAAKkC,eAAeZ,GACpBA,EAAM6H,YAAY,GAClB7H,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAK9+B,eAG9BzR,CACR,CAEQ,cAAA4Z,GACP,IAAI5Z,EACJ,KAAOA,EAAQtB,KAAKoa,UAAqB,OAAV9Y,GAAgB,CAC7C,GAA0C,IAArCA,EAAMK,MAAQkwC,GAAK9+B,cACtB,MAAM,IAAIxQ,MAAM,+BAElBvC,KAAKgC,gBAAgBV,GACrBA,EAAMkqE,aAAaxrE,MACnBA,KAAKyrE,eAAenqE,GAChBA,aAAiB8pE,IACnBprE,KAAKgiE,KAAKt4D,YAAYpI,EAAM0gE,MAE9BhiE,KAAKiC,cAAcX,GACnBtB,KAAKkC,eAAeZ,GACpBA,EAAM6H,YAAY,GAClB7H,EAAMmB,SAASnB,EAAMK,OAASkwC,GAAK9+B,aACpC,CACF,CAEQ,aAAAyF,CAAclX,EAAatD,GAClC,GAAIsD,EAAMZ,SAAWV,KACnB,MAAM,IAAIuC,MAAM,eACX,GAAe,OAAXvE,GAAmBA,EAAO0C,SAAWV,KAC9C,MAAM,IAAIuC,MAAM,kCACPjB,EAAMmF,cAAgBzI,IAIjCgC,KAAKmC,kBAAkBb,EAAOtD,GAC1BsD,aAAiB8pE,KACnBprE,KAAKgiE,KAAKt4D,YAAYpI,EAAM0gE,MAC5BhiE,KAAKgiE,KAAK4J,aAAatqE,EAAM0gE,KAAMhkE,aAAkBotE,GAAWptE,EAAOgkE,KAAO,OAEhF1gE,EAAM2qE,eAAejuE,GACrBgC,KAAKoC,gBAAgBd,EAAOtD,GAC5BgC,KAAKqC,iBAAiBf,EAAOtD,GAC9B,CAGD,iBAAAkuE,CAAkBlK,GAChB,OAAG,CACD,MAAM8J,EAA0B9J,EAAK8J,WACrC,GAAmB,OAAfA,EACF,OAAO,EAGT,GAAmB,OADAV,GAASrsE,IAAI+sE,GAE9B,OAAO,EAET9J,EAAO8J,CACA,CACV,CAGD,oBAAAK,CAAqBnK,GACnB,IAAIoK,EAAmCpK,EAAKoK,YAC5C,GAA2B,kBAAhBA,EAA2B,CACpC,MAAMC,EAAgBrK,EAAKqK,cAC3B,GAAsB,OAAlBA,EACFD,GAAc,MACT,CAELA,EAAmE,IADlDC,EAAcC,wBAAwBtK,GAC7BA,EAAKuK,+BAChC,CACF,CACD,OAAOH,CACR,CAGD,YAAA1wD,CAAa2nC,GACX,GAAoB,OAAhBA,EAAK3iD,OACP,OAEF,MAAMmjD,EAAaunB,GAASrsE,IAAIskD,EAAK2e,KAAK8J,YAC1C,GAAmB,OAAfjoB,EAEF,YADAR,EAAK3nC,QAGP,IAAIiqC,EAA0B,KAC1B+lB,EAAaroB,EAAK2e,KAAKv7D,YAC3B,KAAsB,OAAfilE,IACL/lB,EAAaylB,GAASrsE,IAAI2sE,GACP,OAAf/lB,IAGJ+lB,EAAaA,EAAWjlE,YAE1B48C,EAAK5gD,SAAS4gD,EAAK1hD,MAAQkwC,GAAKzoC,eAChCi6C,EAAK/O,aAAauP,EAAY8B,GAC9BtC,EAAK5hD,gBACL4hD,EAAK5gD,SAAS4gD,EAAK1hD,OAASkwC,GAAKzoC,cAClC,CAGQ,KAAAsS,IACH1b,KAAKyE,SAAY2mE,GAASe,cAAcnsE,KAAKgiE,OAAUoJ,GAASc,WAAWlsE,KAAKgiE,QAGpFhiE,KAAKyC,SAASzC,KAAK2B,MAAQkwC,GAAKzoC,eAChCpJ,KAAKsC,eACLtC,KAAKyB,gBACLzB,KAAKyC,SAASzC,KAAK2B,OAASkwC,GAAKzoC,eAClC,CAID,IAAAojE,CAAKltE,GACH,OAAyB,IAArBE,UAAUhB,QAEE,QADdc,EAAQU,KAAKgiE,KAAKyK,eAEhBntE,OAAa,GAERA,aACEA,IACTA,EAAQ,MAEVU,KAAKgiE,KAAKyK,YAAcntE,EACjBU,KACR,CAED,mBAAakgD,GACX,OAAO3nB,EAAAA,UAAUgB,UAClB,CAED,gBAAa8mB,GACX,MAAM0T,EAAQrxC,SAASgqD,cACvB3Y,EAAM4Y,WAAW3sE,KAAKgiE,MACtB,MAAMhhB,EAAS+S,EAAM6Y,wBAErB,OADA7Y,EAAM8Y,SACC,IAAIhsB,QAAMG,EAAOQ,KAAMR,EAAOM,IAAKN,EAAOS,MAAOT,EAAOO,OAChE,CAED,cAAanB,GACX,MAAM2T,EAAQrxC,SAASgqD,cACvB3Y,EAAM4Y,WAAW3sE,KAAKgiE,MACtB,MAAMhhB,EAAS+S,EAAM6Y,wBACrB7Y,EAAM8Y,SACN,MAAMrsB,EAAUx8B,OAAOy8B,YACjBC,EAAU18B,OAAO28B,YACvB,OAAO,IAAIE,EAAAA,MAAMG,EAAOQ,KAAOhB,EAASQ,EAAOM,IAAMZ,EACpCM,EAAOS,MAAQjB,EAASQ,EAAOO,OAASb,EAC1D,CAEQ,aAAAgB,CAAc9+B,GACrB,OAAO5iB,KAAKgiE,KAAKtgB,cAAc9+B,EAChC,CAEQ,gBAAA++B,CAAiBC,EAAcC,EAA8Cl9B,GACpF3kB,KAAKgiE,KAAKrgB,iBAAiBC,EAAMC,EAAUl9B,EAC5C,CAEQ,mBAAAm9B,CAAoBF,EAAcC,EAA8Cl9B,GACvF3kB,KAAKgiE,KAAKlgB,oBAAoBF,EAAMC,EAAUl9B,EAC/C,CAKD,UAAA5lB,CAA4DijE,GAC1D,MAAM3e,EAAO2e,QAAmCoJ,GAASC,QAAQtsE,IAAIijE,QAAa,EAClF,YAAI3e,EACF,OAAO,KACF,KAAMA,aAAgBrjD,MAC3B,MAAM,IAAIpC,UAAUokE,EAAO,uBAAyBhiE,KAAK3B,MAE3D,OAAOglD,CACR,CAED,eAAAz6C,CAAsEtJ,GACpE,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBuyC,GAAM,CAChC,KAAMvyC,aAAiBU,MACrB,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAIA,aAAiBgsE,KAC1B,OAAQtrE,KAAoCurE,SAASjsE,GAChD,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SAE/C,MAAM,IAAI5R,UAAU,GAAK0B,EAC1B,CAID,eAAAisE,CAAgBvJ,GACd,IAAI3e,EAAOrjD,KAAKjB,IAAIijE,GAepB,OAda,OAAT3e,IAEAA,EADE2e,aAAgBkD,YACX,IAAI4H,GAAS9K,GACXA,aAAgB+K,WAClB,IAAIC,GAAQhL,GACVA,aAAgBC,QAClB,IAAIgL,GAAYjL,GACdA,aAAgBxyC,KAClB,IAAI09C,GAASlL,GAEb,IAAIoJ,GAASpJ,GAEtBhiE,KAAK0b,MAAM2nC,IAENA,CACR,EA/Ce+nB,GAAAC,QAAmC,IAAI8B,QCzjBnD,MAAOD,WAAiB9B,GAC5B,WAAAtrE,CAAYkiE,GACVjiE,MAAMiiE,EACP,CAUD,aAAAxyD,CAAuBg9D,YACjBA,IACFA,EAAO,IAGT,OAAO,IAAIxsE,KADE0iB,SAAS0qD,eAAeZ,GAEtC,CAED,eAAA5jE,CAAsEtJ,GACpE,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBuyC,GAAM,CAChC,KAAMvyC,aAAiBU,MACrB,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAIA,aAAiBkwB,KAC1B,OAAQxvB,KAAoCurE,SAASjsE,GAChD,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SACxC,GAAqB,iBAAVlQ,EAChB,OAAQU,KAAoCwP,OAAOlQ,GAErD,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAID,eAAAisE,CAAyBvJ,GACvB,IAAI3e,EAAOrjD,KAAKjB,IAAIijE,GAKpB,OAJa,OAAT3e,IACFA,EAAO,IAAIrjD,KAAKgiE,GAChBhiE,KAAK0b,MAAM2nC,IAENA,CACR,ECTUgqB,MAAAA,GAAgE/gE,WAASiH,OAA+C,oBAAqB,CACxJ,gBAAIxP,GACF,OAAOspE,EACR,EAED,GAAAruE,CAAI4c,EAAuLC,GACzL,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAaiB,IAAT8c,EAAS9c,IAClB,MAAM,IAAIuD,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAAS9c,IAAIM,EAAOuc,GAEpBC,EAAS9c,IAAIM,EAEhB,CACD,OAAOU,KAAKuR,KACb,EAED,YAAAgE,CAAaqG,EAAyMC,GACpN,IAAK,MAAM9d,KAAO6d,EAAY,CAC5B,MAAMtc,EAAQsc,EAAW7d,GACnB+d,EAAY9b,KAAajC,GAC/B,GAAI+d,QACF,MAAM,IAAIvZ,MAAM,oBAAsBxE,GACjC,QAAawX,IAATuG,EAASvG,aAClB,MAAM,IAAIhT,MAAM,uBAAyBxE,GAChC+d,aAAoBC,WAC7BD,EAASvG,aAAajW,EAAOuc,GAE7BC,EAASvG,aAAajW,EAEzB,CACD,OAAOU,KAAKuR,KACb,EAED,YAAAsvD,CAAaF,GACX,OAAQ3gE,KAAKuR,MAA2BsvD,aAAaF,EACtD,EAED,YAAAI,CAAaJ,EAAuBrhE,GAElC,OADCU,KAAKuR,MAA2BwvD,aAAaJ,EAAerhE,GACtDU,IACR,GAEH,CACE,SAAAgV,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IAC5Bk0D,cAAc4H,IAChBppE,CACR,IAGHopE,GAAkB3H,aAAa,KAAM,CAAChF,GAAkB,CACtDC,cAAe,KACf9uD,UAAWyb,WA8BA2/C,IAAAA,GAAW,iCAAX,OAAArtE,EAAA,MAAAqtE,UAAoB7B,GAC/B,WAAAtrE,CAAYkiE,GACVjiE,MAAMiiE,GAqCEhiE,KAAAstE,+BAAmGluE,EAAAY,KAAAE,GApC3GF,KAAKstE,0BAA4B,KACjCttE,KAAKutE,yBAA2B,KAChCvtE,KAAKwtE,sBAAwB,KAC7BxtE,KAAKytE,qBAAuB,IAC7B,CASD,cAAIC,GACF,OAAOL,GAAkBp+D,QAC1B,CAGD,YAAA4xD,CAAaF,GACX,OAAO3gE,KAAKgiE,KAAKnB,aAAaF,EAC/B,CAGD,YAAAI,CAAaJ,EAAuBrhE,GASlC,OARAU,KAAK2tE,iBAAiBhN,EAAerhE,GACjCA,QACFU,KAAKgiE,KAAKjB,aAAaJ,EAAermC,GAAkBh7B,IAExDU,KAAKgiE,KAAK4L,gBAAgBjN,GAE5B3gE,KAAK6tE,eAAelN,EAAerhE,GACnCU,KAAK8tE,gBAAgBnN,EAAerhE,GAC7BU,IACR,CAIS,gBAAA2tE,CAAiBhN,EAAuBrhE,GAChD,MAAMwa,EAAY9Z,KAAKstE,0BACvB,GAAkB,OAAdxzD,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS8xD,qBAAqBpN,EAAerhE,EAAOU,KAGzD,CAES,cAAA6tE,CAAelN,EAAuBrhE,GAE/C,CAIS,eAAAwuE,CAAgBnN,EAAuBrhE,GAC/C,MAAMwa,EAAY9Z,KAAKutE,yBACvB,GAAkB,OAAdzzD,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAAS+xD,oBAAoBrN,EAAerhE,EAAOU,KAGxD,CAGD,SAAIioB,GACF,OAAO08C,GAAe11D,QACvB,CAED,QAAA4yD,CAASF,GACP,GAA6B,oBAAlBhnC,cAiBJ,CACL,MAAM1S,EAAQjoB,KAAKgiE,KAAK/5C,MACxB,GAA6B,iBAAlB05C,EACT,OAAO15C,EAAM81C,iBAAiB4D,GAE9B,IAAK,IAAIpjE,EAAI,EAAGA,EAAIojE,EAAcnjE,OAAQD,GAAK,EAAG,CAChD,MAAMe,EAAQ2oB,EAAM81C,iBAAiB4D,EAAcpjE,IACnD,GAAqB,IAAjBe,EAAMd,OACR,OAAOc,CAEV,CACD,MAAO,EAEV,CA9ByC,CACxC,MAAM2oB,EAAQjoB,KAAKgiE,KAAKiM,kBACxB,GAA6B,iBAAlBtM,EAMJ,CACL,IAAK,IAAIpjE,EAAI,EAAGA,EAAIojE,EAAcnjE,OAAQD,GAAK,EAAG,CAChD,MAAMe,EAAQ2oB,EAAMlpB,IAAI4iE,EAAcpjE,IACtC,YAAIe,EACF,OAAOA,CAEV,CACD,MAAO,EACR,CAbC,IACE,OAAO2oB,EAAMlpB,IAAI4iE,EAClB,CAAC,MAAOz9C,GACP,MACD,CAUJ,CAcF,CAED,QAAA0+C,CAASgC,EAAsBtlE,EAAgBmjE,GAE7C,GADAziE,KAAK6kE,aAAaD,EAActlE,EAAOmjE,GACV,oBAAlB9nC,cACT,GAAIr7B,QAAoC,CACtC,MAAM6iE,EAAWznC,GAAWp7B,GAC5B,GAAiB,OAAb6iE,EACF,IACEniE,KAAKgiE,KAAKiM,kBAAkBjvE,IAAI4lE,EAAczC,EAC/C,CAAC,MAAOj+C,GAER,MAEDlkB,KAAKgiE,KAAK/5C,MAAMm2C,YAAYwG,EAAcpqC,GAAcl7B,GAAQmjE,EAEnE,MACC,IACEziE,KAAKgiE,KAAKiM,kBAAkBngE,OAAO82D,EACpC,CAAC,MAAO1gD,GAER,MAGC5kB,QACFU,KAAKgiE,KAAK/5C,MAAMm2C,YAAYwG,EAAcpqC,GAAcl7B,GAAQmjE,GAEhEziE,KAAKgiE,KAAK/5C,MAAMiiD,eAAetF,GAKnC,OAFA5kE,KAAK8kE,WAAWF,EAActlE,EAAOmjE,GACrCziE,KAAK+kE,YAAYH,EAActlE,EAAOmjE,GAC/BziE,IACR,CAIS,YAAA6kE,CAAaD,EAAsBtlE,EAAgBmjE,GAC3D,MAAM3oD,EAAY9Z,KAAKwtE,sBACvB,GAAkB,OAAd1zD,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASiyD,iBAAiBtJ,EAActlE,EAAOmjE,EAAUziE,KAG9D,CAES,UAAA8kE,CAAWF,EAAsBtlE,EAAgBmjE,GAE1D,CAIS,WAAAsC,CAAYH,EAAsBtlE,EAAgBmjE,GAC1D,MAAM3oD,EAAY9Z,KAAKytE,qBACvB,GAAkB,OAAd3zD,EACF,IAAK,MAAMmC,KAAYnC,EACrBmC,EAASkyD,gBAAgBvJ,EAActlE,EAAOmjE,EAAUziE,KAG7D,CAGD,aAAIuqE,GACF,OAAOD,GAAUr7D,QAClB,CAES,WAAAm/D,GACR,IAOIhnC,EAPAinC,EAAYruE,KAAKgiE,KAAKnB,aAAa,cAIvC,GAHkB,KAAdwN,IACFA,EAAY,QAEI,OAAdA,EAAJ,CAIA,GAAkB,SAAdA,EAAsB,CAItBjnC,EADkB,SAFIpnC,KAAKy9C,SAAS3uC,aACF4tD,YAAYp9D,MAEtCuvC,GAAMC,KAEND,GAAMyC,KAEjB,MACClK,EADSinC,EAAU5pD,QAAQ,KAAO,EACzBoqB,GAAcw/B,GAEfC,GAAWC,KAAKF,GAE1B,KAAMjnC,aAAiBhC,IACrB,MAAM,IAAIxnC,UAAU,uBAAyBywE,GAE/CruE,KAAKonC,MAAMpoC,IAAIooC,EAlBd,CAmBF,CASD,YAAaqW,GACX,OAAOzuC,EAAAA,SAASC,QACjB,CAeD,OAAIu/D,GACF,OAAOx/D,EAAAA,SAASC,QACjB,CA+BD,SAAIw/D,GAKF,OAAOz/D,EAAAA,SAASC,QACjB,CAED,gBAAaoxC,GACX,MAAMW,EAAShhD,KAAKgiE,KAAK4K,wBACzB,OAAO,IAAI/rB,QAAMG,EAAOQ,KAAMR,EAAOM,IAAKN,EAAOS,MAAOT,EAAOO,OAChE,CAED,cAAanB,GACX,MAAMY,EAAShhD,KAAKgiE,KAAK4K,wBACnBpsB,EAAUx8B,OAAOy8B,YACjBC,EAAU18B,OAAO28B,YACvB,OAAO,IAAIE,EAAAA,MAAMG,EAAOQ,KAAOhB,EAASQ,EAAOM,IAAMZ,EACpCM,EAAOS,MAAQjB,EAASQ,EAAOO,OAASb,EAC1D,CAIQ,gBAAAiB,CAAiBC,EAAcC,EAA8Cl9B,GACpF3kB,KAAKgiE,KAAKrgB,iBAAiBC,EAAMC,EAAUl9B,EAC5C,CAIQ,mBAAAm9B,CAAoBF,EAAcC,EAA8Cl9B,GACvF3kB,KAAKgiE,KAAKlgB,oBAAoBF,EAAMC,EAAUl9B,EAC/C,CAEkB,SAAAxI,CAAUF,GAC3Blc,MAAMoc,UAAUF,YACZA,EAAS8xD,uBAC4B,OAAnC/tE,KAAKstE,4BACPttE,KAAKstE,0BAA4B,IAAIhgE,KAEvCtN,KAAKstE,0BAA0B7/D,IAAIwO,aAEjCA,EAAS+xD,sBAC2B,OAAlChuE,KAAKutE,2BACPvtE,KAAKutE,yBAA2B,IAAIjgE,KAEtCtN,KAAKutE,yBAAyB9/D,IAAIwO,aAEhCA,EAASiyD,mBACwB,OAA/BluE,KAAKwtE,wBACPxtE,KAAKwtE,sBAAwB,IAAIlgE,KAEnCtN,KAAKwtE,sBAAsB//D,IAAIwO,aAE7BA,EAASkyD,kBACuB,OAA9BnuE,KAAKytE,uBACPztE,KAAKytE,qBAAuB,IAAIngE,KAElCtN,KAAKytE,qBAAqBhgE,IAAIwO,GAEjC,CAEkB,WAAAK,CAAYL,GAC7Blc,MAAMuc,YAAYL,QACL8xD,IAAT9xD,EAAS8xD,sBAAsE,OAAnC/tE,KAAKstE,2BACnDttE,KAAKstE,0BAA0Bx/D,OAAOmO,QAE3B+xD,IAAT/xD,EAAS+xD,qBAAoE,OAAlChuE,KAAKutE,0BAClDvtE,KAAKutE,yBAAyBz/D,OAAOmO,QAE1BiyD,IAATjyD,EAASiyD,kBAA8D,OAA/BluE,KAAKwtE,uBAC/CxtE,KAAKwtE,sBAAsB1/D,OAAOmO,QAEvBkyD,IAATlyD,EAASkyD,iBAA4D,OAA9BnuE,KAAKytE,sBAC9CztE,KAAKytE,qBAAqB3/D,OAAOmO,EAEpC,CAEkB,OAAAvZ,GACjB3C,MAAM2C,UACF1C,KAAKgiE,KAAK0M,aAAa,gBACzB1uE,KAAKouE,cACLpuE,KAAKy9C,SAAS3uC,aAAaqF,QAAQnU,KAAKy9C,UAE3C,CAEkB,SAAA/5C,GACjB3D,MAAM2D,YACF1D,KAAKgiE,KAAK0M,aAAa,eACzB1uE,KAAKy9C,SAAS3uC,aAAa0F,UAAUxU,KAAKy9C,SAE7C,CAUD,aAAgBjuC,GACd,IAAIgiB,EAAMxxB,KAAKwxB,IAIf,gBAHIA,IACFA,EAAM,OAEDxxB,KAAK2uE,QAAQn9C,EACrB,CAED,eAAA5oB,CAAsEtJ,GACpE,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBuyC,GAAM,CAChC,KAAMvyC,aAAiBU,MACrB,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAIA,aAAiB2iE,QAC1B,OAAQjiE,KAAuCurE,SAASjsE,GACnD,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SACxC,GAAqB,iBAAVlQ,EAChB,OAAQU,KAAuC2uE,QAAQrvE,GAEzD,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAID,eAAAisE,CAAyBvJ,GACvB,IAAI3e,EAAOrjD,KAAKjB,IAAIijE,GAWpB,OAVa,OAAT3e,IAEAA,EADE2e,aAAgBkD,YACX,IAAI4H,GAAS9K,GACXA,aAAgB+K,WAClB,IAAIC,GAAQhL,GAEZ,IAAIiL,EAAYjL,GAEzBhiE,KAAK0b,MAAM2nC,IAENA,CACR,CAID,cAAAsrB,CAAen9C,EAAao9C,GAM1B,IAAI5M,EAMJ,gBAXI4M,GACU,QAARp9C,IACFo9C,EAAY5B,GAAQ4B,WAKtB5M,WADE4M,EACKlsD,SAASmsD,gBAAgBD,EAAWp9C,GAEpC9O,SAASosD,cAAct9C,GAEzBxxB,KAAKurE,SAASvJ,EACtB,GA3YAqL,EAAAA,CAAAA,GAAkB,CAAE,IAiDpB1I,EAAAA,CAAAA,GAAe,CAAE,IAkGjB2F,EAAAA,CAAAA,GAAU,CAAE,IAiCZvoB,EAAA,CAAA/yC,EAAAA,SAAS,CACRw9C,SAAS,EACT/4C,UAAU,EACV,gCAAA+sD,CAAiC9D,GAC/B18D,KAAKuR,MAAM68D,aACZ,KAMFW,EAAA,CAAA//D,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOo9D,EACR,EACD,gBAAAl9D,CAAiBzM,GACf5E,MAAMqR,iBAAiBzM,GACvBA,EAAQ0M,MAAM4wC,QAAQjiD,KAAKuR,MAC5B,EACD,kBAAAC,CAAmB7M,GACjB5E,MAAMivE,eAAerqE,GACrBA,EAAQ0M,MAAM6wC,WAAWliD,KAAKuR,MAC/B,KAMF09D,EAAA,CAAAjgE,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOg+D,EACR,EACD,OAAA5wC,CAAQ6wC,EAAuBxqD,YACzBwqD,GAAwBC,GAAUnyD,OAAOC,aAAald,KAAKuR,SAC7D49D,EAAYnvE,KAAKuR,gBAEf49D,GACFnvE,KAAK8O,aAAaugE,aAAaF,EAAWxqD,EAE7C,EACD,OAAA4Z,CAAQ4wC,YACFA,GAAwBC,GAAUnyD,OAAOC,aAAald,KAAKuR,SAC7D49D,EAAYnvE,KAAKuR,gBAEf49D,GACFnvE,KAAK8O,aAAawgE,aAAaH,EAElC,EACD,MAAAxpD,CAAOwpD,EAAuBxqD,YACxBwqD,GAAwBC,GAAUnyD,OAAOC,aAAald,KAAKuR,SAC7D49D,EAAYnvE,KAAKuR,gBAEf49D,GACFnvE,KAAK8O,aAAaygE,YAAYJ,EAAWxqD,EAE5C,KA1OHxnB,EAAAyC,EAAA,KAAA4vE,EAAA,CAAA1xE,KAAA,SAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAI+6D,aAEH,KAAAxtE,GA+CD/C,EAAAyC,EAAA,KAAA6vE,EAAA,CAAA3xE,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAIsV,QAEH,KAAA/nB,GAgGD/C,EAAAyC,EAAA,KAAA8vE,EAAA,CAAA5xE,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAI43D,YAEH,KAAArqE,GAqCD/C,EAAAyC,EAAA,KAAAmiD,EAAA,CAAAjkD,KAAA,SAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAa8qC,WAEZ,KAAAv9C,GAeD/C,EAAAyC,EAAA,KAAAmvE,EAAA,CAAAjxE,KAAA,SAAAO,KAAA,MAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,QAAAA,EAAA5T,IAAA4T,GAAAA,EAAI67D,MAEH,KAAAtuE,GA+BD/C,EAAAyC,EAAA,KAAAqvE,EAAA,CAAAnxE,KAAA,SAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAI87D,QAMH,KAAAvuE,IAlQqB,EAAA,GCpFXyvE,MAAAA,GAA0DtC,GAAkB95D,OAA4C,iBAAkB,CAAA,EAEvJ,CACE,SAAAyB,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IAC5Bk0D,cAAckK,IAChB1rE,CACR,IAGH0rE,GAAejK,aAAa,eAAgB,CAAChF,GAAkB,CAC7DC,cAAe,eACf9uD,UAAWyb,WAGbqiD,GAAejK,aAAa,UAAW,CAAChF,GAAkB,CACxDC,cAAe,UACf9uD,UAAWsvD,YAGbwO,GAAejK,aAAa,UAAW,CAAChF,GAAkB,CACxDC,cAAe,UACf9uD,UAAWovD,WAGb0O,GAAejK,aAAa,WAAY,CAAChF,GAAkB,CACzDC,cAAe,WACf9uD,UAAWsvD,YAGbwO,GAAejK,aAAa,OAAQ,CAAChF,GAAkB,CACrDC,cAAe,OACf9uD,UAAWyb,WAGbqiD,GAAejK,aAAa,cAAe,CAAChF,GAAkB,CAC5DC,cAAe,cACf9uD,UAAWyb,WAGbqiD,GAAejK,aAAa,UAAW,CAAChF,GAAkB,CACxDC,cAAe,UACf9uD,UAAWovD,WAGb0O,GAAejK,aAAa,WAAY,CAAChF,GAAkB,CACzDC,cAAe,WACf9uD,UAAWsvD,YAGbwO,GAAejK,aAAa,QAAS,CAAChF,GAAkB,CACtDC,cAAe,QACf9uD,UAAWyb,WAGbqiD,GAAejK,aAAa,OAAQ,CAAChF,GAAkB,CACrDC,cAAe,OACf9uD,UAAWyb,WAGbqiD,GAAejK,aAAa,QAAS,CAAChF,GAAkB,CACtDC,cAAe,QACf9uD,UAAWyb,WA0IAw/C,IAAAA,GAAQ,uBAAR,OAAAltE,EAAA,MAAAktE,UAAiBG,GAC5B,WAAAntE,CAAYkiE,GACVjiE,MAAMiiE,YACP,CASD,cAAa0L,GACX,OAAOiC,GAAe1gE,QACvB,CAIQ,QAAAuL,CAASzc,EAAa0c,GAI7B,MAHwB,iBAAbA,IACTA,EAAWqyD,EAAS6B,QAAQl0D,IAEvB1a,MAAMya,SAASzc,EAAK0c,EAC5B,CAMQ,WAAA9J,CAAYrP,EAAkCvD,GAIrD,MAHqB,iBAAVuD,IACTA,EAAQwrE,EAAS6B,QAAQrtE,IAEpBvB,MAAM4Q,YAAYrP,EAAOvD,EACjC,CAMQ,YAAA2c,CAAapZ,EAAkCvD,GAItD,MAHqB,iBAAVuD,IACTA,EAAQwrE,EAAS6B,QAAQrtE,IAEpBvB,MAAM2a,aAAapZ,EAAOvD,EAClC,CAMQ,WAAA4W,CAAYrT,EAAkCtD,EAA4BD,GAIjF,MAHqB,iBAAVuD,IACTA,EAAQwrE,EAAS6B,QAAQrtE,IAEpBvB,MAAM4U,YAAYrT,EAAOtD,EAAQD,EACzC,CAKQ,YAAA4c,CAAaF,EAAqCG,GAIzD,MAHwB,iBAAbH,IACTA,EAAWqyD,EAAS6B,QAAQl0D,IAEvB1a,MAAM4a,aAAaF,EAAUG,EACrC,CAEkB,YAAA+iC,CAAavW,EAAoB/B,EAAkBxpB,GACpE9b,MAAM49C,aAAavW,EAAO/B,EAAMxpB,GAC5B7b,KAAKgiE,KAAK0M,aAAa,eACzB1uE,KAAK4vE,eAAexoC,EAAO/B,EAAMxpB,EAEpC,CAGD,cAAA+zD,CAAexoC,EAAoB/B,EAAkBxpB,GACnD,MAAMoQ,EAAOmb,EAAMhH,MAAMyF,GAAK5Z,KAAM2iB,GAAKnB,QAAS,MACrC,OAATxhB,aACEA,EAAKhE,OACPjoB,KAAKioB,MAAM0+C,UAAUnqC,SAASvQ,EAAKhE,WAAAA,EAAehS,WAAS45D,oBAEzD5jD,EAAK/D,SACPloB,KAAKioB,MAAM2+C,YAAYpqC,SAASvQ,EAAK/D,aAAAA,EAAiBjS,WAAS45D,oBAE7D5jD,EAAK9D,QACPnoB,KAAKioB,MAAM4+C,WAAWrqC,SAASvQ,EAAK9D,YAAAA,EAAgBlS,WAAS45D,oBAE3D5jD,EAAK7D,SACPpoB,KAAKioB,MAAM6+C,YAAYtqC,SAASvQ,EAAK7D,aAAAA,EAAiBnS,WAAS45D,WAE/C,OAAd5jD,EAAK7oB,MACPpD,KAAKioB,MAAM8+C,SAASvqC,SAASvQ,EAAK7oB,UAAAA,EAAc6S,WAAS45D,WAEvC,OAAhB5jD,EAAKzF,QACPxmB,KAAKioB,MAAM++C,WAAWxqC,SAASvQ,EAAKzF,YAAAA,EAAgBvQ,WAAS45D,WAE/D7vE,KAAKioB,MAAMg/C,WAAWzqC,SAASvQ,EAAKvF,YAAAA,EAAgBzQ,WAAS45D,YAE/D7vE,KAAKioB,MAAMwkB,gBAAgBl3B,aAAa6xB,EAAMhH,MAAMyF,GAAK4G,gBAAiBmC,GAAKnB,QAAS,MAAO5xB,GAC/F7b,KAAKioB,MAAMkH,MAAM5Z,aAAa6xB,EAAMhH,MAAMyF,GAAKoG,UAAW2C,GAAKnB,QAAS,MAAO5xB,EAChF,CAGD,mBAAAi0D,CAAoBC,GAClB,MAAM9nD,EAAQjE,OAAO85C,iBAAiBiS,GACtC,MAA0B,aAAnB9nD,EAAM+nD,UAA8C,aAAnB/nD,EAAM+nD,QAC/C,CAED,YAAAF,GACE,OAAOhD,EAASgD,aAAa9vE,KAAKgiE,KACnC,CAGD,sBAAA9hB,CAAuB6vB,GACrB,GAAIjD,EAASgD,aAAaC,GAAU,CAClC,MAAM5oB,EAAK4oB,EAAQnU,WACbxU,EAAK2oB,EAAQlU,UACnB,GAAW,IAAP1U,GAAmB,IAAPC,EACd,OAAO7uB,EAAAA,UAAUqoB,WAAWuG,GAAKC,EAEpC,CACD,OAAO7uB,EAAAA,UAAUgB,UAClB,CAGD,oBAAA4mB,CAAqB4vB,GACnB,MAAMjE,EAAaiE,EAAQjE,WAC3B,OAAIA,aAAsB5G,YACjB4H,EAAS3sB,cAAc2rB,GAAY9yC,UAAU8zC,EAAS5sB,gBAAgB6vB,IAExEx3C,EAAAA,UAAUgB,UAClB,CAED,mBAAa2mB,GACX,MAAMlnB,EAAYh5B,KAAKioB,MAAM+Q,UAAU15B,MACvC,GAAkB,OAAd05B,EACF,OAAOA,EACF,GAAIh5B,KAAK8vE,eAAgB,CAC9B,MAAM3oB,EAAKnnD,KAAKgiE,KAAKpG,WACfxU,EAAKpnD,KAAKgiE,KAAKnG,UACrB,GAAW,IAAP1U,GAAmB,IAAPC,EACd,OAAO7uB,EAAAA,UAAUqoB,WAAWuG,GAAKC,EAEpC,CACD,OAAO7uB,EAAAA,UAAUgB,UAClB,CAED,iBAAa4mB,GACX,MAAM0D,EAAa7jD,KAAKU,OACxB,GAAmB,OAAfmjD,EACF,OAAOA,EAAW1D,cAAcnnB,UAAUh5B,KAAKkgD,iBAEjD,MAAM4rB,EAAa9rE,KAAKgiE,KAAK8J,WAC7B,OAAIA,aAAsB5G,YACjB4H,EAAS3sB,cAAc2rB,GAAY9yC,UAAUh5B,KAAKkgD,iBAEpD3nB,EAAAA,UAAUgB,UAClB,CAIQ,gBAAAooB,CAAiBC,EAAcC,EAA8Cl9B,GACpF3kB,KAAKgiE,KAAKrgB,iBAAiBC,EAAMC,EAAUl9B,EAC5C,CAIQ,mBAAAm9B,CAAoBF,EAAcC,EAA8Cl9B,GACvF3kB,KAAKgiE,KAAKlgB,oBAAoBF,EAAMC,EAAUl9B,EAC/C,CAMD,aAAgBnV,GACd,OAAOxP,KAAK2uE,QAAQ3uE,KAAKwxB,IAC1B,CAED,eAAA5oB,CAAsEtJ,GACpE,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBuyC,GAAM,CAChC,KAAMvyC,aAAiBU,MACrB,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAIA,aAAiB4lE,YAC1B,OAAQllE,KAAoCurE,SAASjsE,GAChD,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SACxC,GAAqB,iBAAVlQ,EAChB,OAAQU,KAAoC2uE,QAAQrvE,GAEtD,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAID,eAAAisE,CAAyBvJ,GACvB,IAAI3e,EAAOrjD,KAAKjB,IAAIijE,GAKpB,OAJa,OAAT3e,IACFA,EAAO,IAAIrjD,KAAKgiE,GAChBhiE,KAAK0b,MAAM2nC,IAENA,CACR,CAMD,cAAAsrB,CAAwBn9C,GACtB,GAAY,UAARA,GAAmBxxB,OAASiwE,GAC9B,OAAOA,GAAUzgE,SACZ,GAAY,QAARgiB,EACT,OAAOw7C,GAAQx9D,SAEjB,MAAMwyD,EAAOt/C,SAASosD,cAAct9C,GACpC,OAAOxxB,KAAKurE,SAASvJ,EACtB,CAID,aAAAkO,CAAc1+C,GACZ,OAAIA,IAAQxxB,KAAKwxB,IACRxxB,KAEF,IAAImwE,GAAmBnwE,KAAMwxB,EACrC,GA3NAm+C,EAAAA,CAAAA,GAAe,CAAE,IAClBxyE,EAAAyC,EAAA,KAAA4vE,EAAA,CAAA1xE,KAAA,SAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAa+6D,aAEZ,KAAAxtE,GA8JwBN,EAAA4xB,IAAc,MAAA5xB,CA5KpB,EAAA,GA0ORuwE,MAAAA,GACX,WAAArwE,CAAYswE,EAA6B5+C,GACvCxxB,KAAKowE,QAAUA,EACfpwE,KAAKwxB,IAAMA,CACZ,CAOD,MAAAhiB,GACE,OAAOxP,KAAK2uE,QAAQ3uE,KAAKwxB,IAC1B,CAED,QAAA5oB,CAAStJ,GACP,OAAOU,KAAKowE,QAAQxnE,SAAStJ,EAC9B,CAED,QAAAisE,CAASvJ,GACP,OAAOhiE,KAAKowE,QAAQ7E,SAASvJ,EAC9B,CAED,OAAA2M,CAAQn9C,GACN,MAAMwwC,EAAOt/C,SAASosD,cAAct9C,GACpC,OAAOxxB,KAAKurE,SAASvJ,EACtB,EC/fUiO,IAAAA,GAAS,4BAAT,OAAArwE,EAAA,cAAkBktE,GAC7B,WAAAhtE,CAAYkiE,GACVjiE,MAAMiiE,GAQChiE,KAAAqwE,OAAyBjxE,EAAAY,KAAAE,GAAAd,EAAAY,KAAAswE,OAAA,GAPjC,CASkB,OAAA5tE,GACjB3C,MAAM2C,UACN1C,KAAKqwE,MAAMnH,UAAUlpE,KAAKgiE,KAAKqO,MAChC,CAEkB,SAAA3sE,GACjB1D,KAAKqwE,MAAMrI,YACXjoE,MAAM2D,WACP,GAXAylE,EAAAA,CAAAA,GAAW,CAAE,IACdhsE,EAAS,KAAA,KAAAozE,EAAA,CAAAzyE,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAA09D,MAAArxE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA09D,MAAyB/wE,CAAAA,IAAAgxE,EAAApwE,GAaTN,EAAA4xB,IAAc,QAAA5xB,CAvBnB,EAAA,GC2HT4wE,MAAAA,GAAwDnD,GAAkB95D,OAA2C,gBAAiB,CAAA,EAEnJ,CACE,SAAAyB,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IAC5Bk0D,cAAc+K,IAChBvsE,CACR,IAGHusE,GAAc9K,aAAa,oBAAqB,CAAChF,GAAkB,CACjEC,cAAe,qBACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,WAAY,CAAChF,GAAkB,CACxDC,cAAe,YACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,IAAK,CAAChF,GAAkB,CACjDC,cAAe,IACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTkxE,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTkxE,GAAc9K,aAAa,WAAY,CAAChF,GAAkB,CACxDC,cAAe,WACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,OAAQ,CAAChF,GAAkB,CACpDC,cAAe,OACf9uD,UAAW6b,EACXpuB,MAAO,SAGTkxE,GAAc9K,aAAa,cAAe,CAAChF,GAAkB,CAC3DC,cAAe,eACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,WAAY,CAAChF,GAAkB,CACxDC,cAAe,YACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,aAAc,CAAChF,GAAkB,CAC1DC,cAAe,cACf9uD,UAAW6b,EACXpuB,MAAO,SAGTkxE,GAAc9K,aAAa,eAAgB,CAAChF,GAAkB,CAC5DC,cAAe,gBACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTkxE,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,MAAO,CAAChF,GAAkB,CACnDC,cAAe,MACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,eAAgB,CAAChF,GAAkB,CAC5DC,cAAe,eACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,OAAQ,CAAChF,GAAkB,CACpDC,cAAe,OACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,UAAW,CAAChF,GAAkB,CACvDC,cAAe,UACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,gBAAiB,CAAChF,GAAkB,CAC7DC,cAAe,iBACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,sBAAuB,CAAChF,GAAkB,CACnEC,cAAe,sBACf9uD,UAAWsvD,YAGbqP,GAAc9K,aAAa,IAAK,CAAChF,GAAkB,CACjDC,cAAe,IACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,eAAgB,CAAChF,GAAkB,CAC5DC,cAAe,eACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAW6b,EACXpuB,MAAO,SAGTkxE,GAAc9K,aAAa,kBAAmB,CAAChF,GAAkB,CAC/DC,cAAe,mBACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,mBAAoB,CAAChF,GAAkB,CAChEC,cAAe,oBACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,gBAAiB,CAAChF,GAAkB,CAC7DC,cAAe,iBACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,iBAAkB,CAAChF,GAAkB,CAC9DC,cAAe,kBACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,mBAAoB,CAAChF,GAAkB,CAChEC,cAAe,oBACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,gBAAiB,CAAChF,GAAkB,CAC7DC,cAAe,iBACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,cAAe,CAAChF,GAAkB,CAC3DC,cAAe,eACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,aAAc,CAAChF,GAAkB,CAC1DC,cAAe,cACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,aAAc,CAAChF,GAAkB,CAC1DC,cAAe,aACf9uD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTkxE,GAAc9K,aAAa,YAAa,CAAChF,GAAkB,CACzDC,cAAe,YACf9uD,UAAW0mB,EAAAA,UACXj5B,MAAO,SAGTkxE,GAAc9K,aAAa,OAAQ,CAAChF,GAAkB,CACpDC,cAAe,OACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,SAAU,CAAChF,GAAkB,CACtDC,cAAe,SACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,UAAW,CAAChF,GAAkB,CACvDC,cAAe,UACf9uD,UAAWyb,WAGbkjD,GAAc9K,aAAa,QAAS,CAAChF,GAAkB,CACrDC,cAAe,QACf9uD,UAAWoU,EAAAA,OACX3mB,MAAO,SAGTkxE,GAAc9K,aAAa,IAAK,CAAChF,GAAkB,CACjDC,cAAe,IACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,IAAK,CAAChF,GAAkB,CACjDC,cAAe,IACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAGbuP,GAAc9K,aAAa,KAAM,CAAChF,GAAkB,CAClDC,cAAe,KACf9uD,UAAWovD,WAiGA+L,IAAAA,GAAO,uBAAP,OAAAptE,EAAA,MAAAotE,UAAgBC,GAC3B,WAAAntE,CAAYkiE,GACVjiE,MAAMiiE,YACP,CASD,cAAa0L,GACX,OAAO8C,GAAcvhE,QACtB,CAIQ,QAAAuL,CAASzc,EAAa0c,GAI7B,MAHwB,iBAAbA,IACTA,EAAWuyD,EAAQ2B,QAAQl0D,IAEtB1a,MAAMya,SAASzc,EAAK0c,EAC5B,CAMQ,WAAA9J,CAAYrP,EAAiCvD,GAIpD,MAHqB,iBAAVuD,IACTA,EAAQ0rE,EAAQ2B,QAAQrtE,IAEnBvB,MAAM4Q,YAAYrP,EAAOvD,EACjC,CAMQ,YAAA2c,CAAapZ,EAAiCvD,GAIrD,MAHqB,iBAAVuD,IACTA,EAAQ0rE,EAAQ2B,QAAQrtE,IAEnBvB,MAAM2a,aAAapZ,EAAOvD,EAClC,CAMQ,WAAA4W,CAAYrT,EAAiCtD,EAA4BD,GAIhF,MAHqB,iBAAVuD,IACTA,EAAQ0rE,EAAQ2B,QAAQrtE,IAEnBvB,MAAM4U,YAAYrT,EAAOtD,EAAQD,EACzC,CAKQ,YAAA4c,CAAaF,EAAoCG,GAIxD,MAHwB,iBAAbH,IACTA,EAAWuyD,EAAQ2B,QAAQl0D,IAEtB1a,MAAM4a,aAAaF,EAAUG,EACrC,CAED,mBAAaslC,GACX,MAAMlnB,EAAYh5B,KAAK0tE,WAAW10C,UAAU15B,MAC5C,OAAqB,OAAd05B,EAAqBA,EAAYT,EAAUgB,UAAAA,UACnD,CAIQ,gBAAAooB,CAAiBC,EAAcC,EAA8Cl9B,GACpF3kB,KAAKgiE,KAAKrgB,iBAAiBC,EAAMC,EAAUl9B,EAC5C,CAIQ,mBAAAm9B,CAAoBF,EAAcC,EAA8Cl9B,GACvF3kB,KAAKgiE,KAAKlgB,oBAAoBF,EAAMC,EAAUl9B,EAC/C,CAQD,aAAgBnV,GACd,OAAOxP,KAAK2uE,QAAQ3uE,KAAKwxB,IAC1B,CAED,eAAA5oB,CAAsEtJ,GACpE,GAAIA,QACF,OAAOA,EACF,GAAIA,aAAiBuyC,GAAM,CAChC,KAAMvyC,aAAiBU,MACrB,MAAM,IAAIpC,UAAU0B,EAAQ,uBAAyBU,MAEvD,OAAOV,CACR,CAAM,GAAIA,aAAiBytE,WAC1B,OAAQ/sE,KAAmCurE,SAASjsE,GAC/C,GAAI0d,EAAAA,UAAUC,OAAOC,aAAa5d,GACvC,OAAQA,EAAqCkQ,SACxC,GAAqB,iBAAVlQ,EAChB,OAAQU,KAAmC2uE,QAAQrvE,GAErD,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAID,eAAAisE,CAAyBvJ,GACvB,IAAI3e,EAAOrjD,KAAKjB,IAAIijE,GAKpB,OAJa,OAAT3e,IACFA,EAAO,IAAIrjD,KAAKgiE,GAChBhiE,KAAK0b,MAAM2nC,IAENA,CACR,CAID,cAAAsrB,CAAwBn9C,GACtB,MAAMwwC,EAAOt/C,SAASmsD,gBAAgB7uE,KAAK4uE,UAAWp9C,GACtD,OAAOxxB,KAAKurE,SAASvJ,EACtB,CAID,aAAAkO,CAAc1+C,GACZ,OAAIA,IAAQxxB,KAAKwxB,IACRxxB,KAEF,IAAIywE,GAAkBzwE,KAAMwxB,EACpC,GA/HAg/C,EAAAA,CAAAA,GAAc,CAAE,IACjBrzE,EAAAyC,EAAA,KAAA4vE,EAAA,CAAA1xE,KAAA,SAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAa+6D,aAEZ,KAAAxtE,GAuEwBN,EAAA4xB,IAAc,MAEd5xB,EAAAgvE,UAAoB,6BAAAhvE,CAvF3B,EAAA,GA8IP6wE,MAAAA,GACX,WAAA3wE,CAAYswE,EAA4B5+C,GACtCxxB,KAAKowE,QAAUA,EACfpwE,KAAKwxB,IAAMA,CACZ,CAOD,aAAIo9C,GACF,OAAO5B,GAAQ4B,SAChB,CAED,MAAAp/D,GACE,OAAOxP,KAAK2uE,QAAQ3uE,KAAKwxB,IAC1B,CAED,QAAA5oB,CAAStJ,GACP,OAAOU,KAAKowE,QAAQxnE,SAAStJ,EAC9B,CAED,QAAAisE,CAASvJ,GACP,OAAOhiE,KAAKowE,QAAQ7E,SAASvJ,EAC9B,CAED,OAAA2M,CAAQn9C,GACN,MAAMwwC,EAAOt/C,SAASmsD,gBAAgB7uE,KAAK4uE,UAAWp9C,GACtD,OAAOxxB,KAAKurE,SAASvJ,EACtB,ECxnBUsM,IAAAA,GAAU,4BAAV,OAAA1uE,EAAA,MAAA0uE,UAAmBnuD,4CAuBrBngB,KAAAqR,OAAmCjS,EAAAY,KAAAE,GAAAd,EAAAY,KAAAogB,OAAA,GA2G7C,CAzGC,eAAAswD,CAAgB7sB,GACd,MAAM8sB,EAAa9sB,EAAWme,KAAK2O,WACnC,IAAK,IAAIpyE,EAAI,EAAGA,EAAIoyE,EAAWnyE,OAAQD,GAAK,EAAG,CAC7C,MAAMqyE,EAAYD,EAAWpyE,GACvBsyE,EAAY7wE,KAAK8wE,gBAAgBjtB,EAAY+sB,GACjC,OAAdC,GACF7wE,KAAK0wE,gBAAgBG,EAExB,CACF,CAED,eAAAC,CAAgBjtB,EAAsB+sB,GACpC,MAAMC,EAAYzF,GAASrsE,IAAI6xE,GAC/B,OAAkB,OAAdC,EACKA,EACED,aAAqB3O,QACvBjiE,KAAK+wE,mBAAmBltB,EAAY+sB,GAClCA,aAAqBphD,KACvBxvB,KAAKgxE,gBAAgBntB,EAAY+sB,GAEnC,IACR,CAED,kBAAAG,CAAmBltB,EAAsB+sB,GACvC,IAAIK,EACJ,MAAMC,EAAgBN,EAAU/P,aAAa,aAC7C,GAAsB,OAAlBqQ,IACFD,EAAY3C,EAAWC,KAAK2C,GACH,mBAAdD,GACT,MAAM,IAAIrzE,UAAUszE,YAGpBD,IAEAA,EADEL,aAAqB1L,YACX4H,GACH8D,aAAqB7D,WAClBC,GAEAC,IAGhB,MAAM4D,EAAY,IAAII,EAAUL,GAC1B7yE,EAAM6yE,EAAU/P,aAAa,OAEnC,OADAhd,EAAWmoB,YAAY6E,EAAW,KAAc,OAAR9yE,EAAeA,OAAW,GAC3D8yE,CACR,CAED,eAAAG,CAAgBntB,EAAsB+sB,GACpC,OAAO,IACR,CAED,WAAOO,GACL,MAAMjsB,EAAuB,GACvBksB,EAAQ1uD,SAAS2uD,iBAAiB,cACxC,IAAK,IAAI9yE,EAAI,EAAGA,EAAI6yE,EAAM5yE,OAAQD,GAAK,EAAG,CACxC,MAAMyjE,EAAOoP,EAAM7yE,GACnB,GAAIyjE,aAAgBkD,YAAa,CAC/B,MAAM7hB,EAAOirB,EAAWgD,YAAYtP,GACpC9c,EAAMrmD,KAAKwkD,EACZ,CACF,CACD,OAAO6B,CACR,CAED,kBAAAosB,CAAmBtP,GACjB,IAIIiP,EAJA5tB,EAAO4pB,GAAYluE,IAAIijE,GAC3B,GAAa,OAAT3e,EACF,OAAOA,EAGT,MAAM6tB,EAAgBlP,EAAKnB,aAAa,YACxC,GAAsB,OAAlBqQ,GAA4C,KAAlBA,IAC5BD,EAAY3C,EAAWC,KAAK2C,GACH,mBAAdD,GACT,MAAM,IAAIrzE,UAAUszE,GAcxB,gBAXID,IAEAA,EADEjP,aAAgBkD,YACN4H,GACH9K,aAAgB+K,WACbC,GAEAC,IAGhB5pB,EAAO,IAAI4tB,EAAUjP,GACrBiP,EAAUv1D,MAAM2nC,GACTA,CACR,CAGD,WAAAkrB,CAAYgD,GACV,IAAIjyE,EAAmC,oBAAfkyE,WAA6BA,WACpB,oBAATC,KAAuBA,KACZ,oBAAXztD,OAAyBA,OACd,oBAAX3R,OAAyBA,YAC3B,EACtB,MAAMq/D,EAASH,EAAMI,MAAM,KAC3B,IAAK,IAAIpzE,EAAI,EAAoB,iBAAVe,GAAgC,OAAVA,GAAkBf,EAAImzE,EAAOlzE,OAAQD,GAAK,EAAG,CAExFe,EAAQA,EADMoyE,EAAOnzE,GAEtB,CACD,OAAOe,CACR,GA7HAgjB,EAAA,CAAA0iC,GAAQ,CACP,QAAA5B,CAASmc,GACHA,EAASyC,KAAK0M,aAAa,aAC7B1uE,KAAKuR,MAAMm/D,gBAAgBnR,EAE9B,EACD,cAAAjc,CAAeic,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAiyC,CAAc+b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,EACD,cAAAmyC,CAAe6b,GACbv/D,KAAKuR,MAAM5Q,cAAc,wBAAyB4+D,EAAUv/D,KAAKuR,MAClE,EACD,aAAAqyC,CAAc2b,GACZv/D,KAAKuR,MAAM5Q,cAAc,uBAAwB4+D,EAAUv/D,KAAKuR,MACjE,KAEHpU,EAAS,KAAA,KAAAmlB,EAAA,CAAAxkB,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAtB,MAAArS,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAtB,MAAmC/R,CAAAA,IAAA8gB,EAAAlgB,IAvBvB,EAAA,GCiBV,MAAAkvE,GAAY,CACvB,CAACnyD,OAAOC,aAAa2K,GACZA,aAAoBolD,IACpB,aAAcplD,GACd,aAAcA,GCPZqnD,IAAAA,GAAY,iDAAZ,OAAAtvE,EAAA,cAAqBugB,4CAOvBngB,KAAA4xE,OAAmCxyE,EAAAY,KAAAE,GAAAd,EAAAY,KAAA6xE,OAAA,IAqDnC7xE,KAAA8xE,OAAwD1yE,EAAAY,KAAA+xE,OAAA,GA8DxD/xE,KAAAgyE,SAGP5yE,EAAAY,KAAAiyE,OAAA,GASOjyE,KAAAkyE,YAAiC9yE,EAAAY,KAAAmyE,OAAA,EAC3C,CAzEC,YAAA9C,CAAaF,EAAsBxqD,EAAwB,IACpDA,EAAQE,OACX7kB,KAAKoyE,gBAEPpyE,KAAK8xE,OAAOptB,WAAW,KAAMyqB,GAC7BA,EAAUkD,SAAS/zC,SAAQ,EAC5B,CAED,YAAAgxC,CAAaH,GACPnvE,KAAK8xE,OAAO1sB,QAAQ+pB,IACtBA,EAAUkD,SAAS9zC,SAAQ,EAE9B,CAED,aAAA6zC,GACE,MAAME,EAAatyE,KAAK8xE,OAAO5sB,MAC/B,IAAK,MAAMM,KAAU8sB,EAAY,CAC/B,MAAMnD,EAAYmD,EAAW9sB,GAC7BxlD,KAAKsvE,aAAaH,EACnB,CACF,CAED,cAAAoD,GACE,MAAMD,EAAatyE,KAAK8xE,OAAO5sB,MAC/B,IAAK,MAAMM,KAAU8sB,EAAY,CAC/B,MAAMnD,EAAYmD,EAAW9sB,GACzB2pB,EAAUkD,SAAS10C,WACrB39B,KAAKsvE,aAAaH,EAErB,CACF,CAED,WAAAI,CAAYJ,EAAsBxqD,GAChC,MAAM0tD,EAAWlD,EAAUkD,SAAS/yE,MAChC+yE,EAAS30C,WAAa20C,EAASx0C,WACjC79B,KAAKqvE,aAAaF,EAAWxqD,IACpB0tD,EAAS10C,WAAa00C,EAASz0C,aACxC59B,KAAKsvE,aAAaH,EAErB,GAjGAqD,EAAA,CAAAxuB,GAAQ,CACPb,SAAU8pB,MAIXwF,EAAA,CAAAztB,GAAQ,CACPvxC,UAAU,EACV,cAAIowC,GACF,MAAMA,EAAa7jD,KAAKuR,MAAMqgE,MAAMvuB,KACpC,OAAmB,OAAfQ,EACKA,EAEFopB,GAAYluE,IAAI2jB,SAAS1S,KACjC,EACD,WAAA2E,CAAYjU,EAAcY,EAAoBtD,EAAqBD,GACjEgC,MAAM4U,YAAYjU,EAAQY,EAAOtD,EAAQD,GACpB,OAAjBuD,EAAMZ,QAAoBY,EAAMmD,UAClCie,SAAS1S,KAAKW,YAAYrP,EAAM0gE,MAChC1gE,EAAMoa,QAET,EACD,QAAA0nC,CAAS+rB,GACPnvE,KAAKuR,MAAMygE,SAAS7U,QACrB,EACD,cAAA7Z,CAAe6rB,GACbnvE,KAAKuR,MAAM5Q,cAAc,yBAA0BwuE,EAAWnvE,KAAKuR,MACpE,EACD,aAAAiyC,CAAc2rB,GACZnvE,KAAKuR,MAAM5Q,cAAc,wBAAyBwuE,EAAWnvE,KAAKuR,MACnE,EACD,UAAAkyC,CAAW0rB,GACTnvE,KAAKuR,MAAMygE,SAAS7U,QACrB,EACD,cAAAzZ,CAAeyrB,GACbnvE,KAAKuR,MAAM5Q,cAAc,yBAA0BwuE,EAAWnvE,KAAKuR,MACpE,EACD,aAAAqyC,CAAcurB,GACZnvE,KAAKuR,MAAM5Q,cAAc,wBAAyBwuE,EAAWnvE,KAAKuR,MACnE,EACD,eAAAmhE,CAAgBvD,GACdnvE,KAAKuR,MAAM5Q,cAAc,0BAA2BwuE,EAAWnvE,KAAKuR,MACrE,EACD,cAAAohE,CAAexD,GACbnvE,KAAKuR,MAAM5Q,cAAc,yBAA0BwuE,EAAWnvE,KAAKuR,MACpE,EACD,eAAAqhE,CAAgBzD,GACdnvE,KAAKuR,MAAM5Q,cAAc,0BAA2BwuE,EAAWnvE,KAAKuR,MACrE,EACD,cAAAshE,CAAe1D,GACbnvE,KAAKuR,MAAM5Q,cAAc,yBAA0BwuE,EAAWnvE,KAAKuR,OACnEvR,KAAKykD,WAAW0qB,EACjB,EACD,kBAAA2D,CAAmBd,EAAkB7C,GACnCnvE,KAAKuR,MAAMygE,SAAS7U,QACrB,KA6CF4V,EAAA,CAAA7jE,EAAAA,SAAS,CACR2C,UAAWovD,OACX3hE,MAAO,EACP,MAAA69D,GACE,IAAKn9D,KAAK+9C,YAAY9nC,EAAAA,SAASI,WAC7B,OAEF,IAAI27D,EAAW,EACf,MAAMM,EAAatyE,KAAKuR,MAAMugE,OAAO5sB,MACrC,IAAK,MAAMM,KAAU8sB,EAAY,CAC/B,MAAMnD,EAAYmD,EAAW9sB,GAC7BwsB,EAAW77D,KAAKC,IAAID,KAAK2L,IAAIkwD,EAAU7C,EAAU6C,SAAS1yE,OAAQ,EACnE,CACDU,KAAKuV,aAAay8D,EACnB,EACD,WAAArvB,CAAYqwB,EAAqBC,GAC/BjzE,KAAKuR,MAAM5Q,cAAc,wBAAyBqyE,EAAaC,EAAajzE,KAAKuR,MAClF,KAOF2hE,EAAA,CAAA1wD,EAAAA,aAAa,CACZC,UAAW,QACXzkB,OAA4B,oBAAb0kB,SAA2BA,SAAW,KACrD,MAAAC,CAAOC,GACL5iB,KAAKuR,MAAMghE,gBACZ,KA7HHp1E,EAAS,KAAA,KAAAq1E,EAAA,CAAA10E,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAi/D,MAAA5yE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAi/D,MAAmCtyE,CAAAA,IAAAuyE,EAAA3xE,GAqD5C/C,EAAS,KAAA,KAAAs1E,EAAA,CAAA30E,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAAm/D,OAAA9yE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAm/D,OAAwDxyE,CAAAA,IAAAyyE,EAAA7xE,GA8DjE/C,EAAS,KAAA,KAAA41E,EAAA,CAAAj1E,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAAq/D,SAAAhzE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAq/D,SAGP1yE,CAAAA,IAAA2yE,EAAA/xE,GASF/C,EAAS,KAAA,KAAA+1E,EAAA,CAAAp1E,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAu/D,YAAAlzE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAu/D,YAAiC5yE,CAAAA,IAAA6yE,EAAAjyE,IAtInB,EAAA,GC7BHizE,MAAAA,ICGT,MAAAC,GAAW,CACtB,CAACn2D,OAAOC,aAAa2K,GACZ3Q,UAAQ8Q,WAAqBH,EAAU,WCsCrCwrD,IAAAA,GAAY,8BAAZ,OAAAzzE,EAAA,MAAAyzE,UAAqBxhC,GAChC,WAAA/xC,GACEC,QAYOC,KAAAszE,UAAmDl0E,EAAAY,KAAAE,GAAAd,EAAAY,KAAAuzE,OAAA,IAX1DvzE,KAAKwzE,aAAe,KACpBxzE,KAAKyzE,cAAgB,IACtB,CAWkB,YAAAv6B,CAAaC,GAI9B,OAHyC,IAApCn5C,KAAK2B,MAAQkwC,GAAK4D,gBACrB0D,IAAiBtH,GAAK4D,cAEjB0D,CACR,CAES,iBAAAu6B,CAAkBC,EAAgBl1E,EAAwBm1E,EAAqBC,GACvF,IAAKF,EAAQ9iE,YACX,OAIF,MAAMijE,EAAmBr1E,EAAQs1E,UAC3BC,EAAqBv1E,EAAQw1E,YAEnCx1E,EAAQy1E,YACRz1E,EAAQ01E,OAAOR,EAAQ9f,KAAM8f,EAAQxf,MACrC11D,EAAQ21E,OAAOT,EAAQ9f,KAAM8f,EAAQtf,MACrC51D,EAAQ21E,OAAOT,EAAQ3f,KAAM2f,EAAQtf,MACrC51D,EAAQ21E,OAAOT,EAAQ3f,KAAM2f,EAAQxf,MACrC11D,EAAQ41E,YACR51E,EAAQs1E,UAAYF,EACpBp1E,EAAQw1E,YAAcL,EAAa7+D,WACnCtW,EAAQ61E,SAGR71E,EAAQs1E,UAAYD,EACpBr1E,EAAQw1E,YAAcD,CACvB,CAOD,WAAIO,GACF,OAAOvlE,EAAAA,SAASC,QACjB,CASD,aAAIulE,GACF,IAAIA,EAAYx0E,KAAKwzE,aAIrB,OAHkB,OAAdgB,IACFA,EAAYx0E,KAAKy0E,mBAEZD,CACR,CAMD,YAAAE,CAAaF,GACVx0E,KAAuBwzE,aAAegB,CACxC,CAES,eAAAC,GACR,MAAM/zE,EAASV,KAAKU,OACpB,OAAIA,aAAkB2yE,GAAgB3yE,aAAkBi0E,GAC/Cj0E,EAAO8zE,UAET3zB,EAAAA,MAAMC,WACd,CAED,aAAA8zB,CAAcJ,EAAmBx0E,KAAKw0E,WACpCx0E,KAAKg2C,WAAWw+B,EAAUK,WAAW70E,KAAK80E,YAC3C,CASD,iBAAIC,GACF,OAAO,IACR,CAED,gBAAAC,GACE,IAAIF,EACAxzE,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,GAAIA,aAAiB+xE,IAAiB/xE,EAAMy1C,SAAWz1C,EAAM02C,UAAW,CACtE,MAAMi9B,EAAkB3zE,EAAMwzE,WAC1BG,EAAgBpkE,cAEhBikE,WADEA,EACWA,EAAWI,MAAMD,GAEjBA,EAGlB,CACD3zE,EAAQA,EAAMmF,WACf,CAID,gBAHIquE,IACFA,EAAa90E,KAAKw0E,WAEbM,CACR,CAMD,aAAIK,GACF,OAAOn1E,KAAK80E,UACb,CAED,eAAAM,GACE,IAAID,EACA7zE,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,GAAIA,aAAiB+xE,IAAiB/xE,EAAMy1C,SAAWz1C,EAAMi3C,WAAY,CACvE,MAAM88B,EAAiB/zE,EAAM6zE,UAE3BA,WADEA,EACUE,EAEAF,EAAUD,MAAMG,EAE/B,CACD/zE,EAAQA,EAAMmF,WACf,CAID,gBAHI0uE,IACFA,EAAYn1E,KAAK80E,YAEZK,CACR,CAED,cAAAG,CAAeh8D,EAAWC,GACxB,GAAIvZ,KAAK+2C,QAAU/2C,KAAK20C,QAAU30C,KAAKu4C,aAAev4C,KAAKm1E,UAAU1K,SAASnxD,EAAGC,GAC/E,OAAO,KAET,IAAIg8D,EAAMv1E,KAAKw1E,gBAAgBl8D,EAAGC,GAIlC,OAHY,OAARg8D,IACFA,EAAMv1E,KAAKy1E,QAAQn8D,EAAGC,IAEjBg8D,CACR,CAES,OAAAE,CAAQn8D,EAAWC,GAC3B,OAAO,IACR,CAES,eAAAi8D,CAAgBl8D,EAAWC,GACnC,IAAIjY,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,GAAIA,aAAiB+xE,EAAc,CACjC,MAAMkC,EAAMv1E,KAAK01E,aAAap0E,EAAOgY,EAAGC,GACxC,GAAY,OAARg8D,EACF,OAAOA,CAEV,CACDj0E,EAAQA,EAAMmF,WACf,CACD,OAAO,IACR,CAES,YAAAivE,CAAap0E,EAAqBgY,EAAWC,GACrD,OAAOjY,EAAMg0E,eAAeh8D,EAAGC,EAChC,CAED,mBAAa2mC,GACX,OAAO3nB,EAAAA,UAAUgB,UAClB,CAED,gBAAa8mB,GACX,MAAMs1B,EAAyB31E,KAAKsgD,gBAAgBiU,UACpD,OAAOv0D,KAAK80E,WAAW97C,UAAU28C,EAClC,CAED,gBAAap1B,GACX,MAAMq1B,EAAuB51E,KAAKmgD,cAAcoU,UAChD,OAAOv0D,KAAK80E,WAAW97C,UAAU48C,EAClC,CAOQ,gBAAAj0B,CAAiBC,EAAcC,EAA8Cl9B,GACpF,IAAI8uD,EAAgBzzE,KAAKyzE,cACH,OAAlBA,IACFA,EAAgB,CAAA,EACfzzE,KAAuByzE,cAAgBA,GAE1C,IAAIoC,EAAWpC,EAAc7xB,GAC7B,MAAMk0B,EAA6B,kBAAZnxD,EAAwBA,EAA6B,iBAAZA,GAAoC,OAAZA,GAAoBA,EAAQmxD,UAAW,EACzHC,EAAUpxD,GAA8B,iBAAZA,GAAwBA,EAAQoxD,UAAW,EACvEC,EAAOrxD,GAA8B,iBAAZA,GAAwBA,EAAQqxD,OAAQ,EACvE,IAAIC,EACJ,YAAIJ,EAIF,OAHAI,EAAU,CAACp0B,SAAAA,EAAUi0B,QAAAA,EAASC,QAAAA,EAASC,KAAAA,GACvCH,EAAW,CAACI,QACZxC,EAAc7xB,GAAQi0B,GAGxB,MAAM99D,EAAI89D,EAASr3E,OACnB,IAAID,EAAI,EACR,KAAOA,EAAIwZ,IACTk+D,EAAUJ,EAASt3E,GACf03E,EAAQp0B,WAAaA,GAAYo0B,EAAQH,UAAYA,IAGzDv3E,GAAK,EAEHA,EAAIwZ,GACNk+D,EAASF,QAAUA,EACnBE,EAASD,KAAOA,IAEhBC,EAAU,CAACp0B,SAAAA,EAAUi0B,QAAAA,EAASC,QAAAA,EAASC,KAAAA,GACvCH,EAASh3E,KAAKo3E,GAEjB,CAIQ,mBAAAn0B,CAAoBF,EAAcC,EAA8Cl9B,GACvF,MAAM8uD,EAAgBzzE,KAAKyzE,cAC3B,GAAsB,OAAlBA,EACF,OAEF,MAAMoC,EAAWpC,EAAc7xB,GAC/B,YAAIi0B,EACF,OAEF,MAAMC,EAA6B,kBAAZnxD,EAAwBA,EAA6B,iBAAZA,GAAoC,OAAZA,GAAoBA,EAAQmxD,UAAW,EACzH/9D,EAAI89D,EAASr3E,OACnB,IAAID,EAAI,EACR,KAAOA,EAAIwZ,GAAG,CACZ,MAAMk+D,EAAUJ,EAASt3E,GACzB,GAAI03E,EAAQp0B,WAAaA,GAAYo0B,EAAQH,UAAYA,EAAS,CAChED,EAAS3wD,OAAO3mB,EAAG,GACK,IAApBs3E,EAASr3E,eACJi1E,EAAc7xB,GAEvB,KACD,CACDrjD,GAAK,CACN,CACF,CAGD,WAAA23E,CAAYtzD,GACV,MAAMg/B,EAAOh/B,EAAMg/B,KACb6xB,EAAgBzzE,KAAKyzE,cAC3B,GAAsB,OAAlBA,EACF,OAEF,MAAMoC,EAAWpC,EAAc7xB,GAC/B,YAAIi0B,EACF,OAEF,IAAIt3E,EAAI,EACR,KAAOA,EAAIs3E,EAASr3E,QAAQ,CAC1B,MAAMy3E,EAAUJ,EAASt3E,GACzB,IAAK03E,EAAQH,QAAS,CACpB,MAAMj0B,EAAWo0B,EAAQp0B,SAUzB,GATwB,mBAAbA,EACoB,mBAAlBA,EAASpiD,KAClBoiD,EAASpiD,KAAKO,KAAM4iB,GAEpBi/B,EAASj/B,GAEkB,iBAAbi/B,GAAsC,OAAbA,GACzCA,EAASq0B,YAAYtzD,GAEnBqzD,EAAQD,KAAM,CAChBH,EAAS3wD,OAAO3mB,EAAG,GACnB,QACD,CACF,CACDA,GAAK,CACN,CACuB,IAApBs3E,EAASr3E,eACJi1E,EAAc7xB,EAExB,CASD,WAAAu0B,CAAYvzD,GAEV,GADA5iB,KAAKk2E,YAAYtzD,IACZA,EAAMwzD,SAAWxzD,EAAMyzD,aAC1B,OAAO,KAET,MAAM31E,EAASV,KAAKU,OACpB,OAAIA,aAAkB2yE,GAAgB3yE,aAAkBi0E,GAC/Cj0E,EAAOy1E,YAAYvzD,GAErBliB,CACR,CAEQ,aAAAghD,CAAc9+B,GACrBA,EAAM+iC,WAAa3lD,KACnB,MAAMa,EAAOb,KAAKm2E,YAAYvzD,GAC9B,OAAa,OAAT/hB,GACM+hB,EAAMyzD,aAETx1E,EAAK6gD,cAAc9+B,EAC3B,GAhUA0zD,EAAA,CAAApnE,EAAAA,SAAS,CACR2C,UAAWshE,GACX7zE,MAAO,KACPwS,UAAU,KAmCXykE,EAAA,CAAAvnE,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOslE,EACR,KAEHr5E,EAAAyC,EAAA,KAAA22E,EAAA,CAAAz4E,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAI4hE,UAEH,KAAAr0E,GAxCD/C,EAAS,KAAA,KAAAm5E,EAAA,CAAAx4E,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2gE,SAAAt0E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2gE,SAAmDh0E,CAAAA,IAAAi0E,EAAArzE,GA6TnCN,EAAAi3C,YAAyBhF,GAAKgF,YAAchF,GAAKkK,YACjDn8C,EAAAm4C,YAAyBlG,GAAKkG,YAAclG,GAAKkK,YACjDn8C,EAAAwT,iBAA8By+B,GAAKz+B,iBAAmBy+B,GAAKkK,YAC3Dn8C,EAAAyT,iBAA8Bw+B,GAAKx+B,iBAAmBw+B,GAAKkK,aA9U7D,EAAA,GAgVzB59C,OAAOgB,eAAek0E,GAAap1E,UAAW,aAAc,CAC1D,GAAAc,GACE,OAAOiB,KAAKw0E,SACb,EACD56D,cAAc,ICjYV,MAAgB68D,WAAwBtD,ICAjCuD,MAAAA,GACX,WAAA52E,GACEE,KAAK22E,WAAa,EAClB32E,KAAKknD,GAAKx2B,IACV1wB,KAAK+zB,GAAKrD,IACV1wB,KAAK81D,GAAKplC,IACV1wB,KAAKg0B,GAAKtD,IACV1wB,KAAK42E,EAAI,EACV,CAID,YAAAC,CAAaF,GACV32E,KAAuB22E,UAAYA,CACrC,CAGD,kBAAIG,GACF,MAAMH,EAAY32E,KAAK22E,UACvB,OAAOA,EAAY,EAAIxgE,KAAK2L,IAAI,EAAG60D,GAAaA,CACjD,CAaD,MAAAxC,CAAO76D,EAAWC,GAChBvZ,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQz9D,EAAGtZ,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQx9D,EAAGvZ,KAAK22E,WACvC32E,KAAKknD,GAAK5tC,EACVtZ,KAAK+zB,GAAKxa,EACVvZ,KAAK81D,GAAKx8C,EACVtZ,KAAKg0B,GAAKza,CACX,CAED,MAAA66D,CAAO96D,EAAWC,GAChBvZ,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQz9D,EAAGtZ,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQx9D,EAAGvZ,KAAK22E,WACvC32E,KAAK81D,GAAKx8C,EACVtZ,KAAKg0B,GAAKza,CACX,CAED,gBAAAy9D,CAAiBlhB,EAAY9hC,EAAY1a,EAAWC,GAClDvZ,KAAK42E,GAAK,IAAM96C,EAAOi7C,OAAAA,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WAC9B,IAAM76C,EAAOi7C,OAAAA,QAAQz9D,EAAGtZ,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQx9D,EAAGvZ,KAAK22E,WACvC32E,KAAK81D,GAAKx8C,EACVtZ,KAAKg0B,GAAKza,CACX,CAED,aAAA09D,CAAcnhB,EAAY9hC,EAAYkjD,EAAYC,EAAY79D,EAAWC,GACvEvZ,KAAK42E,GAAK,IAAM96C,EAAOi7C,OAAAA,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WAC9B,IAAM76C,SAAOi7C,QAAQG,EAAIl3E,KAAK22E,WAC9B,IAAM76C,EAAOi7C,OAAAA,QAAQI,EAAIn3E,KAAK22E,WAC9B,IAAM76C,SAAOi7C,QAAQz9D,EAAGtZ,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQx9D,EAAGvZ,KAAK22E,WACvC32E,KAAK81D,GAAKx8C,EACVtZ,KAAKg0B,GAAKza,CACX,CAED,KAAA69D,CAAMthB,EAAY9hC,EAAYkjD,EAAYC,EAAYzoD,GACpD,MAAMw4B,EAAKlnD,KAAK81D,GACV/hC,EAAK/zB,KAAKg0B,GACVqjD,EAAMH,EAAKphB,EACXwhB,EAAMH,EAAKnjD,EACXujD,EAAMrwB,EAAK4O,EACX0hB,EAAMzjD,EAAKC,EACXyjD,EAAQF,EAAMA,EAAMC,EAAMA,EAEhC,GAAI9oD,EAAI,EACN,MAAM,IAAInsB,MAAM,oBAAsBmsB,GACjC,GAAI4C,MAAMtxB,KAAK81D,IAEpB91D,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WACxC32E,KAAK81D,GAAKA,EACV91D,KAAKg0B,GAAKA,OACL,GAAMyjD,EAAQf,GAAYgB,QAE1B,GAAMvhE,KAAKo7C,IAAIimB,EAAMH,EAAMC,EAAMC,GAAOb,GAAYgB,SAAkB,IAANhpD,EAMhE,CACL,MAAMipD,EAAMT,EAAKhwB,EACX0wB,EAAMT,EAAKpjD,EACX8jD,EAAQR,EAAMA,EAAMC,EAAMA,EAC1BQ,EAAQH,EAAMA,EAAMC,EAAMA,EAC1BG,EAAM5hE,KAAKq5C,KAAKqoB,GAChBG,EAAM7hE,KAAKq5C,KAAKioB,GAChB3oD,EAAIJ,EAAIvY,KAAK8hE,KAAK9hE,KAAKwkD,GAAKxkD,KAAK+hE,MAAML,EAAQJ,EAAQK,IAAU,EAAIC,EAAMC,KAAS,GACpFG,EAAMrpD,EAAIkpD,EACVI,EAAMtpD,EAAIipD,EACZ5hE,KAAKo7C,IAAI4mB,EAAM,GAAKzB,GAAYgB,UAElC13E,KAAK42E,GAAK,IAAM96C,EAAOi7C,OAAAA,QAAQjhB,EAAKqiB,EAAMZ,EAAKv3E,KAAK22E,WAC1C,IAAM76C,EAAOi7C,OAAAA,QAAQ/iD,EAAKmkD,EAAMX,EAAKx3E,KAAK22E,YAEtD7gB,GAAUsiB,EAAMf,EAChBrjD,GAAUokD,EAAMd,EAChB,MAAMe,EAAKv8C,EAAAA,OAAOi7C,QAAQroD,EAAG1uB,KAAK22E,WAClC32E,KAAK42E,GAAK,IAAMyB,EACN,IAAMA,EADN,SAIOb,EAAMG,EAAMJ,EAAMK,EAAM,IAAM,KACrC,IAAM97C,EAAOi7C,OAAAA,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WACxC32E,KAAK81D,GAAKA,EACV91D,KAAKg0B,GAAKA,CACX,MA/BCh0B,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WACxC32E,KAAK81D,GAAKA,EACV91D,KAAKg0B,GAAKA,OA6Bb,CAED,GAAAskD,CAAIC,EAAYC,EAAY9pD,EAAW8pC,EAAYC,EAAYggB,GAAe,GAC5E,MAEMvxB,EAAKqxB,EAFA7pD,EAAIvY,KAAKq7C,IAAIgH,GAGlBzkC,EAAKykD,EAFA9pD,EAAIvY,KAAKs7C,IAAI+G,GAGlBkgB,EAAK,GAAKD,EAChB,IAAIE,EAAKF,EAAMjgB,EAAKC,EAAKA,EAAKD,EAE9B,GAAI9pC,EAAI,EACN,MAAM,IAAInsB,MAAM,oBAAsBmsB,GAWxC,GAVW4C,MAAMtxB,KAAK81D,IAEpB91D,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQ7vB,EAAIlnD,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQhjD,EAAI/zB,KAAK22E,YAC/BxgE,KAAKo7C,IAAIvxD,KAAK81D,GAAK5O,GAAMwvB,GAAYgB,SAAWvhE,KAAKo7C,IAAIvxD,KAAKg0B,GAAKD,GAAM2iD,GAAYgB,WAE9F13E,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQ7vB,EAAIlnD,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQhjD,EAAI/zB,KAAK22E,YAGhC,IAANjoD,EACF,OACSiqD,EAAK,IAEdA,EAAKA,GAAM,EAAIxiE,KAAKwkD,IAAM,EAAIxkD,KAAKwkD,IAGrC,MAAM0d,EAAKv8C,EAAAA,OAAOi7C,QAAQroD,EAAG1uB,KAAK22E,WAClC,GAAIgC,EAAK,EAAIxiE,KAAKwkD,GAAK+b,GAAYgB,QAEjC13E,KAAK42E,GAAK,IAAMyB,EACN,IAAMA,EADN,SAIOK,EAAK,IAAM,KAClB,IAAM58C,EAAAA,OAAOi7C,QAAQ7vB,EAAIlnD,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQhjD,EAAI/zB,KAAK22E,WACxC32E,KAAK81D,GAAK5O,EACVlnD,KAAKg0B,GAAKD,OACL,GAAI4kD,EAAKjC,GAAYgB,QAAS,CAEnC,MAAM5hB,EAAKyiB,EAAK7pD,EAAIvY,KAAKq7C,IAAIiH,GACvBzkC,EAAKwkD,EAAK9pD,EAAIvY,KAAKs7C,IAAIgH,GAC7Bz4D,KAAK42E,GAAK,IAAMyB,EACN,IAAMA,EADN,OAGOM,GAAMxiE,KAAKwkD,GAAK,IAAM,KAC7B,KAAO+d,EAAK,IAAM,KAClB,IAAM58C,EAAAA,OAAOi7C,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WACxC32E,KAAK81D,GAAKA,EACV91D,KAAKg0B,GAAKA,CACX,CACF,CAED,IAAA4kD,CAAKt/D,EAAWC,EAAWs/D,EAAWhqD,GACpC7uB,KAAK42E,GAAK,IAAM96C,EAAAA,OAAOi7C,QAAQz9D,EAAGtZ,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQx9D,EAAGvZ,KAAK22E,WAC7B,IAAM76C,SAAOi7C,QAAQ8B,EAAG74E,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,QAAQloD,EAAG7uB,KAAK22E,WAC7B,IAAM76C,EAAAA,OAAOi7C,SAAS8B,EAAG74E,KAAK22E,WAC9B,IACV32E,KAAKknD,GAAK5tC,EACVtZ,KAAK+zB,GAAKxa,EACVvZ,KAAK81D,GAAKx8C,EACVtZ,KAAKg0B,GAAKza,CACX,CAED,OAAAu/D,CAAQP,EAAYC,EAAYO,EAAYC,EAAYC,EAAazgB,EAAYC,EAAYggB,GAAe,GAC1G,MAAMS,EAAS/iE,KAAKq7C,IAAIynB,GAClBE,EAAShjE,KAAKs7C,IAAIwnB,GAClBG,EAAQjjE,KAAKq7C,IAAIiH,GACjB4gB,EAAQljE,KAAKs7C,IAAIgH,GACjB3C,EAAKojB,EAASH,EAAKK,EAAQD,EAASH,EAAKK,EAAQd,EACjDvkD,EAAKmlD,EAASJ,EAAKK,EAAQF,EAASF,EAAKK,EAAQb,EACjDG,EAAKlgB,EAAKD,EACV8gB,EAAQnjE,KAAKo7C,IAAIonB,GAAMxiE,KAAKwkD,GAC5B4e,GAASd,EACfz4E,KAAK42E,GAAK,IAAM96C,SAAOi7C,QAAQgC,EAAI/4E,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQiC,EAAIh5E,KAAK22E,WAC9B,IAAM76C,EAAAA,OAAOi7C,QAAQkC,EAAKj5E,KAAK82E,gBAC/B,KAAOwC,EAAQ,IAAM,KACrB,KAAOC,EAAQ,IAAM,KACrB,IAAMz9C,EAAOi7C,OAAAA,QAAQjhB,EAAI91D,KAAK22E,WAC9B,IAAM76C,SAAOi7C,QAAQ/iD,EAAIh0B,KAAK22E,WACxC32E,KAAK81D,GAAKA,EACV91D,KAAKg0B,GAAKA,CACX,CAED,SAAAqgD,GACM/iD,MAAMtxB,KAAK81D,MAGf91D,KAAK42E,GAAK,IACV52E,KAAK81D,GAAK91D,KAAKknD,GACflnD,KAAKg0B,GAAKh0B,KAAK+zB,GAChB,CAED,QAAAhf,GACE,OAAO/U,KAAK42E,CACb,EAGMF,GAAOgB,QAAW,KCnOrB,MAAO8B,WAAqB/C,GAChC,WAAA32E,CAAYrB,GACVsB,QACAC,KAAKvB,QAAUA,CAChB,CAID,aAAau6B,GACX,OAAOT,EAAAA,UAAUgB,UAClB,CAED,cAAakgD,GACX,OAAO,CACR,ECfG,MAAgBC,WAAyBjD,ICIlCkD,MAAAA,GACX,WAAA75E,CAAYujD,GACVrjD,KAAKqjD,KAAOA,EACZrjD,KAAK22E,WAAa,EAClB32E,KAAK45E,YAAc,KACnB55E,KAAK65E,SAAW,KAChB75E,KAAK85E,UAAY,EACjB95E,KAAK+5E,YAAc,EACnB/5E,KAAKg6E,yBAA2B,cAChCh6E,KAAKi6E,UAAY,GACjBj6E,KAAKi0E,YAAc,GACnBj0E,KAAK+zE,UAAY,EACjB/zE,KAAKk6E,QAAU,OACfl6E,KAAKm6E,SAAW,QAChBn6E,KAAKo6E,WAAa,GAClBp6E,KAAKq6E,eAAiB,EACtBr6E,KAAKs6E,SAAW,EACjB,CAMD,YAAAzD,CAAaF,GACV32E,KAAuB22E,UAAYA,CACrC,CAKS,cAAA4D,GACR,MAAMX,EAAc55E,KAAK45E,YACzB,GAAoB,OAAhBA,EACF,MAAM,IAAIr3E,MAAM,WAElB,OAAOq3E,CACR,CAES,sBAAAY,GACR,IAAIZ,EAAc55E,KAAK45E,YACvB,GAAoB,OAAhBA,EAAsB,CAGxB,GAFAA,EAAc55E,KAAKy6E,oBAClBz6E,KAAuB45E,YAAcA,EAChB,OAAlB55E,KAAK65E,UAAwC,IAAnB75E,KAAK85E,UAAiB,CAClD95E,KAAK06E,eACL,MAAMb,EAAW75E,KAAK26E,eACtB36E,KAAK46E,YAAYf,EAClB,CACD75E,KAAK66E,aAAa,EACnB,CACD,OAAOjB,CACR,CAES,iBAAAa,GACR,MAAMb,EAAc,IAAIlD,GAExB,OADAkD,EAAY/C,aAAa72E,KAAK22E,WACvBiD,CACR,CAMD,WAAAgB,CAAYf,GACT75E,KAAuB65E,SAAWA,CACpC,CAGD,YAAAc,GACE,MAAMd,EAAW75E,KAAK65E,SACtB,GAAiB,OAAbA,EACF,OAAO,KAET,IAAI9N,EAAW8N,EAAS7X,KAAKv7D,YAC7B,KAAoB,OAAbslE,GAAmB,CACxB,GAAIA,aAAoB+O,eACtB,OAAO9N,GAAQzB,SAASQ,GAE1BA,EAAWA,EAAStlE,WACrB,CACD,OAAO,IACR,CAGD,YAAAi0E,GACE,MAAMb,EAAW75E,KAAK65E,SACtB,GAAiB,OAAbA,EACF,OAEF,MAAMC,EAAY95E,KAAK85E,UACmB,IAArCA,EAAYH,GAAWoB,WAC1BlB,EAASnM,WAAWsN,KAAKzlE,aAAa,MAEM,IAAzCukE,EAAYH,GAAWsB,eAC1BpB,EAASnM,WAAWwN,SAAS3lE,kBAAkB,GAEL,IAAvCukE,EAAYH,GAAWwB,aAC1BtB,EAASnM,WAAW4G,OAAO/+D,aAAa,MAEA,IAArCukE,EAAYH,GAAWyB,WAC1BvB,EAASnM,WAAWkJ,EAAErhE,kBAAkB,EAE3C,CAMD,YAAAslE,CAAaf,GACV95E,KAAuB85E,UAAYA,CACrC,CAuBD,WAAAuB,GACE,OAAOr7E,KAAKs6E,QACb,CAED,WAAAgB,CAAYC,GACVv7E,KAAKs6E,SAAWiB,CACjB,CAED,SAAArH,GACGl0E,KAAuB45E,YAAc,IACvC,CAED,MAAAzF,CAAO76D,EAAWC,GAChBvZ,KAAKw6E,yBAAyBrG,OAAO76D,EAAGC,EACzC,CAED,MAAA66D,CAAO96D,EAAWC,GAChBvZ,KAAKu6E,iBAAiBnG,OAAO96D,EAAGC,EACjC,CAED,gBAAAy9D,CAAiBlhB,EAAY9hC,EAAY1a,EAAWC,GAClDvZ,KAAKu6E,iBAAiBvD,iBAAiBlhB,EAAI9hC,EAAI1a,EAAGC,EACnD,CAED,aAAA09D,CAAcnhB,EAAY9hC,EAAYkjD,EAAYC,EAAY79D,EAAWC,GACvEvZ,KAAKu6E,iBAAiBtD,cAAcnhB,EAAI9hC,EAAIkjD,EAAIC,EAAI79D,EAAGC,EACxD,CAED,KAAA69D,CAAMthB,EAAY9hC,EAAYkjD,EAAYC,EAAYzoD,GACpD1uB,KAAKu6E,iBAAiBnD,MAAMthB,EAAI9hC,EAAIkjD,EAAIC,EAAIzoD,EAC7C,CAED,GAAA4pD,CAAIC,EAAYC,EAAY9pD,EAAW8pC,EAAYC,EAAYggB,GAC7Dz4E,KAAKw6E,yBAAyBlC,IAAIC,EAAIC,EAAI9pD,EAAG8pC,EAAIC,EAAIggB,EACtD,CAED,OAAAK,CAAQP,EAAYC,EAAYO,EAAYC,EAAYC,EAAazgB,EAAYC,EAAYggB,GAC3Fz4E,KAAKw6E,yBAAyB1B,QAAQP,EAAIC,EAAIO,EAAIC,EAAIC,EAAKzgB,EAAIC,EAAIggB,EACpE,CAED,IAAAG,CAAKt/D,EAAWC,EAAWs/D,EAAWhqD,GACpC7uB,KAAKw6E,yBAAyB5B,KAAKt/D,EAAGC,EAAGs/D,EAAGhqD,EAC7C,CAED,SAAAwlD,GACE,MAAMuF,EAAc55E,KAAK45E,YACL,OAAhBA,GACFA,EAAYvF,WAEf,CAED,IAAA2G,CAAKE,GACH,MAAMjB,EAAYj6E,KAAKi6E,UACvB,GAAyB,iBAAdA,EACT,MAAM,IAAI13E,MAAM,2BAA6B03E,GAE/C,IAAIJ,EAAW75E,KAAK65E,SACH,OAAbA,GAAgE,IAA1C75E,KAAK85E,UAAYH,GAAWoB,YACpD/6E,KAAK06E,eACLb,EAAW75E,KAAK26E,eAChB36E,KAAK46E,YAAYf,IAEnB,IAAI2B,GAAU,EAad,GAZiB,OAAb3B,IACFA,EAAW7M,GAAQ2B,QAAQ,QAC3B3uE,KAAK46E,YAAYf,GACjB2B,GAAU,GAEZ3B,EAASnM,WAAWsN,KAAKzlE,aAAa0kE,GACtCJ,EAASnM,WAAW+N,YAAYlmE,aAAkC,IAArBvV,KAAK+5E,YAAoB/5E,KAAK+5E,iBAAmB,GAC9F/5E,KAAK66E,aAAa76E,KAAK85E,UAAYH,GAAWoB,mBAC1CG,IACFrB,EAASnM,WAAWwN,SAAS3lE,aAAa2lE,GAC1Cl7E,KAAK66E,aAAa76E,KAAK85E,UAAYH,GAAWsB,eAED,IAA1Cj7E,KAAK85E,UAAYH,GAAWyB,UAAiB,CAChD,MAAMM,EAAa17E,KAAKu6E,iBAAiBxlE,WACzC8kE,EAASnM,WAAWkJ,EAAErhE,aAAammE,GACnC17E,KAAK66E,aAAa76E,KAAK85E,UAAYH,GAAWyB,SAC/C,CACGI,GACFx7E,KAAKqjD,KAAK1yC,YAAYkpE,EAEzB,CAED,MAAAvF,GACE,MAAML,EAAcj0E,KAAKi0E,YACnBF,EAAY/zE,KAAK+zE,UACvB,GAA2B,iBAAhBE,GAA0C,IAAdF,IAAoB3jD,SAAS2jD,GAClE,MAAM,IAAIxxE,MAAM,6BAA+B0xE,GAEjD,IAAI4F,EAAW75E,KAAK65E,SACH,OAAbA,GAAkE,IAA5C75E,KAAK85E,UAAYH,GAAWwB,cACpDn7E,KAAK06E,eACLb,EAAW75E,KAAK26E,eAChB36E,KAAK46E,YAAYf,IAEnB,IAAI2B,GAAU,EAcd,GAbiB,OAAb3B,IACFA,EAAW7M,GAAQ2B,QAAQ,QAC3B3uE,KAAK46E,YAAYf,GACjB2B,GAAU,GAEZ3B,EAASnM,WAAWn4D,aAAa,CAC/B++D,OAAQL,EACR0H,YAAa5H,EACb6H,cAAe57E,KAAKk6E,QACpB2B,eAAgB77E,KAAKm6E,SACrB2B,cAAoC,IAArB97E,KAAK+5E,YAAoB/5E,KAAK+5E,iBAAmB,EAChEgC,iBAAoC,UAAlB/7E,KAAKm6E,SAAuBn6E,KAAKo6E,gBAAkB,IAE1C,IAAzBp6E,KAAKs6E,SAAS97E,OAAc,CAC9B,IAAIw9E,EAAO,GACX,IAAK,IAAIz9E,EAAI,EAAGA,EAAIyB,KAAKs6E,SAAS97E,OAAQD,GAAK,EACnC,IAANA,IACFy9E,GAAQ,KAEVA,GAAQh8E,KAAKs6E,SAAS/7E,GAExBs7E,EAASnM,WAAWn4D,aAAa,CAC/B0mE,gBAAiBD,EACjBE,iBAA0C,IAAxBl8E,KAAKq6E,eAAuBr6E,KAAKq6E,oBAAsB,GAE5E,MACCR,EAASnM,WAAWn4D,aAAa,CAC/B0mE,qBAAsB,EACtBC,sBAAuB,IAI3B,GADAl8E,KAAK66E,aAAa76E,KAAK85E,UAAYH,GAAWwB,YACC,IAA1Cn7E,KAAK85E,UAAYH,GAAWyB,UAAiB,CAChD,MAAMM,EAAa17E,KAAKu6E,iBAAiBxlE,WACzC8kE,EAASnM,WAAWkJ,EAAErhE,aAAammE,GACnC17E,KAAK66E,aAAa76E,KAAK85E,UAAYH,GAAWyB,SAC/C,CACGI,GACFx7E,KAAKqjD,KAAK1yC,YAAYkpE,EAEzB,CAED,QAAAsC,GACE,IAAItC,EAA2B,KAC3B9N,EAAW/rE,KAAKqjD,KAAK2e,KAAKx7D,WAC9B,KAAoB,OAAbulE,GAAmB,CACxB,GAAIA,aAAoB+O,eAAgB,CACtCjB,EAAW7M,GAAQzB,SAASQ,GAC5B,KACD,CACDA,EAAWA,EAAStlE,WACrB,CACDzG,KAAK46E,YAAYf,GACjB75E,KAAK66E,aAAa,EACnB,CAED,WAAAuB,GACE,IAAIvC,EAAW75E,KAAK65E,SACpB,GAAiB,OAAbA,EACF,OAEF,IAAI9N,EAAW8N,EAAS7X,KAAKv7D,YAM7B,IALuC,OAAnCozE,EAASnM,WAAWsN,KAAK9zC,OAAuD,OAArC2yC,EAASnM,WAAW4G,OAAOptC,QACvElnC,KAAuB65E,SAAW,KACnCA,EAAS/wE,UAEX+wE,EAAW,KACS,OAAb9N,GAAmB,CACxB,MAAMJ,EAAWP,GAASrsE,IAAIgtE,GAC9BA,EAAWA,EAAStlE,YACH,OAAbklE,GACFA,EAAS7iE,QAEZ,CACF,EAGe6wE,GAAAoB,SAAmB,EAEnBpB,GAAAsB,aAAuB,EAEvBtB,GAAAwB,WAAqB,EAErBxB,GAAAyB,SAAmB,EC7T/B,MAAOiB,WAAoB3C,GAC/B,WAAA55E,CAAYrB,GACVsB,QACAC,KAAKvB,QAAUA,CAChB,CAID,aAAau6B,GACX,OAAOT,EAAAA,UAAUgB,UAClB,CAED,cAAakgD,GACX,OAAO,CACR,ECbG,MAAO6C,WAAuB5C,GAClC,WAAA55E,CAAYrB,EAAwBu6B,EAAsBygD,GACxD15E,QACAC,KAAKvB,QAAUA,EACfuB,KAAKg5B,UAAYA,EACjBh5B,KAAKy5E,WAAaA,CACnB,CAMD,YAAA8C,CAAavjD,GACVh5B,KAAuBg5B,UAAYA,CACrC,EChBG,MAAOwjD,WAAsBrJ,GACjC,WAAArzE,CAAYrB,EAAuBg7E,GACjC15E,QACAC,KAAKvB,QAAUA,EACfuB,KAAKy5E,gBAAaA,IAAAA,EAAwBA,EAAaz1D,OAAOy4D,kBAAoB,CACnF,ECHUC,MAAAA,GAEX,WAAA58E,CAAYuwE,EAAoB9tC,EAAkBE,GAChDziC,KAAKqwE,MAAQA,EACbrwE,KAAKuiC,SAAWA,EAChBviC,KAAKyiC,SAAWA,CACjB,CAWD,SAAImkB,GACF,OAAO5mD,KAAKqwE,MAAMsM,WACnB,CAED,UAAIn2D,GACF,OAAOxmB,KAAKqwE,MAAMuM,YACnB,CAED,cAAInD,GACF,OAAOz5E,KAAKqwE,MAAMoJ,UACnB,CAED,WAAAoD,GACE,OAAO78E,KAAKqwE,MAAMyM,kBAAkB98E,KAAKuiC,SAAUviC,KAAKyiC,SACzD,CAED,KAAA3e,GACE,OAAO9jB,KAAKqwE,MAAM0M,YAAY/8E,KAAKuiC,SAAUviC,KAAKyiC,SACnD,CAED,IAAAu6C,CAAKv+E,EAAwBw+E,GAC3Bj9E,KAAKqwE,MAAM6M,WAAWz+E,EAASw+E,EAAOj9E,KAAKuiC,SAAUviC,KAAKyiC,SAC3D,CAED,OAAA06C,GACEn9E,KAAKqwE,MAAM+M,cAAcp9E,KAC1B,EC1CUq9E,MAAAA,GACX,WAAAv9E,CAAY68E,EAAqBC,EACrBU,EAAqBC,EAAsB9D,GACrD,MAAM/2C,EAAWvsB,KAAKqnE,MAAMD,EAAeX,GACrCj6C,EAAWxsB,KAAKqnE,MAAMF,EAAcX,GACpCc,EAAc/6C,EAAWC,EACzB4xC,EAAU,IAAI18D,MAAc4lE,GAC5BC,EAAc,IAAI7lE,MAAc4lE,GAEhCE,EAASj7D,SAASosD,cAAc,UACtC6O,EAAO/2B,MAAQ02B,EAAc7D,EAC7BkE,EAAOn3D,OAAS+2D,EAAe9D,EAC/BkE,EAAO11D,MAAM2+B,MAAQ02B,EAAc,KACnCK,EAAO11D,MAAMzB,OAAS+2D,EAAe,KACrC,MAAM9+E,EAAUk/E,EAAOC,WAAW,MAC5BtK,EAAW,IAAIgJ,GAAe79E,EAAS85B,EAAAA,UAAUgB,WAAYkgD,GAEnEz5E,KAAK28E,YAAcA,EACnB38E,KAAK48E,aAAeA,EACpB58E,KAAKu0E,QAAUA,EACfv0E,KAAK09E,YAAcA,EACnB19E,KAAK29E,OAASA,EACd39E,KAAKszE,SAAWA,EAChBtzE,KAAK69E,UAAY,KAEjB79E,KAAK89E,cAAcvJ,EAAS7xC,EAAUC,GAEtC,IAAK,IAAI5U,EAAI,EAAGA,EAAI0vD,EAAa1vD,GAAK,EACpC2vD,EAAY3vD,GAAKwmD,EAAQkJ,EAAc1vD,EAAI,EAE9C,CAES,aAAA+vD,CAAcvJ,EAAmB7xC,EAAkBC,GAC3D,IAAI5U,EAAI,EACR,IAAK,IAAIwU,EAAW,EAAGA,EAAWG,EAAUH,GAAY,EACtD,IAAK,IAAIE,EAAW,EAAGA,EAAWE,EAAUF,GAAY,EAAG,CACzD,MAAMs7C,EAAS/9E,KAAKg+E,aAAaz7C,EAAUE,GAC3C8xC,EAAQxmD,GAAKgwD,EACbhwD,GAAK,CACN,CAEJ,CAES,YAAAiwD,CAAaz7C,EAAkBE,GACvC,OAAO,IAAIi6C,GAAO18E,KAAMuiC,EAAUE,EACnC,CAkBD,cAAIg3C,GACF,OAAOz5E,KAAKszE,SAASmG,UACtB,CAED,eAAI6D,GACF,OAAOt9E,KAAK29E,OAAO/2B,MAAQ5mD,KAAKy5E,UACjC,CAED,gBAAI8D,GACF,OAAOv9E,KAAK29E,OAAOn3D,OAASxmB,KAAKy5E,UAClC,CAED,YAAI/2C,GACF,OAAOvsB,KAAKqnE,MAAMx9E,KAAKu9E,aAAev9E,KAAK48E,aAC5C,CAED,YAAIj6C,GACF,OAAOxsB,KAAKqnE,MAAMx9E,KAAKs9E,YAAct9E,KAAK28E,YAC3C,CAED,eAAIc,GACF,OAAOz9E,KAAK0iC,SAAW1iC,KAAK2iC,QAC7B,CAED,aAAIs7C,GACF,OAAOj+E,KAAK09E,YAAYl/E,MACzB,CAGD,2BAAA0/E,CAA4B7N,GAC1B,OAAG,CACD,MAAMwN,EAAYxN,EAAMwN,UACxB,GAAkB,OAAdA,EACF,OAAO,KACF,GAA4B,IAAxBA,EAAUI,UAGnB,OAFA5N,EAAMwN,UAAYA,EAAUA,UAC5BA,EAAUA,UAAY,KACfA,EAEPxN,EAAQwN,CAEH,CACV,CAED,aAAAM,GACE,MAAMJ,EAAS/9E,KAAK09E,YAAYU,MAChC,YAAOL,IAAAA,EAAoBA,EAAS,IACrC,CAGD,aAAAX,CAAcW,GAGZ/9E,KAAK+8E,YAAYgB,EAAOx7C,SAAUw7C,EAAOt7C,UACzCziC,KAAK09E,YAAY7+E,KAAKk/E,EACvB,CAGD,WAAAhB,CAAYx6C,EAAkBE,GACXziC,KAAK88E,kBAAkBv6C,EAAUE,GACzChkC,QAAQ4/E,UAAU,EAAG,EAAGr+E,KAAK28E,YAAa38E,KAAK48E,aACzD,CAGD,iBAAAE,CAAkBv6C,EAAkBE,GAClC,MAAM6wC,EAAWtzE,KAAKszE,SAChB70E,EAAU60E,EAAS70E,QACnBg7E,EAAanG,EAASmG,WACtBtyB,EAAK5kB,EAAWviC,KAAK28E,YAAclD,EACnCryB,EAAK3kB,EAAWziC,KAAK48E,aAAenD,EAG1C,OAFAh7E,EAAQ89E,aAAa9C,EAAY,EAAG,EAAGA,EAAYtyB,EAAIC,GACvDksB,EAASiJ,aAAahkD,YAAU+lD,OAAO7E,EAAY,EAAG,EAAGA,EAAYtyB,EAAIC,IAClEksB,CACR,CAGD,UAAA4J,CAAWz+E,EAAwBw+E,EAAc16C,EAAkBE,GACjE,MAAM87C,EAAmBv+E,KAAKszE,SAASmG,WACjCkD,EAAc38E,KAAK28E,YAAc4B,EACjC3B,EAAe58E,KAAK48E,aAAe2B,EACnCC,EAAUj8C,EAAWo6C,EACrB8B,EAAUh8C,EAAWm6C,EAC3Bn+E,EAAQigF,UAAU1+E,KAAK29E,OAAQa,EAASC,EAAS9B,EAAaC,EAC5CK,EAAM3jE,EAAG2jE,EAAM1jE,EAAGvZ,KAAK28E,YAAa38E,KAAK48E,aAC5D,ECrJG,MAAOpG,WAAsBr2D,EAAAA,QACjC,WAAArgB,CAAYw9E,EAAsBC,EAAuB9D,EAC7CkF,EAAuBC,GACjC7+E,iBACI05E,IACFA,EAAaz1D,OAAOy4D,kBAAoB,YAEtCa,IACFA,EAAcnnE,KAAKqnE,MAAMhH,GAAcqI,aAAepF,aAEpD8D,IACFA,EAAepnE,KAAKqnE,MAAMhH,GAAcsI,cAAgBrF,aAEtDmF,IACFA,EAAezoE,KAAKqnE,MAAMrnE,KAAK4oE,KAAK5oE,KAAKC,IAAIknE,EAAaC,GAAgB,cAExEoB,IACFA,EAAexoE,KAAKC,IAAI,EAAGwoE,IAE7B5+E,KAAKs9E,YAAcA,EACnBt9E,KAAKu9E,aAAeA,EACpBv9E,KAAK2+E,aAAeA,EACpB3+E,KAAK4+E,aAAeA,EACpB5+E,KAAKy5E,WAAaA,EAElB,MAAMuF,EAAYJ,EAAeD,EAAe,EAC1CM,EAAQ,IAAIpnE,MAA0BmnE,GAC5C,IAAK,IAAIzgF,EAAI,EAAGA,EAAIygF,EAAWzgF,GAAK,EAClC0gF,EAAM1gF,GAAK,KAEbyB,KAAKi/E,MAAQA,CACd,CAeS,UAAAC,CAAWC,GACnB,MAAMC,EAAa,GAAKD,EACxB,OAAO,IAAI9B,GAAY+B,EAAYA,EAAYp/E,KAAKs9E,YAAat9E,KAAKu9E,aAAcv9E,KAAKy5E,WAC1F,CAGD,WAAA4F,CAAYF,GAEV,IADAA,EAAYhpE,KAAK2L,IAAI9hB,KAAK2+E,aAAcQ,IACxBn/E,KAAK4+E,aACnB,OAAO,KAET,MAAMh6D,EAAQu6D,EAAYn/E,KAAK2+E,aACzBM,EAAQj/E,KAAKi/E,MACnB,IAAIK,EAA2BL,EAAMr6D,GACrC,GAAa,OAAT06D,EACFA,EAAOt/E,KAAKk/E,WAAWC,GACvBF,EAAMr6D,GAAS06D,OACV,GAAuB,IAAnBA,EAAKrB,UAAiB,CAC/B,IAAIsB,EAAWlC,GAAYa,qBAAqBoB,GAC/B,OAAbC,IACFA,EAAWv/E,KAAKk/E,WAAWC,IAE7BI,EAAS1B,UAAYyB,EACrBA,EAAOC,EACPN,EAAMr6D,GAAS06D,CAChB,CACD,OAAOA,CACR,CAGS,WAAAE,CAAY54B,EAAepgC,GACnC,OAAO,IAAI62D,GAAYz2B,EAAOpgC,EAAQogC,EAAOpgC,EAAQxmB,KAAKy5E,WAC3D,CAGD,YAAAgG,CAAa74B,EAAepgC,GAC1B,MAAMk5D,EAAavpE,KAAKwpE,KAAKxpE,KAAK4oE,KAAKn4B,IACjCg5B,EAAczpE,KAAKwpE,KAAKxpE,KAAK4oE,KAAKv4D,IAClC24D,EAAYhpE,KAAK2L,IAAI49D,EAAYE,GACvC,IAAIvP,EAAQrwE,KAAKq/E,YAAYF,GAI7B,OAHc,OAAV9O,IACFA,EAAQrwE,KAAKw/E,YAAY54B,EAAOpgC,IAE3B6pD,CACR,CAED,aAAA8N,CAAcv3B,EAAepgC,GAI3B,OAHcxmB,KAAKy/E,aAAa74B,EAAOpgC,GAClB23D,eAGtB,EAGe3H,GAAYqI,aAAW,IAEvBrI,GAAasI,cAAW,ICxE7BnK,IAAAA,GAAU,yMAAV,OAAA/0E,EAAA,cAAmBktE,GAC9B,WAAAhtE,CAAYkiE,GACVjiE,MAAMiiE,GAwFChiE,KAAAszE,UAAmDl0E,EAAAY,KAAAE,GAAAd,EAAAY,KAAAuzE,OAAA,IA6HnDvzE,KAAA6/E,YAAsCzgF,EAAAY,KAAA8/E,OAAA,GAStC9/E,KAAA+/E,YAAsC3gF,EAAAY,KAAAggF,OAAA,GAWtChgF,KAAAigF,YAAsC7gF,EAAAY,KAAAkgF,OAAA,GAWtClgF,KAAAmgF,cAAwC/gF,EAAAY,KAAAogF,OAAA,GASxCpgF,KAAAqgF,YAAsCjhF,EAAAY,KAAAsgF,OAAA,GA0EtCtgF,KAAAugF,MAA2BnhF,EAAAY,KAAAwgF,OAAA,GAiB3BxgF,KAAAygF,SAA8BrhF,EAAAY,KAAA0gF,OAAA,GAiB9B1gF,KAAA2gF,YAAiCvhF,EAAAY,KAAA4gF,OAAA,GAiBjC5gF,KAAAmzD,MAA2B/zD,EAAAY,KAAA6gF,OAAA,GAmB3B7gF,KAAA8gF,WAAgC1hF,EAAAY,KAAA+gF,OAAA,GAchC/gF,KAAAghF,WAAgC5hF,EAAAY,KAAAihF,OAAA,GAoBhCjhF,KAAAkhF,UAA+B9hF,EAAAY,KAAAmhF,OAAA,GA6B/BnhF,KAAAohF,UAA+BhiF,EAAAY,KAAAqhF,OAAA,GAqB/BrhF,KAAAshF,QAA6BliF,EAAAY,KAAAuhF,OAAA,GAmI7BvhF,KAAAwhF,aAAkCpiF,EAAAY,KAAAyhF,OAAA,GA8BlCzhF,KAAA0hF,aAAkCtiF,EAAAY,KAAA2hF,OAAA,GA4BlC3hF,KAAA4hF,YAAiCxiF,EAAAY,KAAA6hF,OAAA,GAsCjC7hF,KAAA8hF,YAAiC1iF,EAAAY,KAAA+hF,OAAA,GAqCjC/hF,KAAAgiF,UAA+B5iF,EAAAY,KAAAiiF,OAAA,GAqC/BjiF,KAAAkiF,cAAmC9iF,EAAAY,KAAAmiF,OAAA,GAyKnCniF,KAAAoiF,WAAgChjF,EAAAY,KAAAqiF,OAAA,GAkChCriF,KAAAsiF,UAA+BljF,EAAAY,KAAAuiF,QAAA,GA4C/BviF,KAAAwiF,SAA8BpjF,EAAAY,KAAAyiF,QAAA,GA4C9BziF,KAAA0iF,YAAiCtjF,EAAAY,KAAA2iF,QAAA,GAhjCxC3iF,KAAKw0E,UAAY3zB,QAAMC,YACvB9gD,KAAK4iF,MAAQ,KACb5iF,KAAK6iF,SAAW,KAChB7iF,KAAKguD,QAAU,KAEfhuD,KAAKioB,MAAM1S,aAAa,CACtBy6D,SAAU,WACVxuB,KAAM,EACNF,IAAK,GAER,CAMkB,WAAAj9C,CAAY3C,EAAwByC,GAIrD,OAHAzC,EAAc3B,MAAMsE,YAAY3C,EAAayC,GAC7CzC,GAAemwC,GAAKkK,YAAclK,GAAKsK,eACvCn8C,KAAKyC,SAASzC,KAAK2B,MAASkwC,GAAKkK,YAAclK,GAAKsK,gBAC7Cz6C,CACR,CAEkB,YAAAw3C,CAAaC,GAI9B,OAH0C,IAArCA,EAAetH,GAAKsD,cACvBn1C,KAAK+C,cAAc8uC,GAAKkK,YAAclK,GAAKsK,gBAEtChD,CACR,CAEkB,QAAAW,GACjB/5C,MAAM+5C,WACN95C,KAAK8iF,aAAa9iF,KAAKgiE,MACvBhiE,KAAK+iF,gBACL/iF,KAAK+C,cAAc8uC,GAAKgK,YAAchK,GAAKkK,YAAclK,GAAKsK,eAC/D,CAEkB,QAAApC,GACjBh6C,MAAMg6C,WACN/5C,KAAKg2C,WAAWh2C,KAAK+gD,qBACtB,CAEkB,UAAA/D,CAAWtB,GAC5B17C,KAAKgjF,mBACLjjF,MAAMi9C,WAAWtB,EAClB,CAEkB,QAAAa,GACjBv8C,KAAKijF,aACN,CAEkB,YAAAxnC,CAAaC,GAE9B,OADAA,GAAgB7J,GAAKkK,YAAclK,GAAKsK,cAEzC,CASD,WAAIo4B,GACF,OAAOvlE,EAAAA,SAASC,QACjB,CAED,cAAIwqE,GACF,OAAOz1D,OAAOy4D,kBAAoB,CACnC,CAoBS,cAAAyG,CAAeC,EAAqC,UAC5D,GAAqB,WAAjBA,EAA2B,CAC7B,MAAM1kF,EAAUuB,KAAKgiE,KAAK4b,WAAW,MACrC,GAAgB,OAAZn/E,EACF,MAAM,IAAI8D,MAAM,6CAElB,MAAMk3E,EAAaz5E,KAAKy5E,WAClBzgD,EAAYT,YAAU+lD,OAAO7E,EAAY,EAAG,EAAGA,EAAY,EAAG,GACpE,OAAO,IAAI6C,GAAe79E,EAASu6B,EAAWygD,EAC/C,CAAM,GAAqB,UAAjB0J,EAA0B,CACnC,MAAM1kF,EAAUuB,KAAKgiE,KAAK4b,WAAW,SACrC,GAAgB,OAAZn/E,EACF,MAAM,IAAI8D,MAAM,4CAElB,OAAO,IAAIi6E,GAAc/9E,EAASuB,KAAKy5E,WACxC,CACD,MAAM,IAAIl3E,MAAM,oBAAsB4gF,EAAe,YACtD,CAKD,YAAAzO,CAAaF,GAEZ,CAED,cAAIM,GACF,OAAO90E,KAAKw0E,SACb,CAED,aAAIW,GACF,OAAOn1E,KAAKw0E,SACb,CAED,cAAAc,CAAeh8D,EAAWC,GACxB,GAAIvZ,KAAK+2C,QAAU/2C,KAAK20C,QAAU30C,KAAKu4C,aAAev4C,KAAKm1E,UAAU1K,SAASnxD,EAAGC,GAC/E,OAAO,KAET,IAAIg8D,EAAMv1E,KAAKw1E,gBAAgBl8D,EAAGC,GAIlC,OAHY,OAARg8D,IACFA,EAAMv1E,KAAKy1E,QAAQn8D,EAAGC,IAEjBg8D,CACR,CAES,OAAAE,CAAQn8D,EAAWC,GAC3B,OAAO,IACR,CAES,eAAAi8D,CAAgBl8D,EAAWC,GACnC,IAAIjY,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,GAAIA,aAAiB+xE,GAAc,CACjC,MAAMkC,EAAMv1E,KAAK01E,aAAap0E,EAAOgY,EAAGC,GACxC,GAAY,OAARg8D,EACF,OAAOA,CAEV,CACDj0E,EAAQA,EAAMmF,WACf,CACD,OAAO,IACR,CAES,YAAAivE,CAAa7E,EAAyBv3D,EAAWC,GACzD,OAAOs3D,EAAUyE,eAAeh8D,EAAGC,EACpC,CAGS,gBAAAypE,CAAiB3iC,GACzB,GAAIrgD,KAAKigF,YAAY3gF,MAAO,CAC1B,MAAMsjF,EAAQ5iF,KAAK4iF,MACL,OAAVA,aACEviC,IACFA,EAAergD,KAAKqgD,cAEtBrgD,KAAKojF,kBAAkBR,EAAO5iF,KAAKqgD,cAEtC,CACD,GAAIrgD,KAAKmgF,cAAc7gF,MAAO,CAC5B,MAAMujF,EAAW7iF,KAAK6iF,SACtB,IAAK,MAAM/vE,KAAM+vE,EAAU,CACzB,MAAMQ,EAAUR,EAAS/vE,YACrButC,IACFA,EAAergD,KAAKqgD,cAEtBrgD,KAAKsjF,oBAAoBD,EAAShjC,EACnC,CACF,CACF,CAED,cAAAkjC,CAAeC,GACO,OAAhBA,IACFA,EAAcxjF,MAGhBA,KAAKugF,MAAMkD,UAAUD,GACrBxjF,KAAKygF,SAASgD,UAAUD,GACxBxjF,KAAK2gF,YAAY8C,UAAUD,GAC3BxjF,KAAKmzD,MAAMswB,UAAUD,GAErBxjF,KAAK8gF,WAAW2C,UAAUD,GAC1BxjF,KAAKghF,WAAWyC,UAAUD,GAC1BxjF,KAAKkhF,UAAUuC,UAAUD,GAEzBxjF,KAAKwhF,aAAaiC,UAAUD,GAC5BxjF,KAAK0hF,aAAa+B,UAAUD,GAC5BxjF,KAAK4hF,YAAY6B,UAAUD,GAE3BxjF,KAAKoiF,WAAWqB,UAAUD,GAC1BxjF,KAAKsiF,UAAUmB,UAAUD,GACzBxjF,KAAKwiF,SAASiB,UAAUD,GACxBxjF,KAAK0iF,YAAYe,UAAUD,EAC5B,CAsDD,WAAAtN,CAAYtzD,GAEX,CAGD,WAAAuzD,CAAYvzD,GAEV,OADA5iB,KAAKk2E,YAAYtzD,GACV5iB,IACR,CAGD,SAAA0jF,CAAU9gE,EAAsB0qC,EAAiBC,GAC/C,MAAMlN,EAAergD,KAAKqgD,aAC1B,IAAKA,EAAaoqB,SAASnd,EAASC,GAClC,OAAO,KAET,MAAMj0C,EAAIg0C,EAAUjN,EAAa/mC,EAC3BC,EAAIg0C,EAAUlN,EAAa9mC,EAC3Bg8D,EAAMv1E,KAAKs1E,eAAeh8D,EAAGC,GACnC,OAAY,OAARg8D,EACK,MAET3yD,EAAM+iC,WAAa4vB,EACnBA,EAAIY,YAAYvzD,GACT2yD,EACR,CAMS,WAAAoO,CAAYf,EAA+BhgE,GACnDggE,EAAMt8B,OAAS1jC,EAAM0jC,OACrBs8B,EAAMr8B,QAAU3jC,EAAM2jC,QACtBq8B,EAAMp8B,OAAS5jC,EAAM4jC,OACrBo8B,EAAMn8B,QAAU7jC,EAAM6jC,QACtBm8B,EAAMl8B,QAAU9jC,EAAM8jC,QACtBk8B,EAAMj8B,SAAW/jC,EAAM+jC,SAEvBi8B,EAAMt1B,QAAU1qC,EAAM0qC,QACtBs1B,EAAMr1B,QAAU3qC,EAAM2qC,QACtBq1B,EAAMgB,QAAUhhE,EAAMghE,QACtBhB,EAAMiB,QAAUjhE,EAAMihE,QACtBjB,EAAMkB,UAAYlhE,EAAMkhE,UACxBlB,EAAMmB,UAAYnhE,EAAMmhE,UAExBnB,EAAMv/B,KAAOzgC,EAAMygC,KACnBu/B,EAAMt7B,OAAS1kC,EAAM0kC,OACrBs7B,EAAMoB,cAAgBphE,EAAMohE,aAC7B,CAGS,cAAAC,CAAerhE,GACvB,OAAO5iB,KAAK0jF,UAAU9gE,EAAOA,EAAM0qC,QAAS1qC,EAAM2qC,QACnD,CA8KS,mBAAA22B,CAAoBtB,EAA+BuB,EAC/BC,GAC5BxB,EAAMxM,SAAU,EAChB,IAAIiO,EAA0C,KAI9C,GAHsB,OAAlBD,GAA4C,OAAlBD,IAC5BE,EAAqBD,EAAcE,eAAeH,IAE9B,OAAlBC,EAAwB,CAC1B,MAAMG,EAAW,IAAIC,WAAW,WAAY5B,GAC5C2B,EAAS5+B,WAAay+B,EACtBG,EAASE,kBAAoBN,EAC7BC,EAAcjO,YAAYoO,GAC1B,IAAIG,EAAiCN,EACrC,EAAG,CACD,MAAMO,EAAa,IAAIH,WAAW,aAChCrmF,OAAAymF,OAAA,CAAAxO,SAAS,GACNwM,IAEL+B,EAAWh/B,WAAa++B,EACxBC,EAAWF,kBAAoBN,EAC/BO,EAAUxO,YAAYyO,GACtBD,EAAYA,EAAUhkF,MACfgkF,OAAAA,aAAqBrR,IAAgBqR,IAAcL,EAC7D,CAED,GADAzB,EAAMj9B,WAA+B,OAAlBw+B,EAAyBA,OAAqB,EAC3C,OAAlBA,EAAwB,CAC1B,MAAMU,EAAY,IAAIL,WAAW,YAAa5B,GAC9CiC,EAAUl/B,WAAaw+B,EACvBU,EAAUJ,kBAAoBL,EAC9BD,EAAchO,YAAY0O,GAC1B,IAAIC,EAAiCX,EACrC,EAAG,CACD,MAAMY,EAAa,IAAIP,WAAW,aAChCrmF,OAAAymF,OAAA,CAAAxO,SAAS,GACNwM,IAELmC,EAAWp/B,WAAam/B,EACxBC,EAAWN,kBAAoBL,EAC/BU,EAAU5O,YAAY6O,GACtBD,EAAYA,EAAUpkF,MACfokF,OAAAA,aAAqBzR,IAAgByR,IAAcT,EAC7D,CACF,CAGS,iBAAAjB,CAAkBR,EAA+BviC,GACzD,MAAMiN,EAAUs1B,EAAMt1B,QAChBC,EAAUq1B,EAAMr1B,QACtB,GAAIlN,EAAaoqB,SAASnd,EAASC,GAAU,CAC3C,MAAMj0C,EAAIg0C,EAAUjN,EAAa/mC,EAC3BC,EAAIg0C,EAAUlN,EAAa9mC,EACjC,IAAI6qE,EAAgBxB,EAAMj9B,oBACtBy+B,IACFA,EAAgB,MAElB,MAAMD,EAAgBnkF,KAAKs1E,eAAeh8D,EAAGC,GACzC4qE,IAAkBC,GACpBpkF,KAAKkkF,oBAAoBtB,EAAOuB,EAAeC,EAElD,CACF,CAMS,aAAAY,CAAc3B,EAAmCzgE,GACzDygE,EAAQ31B,UAAY9qC,EAAM8qC,UAC1B21B,EAAQ51B,YAAc7qC,EAAM6qC,YAC5B41B,EAAQh9B,UAAYzjC,EAAMyjC,UAE1Bg9B,EAAQ/8B,OAAS1jC,EAAM0jC,OACvB+8B,EAAQ98B,QAAU3jC,EAAM2jC,QACxB88B,EAAQ78B,OAAS5jC,EAAM4jC,OACvB68B,EAAQ58B,QAAU7jC,EAAM6jC,QACxB48B,EAAQ38B,QAAU9jC,EAAM8jC,QACxB28B,EAAQ18B,SAAW/jC,EAAM+jC,SAEzB08B,EAAQ/1B,QAAU1qC,EAAM0qC,QACxB+1B,EAAQ91B,QAAU3qC,EAAM2qC,QACxB81B,EAAQO,QAAUhhE,EAAMghE,QACxBP,EAAQQ,QAAUjhE,EAAMihE,QACxBR,EAAQS,UAAYlhE,EAAMkhE,UAC1BT,EAAQU,UAAYnhE,EAAMmhE,UAE1BV,EAAQz8B,MAAQhkC,EAAMgkC,MACtBy8B,EAAQ78D,OAAS5D,EAAM4D,OACvB68D,EAAQx8B,MAAQjkC,EAAMikC,MACtBw8B,EAAQv8B,MAAQlkC,EAAMkkC,MACtBu8B,EAAQt8B,MAAQnkC,EAAMmkC,MACtBs8B,EAAQr8B,SAAWpkC,EAAMokC,SACzBq8B,EAAQp8B,mBAAqBrkC,EAAMqkC,mBAEnCo8B,EAAQhgC,KAAOzgC,EAAMygC,KACrBggC,EAAQ/7B,OAAS1kC,EAAM0kC,OACvB+7B,EAAQW,cAAgBphE,EAAMohE,aAC/B,CAGS,gBAAAiB,CAAiBriE,GACzB,OAAO5iB,KAAK0jF,UAAU9gE,EAAOA,EAAM0qC,QAAS1qC,EAAM2qC,QACnD,CAwMS,qBAAA23B,CAAsB7B,EAAmCc,EACnCC,GAC9Bf,EAAQjN,SAAU,EAClB,IAAIiO,EAA0C,KAI9C,GAHsB,OAAlBD,GAA4C,OAAlBD,IAC5BE,EAAqBD,EAAcE,eAAeH,IAE9B,OAAlBC,EAAwB,CAC1B,MAAMG,EAAW,IAAI33B,aAAa,aAAcy2B,GAChDkB,EAAS5+B,WAAay+B,EACtBG,EAASE,kBAAoBN,EAC7BC,EAAcjO,YAAYoO,GAC1B,IAAIG,EAAiCN,EACrC,EAAG,CACD,MAAMO,EAAa,IAAI/3B,aAAa,eAClCzuD,OAAAymF,OAAA,CAAAxO,SAAS,GACNiN,IAELsB,EAAWh/B,WAAa++B,EACxBC,EAAWF,kBAAoBN,EAC/BO,EAAUxO,YAAYyO,GACtBD,EAAYA,EAAUhkF,MACfgkF,OAAAA,aAAqBrR,IAAgBqR,IAAcL,EAC7D,CAED,GADAhB,EAAQ19B,WAA+B,OAAlBw+B,EAAyBA,OAAqB,EAC7C,OAAlBA,EAAwB,CAC1B,MAAMU,EAAY,IAAIj4B,aAAa,cAAey2B,GAClDwB,EAAUl/B,WAAaw+B,EACvBU,EAAUJ,kBAAoBL,EAC9BD,EAAchO,YAAY0O,GAC1B,IAAIC,EAAiCX,EACrC,EAAG,CACD,MAAMY,EAAa,IAAIn4B,aAAa,eAClCzuD,OAAAymF,OAAA,CAAAxO,SAAS,GACNiN,IAEL0B,EAAWp/B,WAAam/B,EACxBC,EAAWN,kBAAoBL,EAC/BU,EAAU5O,YAAY6O,GACtBD,EAAYA,EAAUpkF,MACfokF,OAAAA,aAAqBzR,IAAgByR,IAAcT,EAC7D,CACF,CAGS,mBAAAf,CAAoBD,EAAmChjC,GAC/D,MAAMiN,EAAU+1B,EAAQ/1B,QAClBC,EAAU81B,EAAQ91B,QACxB,GAAIlN,EAAaoqB,SAASnd,EAASC,GAAU,CAC3C,MAAMj0C,EAAIg0C,EAAUjN,EAAa/mC,EAC3BC,EAAIg0C,EAAUlN,EAAa9mC,EACjC,IAAI6qE,EAAgBf,EAAQ19B,oBACxBy+B,IACFA,EAAgB,MAElB,MAAMD,EAAgBnkF,KAAKs1E,eAAeh8D,EAAGC,GACzC4qE,IAAkBC,GACpBpkF,KAAKklF,sBAAsB7B,EAASc,EAAeC,EAEtD,CACF,CAMS,WAAAe,CAAYp3B,EAA0BnrC,GAC9CmrC,EAAMT,QAAU1qC,EAAM0qC,QACtBS,EAAMR,QAAU3qC,EAAM2qC,QACtBQ,EAAM61B,QAAUhhE,EAAMghE,QACtB71B,EAAM81B,QAAUjhE,EAAMihE,QACtB91B,EAAMq3B,MAAQxiE,EAAMwiE,MACpBr3B,EAAMs3B,MAAQziE,EAAMyiE,MAEpBt3B,EAAMu3B,QAAU1iE,EAAM0iE,QACtBv3B,EAAMw3B,QAAU3iE,EAAM2iE,QACtBx3B,EAAMy3B,cAAgB5iE,EAAM4iE,cAC5Bz3B,EAAM03B,MAAQ7iE,EAAM6iE,KACrB,CAGS,cAAAC,CAAe9jC,EAAc+jC,GACrC,MAAMx3B,EAAiBw3B,EAAcx3B,eAC/By3B,EAA6B,GACnC,IAAK,IAAIrnF,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,EAAG,CACjD,MAAMsnF,EAAe13B,EAAe5vD,GAC9BonD,EAAakgC,EAAalgC,WAChC,QAAwB,IAApBA,GAAyBigC,EAAWnhE,QAAQkhC,GAAc,EAAG,CAC/D,MAAMmgC,EAAiC,IAAIj5B,WAAWjL,EAAM,CAC1DuM,eAAgBA,EAChBF,cAAe03B,EAAc13B,cAC7BD,QAAS23B,EAAc33B,QACvBooB,SAAS,IAEX0P,EAAWngC,WAAaA,EACxB,MAAMogC,EAA6B,CAACF,GACpC,IAAK,IAAI/kD,EAAIviC,EAAI,EAAGuiC,EAAIqtB,EAAe3vD,OAAQsiC,GAAK,EAAG,CACrD,MAAMklD,EAAY73B,EAAertB,GAC7BklD,EAAUrgC,aAAeA,GAC3BogC,EAAkBlnF,KAAKmnF,EAE1B,CAED,MAAMC,EAAgBvjE,kBAClBujE,EAAcC,gBAChBJ,EAAWC,kBAAoBE,EAAcC,mBAAmBH,IAE/DA,EAA2Cn/D,KAAO,SAAUhC,GAC3D,OAAOmhE,EAAkBnhE,EAC3B,EACAkhE,EAAWC,kBAAoBA,GAEjCpgC,EAAWwwB,YAAY2P,GACvBF,EAAW/mF,KAAK8mD,EACjB,CACF,CACF,CA8KS,YAAAm9B,CAAanF,GACrB,IAAI/2B,EACApgC,EACAizD,EACA3N,EAAa6R,EAAO7R,WACxB,GAAIA,aAAsB5G,YAAa,CACrC,EAAG,CAGD,GAFAte,EAAQzwC,KAAKqnE,MAAM1R,EAAW1G,aAC9B5+C,EAASrQ,KAAKqnE,MAAM1R,EAAWvG,cACjB,IAAV3e,GAA0B,IAAXpgC,EACjB,MACoB,IAAVogC,GAA0B,IAAXpgC,IAAiBsmD,GAASgD,aAAahE,IAChE9rE,KAAK+C,cAAc8uC,GAAKwH,aAE1ByyB,EAAaA,EAAWA,iBACjBA,aAAsB5G,aAC/BuU,EAAaz5E,KAAKy5E,WAClBkE,EAAO/2B,MAAQA,EAAQ6yB,EACvBkE,EAAOn3D,OAASA,EAASizD,EACzBkE,EAAO11D,MAAM2+B,MAAQA,EAAQ,KAC7B+2B,EAAO11D,MAAMzB,OAASA,EAAS,IAChC,MACCogC,EAAQzwC,KAAKqnE,MAAMG,EAAO/2B,OAC1BpgC,EAASrQ,KAAKqnE,MAAMG,EAAOn3D,QAC3BizD,EAAa,EAEdz5E,KAAuBw0E,UAAY,IAAI3zB,EAAMA,MAAA,EAAG,EAAG+F,EAAOpgC,EAC5D,CAED,WAAAy8D,GACE,MAAM3P,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GAAgB,CACtC,MAAMW,EAAQj9E,KAAKw0E,UACnBlB,EAAS70E,QAAQ4/E,UAAU,EAAG,EAAGpB,EAAMr2B,MAAOq2B,EAAMz2D,OACrD,MAAM,GAAI8sD,aAAoBkJ,GAAe,CAC5C,MAAM/9E,EAAU60E,EAAS70E,QACzBA,EAAQqlB,MAAMrlB,EAAQ0nF,iBAAmB1nF,EAAQ2nF,iBAClD,CACF,CAED,aAAArD,GACE,MAAMzP,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GAAgB,CACtC,MAAM7C,EAAaz5E,KAAKy5E,WACxBnG,EAAS70E,QAAQ89E,aAAa9C,EAAY,EAAG,EAAGA,EAAY,EAAG,EAChE,MAAM,GAAInG,aAAoBkJ,GAAe,CAC5C,MAAMS,EAAQj9E,KAAKw0E,UACnBlB,EAAS70E,QAAQg/C,SAAS,EAAG,EAAGw/B,EAAMr2B,MAAOq2B,EAAMz2D,OACpD,CACF,GA3iCA+vD,EAAA,CAAAvnE,EAAAA,SAAS,CACRkC,YAAaslE,GACb1kE,UAAU,EACVu0E,cAAAA,IACS,IAAI7P,MAWdF,EAAA,CAAApnE,EAAAA,SAAS,CACR2C,UAAWshE,GACXrhE,UAAU,EACV,SAAAK,GACE,OAAOnS,KAAKuR,MAAM2xE,gBACnB,EACD,WAAAvgC,CAAY2wB,GACVtzE,KAAKuR,MAAMwxE,eACZ,EACD,QAAAn6E,CAAS0qE,GAIP,MAHwB,iBAAbA,IACTA,EAAWtzE,KAAKuR,MAAM2xE,eAAe5P,IAEhCA,CACR,KAsHFgT,EAAA,CAAAp3E,EAAAA,SAAS,CACR2C,UAAWsvD,QACX7hE,OAAO,EACP,WAAAqjD,CAAYk9B,GACV7/E,KAAKuR,MAAMgvE,MAAMgG,QAAU1G,EAC3B7/E,KAAKuR,MAAMkvE,SAAS8F,QAAU1G,EAC9B7/E,KAAKuR,MAAMovE,YAAY4F,QAAU1G,CAClC,KAIF2G,EAAA,CAAAt3E,EAAAA,SAAS,CACR2C,UAAWsvD,QACX7hE,OAAO,EACP,WAAAqjD,CAAYo9B,GACV//E,KAAKuR,MAAM4hD,MAAMozB,QAAUxG,CAC5B,KAIF0G,EAAA,CAAAv3E,EAAAA,SAAS,CACR2C,UAAWsvD,QACX7hE,OAAO,EACP,WAAAqjD,CAAYs9B,GACVjgF,KAAKuR,MAAMuvE,WAAWyF,QAAUtG,EAChCjgF,KAAKuR,MAAMyvE,WAAWuF,QAAUtG,EAChCjgF,KAAKuR,MAAM2vE,UAAUqF,QAAUtG,CAChC,KAIFyG,EAAA,CAAAx3E,EAAAA,SAAS,CACR2C,UAAWsvD,QACX7hE,OAAO,EACP,WAAAqjD,CAAYw9B,GACVngF,KAAKuR,MAAMiwE,aAAa+E,QAAUpG,EAClCngF,KAAKuR,MAAMmwE,aAAa6E,QAAUpG,EAClCngF,KAAKuR,MAAMqwE,YAAY2E,QAAUpG,CAClC,KAIFwG,EAAA,CAAAz3E,EAAAA,SAAS,CACR2C,UAAWsvD,QACX7hE,OAAO,EACP,WAAAqjD,CAAY09B,GACVrgF,KAAKuR,MAAM6wE,WAAWmE,QAAUlG,CACjC,KA6DFuG,EAAA,CAAApkE,EAAAA,aAAa,CACZC,UAAW,QACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAMsuE,YAAYvgF,KACvC,EACD,MAAAqjB,CAAOC,GACL,MAAMggE,EAAQ5iF,KAAKuR,MAAMqxE,MACX,OAAVA,GACF5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAEhC5iB,KAAKuR,MAAM0yE,eAAerhE,EAC3B,KAIFikE,EAAA,CAAArkE,EAAAA,aAAa,CACZC,UAAW,WACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAMsuE,YAAYvgF,KACvC,EACD,MAAAqjB,CAAOC,GACL,MAAMggE,EAAQ5iF,KAAKuR,MAAMqxE,MACX,OAAVA,GACF5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAEhC5iB,KAAKuR,MAAM0yE,eAAerhE,EAC3B,KAIFkkE,EAAA,CAAAtkE,EAAAA,aAAa,CACZC,UAAW,cACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAMsuE,YAAYvgF,KACvC,EACD,MAAAqjB,CAAOC,GACL,MAAMggE,EAAQ5iF,KAAKuR,MAAMqxE,MACX,OAAVA,GACF5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAEhC5iB,KAAKuR,MAAM0yE,eAAerhE,EAC3B,KAIFmkE,EAAA,CAAAvkE,EAAAA,aAAa,CACZC,UAAW,QACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAMwuE,YAAYzgF,KACvC,EACD,MAAAqjB,CAAOC,GACL,MAAMggE,EAAQ5iF,KAAKuR,MAAMqxE,MACX,OAAVA,GACF5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAEhC5iB,KAAKuR,MAAM0yE,eAAerhE,EAC3B,KAIFokE,EAAA,CAAAxkE,EAAAA,aAAa,CACZC,UAAW,aACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM0uE,YAAY3gF,KACvC,EACD,MAAAqjB,CAAOC,GACL,IAAIggE,EAAQ5iF,KAAKuR,MAAMqxE,MACT,OAAVA,IACFA,EAAQ,CAAA,EACP5iF,KAAKuR,MAA8BqxE,MAAQA,GAE9C5iF,KAAKuR,MAAM6vE,UAAUmF,SAAU,EAC/BvmF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,EAC/B,KAIFqkE,EAAA,CAAAzkE,EAAAA,aAAa,CACZC,UAAW,aACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM0uE,YAAY3gF,KACvC,EACD,MAAAqjB,CAAOC,GACJ5iB,KAAKuR,MAA8BqxE,MAAQ,KAC5C5iF,KAAKuR,MAAM6vE,UAAUmF,SAAU,CAChC,KAIFW,EAAA,CAAA1kE,EAAAA,aAAa,CACZC,UAAW,YACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM0uE,YAAY3gF,KACvC,EACD,MAAAqjB,CAAOC,GACL,IAAIggE,EAAQ5iF,KAAKuR,MAAMqxE,MACT,OAAVA,IACFA,EAAQ,CAAA,EACP5iF,KAAKuR,MAA8BqxE,MAAQA,GAE9C5iF,KAAKuR,MAAM+vE,QAAQiF,SAAU,EAC7BvmF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAC9B5iB,KAAKuR,MAAM0yE,eAAerhE,EAC3B,KAIFukE,EAAA,CAAA3kE,EAAAA,aAAa,CACZC,UAAW,YACX8jE,SAAS,EACT9oB,WAAAA,IACS/6C,SAAS1S,KAElB,MAAA2S,CAAOC,GACL,IAAIggE,EAAQ5iF,KAAKuR,MAAMqxE,MACT,OAAVA,IACFA,EAAQ,CAAA,EACP5iF,KAAKuR,MAA8BqxE,MAAQA,GAE9C5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAC9B,IAAIwhE,EAAgBxB,EAAMj9B,oBACtBy+B,IACFA,EAAgB,MAElB,MAAMD,EAAgBnkF,KAAKuR,MAAM0yE,eAAerhE,GAC5CuhE,IAAkBC,GACpBpkF,KAAKuR,MAAM2yE,oBAAoBtB,EAAOuB,EAAeC,EAExD,EACD,UAAAzgF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KAIFyjF,EAAA,CAAA5kE,EAAAA,aAAa,CACZC,UAAW,UACX8jE,SAAS,EACT9oB,WAAAA,IACS/6C,SAAS1S,KAElB,MAAA2S,CAAOC,GACL,MAAMggE,EAAQ5iF,KAAKuR,MAAMqxE,MACX,OAAVA,GACF5iF,KAAKuR,MAAMoyE,YAAYf,EAAOhgE,GAEhC5iB,KAAKuR,MAAM0yE,eAAerhE,GAC1B5iB,KAAKuR,MAAM+vE,QAAQiF,SAAU,CAC9B,EACD,UAAA5iF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KA4GF0jF,EAAA,CAAA7kE,EAAAA,aAAa,CACZC,UAAW,eACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM4uE,cAAc7gF,KACzC,EACD,MAAAqjB,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,IAAIQ,EAAUR,EAAS/vE,YACnBuwE,IACFA,EAAU,CAAA,EACVR,EAAS/vE,GAAMuwE,GAEjBrjF,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,EACnCvmF,KAAKuR,MAAMyzE,cAAc3B,EAASzgE,EACnC,KAIF0kE,EAAA,CAAA9kE,EAAAA,aAAa,CACZC,UAAW,eACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM4uE,cAAc7gF,KACzC,EACD,MAAAqjB,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,MAAMQ,EAAUR,EAAS/vE,YACrBuwE,aACEA,EAAQ19B,YACV3lD,KAAKuR,MAAM2zE,sBAAsB7B,EAAS,KAAMA,EAAQ19B,mBAEnDk9B,EAAS/vE,GACqB,IAAjC3U,OAAOikC,KAAKygD,GAAUrkF,SACxBwB,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,GAGxC,KAIFgB,EAAA,CAAA/kE,EAAAA,aAAa,CACZC,UAAW,cACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM4uE,cAAc7gF,KACzC,EACD,MAAAqjB,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,IAAIQ,EAAUR,EAAS/vE,YACnBuwE,IACFA,EAAU,CAAA,EACVR,EAAS/vE,GAAMuwE,GAEjBrjF,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,EACnCvmF,KAAKuR,MAAMyzE,cAAc3B,EAASzgE,GAClC5iB,KAAKuR,MAAM0zE,iBAAiBriE,EAC7B,KAIF4kE,EAAA,CAAAhlE,EAAAA,aAAa,CACZC,UAAW,cACX8jE,SAAS,EACT9oB,WAAAA,IACS/6C,SAAS1S,KAElB,MAAA2S,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,IAAIQ,EAAUR,EAAS/vE,YACnBuwE,IACFA,EAAU,CAAA,EACVR,EAAS/vE,GAAMuwE,GAEjBrjF,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,EACnCvmF,KAAKuR,MAAMyzE,cAAc3B,EAASzgE,GAClC,IAAIwhE,EAAgBf,EAAQ19B,oBACxBy+B,IACFA,EAAgB,MAElB,MAAMD,EAAgBnkF,KAAKuR,MAAM0zE,iBAAiBriE,GAC9CuhE,IAAkBC,GACpBpkF,KAAKuR,MAAM2zE,sBAAsB7B,EAASc,EAAeC,EAE5D,EACD,UAAAzgF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KAIF8jF,EAAA,CAAAjlE,EAAAA,aAAa,CACZC,UAAW,YACX8jE,SAAS,EACT9oB,WAAAA,IACS/6C,SAAS1S,KAElB,MAAA2S,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,MAAMQ,EAAUR,EAAS/vE,YACrBuwE,GACFrjF,KAAKuR,MAAMyzE,cAAc3B,EAASzgE,GAEpC5iB,KAAKuR,MAAM0zE,iBAAiBriE,QACP,IAAjBygE,GAA4C,UAAtBzgE,EAAM6qC,uBAC1B41B,EAAQ19B,YACV3lD,KAAKuR,MAAM2zE,sBAAsB7B,EAAS,KAAMA,EAAQ19B,mBAEnDk9B,EAAS/vE,GACqB,IAAjC3U,OAAOikC,KAAKygD,GAAUrkF,SACxBwB,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,GAGxC,EACD,UAAA5iF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KAIF+jF,EAAA,CAAAllE,EAAAA,aAAa,CACZC,UAAW,gBACX8jE,SAAS,EACT9oB,WAAAA,IACS/6C,SAAS1S,KAElB,MAAA2S,CAAOC,GACL,MAAM9P,EAAK,GAAK8P,EAAM8qC,UACtB,IAAIm1B,EAAW7iF,KAAKuR,MAAMsxE,SACT,OAAbA,IACFA,EAAW,CAAA,EACV7iF,KAAKuR,MAA8BsxE,SAAWA,GAEjD,MAAMQ,EAAUR,EAAS/vE,YACrBuwE,GACFrjF,KAAKuR,MAAMyzE,cAAc3B,EAASzgE,GAEpC5iB,KAAKuR,MAAM0zE,iBAAiBriE,QACP,IAAjBygE,GAA4C,UAAtBzgE,EAAM6qC,uBAC1B41B,EAAQ19B,YACV3lD,KAAKuR,MAAM2zE,sBAAsB7B,EAAS,KAAMA,EAAQ19B,mBAEnDk9B,EAAS/vE,GACqB,IAAjC3U,OAAOikC,KAAKygD,GAAUrkF,SACxBwB,KAAKuR,MAAMuwE,YAAYyE,SAAU,EACjCvmF,KAAKuR,MAAMywE,UAAUuE,SAAU,EAC/BvmF,KAAKuR,MAAM2wE,cAAcqE,SAAU,GAGxC,EACD,UAAA5iF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KA2HFgkF,EAAA,CAAAnlE,EAAAA,aAAa,CACZC,UAAW,aACXilC,YAAY,EACZ6+B,SAAS,EACT,IAAAtnF,GACEe,KAAKumF,QAAUvmF,KAAKuR,MAAM8uE,YAAY/gF,KACvC,EACD,MAAAqjB,CAAOC,GACL,IAAIy9B,EACA2N,EAAUhuD,KAAKuR,MAAMy8C,QACT,OAAZA,IACFA,EAAU,CAAA,EACThuD,KAAKuR,MAA8By8C,QAAUA,GAEhD,MAAMG,EAAiBvrC,EAAMurC,eAC7B,IAAK,IAAI5vD,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,EAAG,CACjD,MAAMsnF,EAAe13B,EAAe5vD,GAC9BuU,EAAK,GAAK+yE,EAAa33B,WAC7B,IAAIH,EAAQC,EAAQl7C,YAChBi7C,IACFA,EAAQ,CACNG,WAAY23B,EAAa33B,WACzBlwD,OAAQ6nF,EAAa7nF,QAEvBgwD,EAAQl7C,GAAMi7C,GAEhB/tD,KAAKuR,MAAM+wE,UAAUiE,SAAU,EAC/BvmF,KAAKuR,MAAMixE,SAAS+D,SAAU,EAC9BvmF,KAAKuR,MAAMmxE,YAAY6D,SAAU,EACjCvmF,KAAKuR,MAAM4zE,YAAYp3B,EAAO83B,GAC9B,MAAMv4B,EAAUS,EAAMT,QAChBC,EAAUQ,EAAMR,QAItB,YAHIlN,IACFA,EAAergD,KAAKuR,MAAM8uC,cAExBA,EAAaoqB,SAASnd,EAASC,GAAU,CAC3C,MAAMj0C,EAAIg0C,EAAUjN,EAAa/mC,EAC3BC,EAAIg0C,EAAUlN,EAAa9mC,EAC3Bg8D,EAAMv1E,KAAKuR,MAAM+jE,eAAeh8D,EAAGC,GAC7B,OAARg8D,IACFxnB,EAAMpI,WAAa4vB,EACnBsQ,EAAalgC,WAAa4vB,EAE7B,CACF,CACDv1E,KAAKuR,MAAMm0E,eAAe,aAAc9iE,EACzC,KAIFglE,EAAA,CAAAplE,EAAAA,aAAa,CACZC,UAAW,YACXilC,YAAY,EACZ6+B,SAAS,EACT,MAAA5jE,CAAOC,GACL,IAAIorC,EAAUhuD,KAAKuR,MAAMy8C,QACT,OAAZA,IACFA,EAAU,CAAA,EACThuD,KAAKuR,MAA8By8C,QAAUA,GAEhD,MAAMG,EAAiBvrC,EAAMurC,eAC7B,IAAK,IAAI5vD,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,EAAG,CACjD,MAAMsnF,EAAe13B,EAAe5vD,GAC9BuU,EAAK,GAAK+yE,EAAa33B,WAC7B,IAAIH,EAAQC,EAAQl7C,YAChBi7C,IACFA,EAAQ,CACNG,WAAY23B,EAAa33B,WACzBlwD,OAAQ6nF,EAAa7nF,QAEvBgwD,EAAQl7C,GAAMi7C,GAEhB/tD,KAAKuR,MAAM4zE,YAAYp3B,EAAO83B,GAC9BA,EAAalgC,WAAaoI,EAAMpI,UACjC,CACD3lD,KAAKuR,MAAMm0E,eAAe,YAAa9iE,EACxC,EACD,UAAAjf,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KAIFkkF,EAAA,CAAArlE,EAAAA,aAAa,CACZC,UAAW,WACXilC,YAAY,EACZ6+B,SAAS,EACT,MAAA5jE,CAAOC,GACL,IAAIorC,EAAUhuD,KAAKuR,MAAMy8C,QACT,OAAZA,IACFA,EAAU,CAAA,EACThuD,KAAKuR,MAA8By8C,QAAUA,GAEhD,MAAMG,EAAiBvrC,EAAMurC,eAC7B,IAAK,IAAI5vD,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,EAAG,CACjD,MAAMsnF,EAAe13B,EAAe5vD,GAC9BuU,EAAK,GAAK+yE,EAAa33B,WAC7B,IAAIH,EAAQC,EAAQl7C,YAChBi7C,IACFA,EAAQ,CACNG,WAAY23B,EAAa33B,WACzBlwD,OAAQ6nF,EAAa7nF,QAEvBgwD,EAAQl7C,GAAMi7C,GAEhB/tD,KAAKuR,MAAM4zE,YAAYp3B,EAAO83B,GAC9BA,EAAalgC,WAAaoI,EAAMpI,UACjC,CACD3lD,KAAKuR,MAAMm0E,eAAe,WAAY9iE,GACtC,IAAK,IAAIrkB,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,SAGvCyvD,EADI,GADUG,EAAe5vD,GACP2vD,YAEO,IAAhC/vD,OAAOikC,KAAK4rB,GAASxvD,SACvBwB,KAAKuR,MAAM+wE,UAAUiE,SAAU,EAC/BvmF,KAAKuR,MAAMixE,SAAS+D,SAAU,EAC9BvmF,KAAKuR,MAAMmxE,YAAY6D,SAAU,EAGtC,EACD,UAAA5iF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KAIFmkF,EAAA,CAAAtlE,EAAAA,aAAa,CACZC,UAAW,cACXilC,YAAY,EACZ6+B,SAAS,EACT,MAAA5jE,CAAOC,GACL,IAAIorC,EAAUhuD,KAAKuR,MAAMy8C,QACT,OAAZA,IACFA,EAAU,CAAA,EACThuD,KAAKuR,MAA8By8C,QAAUA,GAEhD,MAAMG,EAAiBvrC,EAAMurC,eAC7B,IAAK,IAAI5vD,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,EAAG,CACjD,MAAMsnF,EAAe13B,EAAe5vD,GAC9BuU,EAAK,GAAK+yE,EAAa33B,WAC7B,IAAIH,EAAQC,EAAQl7C,YAChBi7C,IACFA,EAAQ,CACNG,WAAY23B,EAAa33B,WACzBlwD,OAAQ6nF,EAAa7nF,QAEvBgwD,EAAQl7C,GAAMi7C,GAEhB/tD,KAAKuR,MAAM4zE,YAAYp3B,EAAO83B,GAC9BA,EAAalgC,WAAaoI,EAAMpI,UACjC,CACD3lD,KAAKuR,MAAMm0E,eAAe,cAAe9iE,GACzC,IAAK,IAAIrkB,EAAI,EAAGA,EAAI4vD,EAAe3vD,OAAQD,GAAK,SAGvCyvD,EADI,GADUG,EAAe5vD,GACP2vD,YAEO,IAAhC/vD,OAAOikC,KAAK4rB,GAASxvD,SACvBwB,KAAKuR,MAAM+wE,UAAUiE,SAAU,EAC/BvmF,KAAKuR,MAAMixE,SAAS+D,SAAU,EAC9BvmF,KAAKuR,MAAMmxE,YAAY6D,SAAU,EAGtC,EACD,UAAA5iF,GACE3D,KAAKumF,SAAU,EACfxmF,MAAM4D,YACP,KA/+BHxG,EAAAyC,EAAA,KAAA22E,EAAA,CAAAz4E,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAI4hE,UAEH,KAAAr0E,GAsBD/C,EAAS,KAAA,KAAAm5E,EAAA,CAAAx4E,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2gE,SAAAt0E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2gE,SAAmDh0E,CAAAA,IAAAi0E,EAAArzE,GA6H5D/C,EAAS,KAAA,KAAAmpF,EAAA,CAAAxoF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAktE,YAAA7gF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAktE,YAAsCvgF,CAAAA,IAAAwgF,EAAA5/E,GAS/C/C,EAAS,KAAA,KAAAqpF,EAAA,CAAA1oF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAotE,YAAA/gF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAotE,YAAsCzgF,CAAAA,IAAA0gF,EAAA9/E,GAW/C/C,EAAS,KAAA,KAAAspF,EAAA,CAAA3oF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAstE,YAAAjhF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAstE,YAAsC3gF,CAAAA,IAAA4gF,EAAAhgF,GAW/C/C,EAAS,KAAA,KAAAupF,EAAA,CAAA5oF,KAAA,QAAAO,KAAA,gBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,kBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAwtE,cAAAnhF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAwtE,cAAwC7gF,CAAAA,IAAA8gF,EAAAlgF,GASjD/C,EAAS,KAAA,KAAAwpF,EAAA,CAAA7oF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0tE,YAAArhF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0tE,YAAsC/gF,CAAAA,IAAAghF,EAAApgF,GA0E/C/C,EAAS,KAAA,KAAAypF,EAAA,CAAA9oF,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAA4tE,MAAAvhF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA4tE,MAA2BjhF,CAAAA,IAAAkhF,EAAAtgF,GAiBpC/C,EAAS,KAAA,KAAA0pF,EAAA,CAAA/oF,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA8tE,SAAAzhF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA8tE,SAA8BnhF,CAAAA,IAAAohF,EAAAxgF,GAiBvC/C,EAAS,KAAA,KAAA2pF,EAAA,CAAAhpF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAguE,YAAA3hF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAguE,YAAiCrhF,CAAAA,IAAAshF,EAAA1gF,GAiB1C/C,EAAS,KAAA,KAAA4pF,EAAA,CAAAjpF,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAwgD,MAAAn0D,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAwgD,MAA2B7zD,CAAAA,IAAAuhF,EAAA3gF,GAmBpC/C,EAAS,KAAA,KAAA6pF,EAAA,CAAAlpF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAAmuE,WAAA9hF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAmuE,WAAgCxhF,CAAAA,IAAAyhF,EAAA7gF,GAczC/C,EAAS,KAAA,KAAA8pF,EAAA,CAAAnpF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAAquE,WAAAhiF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAquE,WAAgC1hF,CAAAA,IAAA2hF,EAAA/gF,GAoBzC/C,EAAS,KAAA,KAAA+pF,EAAA,CAAAppF,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAuuE,UAAAliF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAuuE,UAA+B5hF,CAAAA,IAAA6hF,EAAAjhF,GA6BxC/C,EAAS,KAAA,KAAAgqF,EAAA,CAAArpF,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAyuE,UAAApiF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAyuE,UAA+B9hF,CAAAA,IAAA+hF,EAAAnhF,GAqBxC/C,EAAS,KAAA,KAAAiqF,EAAA,CAAAtpF,KAAA,QAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2uE,QAAAtiF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2uE,QAA6BhiF,CAAAA,IAAAiiF,EAAArhF,GAmItC/C,EAAS,KAAA,KAAAkqF,EAAA,CAAAvpF,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA6uE,aAAAxiF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA6uE,aAAkCliF,CAAAA,IAAAmiF,EAAAvhF,GA8B3C/C,EAAS,KAAA,KAAAmqF,EAAA,CAAAxpF,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+uE,aAAA1iF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+uE,aAAkCpiF,CAAAA,IAAAqiF,EAAAzhF,GA4B3C/C,EAAS,KAAA,KAAAoqF,EAAA,CAAAzpF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAivE,YAAA5iF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAivE,YAAiCtiF,CAAAA,IAAAuiF,EAAA3hF,GAsC1C/C,EAAS,KAAA,KAAAqqF,EAAA,CAAA1pF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAmvE,YAAA9iF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAmvE,YAAiCxiF,CAAAA,IAAAyiF,EAAA7hF,GAqC1C/C,EAAS,KAAA,KAAAsqF,EAAA,CAAA3pF,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAqvE,UAAAhjF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAqvE,UAA+B1iF,CAAAA,IAAA2iF,EAAA/hF,GAqCxC/C,EAAS,KAAA,KAAAuqF,EAAA,CAAA5pF,KAAA,QAAAO,KAAA,gBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,kBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAuvE,cAAAljF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAuvE,cAAmC5iF,CAAAA,IAAA6iF,EAAAjiF,GAyK5C/C,EAAS,KAAA,KAAAwqF,EAAA,CAAA7pF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAAyvE,WAAApjF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAyvE,WAAgC9iF,CAAAA,IAAA+iF,EAAAniF,GAkCzC/C,EAAS,KAAA,KAAAyqF,EAAA,CAAA9pF,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2vE,UAAAtjF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2vE,UAA+BhjF,CAAAA,IAAAijF,GAAAriF,GA4CxC/C,EAAS,KAAA,KAAA0qF,EAAA,CAAA/pF,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA6vE,SAAAxjF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA6vE,SAA8BljF,CAAAA,IAAAmjF,GAAAviF,GA4CvC/C,EAAS,KAAA,KAAA2qF,EAAA,CAAAhqF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+vE,YAAA1jF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+vE,YAAiCpjF,CAAAA,IAAAqjF,GAAAziF,GAsDjBN,EAAA4xB,IAAc,SAEd5xB,EAAWi3C,YAAci2B,GAASj2B,YAAchF,GAAKkK,YAAclK,GAAKsK,eACxEv8C,EAAWm4C,YAAc+0B,GAAS/0B,YAAclG,GAAKkK,YAAclK,GAAKsK,gBA5mC5E,EAAA,GCnBV4rC,GAAU,iDAAV,OAAAnoF,EAAA,cAAmByzE,GAC9B,WAAAvzE,GACEC,QAOOC,KAAAitC,SAAgD7tC,EAAAY,KAAAE,GAAAd,EAAAY,KAAAgoF,OAAA,IAGhDhoF,KAAAioF,mBAA8D7oF,EAAAY,KAAAkoF,OAAA,GAc9DloF,KAAAmoF,WAAqD/oF,EAAAY,KAAAooF,OAAA,GAa5CpoF,KAAAszE,SAAmDl0E,EAAAY,KAAAuzE,OAAA,GApCnEvzE,KAAK29E,OAAS39E,KAAKqoF,eACnBroF,KAAKsoF,eAAiB,KACrBtoF,KAAKszE,SAA2Ch0E,MAAQU,KAAKkjF,gBAC/D,CAQD,cAAIzJ,GACF,OAAOz1D,OAAOy4D,kBAAoB,CACnC,CAyBS,cAAAyG,CAAeC,EAAqC,UAC5D,GAAqB,WAAjBA,EAA2B,CAC7B,MAAM1kF,EAAUuB,KAAK29E,OAAOC,WAAW,MACvC,GAAgB,OAAZn/E,EACF,MAAM,IAAI8D,MAAM,6CAElB,OAAO,IAAI+5E,GAAe79E,EAAS85B,EAAAA,UAAUgB,WAAYv5B,KAAKy5E,WAC/D,CAAM,GAAqB,UAAjB0J,EAA0B,CACnC,MAAM1kF,EAAUuB,KAAK29E,OAAOC,WAAW,SACvC,GAAgB,OAAZn/E,EACF,MAAM,IAAI8D,MAAM,4CAElB,OAAO,IAAIi6E,GAAc/9E,EAASuB,KAAKy5E,WACxC,CACD,MAAM,IAAIl3E,MAAM,oBAAsB4gF,EAAe,YACtD,CAEkB,WAAA9+E,CAAY3C,EAAwByC,GAErD,MAAMokF,GADN7mF,EAAc3B,MAAMsE,YAAY3C,EAAayC,KACV0tC,GAAKkK,YAAclK,GAAKsK,gBAK3D,OAJoB,IAAhBosC,IACF7mF,GAAemwC,GAAKsK,eACpBn8C,KAAKyC,SAASzC,KAAK2B,MAAQkwC,GAAKkH,aAAelH,GAAKsK,eAAiBosC,IAEhE7mF,CACR,CAEkB,YAAAw3C,CAAaC,GAI9B,OAHwC,IAAnCn5C,KAAK2B,MAAQkwC,GAAKsD,cAA4D,IAArCgE,EAAetH,GAAKwH,eAChEF,EAAe,GAEVA,CACR,CAEkB,QAAAW,GACjB/5C,MAAM+5C,WACN95C,KAAK+C,cAAc8uC,GAAKkK,YAAclK,GAAKsK,eAC5C,CAEkB,YAAAV,CAAaC,GAQ9B,OAPwC,IAAnC17C,KAAK2B,MAAQkwC,GAAKiH,aACrB4C,GAAgB7J,GAAKsK,eAErBT,EADkD,IAAxCA,EAAe7J,GAAKsK,gBACftK,GAAKkH,aAAelH,GAAKsK,eAEzB,EAEVT,CACR,CAEkB,QAAAa,GACjB,MAAMisC,EAAcxoF,KAAKwoF,YACzBxoF,KAAK8iF,aAAa9iF,KAAK29E,OAAQ6K,GAC/BxoF,KAAK+iF,cAAcyF,GACnBxoF,KAAKijF,YAAYuF,GACjBzoF,MAAMw8C,UACP,CAEkB,YAAAK,GACjB58C,KAAKyoF,iBACL1oF,MAAM68C,cACP,CAOD,eAAI4rC,GACF,IAAIA,EAAcxoF,KAAKsoF,eAIvB,OAHoB,OAAhBE,IACFA,EAAcxoF,KAAK0oF,qBAEdF,CACR,CAGD,cAAAG,CAAeH,GACZxoF,KAAuBsoF,eAAiBE,CAC1C,CAES,iBAAAE,GACR,OAAO1oF,KAAK80E,UACb,CAES,YAAAuT,GACR,OAAO3lE,SAASosD,cAAc,SAC/B,CAES,YAAAgU,CAAanF,EAA2B6K,GAChD,MAAM/O,EAAaz5E,KAAKy5E,WAClBmP,EAAWJ,EAAY5hC,MACvBiiC,EAAYL,EAAYhiE,OACxBsiE,EAAiBF,EAAWnP,EAC5BsP,EAAkBF,EAAYpP,EAC9BuP,EAAiBrL,EAAO/2B,MACxBqiC,EAAkBtL,EAAOn3D,OAC3BsiE,IAAmBE,GAAkBD,IAAoBE,IAC3DtL,EAAO/2B,MAAQkiC,EACfnL,EAAOn3D,OAASuiE,EAChBpL,EAAO11D,MAAM2+B,MAAQgiC,EAAW,KAChCjL,EAAO11D,MAAMzB,OAASqiE,EAAY,KAErC,CAES,WAAA5F,CAAYuF,GACpB,MAAMlV,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GACtBhJ,EAAS70E,QAAQ4/E,UAAU,EAAG,EAAGmK,EAAYx0B,KAAMw0B,EAAYn0B,WAC1D,GAAIif,aAAoBkJ,GAAe,CAC5C,MAAM/9E,EAAU60E,EAAS70E,QACzBA,EAAQqlB,MAAMrlB,EAAQ0nF,iBAAmB1nF,EAAQ2nF,iBAClD,CACF,CAES,aAAArD,CAAcyF,GACtB,MAAMlV,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GAAgB,CACtC,MAAM7C,EAAaz5E,KAAKy5E,WAClBtyB,EAAKqhC,EAAY30B,KAAO4lB,EACxBryB,EAAKohC,EAAYr0B,KAAOslB,EAC9BnG,EAAS70E,QAAQ89E,aAAa9C,EAAY,EAAG,EAAGA,GAAatyB,GAAKC,GAClEksB,EAASiJ,aAAahkD,YAAU+lD,OAAO7E,EAAY,EAAG,EAAGA,GAAatyB,GAAKC,GAC5E,MAAUksB,aAAoBkJ,IAC7BlJ,EAAS70E,QAAQg/C,SAAS+qC,EAAYlvE,EAAGkvE,EAAYjvE,EAAGivE,EAAYx0B,KAAMw0B,EAAYn0B,KAEzF,CAES,cAAAo0B,GACR,MAAMN,EAAanoF,KAAKmoF,WAAW7oF,MACnC,GAAI6oF,aAAsB7L,GAAgB,CACxC,MAAM79E,EAAU0pF,EAAW1pF,QACrB+pF,EAAcxoF,KAAKwoF,YACnB7K,EAAS39E,KAAK29E,OACpB,GAAI6K,EAAY33E,aAAqC,IAAtB23E,EAAY5hC,OAAsC,IAAvB4hC,EAAYhiE,QACjD,IAAjBm3D,EAAO/2B,OAAiC,IAAlB+2B,EAAOn3D,OAAc,CAC7C,MAAMuzD,EAAct7E,EAAQs7E,YACtBC,EAA2Bv7E,EAAQu7E,yBACzCv7E,EAAQs7E,YAAc/5E,KAAKitC,QAAQ/8B,WACnCzR,EAAQu7E,yBAA2Bh6E,KAAKioF,mBAAmB/3E,WAC3DzR,EAAQigF,UAAUf,EAAQ6K,EAAYlvE,EAAGkvE,EAAYjvE,EAAGivE,EAAY5hC,MAAO4hC,EAAYhiE,QACvF/nB,EAAQs7E,YAAcA,EACtBt7E,EAAQu7E,yBAA2BA,CACpC,CACF,CACF,GAlLAkP,EAAA,CAAAjhD,GAAwB,CAACp2B,UAAWovD,OAAQ3hE,MAAO,EAAGoC,YAAamwC,GAAKsK,kBAGxEgtC,EAAA,CAAAj6E,EAAAA,SAAS,CAAC2C,UAAWyb,OAAQhuB,MAAO,cAAeoC,YAAamwC,GAAKsK,kBAUrEitC,EAAA,CAAAl6E,EAAAA,SAAS,CACR2C,UAAWshE,GACX7zE,MAAO,KACPwS,SAAU,cAIXwkE,EAAA,CAAApnE,EAAAA,SAAS,CACRs9C,SAAS,EACT16C,UAAU,EACVpQ,YAAamwC,GAAKkK,YAAclK,GAAKsK,eACrC,QAAAvzC,CAAS0qE,GAIP,MAHwB,iBAAbA,IACTA,EAAWtzE,KAAKuR,MAAM2xE,eAAe5P,IAEhCA,CACR,KA5BHn2E,EAAS,KAAA,KAAA+rF,EAAA,CAAAprF,KAAA,QAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAAs6B,QAAAjuC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAs6B,QAAgD3tC,CAAAA,IAAA0oF,EAAA9nF,GAGzD/C,EAAS,KAAA,KAAAgsF,EAAA,CAAArrF,KAAA,QAAAO,KAAA,qBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,uBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAs1E,mBAAAjpF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAs1E,mBAA8D3oF,CAAAA,IAAA4oF,EAAAhoF,GAcvE/C,EAAS,KAAA,KAAAisF,EAAA,CAAAtrF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAAw1E,WAAAnpF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAw1E,WAAqD7oF,CAAAA,IAAA8oF,EAAAloF,GAa9D/C,EAAkB,KAAA,KAAAm5E,EAAA,CAAAx4E,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2gE,SAAAt0E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2gE,SAAmDh0E,CAAAA,IAAAi0E,EAAArzE,GAqJ5CN,EAAAuT,WAAwBkgE,GAAalgE,WAAa0+B,GAAKsK,eACvDv8C,EAAAi3C,YAAyBw8B,GAAax8B,YAAchF,GAAKsK,eACzDv8C,EAAAm4C,YAAyBs7B,GAAat7B,YAAclG,GAAKsK,eAAAA,CA9L7D,EAAA,GAgMvBh+C,OAAOgB,eAAe4oF,GAAW9pF,UAAW,aAAc,CACxD,GAAAc,GACE,OAAOiB,KAAKg1E,kBACb,EACDp7D,cAAc,IC1MH,MAAAyvE,GAAW,CACtB,CAACpsE,OAAOC,aAAa2K,GACZA,aAAoBwrD,IACpB,SAAUxrD,GCARyhE,GAAa,CACxB,CAACrsE,OAAOC,aAAa2K,GACZA,aAAoBwrD,IACpB,WAAYxrD,GACZ,gBAAiBA,GCSf0hE,MAAAA,GACX,WAAAzpF,CAAYwZ,EAAWC,EAAWqtC,EAAepgC,GAC/CxmB,KAAKsZ,EAAIA,EACTtZ,KAAKuZ,EAAIA,EACTvZ,KAAK4mD,MAAQA,EACb5mD,KAAKwmB,OAASA,CACf,CAID,KAAAgjE,CAAMlwE,GAEJ,OADAA,EAAI2M,SAAOrd,SAAS0Q,GAChBtZ,KAAKsZ,EAAEoD,OAAOpD,GACTtZ,KAEFA,KAAK+gC,KAAKznB,EAAGtZ,KAAKuZ,EAAGvZ,KAAK4mD,MAAO5mD,KAAKwmB,OAC9C,CAID,KAAAijE,CAAMlwE,GAEJ,OADAA,EAAI0M,SAAOrd,SAAS2Q,GAChBvZ,KAAKuZ,EAAEmD,OAAOnD,GACTvZ,KAEFA,KAAK+gC,KAAK/gC,KAAKsZ,EAAGC,EAAGvZ,KAAK4mD,MAAO5mD,KAAKwmB,OAC9C,CAID,SAAAkjE,CAAU9iC,GAER,OADAA,EAAQ3gC,SAAOrd,SAASg+C,GACpB5mD,KAAK4mD,MAAMlqC,OAAOkqC,GACb5mD,KAEFA,KAAK+gC,KAAK/gC,KAAKsZ,EAAGtZ,KAAKuZ,EAAGqtC,EAAO5mD,KAAKwmB,OAC9C,CAID,UAAAoC,CAAWpC,GAET,OADAA,EAASP,SAAOrd,SAAS4d,GACrBxmB,KAAKwmB,OAAO9J,OAAO8J,GACdxmB,KAEFA,KAAK+gC,KAAK/gC,KAAKsZ,EAAGtZ,KAAKuZ,EAAGvZ,KAAK4mD,MAAOpgC,EAC9C,CAID,MAAAmjE,CAAOrW,EAA6B2J,GAClC,YAAI3J,EAAqB,CACvB,MAAM70E,EAAU,IAAIi4E,GAGpB,OAFAj4E,EAAQo4E,aAAa,GACrB72E,KAAKg9E,KAAKv+E,EAASw+E,GACZx+E,EAAQsW,UAChB,CAAUu+D,aAAoBkG,IAC7Bx5E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAED,IAAAD,CAAKv+E,EAAyBw+E,EAAsB,MAClDj9E,KAAK4pF,WAAWnrF,EAASw+E,EAC1B,CAES,UAAA2M,CAAWnrF,EAAyBw+E,GAC5Cx+E,EAAQm6E,KAAK54E,KAAKsZ,EAAE0kD,UAAWh+D,KAAKuZ,EAAEykD,UACzBh+D,KAAK4mD,MAAMoX,UAAWh+D,KAAKwmB,OAAOw3C,UAChD,CAES,IAAAj9B,CAAKznB,EAAWC,EAAWqtC,EAAepgC,GAClD,OAAO,IAAI+iE,GAAKjwE,EAAGC,EAAGqtC,EAAOpgC,EAC9B,CAED,MAAAuC,GACE,MAAO,CACLzP,EAAGtZ,KAAKsZ,EACRC,EAAGvZ,KAAKuZ,EACRqtC,MAAO5mD,KAAK4mD,MACZpgC,OAAQxmB,KAAKwmB,OAEhB,CAED,MAAA9J,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgB4sE,KAClBvpF,KAAKsZ,EAAEoD,OAAOC,EAAKrD,IAAMtZ,KAAKuZ,EAAEmD,OAAOC,EAAKpD,IAC5CvZ,KAAK4mD,MAAMlqC,OAAOC,EAAKiqC,QAAU5mD,KAAKwmB,OAAO9J,OAAOC,EAAK6J,QAGnE,CAED,KAAA8C,CAASjC,GAIP,OAHAA,EAASA,EAAOE,MAAM,QAAQA,MAAM,IAAWA,MAAM,UAAUA,MAAM,IACrD+B,MAAMtpB,KAAKsZ,GAAGiO,MAAM,MAAM+B,MAAMtpB,KAAKuZ,GAAGgO,MAAM,MAC9C+B,MAAMtpB,KAAK4mD,OAAOr/B,MAAM,MAAM+B,MAAMtpB,KAAKwmB,QAAQe,MAAM,GAExE,CAED,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAOwP,CAAO8J,EAAeC,EAAeqtC,EAAmBpgC,GAK7D,OAJAlN,EAAI2M,SAAOrd,SAAS0Q,GACpBC,EAAI0M,SAAOrd,SAAS2Q,GACpBqtC,EAAQ3gC,SAAOrd,SAASg+C,GACxBpgC,EAASP,SAAOrd,SAAS4d,GAClB,IAAI+iE,GAAKjwE,EAAGC,EAAGqtC,EAAOpgC,EAC9B,CAED,eAAA5d,CAAuDtJ,GACrD,GAAIA,SAAsCA,aAAiBiqF,GACzD,OAAOjqF,EACF,GAAqB,iBAAVA,EAChB,OAAOiqF,GAAK/5E,OAAOlQ,EAAMga,EAAGha,EAAMia,EAAGja,EAAMsnD,MAAOtnD,EAAMknB,QAE1D,MAAM,IAAI5oB,UAAU,GAAK0B,EAC1B,EC/HUuqF,IAAAA,GAAQ,sEAAR,OAAAjqF,EAAA,cAAiByzE,qCAEnBrzE,KAAAsZ,GAA2Bla,EAAAY,KAAAE,GAAAd,EAAAY,KAAA8pF,OAAA,IAG3B9pF,KAAAuZ,EAA2Bna,EAAAY,KAAA+pF,OAAA,GAG3B/pF,KAAA4mD,MAA+BxnD,EAAAY,KAAAgqF,OAAA,GAG/BhqF,KAAAwmB,OAAgCpnB,EAAAY,KAAAiqF,OAAA,GAGhCjqF,KAAAg7E,KAAyC57E,EAAAY,KAAAkqF,OAAA,GAGzClqF,KAAAs0E,OAA2Cl1E,EAAAY,KAAAmqF,OAAA,GAG3CnqF,KAAA27E,YAAiDv8E,EAAAY,KAAAoqF,OAAA,EAgH3D,CA9GC,SAAI9qF,GACF,OAAO,IAAIiqF,GAAKvpF,KAAKsZ,EAAEpJ,WAAYlQ,KAAKuZ,EAAErJ,WAAYlQ,KAAK4mD,MAAM12C,WAAYlQ,KAAKwmB,OAAOtW,WAC1F,CAED,SAAIg3B,GACF,OAAO,IAAIqiD,GAAKvpF,KAAKsZ,EAAE+wE,WAAYrqF,KAAKuZ,EAAE8wE,WAAYrqF,KAAK4mD,MAAMyjC,WAAYrqF,KAAKwmB,OAAO6jE,WAC1F,CAED,QAAA7tD,CAASo8C,EAAuB/8D,GAC1B+8D,aAAgB2Q,KAClB3Q,EAAOA,EAAK7vD,mBAEV6vD,EAAKt/D,GACPtZ,KAAKsZ,EAAEkjB,SAASo8C,EAAKt/D,EAAGuC,YAEtB+8D,EAAKr/D,GACPvZ,KAAKuZ,EAAEijB,SAASo8C,EAAKr/D,EAAGsC,YAEtB+8D,EAAKhyB,OACP5mD,KAAK4mD,MAAMpqB,SAASo8C,EAAKhyB,MAAO/qC,YAE9B+8D,EAAKpyD,QACPxmB,KAAKwmB,OAAOgW,SAASo8C,EAAKpyD,OAAQ3K,EAErC,CAEkB,QAAA0gC,GACjBx8C,MAAMw8C,WACN,MAAM+2B,EAAWtzE,KAAKszE,SAASh0E,MAC3Bg0E,aAAoBoG,KAAqB15E,KAAK+2C,SAAW/2C,KAAK20C,QAChE30C,KAAK4pF,WAAWtW,EAAS70E,QAASuB,KAAKw0E,UAE1C,CAES,UAAAoV,CAAWnrF,EAA0Bw+E,GAC7C,MAAM3jE,EAAItZ,KAAKsZ,EAAEpJ,WAAW8tD,QAAQif,EAAMr2B,OACpCrtC,EAAIvZ,KAAKuZ,EAAErJ,WAAW8tD,QAAQif,EAAMz2D,QACpCogC,EAAQ5mD,KAAK4mD,MAAM12C,WAAW8tD,QAAQif,EAAMr2B,OAC5CpgC,EAASxmB,KAAKwmB,OAAOtW,WAAW8tD,QAAQif,EAAMz2D,QAG9C8jE,EAAmB7rF,EAAQw7E,UAC3BnG,EAAmBr1E,EAAQs1E,UAC3BC,EAAqBv1E,EAAQw1E,YAEnCx1E,EAAQy1E,YACRz1E,EAAQm6E,KAAKt/D,EAAGC,EAAGqtC,EAAOpgC,GAE1B,MAAMw0D,EAAOh7E,KAAKg7E,KAAK17E,MACV,OAAT07E,IACFv8E,EAAQw7E,UAAYe,EAAKjmE,WACzBtW,EAAQu8E,QAGV,MAAM1G,EAASt0E,KAAKs0E,OAAOh1E,MAC3B,GAAe,OAAXg1E,EAAiB,CACnB,MAAMqH,EAAc37E,KAAK27E,YAAYr8E,MACrC,GAAoB,OAAhBq8E,EAAsB,CACxB,MAAMv4E,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACzC/nB,EAAQs1E,UAAY4H,EAAY3d,QAAQ56D,EACzC,CACD3E,EAAQw1E,YAAcK,EAAOv/D,WAC7BtW,EAAQ61E,QACT,CAGD71E,EAAQw7E,UAAYqQ,EACpB7rF,EAAQs1E,UAAYD,EACpBr1E,EAAQw1E,YAAcD,CACvB,CAIkB,OAAAyB,CAAQn8D,EAAWC,GACpC,MAAM+5D,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GAAgB,CACtC,MAAM59E,EAAI40E,EAASt6C,UAAUA,UAAU1f,EAAGC,GAC1C,OAAOvZ,KAAKuqF,YAAY7rF,EAAE4a,EAAG5a,EAAE6a,EAAG+5D,EAAS70E,QAASuB,KAAKw0E,UAC1D,CACD,OAAO,IACR,CAES,WAAA+V,CAAYC,EAAYC,EAAYhsF,EAAwBw+E,GACpE,MAAM3jE,EAAItZ,KAAKsZ,EAAEpJ,WAAW8tD,QAAQif,EAAMr2B,OACpCrtC,EAAIvZ,KAAKuZ,EAAErJ,WAAW8tD,QAAQif,EAAMz2D,QACpCogC,EAAQ5mD,KAAK4mD,MAAM12C,WAAW8tD,QAAQif,EAAMr2B,OAC5CpgC,EAASxmB,KAAKwmB,OAAOtW,WAAW8tD,QAAQif,EAAMz2D,QAIpD,GAHA/nB,EAAQy1E,YACRz1E,EAAQm6E,KAAKt/D,EAAGC,EAAGqtC,EAAOpgC,GAEF,OAApBxmB,KAAKg7E,KAAK17E,OAAkBb,EAAQisF,cAAcF,EAAIC,GACxD,OAAOzqF,KAET,IAAI27E,EACJ,GAA0B,OAAtB37E,KAAKs0E,OAAOh1E,OAA6D,QAA1Cq8E,EAAc37E,KAAK27E,YAAYr8E,OAChE,OAAO,KAIT,MAAMw0E,EAAmBr1E,EAAQs1E,UAE3B3wE,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACzC/nB,EAAQs1E,UAAY4H,EAAY3d,QAAQ56D,GACxC,MAAMunF,EAAgBlsF,EAAQmsF,gBAAgBJ,EAAIC,GAKlD,OAFAhsF,EAAQs1E,UAAYD,EAEb6W,EAAgB3qF,KAAO,IAC/B,GAlIA6qF,EAAA,CAAA9uE,EAAAA,SAAS,CAAClK,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGrE+uC,EAAA,CAAA/uE,EAAAA,SAAS,CAAClK,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGrEgvC,EAAA,CAAAhvE,EAAAA,SAAS,CAAClK,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGrEivC,EAAA,CAAAjvE,EAAAA,SAAS,CAAClK,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,kBAGrEvW,GAAc,CAAC3zB,UAAW6b,EAAOpuB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGhFvW,GAAc,CAAC3zB,UAAW6b,EAAOpuB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGhFvW,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,eAjBlF5+C,EAAS,KAAA,KAAA0tF,EAAA,CAAA/sF,KAAA,QAAAO,KAAA,IAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,MAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2G,EAAAta,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2G,EAA2Bha,CAAAA,IAAAwqF,EAAA5pF,GAGpC/C,EAAS,KAAA,KAAA2tF,EAAA,CAAAhtF,KAAA,QAAAO,KAAA,IAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,MAAAA,EAAA5T,IAAA4T,GAAAA,EAAA4G,EAAAva,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA4G,EAA2Bja,CAAAA,IAAAyqF,EAAA7pF,GAGpC/C,EAAS,KAAA,KAAA4tF,EAAA,CAAAjtF,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAi0C,MAAA5nD,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAi0C,MAA+BtnD,CAAAA,IAAA0qF,EAAA9pF,GAGxC/C,EAAS,KAAA,KAAA6tF,EAAA,CAAAltF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAA6T,OAAAxnB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA6T,OAAgClnB,CAAAA,IAAA2qF,EAAA/pF,GAGzC/C,EAAS,KAAA,KAAA8tF,EAAA,CAAAntF,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAAqoE,KAAAh8E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAqoE,KAAyC17E,CAAAA,IAAA4qF,EAAAhqF,GAGlD/C,EAAS,KAAA,KAAA+tF,EAAA,CAAAptF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2hE,OAAAt1E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2hE,OAA2Ch1E,CAAAA,IAAA6qF,EAAAjqF,GAGpD/C,EAAS,KAAA,KAAAguF,EAAA,CAAArtF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAgpE,YAAA38E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAgpE,YAAiDr8E,CAAAA,IAAA8qF,EAAAlqF,IApBvC,EAAA,GAqIrB/B,OAAOgB,eAAe0qF,GAAS5rF,UAAW,aAAc,CACtD,GAAAc,GACE,MAAMk+E,EAAQj9E,KAAKw0E,UACbl7D,EAAItZ,KAAKsZ,EAAEpJ,WAAW8tD,QAAQif,EAAMr2B,OACpCrtC,EAAIvZ,KAAKuZ,EAAErJ,WAAW8tD,QAAQif,EAAMz2D,QACpCogC,EAAQ5mD,KAAK4mD,MAAM12C,WAAW8tD,QAAQif,EAAMr2B,OAC5CpgC,EAASxmB,KAAKwmB,OAAOtW,WAAW8tD,QAAQif,EAAMz2D,QACpD,OAAO,IAAIq6B,EAAAA,MAAMvnC,EAAGC,EAAGD,EAAIstC,EAAOrtC,EAAIiN,EACvC,EACD5M,cAAc,IC9HHwxE,MAAAA,GACX,WAAAtrF,CAAYurF,EAAiBC,EAAqBC,EAAqBC,EAC3DC,EAAmBC,EAAiBC,EAA0BC,GACxE5rF,KAAKqrF,OAASA,EACdrrF,KAAKsrF,YAAcA,EACnBtrF,KAAKurF,YAAcA,EACnBvrF,KAAKwrF,WAAaA,EAClBxrF,KAAKyrF,WAAaA,EAClBzrF,KAAK0rF,SAAWA,EAChB1rF,KAAK2rF,UAAYA,EACjB3rF,KAAK4rF,aAAeA,CACrB,CAID,UAAAC,CAAWR,GAET,OADAA,EAASS,UAAQljF,SAASyiF,GACtBrrF,KAAKqrF,OAAO3uE,OAAO2uE,GACdrrF,KAEFA,KAAK+gC,KAAKsqD,EAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACjDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aACvE,CAID,eAAAG,CAAgBT,GAEd,OADAA,EAAcrlE,SAAOrd,SAAS0iF,GAC1BtrF,KAAKsrF,YAAY5uE,OAAO4uE,GACnBtrF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQC,EAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACjDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aACvE,CAID,eAAAI,CAAgBT,GAEd,OADAA,EAActlE,SAAOrd,SAAS2iF,GAC1BvrF,KAAKurF,YAAY7uE,OAAO6uE,GACnBvrF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAaC,EAAavrF,KAAKwrF,WACjDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aACvE,CAID,cAAAK,CAAeT,GAEb,OADAA,EAAaz8D,QAAMnmB,SAAS4iF,GACxBxrF,KAAKwrF,WAAW9uE,OAAO8uE,GAClBxrF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAaC,EACjDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aACvE,CAID,cAAAM,CAAeT,GAEb,OADAA,EAAa18D,QAAMnmB,SAAS6iF,GACxBzrF,KAAKyrF,WAAW/uE,OAAO+uE,GAClBzrF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACtDC,EAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aAClE,CAID,YAAAO,CAAaT,GAEX,OADAA,EAAW38D,QAAMnmB,SAAS8iF,GACtB1rF,KAAK0rF,SAAShvE,OAAOgvE,GAChB1rF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACtDxrF,KAAKyrF,WAAYC,EAAU1rF,KAAK2rF,UAAW3rF,KAAK4rF,aAClE,CAID,aAAAQ,CAAcT,GAIZ,OAHkB,OAAdA,IACFA,EAAY1lE,SAAOrd,SAAS+iF,IAE1Bl4D,SAAOzzB,KAAK2rF,UAAWA,GAClB3rF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACtDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAUC,EAAW3rF,KAAK4rF,aAClE,CAID,gBAAAS,CAAiBT,GAEf,OADAA,EAAe3lE,SAAOrd,SAASgjF,GAC3B5rF,KAAK4rF,aAAalvE,OAAOkvE,GACpB5rF,KAEFA,KAAK+gC,KAAK/gC,KAAKqrF,OAAQrrF,KAAKsrF,YAAatrF,KAAKurF,YAAavrF,KAAKwrF,WACtDxrF,KAAKyrF,WAAYzrF,KAAK0rF,SAAU1rF,KAAK2rF,UAAWC,EAClE,CAID,MAAAjC,CAAOrW,EAA6B2J,GAClC,YAAI3J,EAAqB,CACvB,MAAM70E,EAAU,IAAIi4E,GAGpB,OAFAj4E,EAAQo4E,aAAa,GACrB72E,KAAKg9E,KAAKv+E,EAASw+E,GACZx+E,EAAQsW,UAChB,CAAUu+D,aAAoBkG,IAC7Bx5E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAED,IAAAD,CAAKv+E,EAAyBw+E,GAC5Bj9E,KAAKssF,UAAU7tF,EAASw+E,EACzB,CAES,SAAAqP,CAAU7tF,EAAyBw+E,GAC3C,IAAI75E,WACA65E,IACF75E,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,SAGrC,MAAM6kE,EAASrrF,KAAKqrF,OACd9S,EAAK8S,EAAO/xE,EACZk/D,EAAK6S,EAAO9xE,EAClB,IAAIgzE,EAAKvsF,KAAKsrF,YAAYttB,QAAQ56D,GAC9BopF,EAAKxsF,KAAKurF,YAAYvtB,QAAQ56D,GAClC,MAAMo1D,EAAKx4D,KAAKwrF,WAAWiB,WACrB9T,EAAK34E,KAAKyrF,WAAWgB,WACrBh0B,EAAKD,EAAKmgB,EACVD,EAAKC,GAAM,EAEjB,GAAI6T,EAAKD,EAAI,CAEX,MAAM79D,EAAI89D,EACVA,EAAKD,EACLA,EAAK79D,CACN,CAED,GAAM89D,EAAKpB,GAAI1T,QAGR,GAAIiB,EAAK,EAAIxiE,KAAKwkD,GAAKywB,GAAI1T,QAEhCj5E,EAAQ01E,OAAOoE,EAAKiU,EAAKr2E,KAAKq7C,IAAIgH,GAAKggB,EAAKgU,EAAKr2E,KAAKs7C,IAAI+G,IAC1D/5D,EAAQ65E,IAAIC,EAAIC,EAAIgU,EAAIh0B,EAAIC,GAAKigB,GAC7B6T,EAAKnB,GAAI1T,UACXj5E,EAAQ01E,OAAOoE,EAAKgU,EAAKp2E,KAAKq7C,IAAIiH,GAAK+f,EAAK+T,EAAKp2E,KAAKs7C,IAAIgH,IAC1Dh6D,EAAQ65E,IAAIC,EAAIC,EAAI+T,EAAI9zB,EAAID,EAAIkgB,QAE7B,CAEL,IAAIgU,EAAMl0B,EACNm0B,EAAMl0B,EACNm0B,EAAMp0B,EACNq0B,EAAMp0B,EACNq0B,EAAMnU,EACNoU,EAAMpU,EACV,MAAMqU,EAAMhtF,KAAK0rF,SAASe,WAAc,EAClCQ,IAAOD,EAAK5B,GAAI1T,WAAgC,OAAnB13E,KAAK2rF,UAAqB3rF,KAAK2rF,UAAU3tB,QAAQ56D,GAAQ+S,KAAKq5C,KAAK+8B,EAAKA,EAAKC,EAAKA,IAC/GU,EAAK/2E,KAAKC,IAAID,KAAKo7C,IAAIi7B,EAAKD,GAAM,EAAGvsF,KAAK4rF,aAAa5tB,QAAQ56D,IACrE,IAyBI+pF,EACAC,EA1BAC,EAAMH,EACNI,EAAMJ,EAEV,GAAID,EAAK7B,GAAI1T,QAAS,CAEpB,IAAIv5C,EAAKhoB,KAAKo3E,KAAKN,EAAKV,EAAKp2E,KAAKs7C,IAAIu7B,IAClC5uD,EAAKjoB,KAAKo3E,KAAKN,EAAKT,EAAKr2E,KAAKs7C,IAAIu7B,KACjCF,GAAY,EAAL3uD,GAAUitD,GAAI1T,SACxBv5C,GAAMu6C,EAAK,GAAK,EAChBkU,GAAOzuD,EACP0uD,GAAO1uD,IAEP2uD,EAAM,EACNF,EAAMC,GAAOr0B,EAAKC,GAAM,IAErBs0B,GAAY,EAAL3uD,GAAUgtD,GAAI1T,SACxBt5C,GAAMs6C,EAAK,GAAK,EAChBgU,GAAOtuD,EACPuuD,GAAOvuD,IAEP2uD,EAAM,EACNL,EAAMC,GAAOn0B,EAAKC,GAAM,EAE3B,CAID,MAAM8e,EAAMiV,EAAKr2E,KAAKq7C,IAAIk7B,GACpBlV,EAAMgV,EAAKr2E,KAAKs7C,IAAIi7B,GACpBc,EAAMjB,EAAKp2E,KAAKq7C,IAAIq7B,GACpBY,EAAMlB,EAAKp2E,KAAKs7C,IAAIo7B,GAC1B,IAAIa,EACAC,EAEJ,GAAIT,EAAK9B,GAAI1T,UAEXgW,EAAMlB,EAAKr2E,KAAKq7C,IAAIm7B,GACpBgB,EAAMnB,EAAKr2E,KAAKs7C,IAAIk7B,GACpBQ,EAAMZ,EAAKp2E,KAAKq7C,IAAIo7B,GACpBQ,EAAMb,EAAKp2E,KAAKs7C,IAAIm7B,GAEhBjU,EAAKxiE,KAAKwkD,IAAI,CAEhB,MAAMizB,EAAKd,EAAM1B,GAAI1T,QAAU0T,GAAIyC,UAAUtW,EAAKC,EAAK2V,EAAKC,EAAKM,EAAKC,EAAKH,EAAKC,GAAO,CAACD,EAAKC,GACvF5+B,EAAK0oB,EAAMqW,EAAG,GACd9+B,EAAK0oB,EAAMoW,EAAG,GACdE,EAAKJ,EAAME,EAAG,GACdG,EAAKJ,EAAMC,EAAG,GACdI,EAAK,EAAI73E,KAAKs7C,IAAI,GAAMt7C,KAAK+hE,MAAMrpB,EAAKi/B,EAAKh/B,EAAKi/B,IACf53E,KAAKq5C,KAAKX,EAAKA,EAAKC,EAAKA,GACzB34C,KAAKq5C,KAAKs+B,EAAKA,EAAKC,EAAKA,MAC5DE,EAAK93E,KAAKq5C,KAAKo+B,EAAG,GAAMA,EAAG,GAAMA,EAAG,GAAMA,EAAG,IACnDP,EAAMl3E,KAAKC,IAAI82E,GAAKX,EAAK0B,IAAOD,EAAK,IACrCV,EAAMn3E,KAAKC,IAAI82E,GAAKV,EAAKyB,IAAOD,EAAK,GACtC,CAGH,GAAMjB,EAAM3B,GAAI1T,QAGT,GAAI4V,EAAMlC,GAAI1T,QAAS,CAE5B,MAAMj2D,EAAK2pE,GAAI8C,eAAef,EAAMC,EAAM7V,EAAKC,EAAKgV,EAAIc,EAAK5U,GACvD92D,EAAKwpE,GAAI8C,eAAeR,EAAMC,EAAMH,EAAKC,EAAKjB,EAAIc,EAAK5U,GAE7Dj6E,EAAQ01E,OAAOoE,EAAK92D,EAAG82D,GAAK92D,EAAG81D,IAAKiB,EAAK/2D,EAAG+2D,GAAK/2D,EAAG+1D,KAEhD8V,EAAMJ,EAERzuF,EAAQ65E,IAAIC,EAAK92D,EAAG82D,GAAIC,EAAK/2D,EAAG+2D,GAAI8U,EAAKn3E,KAAKm7C,MAAM7vC,EAAG+1D,IAAK/1D,EAAG81D,KAAMphE,KAAKm7C,MAAM1vC,EAAG41D,IAAK51D,EAAG21D,MAAOmB,IAGlGj6E,EAAQ65E,IAAIC,EAAK92D,EAAG82D,GAAIC,EAAK/2D,EAAG+2D,GAAI8U,EAAKn3E,KAAKm7C,MAAM7vC,EAAG+1D,IAAK/1D,EAAG81D,KAAMphE,KAAKm7C,MAAM7vC,EAAGksE,IAAKlsE,EAAGisE,MAAOhV,GAClGj6E,EAAQ65E,IAAIC,EAAIC,EAAIgU,EAAIr2E,KAAKm7C,MAAM7vC,EAAG+2D,GAAK/2D,EAAGksE,IAAKlsE,EAAG82D,GAAK92D,EAAGisE,KAClDv3E,KAAKm7C,MAAM1vC,EAAG42D,GAAK52D,EAAG+rE,IAAK/rE,EAAG22D,GAAK32D,EAAG8rE,MAAOhV,GACzDj6E,EAAQ65E,IAAIC,EAAK32D,EAAG22D,GAAIC,EAAK52D,EAAG42D,GAAI8U,EAAKn3E,KAAKm7C,MAAM1vC,EAAG+rE,IAAK/rE,EAAG8rE,KAAMv3E,KAAKm7C,MAAM1vC,EAAG41D,IAAK51D,EAAG21D,MAAOmB,GAErG,MAECj6E,EAAQ01E,OAAOoE,EAAKhB,EAAKiB,EAAKhB,GAC9B/4E,EAAQ65E,IAAIC,EAAIC,EAAIgU,EAAIE,EAAKC,GAAMjU,QArBnCj6E,EAAQ01E,OAAOoE,EAAKhB,EAAKiB,EAAKhB,GAwBhC,GAAM+U,EAAKnB,GAAI1T,SAAcoV,EAAM1B,GAAI1T,QAGhC,GAAI2V,EAAMjC,GAAI1T,QAAS,CAE5B,MAAMj2D,EAAK2pE,GAAI8C,eAAeV,EAAKC,EAAKC,EAAMC,EAAMpB,GAAKc,EAAK3U,GACxD92D,EAAKwpE,GAAI8C,eAAe3W,EAAKC,EAAK2V,EAAMC,EAAMb,GAAKc,EAAK3U,GAE9Dj6E,EAAQ21E,OAAOmE,EAAK92D,EAAG82D,GAAK92D,EAAG81D,IAAKiB,EAAK/2D,EAAG+2D,GAAK/2D,EAAG+1D,KAEhD6V,EAAMH,EAERzuF,EAAQ65E,IAAIC,EAAK92D,EAAG82D,GAAIC,EAAK/2D,EAAG+2D,GAAI6U,EAAKl3E,KAAKm7C,MAAM7vC,EAAG+1D,IAAK/1D,EAAG81D,KAAMphE,KAAKm7C,MAAM1vC,EAAG41D,IAAK51D,EAAG21D,MAAOmB,IAGlGj6E,EAAQ65E,IAAIC,EAAK92D,EAAG82D,GAAIC,EAAK/2D,EAAG+2D,GAAI6U,EAAKl3E,KAAKm7C,MAAM7vC,EAAG+1D,IAAK/1D,EAAG81D,KAAMphE,KAAKm7C,MAAM7vC,EAAGksE,IAAKlsE,EAAGisE,MAAOhV,GAClGj6E,EAAQ65E,IAAIC,EAAIC,EAAI+T,EAAIp2E,KAAKm7C,MAAM7vC,EAAG+2D,GAAK/2D,EAAGksE,IAAKlsE,EAAG82D,GAAK92D,EAAGisE,KAClDv3E,KAAKm7C,MAAM1vC,EAAG42D,GAAK52D,EAAG+rE,IAAK/rE,EAAG22D,GAAK32D,EAAG8rE,KAAMhV,GACxDj6E,EAAQ65E,IAAIC,EAAK32D,EAAG22D,GAAIC,EAAK52D,EAAG42D,GAAI6U,EAAKl3E,KAAKm7C,MAAM1vC,EAAG+rE,IAAK/rE,EAAG8rE,KAAMv3E,KAAKm7C,MAAM1vC,EAAG41D,IAAK51D,EAAG21D,MAAOmB,GAErG,MAECj6E,EAAQ65E,IAAIC,EAAIC,EAAI+T,EAAIM,EAAKD,EAAKlU,QApBlCj6E,EAAQ21E,OAAOmE,EAAKiV,EAAKhV,EAAKiV,EAsBjC,MA/HChvF,EAAQ01E,OAAOoE,EAAIC,GAiIrB/5E,EAAQ41E,WACT,CAES,IAAAtzC,CAAKsqD,EAAiBC,EAAqBC,EAAqBC,EAC3DC,EAAmBC,EAAiBC,EAA0BC,GAC3E,OAAO,IAAIR,GAAIC,EAAQC,EAAaC,EAAaC,EAAYC,EAAYC,EAAUC,EAAWC,EAC/F,CAED,MAAA7iE,GACE,MAAO,CACLsiE,OAAQrrF,KAAKqrF,OACbC,YAAatrF,KAAKsrF,YAClBC,YAAavrF,KAAKurF,YAClBC,WAAYxrF,KAAKwrF,WACjBC,WAAYzrF,KAAKyrF,WACjBC,SAAU1rF,KAAK0rF,SACfC,UAAW3rF,KAAK2rF,UAChBC,aAAc5rF,KAAK4rF,aAEtB,CAED,MAAAlvE,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgByuE,KAClBprF,KAAKqrF,OAAO3uE,OAAOC,EAAK0uE,SACxBrrF,KAAKsrF,YAAY5uE,OAAOC,EAAK2uE,cAC7BtrF,KAAKurF,YAAY7uE,OAAOC,EAAK4uE,cAC7BvrF,KAAKwrF,WAAW9uE,OAAOC,EAAK6uE,aAC5BxrF,KAAKyrF,WAAW/uE,OAAOC,EAAK8uE,aAC5BzrF,KAAK0rF,SAAShvE,OAAOC,EAAK+uE,WAC1Bj4D,EAAAA,OAAOzzB,KAAK2rF,UAAWhvE,EAAKgvE,YAC5B3rF,KAAK4rF,aAAalvE,OAAOC,EAAKivE,cAGxC,CAED,KAAAtiE,CAASjC,GA0BP,OAzBAA,EAASA,EAAOE,MAAM,OAAOA,MAAM,IAAWA,MAAM,UAAUA,MAAM,IAAWA,MAAM,IACjFvnB,KAAKqrF,OAAOx6E,cACdwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,UAAUA,MAAM,IAAW+B,MAAMtpB,KAAKqrF,QAAQ9jE,MAAM,KAEzFvnB,KAAKsrF,YAAYz6E,cACnBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,eAAeA,MAAM,IAAW+B,MAAMtpB,KAAKsrF,aAAa/jE,MAAM,KAEnGvnB,KAAKurF,YAAY16E,cACnBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,eAAeA,MAAM,IAAW+B,MAAMtpB,KAAKurF,aAAahkE,MAAM,KAEnGvnB,KAAKwrF,WAAW36E,cAClBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,cAAcA,MAAM,IAAW+B,MAAMtpB,KAAKwrF,YAAYjkE,MAAM,KAEjGvnB,KAAKyrF,WAAW56E,cAClBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,cAAcA,MAAM,IAAW+B,MAAMtpB,KAAKyrF,YAAYlkE,MAAM,KAEjGvnB,KAAK0rF,SAAS76E,cAChBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,YAAYA,MAAM,IAAW+B,MAAMtpB,KAAK0rF,UAAUnkE,MAAM,KAE1E,OAAnBvnB,KAAK2rF,YACPtkE,EAASA,EAAOE,MAAM,IAAWA,MAAM,aAAaA,MAAM,IAAW+B,MAAMtpB,KAAK2rF,WAAWpkE,MAAM,KAE/FvnB,KAAK4rF,aAAa/6E,cACpBwW,EAASA,EAAOE,MAAM,IAAWA,MAAM,gBAAgBA,MAAM,IAAW+B,MAAMtpB,KAAK4rF,cAAcrkE,MAAM,KAElGF,CACR,CAED,QAAAtS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAOwP,CAAO67E,EAAsBS,UAAQqC,SAC9B7C,EAA0BrlE,SAAO8Q,OACjCw0D,EAA0BtlE,EAAAA,OAAO8Q,OACjCy0D,EAAwBz8D,EAAAA,MAAMgI,OAC9B00D,EAAwB18D,EAAAA,MAAMgI,OAC9B20D,EAAsB38D,QAAMgI,OAC5B40D,EAA+B,KAC/BC,EAA2B3lE,EAAO8Q,OAAAA,QAS9C,OARAs0D,EAASS,UAAQljF,SAASyiF,GAC1BC,EAAcrlE,SAAOrd,SAAS0iF,GAC9BC,EAActlE,SAAOrd,SAAS2iF,GAC9BC,EAAaz8D,QAAMnmB,SAAS4iF,GAC5BC,EAAa18D,QAAMnmB,SAAS6iF,GAC5BC,EAAW38D,QAAMnmB,SAAS8iF,GAC1BC,EAA0B,OAAdA,EAAqB1lE,EAAAA,OAAOrd,SAAS+iF,GAAa,KAC9DC,EAAe3lE,SAAOrd,SAASgjF,GACxB,IAAIR,GAAIC,EAAQC,EAAaC,EAAaC,EAClCC,EAAYC,EAAUC,EAAWC,EACjD,CAED,eAAAhjF,CAAsDtJ,GACpD,GAAIA,SAAsCA,aAAiB8rF,GACzD,OAAO9rF,EACF,GAAqB,iBAAVA,EAChB,OAAO8rF,GAAI57E,OAAOlQ,EAAM+rF,OAAQ/rF,EAAMgsF,YAAahsF,EAAMisF,YAAajsF,EAAMksF,WAC1DlsF,EAAMmsF,WAAYnsF,EAAMosF,SAAUpsF,EAAMqsF,UAAWrsF,EAAMssF,cAE7E,MAAM,IAAIhuF,UAAU,GAAK0B,EAC1B,CAEO,gBAAAuuF,CAAiB3mC,EAAYnzB,EAAY+hC,EAAY9hC,EAAYkjD,EAAYC,EAC5DiX,EAAYC,GACnC,MAAMb,EAAM13B,EAAK5O,EACXumC,EAAMz5D,EAAKD,EACXu6D,EAAMF,EAAKlX,EACXqX,EAAMF,EAAKlX,EACXxqE,GAAK2hF,GAAOv6D,EAAKojD,GAAMoX,GAAOrnC,EAAKgwB,KAAQqX,EAAMf,EAAMc,EAAMb,GACnE,MAAO,CAACvmC,EAAKv6C,EAAI6gF,EAAKz5D,EAAKpnB,EAAI8gF,EAChC,CAEO,qBAAAS,CAAsBhnC,EAAYnzB,EAAY+hC,EAAY9hC,EAAYw4D,EAAYU,EAAYxU,GAGpG,MAAMnB,EAAMrwB,EAAK4O,EACX0hB,EAAMzjD,EAAKC,EACXw6D,GAAM9V,EAAKwU,GAAMA,GAAM/2E,KAAKq5C,KAAK+nB,EAAMA,EAAMC,EAAMA,GACnDiX,EAAKD,EAAKhX,EACVkX,GAAMF,EAAKjX,EACXmW,EAAMxmC,EAAKunC,EACXd,EAAM55D,EAAK26D,EACXlB,EAAM13B,EAAK24B,EACXhB,EAAMz5D,EAAK06D,EACXvB,GAAOO,EAAMF,GAAO,EACpBJ,GAAOO,EAAMF,GAAO,EACpBtmC,EAAKqmC,EAAME,EACXtmC,EAAKqmC,EAAME,EACXgB,EAAKxnC,EAAKA,EAAKC,EAAKA,EACpB14B,EAAI89D,EAAKU,EACT0B,EAAIlB,EAAMD,EAAMD,EAAMG,EACtB/W,GAAKxvB,EAAK,GAAK,EAAI,GAAKjxC,KAAKq5C,KAAKr5C,KAAK2L,IAAI,EAAG4M,EAAIA,EAAIigE,EAAKC,EAAIA,IACrE,IAAIC,GAAOD,EAAIxnC,EAAKD,EAAKyvB,GAAK+X,EAC1BG,IAAQF,EAAIznC,EAAKC,EAAKwvB,GAAK+X,EAC/B,MAAMI,GAAOH,EAAIxnC,EAAKD,EAAKyvB,GAAK+X,EAC1BK,IAAQJ,EAAIznC,EAAKC,EAAKwvB,GAAK+X,EAC3Bv0B,EAAMy0B,EAAM1B,EACZ9yB,EAAMy0B,EAAM1B,EACZ7yB,EAAMw0B,EAAM5B,EACZ3yB,EAAMw0B,EAAM5B,EAMlB,OALIhzB,EAAMA,EAAMC,EAAMA,EAAME,EAAMA,EAAMC,EAAMA,IAE5Cq0B,EAAME,EACND,EAAME,GAED,CACLzW,GAAIsW,EACJrW,GAAIsW,EACJvX,KAAMkX,EACNjX,KAAMkX,EACNhB,IAAKmB,GAAOrC,EAAK99D,EAAI,GACrBi/D,IAAKmB,GAAOtC,EAAK99D,EAAI,GAExB,EAGM08D,GAAO1T,QAAW,MCzbduX,IAAAA,GAAO,gHAAP,OAAArvF,EAAA,cAAgByzE,qCAElBrzE,KAAAkvF,QAAgC9vF,EAAAY,KAAAE,GAAAd,EAAAY,KAAAmvF,OAAA,IAGhCnvF,KAAAovF,OAAgChwF,EAAAY,KAAAqvF,OAAA,GAGhCrvF,KAAAqrF,OAAiCjsF,EAAAY,KAAAsvF,OAAA,GAGjCtvF,KAAAsrF,YAA0ClsF,EAAAY,KAAAuvF,OAAA,GAG1CvvF,KAAAurF,YAA0CnsF,EAAAY,KAAAwvF,OAAA,GAG1CxvF,KAAAwrF,WAAwCpsF,EAAAY,KAAAyvF,OAAA,GAGxCzvF,KAAAyrF,WAAwCrsF,EAAAY,KAAA0vF,OAAA,GAGxC1vF,KAAA0rF,SAAsCtsF,EAAAY,KAAA2vF,OAAA,GAGtC3vF,KAAA2rF,UAA+CvsF,EAAAY,KAAA4vF,OAAA,GAG/C5vF,KAAA4rF,aAA2CxsF,EAAAY,KAAA6vF,OAAA,GAG3C7vF,KAAAg7E,KAAyC57E,EAAAY,KAAAkqF,OAAA,GAGzClqF,KAAAs0E,OAA2Cl1E,EAAAY,KAAAmqF,OAAA,GAG3CnqF,KAAA27E,YAAiDv8E,EAAAY,KAAAoqF,OAAA,EAiJ3D,CA/IC,SAAI9qF,GACF,OAAO,IAAI8rF,GAAIprF,KAAKqrF,OAAO/rF,MAAOU,KAAKsrF,YAAYhsF,MAAOU,KAAKurF,YAAYjsF,MAC5DU,KAAKwrF,WAAWlsF,MAAOU,KAAKyrF,WAAWnsF,MAAOU,KAAK0rF,SAASpsF,MAC5DU,KAAK2rF,UAAUrsF,MAAOU,KAAK4rF,aAAatsF,MACxD,CAED,SAAI4nC,GACF,OAAO,IAAIkkD,GAAIprF,KAAKqrF,OAAOnkD,MAAOlnC,KAAKsrF,YAAYpkD,MAAOlnC,KAAKurF,YAAYrkD,MAC5DlnC,KAAKwrF,WAAWtkD,MAAOlnC,KAAKyrF,WAAWvkD,MAAOlnC,KAAK0rF,SAASxkD,MAC5DlnC,KAAK2rF,UAAUzkD,MAAOlnC,KAAK4rF,aAAa1kD,MACxD,CAED,QAAA1K,CAAS87C,EAAoBz8D,GACvBy8D,aAAe8S,KACjB9S,EAAMA,EAAIvvD,mBAERuvD,EAAI+S,QACNrrF,KAAKqrF,OAAO7uD,SAAS87C,EAAI+S,OAAQxvE,YAE/By8D,EAAIgT,aACNtrF,KAAKsrF,YAAY9uD,SAAS87C,EAAIgT,YAAazvE,YAEzCy8D,EAAIiT,aACNvrF,KAAKurF,YAAY/uD,SAAS87C,EAAIiT,YAAa1vE,YAEzCy8D,EAAIkT,YACNxrF,KAAKwrF,WAAWhvD,SAAS87C,EAAIkT,WAAY3vE,YAEvCy8D,EAAImT,YACNzrF,KAAKyrF,WAAWjvD,SAAS87C,EAAImT,WAAY5vE,YAEvCy8D,EAAIoT,UACN1rF,KAAK0rF,SAASlvD,SAAS87C,EAAIoT,SAAU7vE,YAEnCy8D,EAAIqT,WACN3rF,KAAK2rF,UAAUnvD,SAAS87C,EAAIqT,UAAW9vE,YAErCy8D,EAAIsT,cACN5rF,KAAK4rF,aAAapvD,SAAS87C,EAAIsT,aAAc/vE,EAEhD,CAES,SAAAi0E,GACR,GAAI9vF,KAAKqrF,OAAOttC,YAAY9nC,EAAAA,SAASI,WAAY,CAC/C,MAAMm+D,EAAYx0E,KAAKw0E,UACjB+D,EAAK/D,EAAU3gB,KAAO2gB,EAAU5tB,MAAQ5mD,KAAKkvF,OAAOh/E,WACpDsoE,EAAKhE,EAAUrgB,KAAOqgB,EAAUhuD,OAASxmB,KAAKovF,OAAOl/E,WAC3DlQ,KAAKqrF,OAAO91E,aAAa,IAAIu2E,EAAAA,QAAQvT,EAAIC,GAC1C,CACF,CAEkB,QAAAj8B,GACjBx8C,MAAMw8C,WACN,MAAM+2B,EAAWtzE,KAAKszE,SAASh0E,MAC3Bg0E,aAAoBoG,KAAqB15E,KAAK+2C,SAAW/2C,KAAK20C,SAChE30C,KAAK8vF,YACL9vF,KAAKssF,UAAUhZ,EAAS70E,QAASuB,KAAKw0E,WAEzC,CAES,SAAA8X,CAAU7tF,EAA0Bw+E,GAE5C,MAAMqN,EAAmB7rF,EAAQw7E,UAC3BnG,EAAmBr1E,EAAQs1E,UAC3BC,EAAqBv1E,EAAQw1E,YAE7BqE,EAAMt4E,KAAKV,MACjBb,EAAQy1E,YACRoE,EAAI0E,KAAKv+E,EAASw+E,GAElB,MAAMjC,EAAOh7E,KAAKg7E,KAAK17E,MACV,OAAT07E,IACFv8E,EAAQw7E,UAAYe,EAAKjmE,WACzBtW,EAAQu8E,QAGV,MAAM1G,EAASt0E,KAAKs0E,OAAOh1E,MAC3B,GAAe,OAAXg1E,EAAiB,CACnB,MAAMqH,EAAc37E,KAAK27E,YAAYr8E,MACrC,GAAoB,OAAhBq8E,EAAsB,CACxB,MAAMv4E,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACzC/nB,EAAQs1E,UAAY4H,EAAY3d,QAAQ56D,EACzC,CACD3E,EAAQw1E,YAAcK,EAAOv/D,WAC7BtW,EAAQ61E,QACT,CAGD71E,EAAQw7E,UAAYqQ,EACpB7rF,EAAQs1E,UAAYD,EACpBr1E,EAAQw1E,YAAcD,CACvB,CAED,gBAAazzB,GACX,MAAM08B,EAAQj9E,KAAKw0E,UACbpxE,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACnCovD,EAAuB51E,KAAKmgD,cAAcoU,UAC1C82B,EAASrrF,KAAKqrF,OAAOn7E,WACrBgqB,EAAK07C,EAAqBma,WAAW1E,EAAO/xE,EAAG+xE,EAAO9xE,GACtDy2E,EAAKpa,EAAqBqa,WAAW5E,EAAO/xE,EAAG+xE,EAAO9xE,GACtDmV,GAAK1uB,KAAKsrF,YAAYp7E,WAAW8tD,QAAQ56D,GAAQpD,KAAKurF,YAAYr7E,WAAW8tD,QAAQ56D,IAAS,EAC9FgW,EAAIpZ,KAAKwrF,WAAWt7E,WAAWu8E,WAAazsF,KAAKyrF,WAAWv7E,WAAWu8E,WAAa,EACpFnzE,EAAI4gB,EAAKxL,EAAIvY,KAAKq7C,IAAIp4C,GACtBG,EAAIy2E,EAAKthE,EAAIvY,KAAKs7C,IAAIr4C,GAC5B,OAAO,IAAIynC,EAAAA,MAAMvnC,EAAGC,EAAGD,EAAGC,EAC3B,CAIkB,OAAAk8D,CAAQn8D,EAAWC,GACpC,MAAM+5D,EAAWtzE,KAAKszE,SAASh0E,MAC/B,GAAIg0E,aAAoBgJ,GAAgB,CACtC,MAAM59E,EAAI40E,EAASt6C,UAAUA,UAAU1f,EAAGC,GAE1C,OADAvZ,KAAK8vF,YACE9vF,KAAKkwF,WAAWxxF,EAAE4a,EAAG5a,EAAE6a,EAAG+5D,EAAS70E,QAASuB,KAAKw0E,UACzD,CACD,OAAO,IACR,CAES,UAAA0b,CAAW52E,EAAWC,EAAW9a,EAAwBw+E,GACjE,MAAM3E,EAAMt4E,KAAKV,MAIjB,IAAIq8E,EACJ,GAJAl9E,EAAQy1E,YACRoE,EAAI0E,KAAKv+E,EAASw+E,GAGM,OAApBj9E,KAAKg7E,KAAK17E,OAAkBb,EAAQisF,cAAcpxE,EAAGC,GACvD,OAAOvZ,KACF,GAA0B,OAAtBA,KAAKs0E,OAAOh1E,OAA6D,QAA1Cq8E,EAAc37E,KAAK27E,YAAYr8E,OACvE,OAAO,KAIT,MAAMw0E,EAAmBr1E,EAAQs1E,UAE3B3wE,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACzC/nB,EAAQs1E,UAAY4H,EAAY3d,QAAQ56D,GACxC,MAAMunF,EAAgBlsF,EAAQmsF,gBAAgBtxE,EAAGC,GAKjD,OAFA9a,EAAQs1E,UAAYD,EAEb6W,EAAgB3qF,KAAO,IAC/B,GArLAmwF,EAAA,CAAAp0E,EAAAA,SAAS,CAAClK,UAAWovD,OAAQ3hE,MAAO,GAAKoC,YAAamwC,GAAKkK,eAG3Dq0C,EAAA,CAAAr0E,EAAAA,SAAS,CAAClK,UAAWovD,OAAQ3hE,MAAO,GAAKoC,YAAamwC,GAAKkK,eAG3Ds0C,EAAA,CAAAt0E,EAAAA,SAAS,CAAClK,UAAWi6E,EAAAA,QAASxsF,MAAOwsF,EAAQqC,QAAAA,SAAUzsF,YAAamwC,GAAKkK,eAGzEu0C,EAAA,CAAA9qD,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,eAG1Ew0C,EAAA,CAAA/qD,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,eAG1Ey0C,EAAA,CAAAhrD,GAAc,CAAC3zB,UAAWkd,EAAAA,MAAOzvB,MAAOyvB,EAAMgI,MAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGxE00C,EAAA,CAAAjrD,GAAc,CAAC3zB,UAAWkd,EAAAA,MAAOzvB,MAAOyvB,EAAMgI,MAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGxE20C,EAAA,CAAAlrD,GAAc,CAAC3zB,UAAWkd,EAAAA,MAAOzvB,MAAOyvB,EAAMgI,MAAAA,OAAQr1B,YAAamwC,GAAKkK,eAGxE40C,EAAA,CAAAnrD,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO,KAAMoC,YAAamwC,GAAKkK,eAGjE60C,EAAA,CAAAprD,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO2mB,EAAO8Q,OAAAA,OAAQr1B,YAAamwC,GAAKkK,kBAG1EvW,GAAc,CAAC3zB,UAAW6b,EAAOpuB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGhFvW,GAAc,CAAC3zB,UAAW6b,EAAOpuB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGhFvW,GAAc,CAAC3zB,UAAWoU,EAAAA,OAAQ3mB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,eAnClF5+C,EAAS,KAAA,KAAAgzF,EAAA,CAAAryF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAAu8E,OAAAlwF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAu8E,OAAgC5vF,CAAAA,IAAA6vF,EAAAjvF,GAGzC/C,EAAS,KAAA,KAAAizF,EAAA,CAAAtyF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAAy8E,OAAApwF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAy8E,OAAgC9vF,CAAAA,IAAA+vF,EAAAnvF,GAGzC/C,EAAS,KAAA,KAAAkzF,EAAA,CAAAvyF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAA04E,OAAArsF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA04E,OAAiC/rF,CAAAA,IAAAgwF,EAAApvF,GAG1C/C,EAAS,KAAA,KAAAmzF,EAAA,CAAAxyF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA24E,YAAAtsF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA24E,YAA0ChsF,CAAAA,IAAAiwF,EAAArvF,GAGnD/C,EAAS,KAAA,KAAAozF,EAAA,CAAAzyF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA44E,YAAAvsF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA44E,YAA0CjsF,CAAAA,IAAAkwF,EAAAtvF,GAGnD/C,EAAS,KAAA,KAAAqzF,EAAA,CAAA1yF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAA64E,WAAAxsF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA64E,WAAwClsF,CAAAA,IAAAmwF,EAAAvvF,GAGjD/C,EAAS,KAAA,KAAAszF,EAAA,CAAA3yF,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAA84E,WAAAzsF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA84E,WAAwCnsF,CAAAA,IAAAowF,EAAAxvF,GAGjD/C,EAAS,KAAA,KAAAuzF,EAAA,CAAA5yF,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+4E,SAAA1sF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+4E,SAAsCpsF,CAAAA,IAAAqwF,EAAAzvF,GAG/C/C,EAAS,KAAA,KAAAwzF,EAAA,CAAA7yF,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAg5E,UAAA3sF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAg5E,UAA+CrsF,CAAAA,IAAAswF,EAAA1vF,GAGxD/C,EAAS,KAAA,KAAAyzF,EAAA,CAAA9yF,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAi5E,aAAA5sF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAi5E,aAA2CtsF,CAAAA,IAAAuwF,EAAA3vF,GAGpD/C,EAAS,KAAA,KAAA8tF,EAAA,CAAAntF,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAAqoE,KAAAh8E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAqoE,KAAyC17E,CAAAA,IAAA4qF,EAAAhqF,GAGlD/C,EAAS,KAAA,KAAA+tF,EAAA,CAAAptF,KAAA,QAAAO,KAAA,SAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,WAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2hE,OAAAt1E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2hE,OAA2Ch1E,CAAAA,IAAA6qF,EAAAjqF,GAGpD/C,EAAS,KAAA,KAAAguF,EAAA,CAAArtF,KAAA,QAAAO,KAAA,cAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,gBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAgpE,YAAA38E,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAgpE,YAAiDr8E,CAAAA,IAAA8qF,EAAAlqF,IAtCxC,EAAA,GAwLpB/B,OAAOgB,eAAe8vF,GAAQhxF,UAAW,aAAc,CACrD,GAAAc,GACE,MAAMk+E,EAAQj9E,KAAKw0E,UACbpxE,EAAO+S,KAAKC,IAAI6mE,EAAMr2B,MAAOq2B,EAAMz2D,QACnC6kE,EAASrrF,KAAKqrF,OAAOn7E,WACrB2gF,EAAS7wF,KAAKurF,YAAYr7E,WAAW8tD,QAAQ56D,GACnD,OAAO,IAAIy9C,EAAAA,MAAMwqC,EAAO/xE,EAAIu3E,EAAQxF,EAAO9xE,EAAIs3E,EAC9BxF,EAAO/xE,EAAIu3E,EAAQxF,EAAO9xE,EAAIs3E,EAChD,EACDj3E,cAAc,IClMH,MAAAk3E,GAAc,CACzB,CAAC7zE,OAAOC,aAAa2K,GACZA,aAAoBwrD,IAClB,SAAUxrD,GACV,cAAeA,GACf,iBAAkBA,GAClB,eAAgBA,GAChB,cAAeA,GCIfkpE,MAAAA,GACX,WAAAjxF,CAAY0sE,EAAcvgD,EAAmB+kE,EACjCC,EAAyCC,EACzCjlD,GACVjsC,KAAKwsE,KAAOA,EACZxsE,KAAKisB,KAAOA,EACZjsB,KAAKgxF,UAAYA,EACjBhxF,KAAKixF,aAAeA,EACpBjxF,KAAKkxF,WAAaA,EAClBlxF,KAAKisC,UAAYA,CAClB,CAID,QAAAklD,CAAS3kB,GACP,OAAIxsE,KAAKwsE,OAASA,EACTxsE,KAEFA,KAAK+gC,KAAKyrC,EAAMxsE,KAAKisB,KAAMjsB,KAAKgxF,UACtBhxF,KAAKixF,aAAcjxF,KAAKkxF,WAAYlxF,KAAKisC,UAC3D,CAID,QAAAmlD,CAASnlE,GAEP,OADAA,EAAOnE,EAAKlf,SAASqjB,GACjBjsB,KAAKisB,OAASA,EACTjsB,KAEFA,KAAK+gC,KAAK/gC,KAAKwsE,KAAMvgD,EAAMjsB,KAAKgxF,UACtBhxF,KAAKixF,aAAcjxF,KAAKkxF,WAAYlxF,KAAKisC,UAC3D,CAID,aAAAolD,CAAcL,GACZ,OAAIhxF,KAAKgxF,YAAcA,EACdhxF,KAEFA,KAAK+gC,KAAK/gC,KAAKwsE,KAAMxsE,KAAKisB,KAAM+kE,EACtBhxF,KAAKixF,aAAcjxF,KAAKkxF,WAAYlxF,KAAKisC,UAC3D,CAID,gBAAAqlD,CAAiBL,GACf,OAAIjxF,KAAKixF,eAAiBA,EACjBjxF,KAEFA,KAAK+gC,KAAK/gC,KAAKwsE,KAAMxsE,KAAKisB,KAAMjsB,KAAKgxF,UAC3BC,EAAcjxF,KAAKkxF,WAAYlxF,KAAKisC,UACtD,CAID,cAAAslD,CAAeL,GAEb,OADAA,EAAapF,UAAQljF,SAASsoF,GAC1Bz9D,SAAOzzB,KAAKkxF,WAAYA,GACnBlxF,KAEFA,KAAK+gC,KAAK/gC,KAAKwsE,KAAMxsE,KAAKisB,KAAMjsB,KAAKgxF,UAC3BhxF,KAAKixF,aAAcC,EAAYlxF,KAAKisC,UACtD,CAID,aAAAulD,CAAcvlD,GAEZ,OADAA,EAAYve,EAAM9kB,SAASqjC,GACvBxY,SAAOzzB,KAAKisC,UAAWA,GAClBjsC,KAEFA,KAAK+gC,KAAK/gC,KAAKwsE,KAAMxsE,KAAKisB,KAAMjsB,KAAKgxF,UAC3BhxF,KAAKixF,aAAcjxF,KAAKkxF,WAAYjlD,EACtD,CAED,MAAA09C,CAAOrW,EAA4B2J,GAC7B3J,aAAoBgJ,IACtBt8E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAED,IAAAD,CAAKv+E,EAAwBw+E,GAC3Bj9E,KAAKyxF,WAAWhzF,EAASw+E,EAC1B,CAES,UAAAwU,CAAWhzF,EAAwBw+E,GAE3C,MAAMyU,EAAcjzF,EAAQwtB,KACtB0lE,EAAmBlzF,EAAQuyF,UAC3BY,EAAsBnzF,EAAQwyF,aAC9B3G,EAAmB7rF,EAAQw7E,UAEf,OAAdj6E,KAAKisB,OACPxtB,EAAQwtB,KAAOjsB,KAAKisB,KAAKlX,YAEJ,OAAnB/U,KAAKgxF,YACPvyF,EAAQuyF,UAAYhxF,KAAKgxF,WAED,OAAtBhxF,KAAKixF,eACPxyF,EAAQwyF,aAAejxF,KAAKixF,cAEP,OAAnBjxF,KAAKisC,YACPxtC,EAAQw7E,UAAYj6E,KAAKisC,UAAUl3B,YAErC,IAAIm8E,EAAalxF,KAAKkxF,WACH,OAAfA,IACFA,EAAapF,EAAAA,QAAQqC,UAEvB1vF,EAAQozF,SAAS7xF,KAAKwsE,KAAM0kB,EAAW53E,EAAG43E,EAAW33E,GAGrD9a,EAAQwtB,KAAOylE,EACfjzF,EAAQuyF,UAAYW,EACpBlzF,EAAQwyF,aAAeW,EACvBnzF,EAAQw7E,UAAYqQ,CACrB,CAES,IAAAvpD,CAAKyrC,EAAcvgD,EAAmB+kE,EACjCC,EAAyCC,EACzCjlD,GACb,OAAO,IAAI8kD,GAAQvkB,EAAMvgD,EAAM+kE,EAAWC,EAAcC,EAAYjlD,EACrE,CAED,MAAAljB,GACE,MAAM9pB,EAAoB,CAACutE,KAAMxsE,KAAKwsE,MAoBtC,OAnBAvtE,EAAKutE,KAAOxsE,KAAKwsE,KACC,OAAdxsE,KAAKisB,OACPhtB,EAAKgtB,KAAOjsB,KAAKisB,MAED,OAAdjsB,KAAKisB,OACPhtB,EAAKgtB,KAAOjsB,KAAKisB,MAEI,OAAnBjsB,KAAKgxF,YACP/xF,EAAK+xF,UAAYhxF,KAAKgxF,WAEE,OAAtBhxF,KAAKixF,eACPhyF,EAAKgyF,aAAejxF,KAAKixF,cAEH,OAApBjxF,KAAKkxF,aACPjyF,EAAKiyF,WAAalxF,KAAKkxF,YAEF,OAAnBlxF,KAAKisC,YACPhtC,EAAKgtC,UAAYjsC,KAAKisC,WAEjBhtC,CACR,CAED,MAAAyd,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBo0E,KAClB/wF,KAAKwsE,OAAS7vD,EAAK6vD,MACnB/4C,EAAAA,OAAOzzB,KAAKisB,KAAMtP,EAAKsP,OACvBjsB,KAAKgxF,YAAcr0E,EAAKq0E,WACxBhxF,KAAKixF,eAAiBt0E,EAAKs0E,cAC3Bx9D,EAAAA,OAAOzzB,KAAKkxF,WAAYv0E,EAAKu0E,aAC7Bz9D,EAAAA,OAAOzzB,KAAKisC,UAAWtvB,EAAKsvB,WAGtC,CAED,KAAA3iB,CAASjC,GAkBP,OAjBAA,EAASA,EAAOE,MAAM,WAAWA,MAAM,IAAWA,MAAM,UAAUA,MAAM,IACxD+B,MAAMtpB,KAAKwsE,MAAMjlD,MAAM,IACrB,OAAdvnB,KAAKisB,OACP5E,EAASA,EAAOE,MAAM,IAAWA,MAAM,QAAQA,MAAM,IAAW+B,MAAMtpB,KAAKisB,MAAM1E,MAAM,KAElE,OAAnBvnB,KAAKgxF,YACP3pE,EAASA,EAAOE,MAAM,IAAWA,MAAM,aAAaA,MAAM,IAAW+B,MAAMtpB,KAAKgxF,WAAWzpE,MAAM,KAEzE,OAAtBvnB,KAAKixF,eACP5pE,EAASA,EAAOE,MAAM,IAAWA,MAAM,gBAAgBA,MAAM,IAAW+B,MAAMtpB,KAAKixF,cAAc1pE,MAAM,KAEjF,OAApBvnB,KAAKkxF,aACP7pE,EAASA,EAAOE,MAAM,IAAWA,MAAM,cAAcA,MAAM,IAAW+B,MAAMtpB,KAAKkxF,YAAY3pE,MAAM,KAE9E,OAAnBvnB,KAAKisC,YACP5kB,EAASA,EAAOE,MAAM,IAAWA,MAAM,aAAaA,MAAM,IAAW+B,MAAMtpB,KAAKisC,WAAW1kB,MAAM,KAE5FF,CACR,CAED,QAAAtS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAOwP,CAAOg9D,EACAvgD,EAAwB,KACxB+kE,EAAoC,KACpCC,EAA0C,KAC1CC,EAAiC,KACjCjlD,EAA8B,MAI1C,OAHAhgB,EAAOnE,EAAKlf,SAASqjB,GACrBilE,EAAapF,UAAQljF,SAASsoF,GAC9BjlD,EAAYve,EAAM9kB,SAASqjC,GACpB,IAAI8kD,GAAQvkB,EAAMvgD,EAAM+kE,EAAWC,EAAcC,EAAYjlD,EACrE,CAED,eAAArjC,CAA0DtJ,GACxD,GAAIA,SAAsCA,aAAiByxF,GACzD,OAAOzxF,EACF,GAAqB,iBAAVA,EAChB,OAAOyxF,GAAQvhF,OAAOlQ,GACjB,GAAqB,iBAAVA,EAChB,OAAOyxF,GAAQvhF,OAAOlQ,EAAMktE,KAAMltE,EAAM2sB,KAAM3sB,EAAM0xF,UAAW1xF,EAAM2xF,aAC/C3xF,EAAM4xF,WAAY5xF,EAAM2sC,WAEhD,MAAM,IAAIruC,UAAU,GAAK0B,EAC1B,EChOUwyF,IAAAA,GAAW,+DAAX,OAAAlyF,EAAA,cAAoByzE,qCAEtBrzE,KAAAwsE,MAA8BptE,EAAAY,KAAAE,GAAAd,EAAAY,KAAA+xF,OAAA,IAG9B/xF,KAAAisB,KAAwC7sB,EAAAY,KAAAgyF,OAAA,GAGxChyF,KAAAgxF,UAA6D5xF,EAAAY,KAAAiyF,OAAA,GAG7DjyF,KAAAixF,aAAmE7xF,EAAAY,KAAAkyF,OAAA,GAGnElyF,KAAAkxF,WAAiD9xF,EAAAY,KAAAmyF,OAAA,GAGjDnyF,KAAAisC,UAA8C7sC,EAAAY,KAAAoyF,OAAA,EAmFxD,CAjFC,SAAI9yF,GACF,OAAO,IAAIyxF,GAAQ/wF,KAAKwsE,KAAKt8D,WAAYlQ,KAAKisB,KAAK/b,WAAYlQ,KAAKgxF,UAAU9gF,WAC3DlQ,KAAKixF,aAAa/gF,WAAYlQ,KAAKkxF,WAAWhhF,WAAYlQ,KAAKisC,UAAU/7B,WAC7F,CAED,SAAIg3B,GACF,OAAO,IAAI6pD,GAAQ/wF,KAAKwsE,KAAK6d,WAAYrqF,KAAKisB,KAAKo+D,WAAYrqF,KAAKgxF,UAAU3G,WAC3DrqF,KAAKixF,aAAa5G,WAAYrqF,KAAKkxF,WAAW7G,WAAYrqF,KAAKisC,UAAUo+C,WAC7F,CAED,QAAA7tD,CAAS61D,EAAqCx2E,GACzB,iBAARw2E,EACTryF,KAAKwsE,KAAKhwC,SAAS61D,EAAKx2E,IAEpBw2E,aAAetB,KACjBsB,EAAMA,EAAItpE,mBAERspE,EAAI7lB,MACNxsE,KAAKwsE,KAAKhwC,SAAS61D,EAAI7lB,KAAM3wD,YAE3Bw2E,EAAIpmE,MACNjsB,KAAKisB,KAAKuQ,SAAS61D,EAAIpmE,KAAMpQ,YAE3Bw2E,EAAIrB,WACNhxF,KAAKgxF,UAAUx0D,SAAS61D,EAAIrB,UAAWn1E,YAErCw2E,EAAIpB,cACNjxF,KAAKixF,aAAaz0D,SAAS61D,EAAIpB,aAAcp1E,YAE3Cw2E,EAAInB,YACNlxF,KAAKkxF,WAAW10D,SAAS61D,EAAInB,WAAYr1E,YAEvCw2E,EAAIpmD,WACNjsC,KAAKisC,UAAUzP,SAAS61D,EAAIpmD,UAAWpwB,GAG5C,CAEkB,QAAA0gC,GACjBx8C,MAAMw8C,WACN,MAAM+2B,EAAWtzE,KAAKszE,SAASh0E,MAC3Bg0E,aAAoBgJ,KAAmBt8E,KAAK+2C,SAAW/2C,KAAK20C,QAC9D30C,KAAKyxF,WAAWne,EAAS70E,QAE5B,CAES,UAAAgzF,CAAWhzF,GAEnB,MAAMizF,EAAcjzF,EAAQwtB,KACtB0lE,EAAmBlzF,EAAQuyF,UAC3BY,EAAsBnzF,EAAQwyF,aAC9B3G,EAAmB7rF,EAAQw7E,UAE3BhuD,EAAOjsB,KAAKisB,KAAK3sB,MACV,OAAT2sB,IACFxtB,EAAQwtB,KAAOA,EAAKlX,YAEtB,MAAMi8E,EAAYhxF,KAAKgxF,UAAU1xF,eAC7B0xF,IACFvyF,EAAQuyF,UAAYA,GAEtB,MAAMC,EAAejxF,KAAKixF,aAAa3xF,eACnC2xF,IACFxyF,EAAQwyF,aAAeA,GAEzB,MAAMhlD,EAAYjsC,KAAKisC,UAAU3sC,MACf,OAAd2sC,IACFxtC,EAAQw7E,UAAYhuC,EAAUl3B,YAEhC,IAAIm8E,EAAalxF,KAAKkxF,WAAW5xF,MACd,OAAf4xF,IACFA,EAAapF,EAAAA,QAAQqC,UAEvB1vF,EAAQozF,SAAS7xF,KAAKwsE,KAAKt8D,WAAYghF,EAAW53E,EAAG43E,EAAW33E,GAGhE9a,EAAQwtB,KAAOylE,EACfjzF,EAAQuyF,UAAYW,EACpBlzF,EAAQwyF,aAAeW,EACvBnzF,EAAQw7E,UAAYqQ,CACrB,GAlGAgI,EAAA,CAAAv2E,EAAAA,SAAS,CAAClK,UAAWyb,OAAQhuB,MAAO,GAAIoC,YAAamwC,GAAKkK,kBAG1DvW,GAAc,CAAC3zB,UAAWiW,EAAMxoB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,eAG/Ew2C,EAAA,CAAA/sD,GAAc,CAAC3zB,UAAWyb,OAAQxb,UAAU,EAAMpQ,YAAamwC,GAAKkK,eAGpEy2C,EAAA,CAAAhtD,GAAc,CAAC3zB,UAAWyb,OAAQxb,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGpEvW,GAAc,CAAC3zB,UAAWi6E,EAAAA,QAASxsF,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,kBAGlFvW,GAAc,CAAC3zB,UAAW6b,EAAOpuB,MAAO,KAAMwS,UAAU,EAAMpQ,YAAamwC,GAAKkK,eAdjF5+C,EAAS,KAAA,KAAAm1F,EAAA,CAAAx0F,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAA65D,KAAAxtE,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA65D,KAA8BltE,CAAAA,IAAAyyF,EAAA7xF,GAGvC/C,EAAS,KAAA,KAAAs1F,EAAA,CAAA30F,KAAA,QAAAO,KAAA,OAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,SAAAA,EAAA5T,IAAA4T,GAAAA,EAAAsZ,KAAAjtB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAsZ,KAAwC3sB,CAAAA,IAAA0yF,EAAA9xF,GAGjD/C,EAAS,KAAA,KAAAo1F,EAAA,CAAAz0F,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAq+E,UAAAhyF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAq+E,UAA6D1xF,CAAAA,IAAA2yF,EAAA/xF,GAGtE/C,EAAS,KAAA,KAAAq1F,EAAA,CAAA10F,KAAA,QAAAO,KAAA,eAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,iBAAAA,EAAA5T,IAAA4T,GAAAA,EAAAs+E,aAAAjyF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAs+E,aAAmE3xF,CAAAA,IAAA4yF,EAAAhyF,GAG5E/C,EAAS,KAAA,KAAAu1F,EAAA,CAAA50F,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAAu+E,WAAAlyF,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAu+E,WAAiD5xF,CAAAA,IAAA6yF,EAAAjyF,GAG1D/C,EAAS,KAAA,KAAAw1F,EAAA,CAAA70F,KAAA,QAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAAs5B,UAAAjtC,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAs5B,UAA8C3sC,CAAAA,IAAA8yF,EAAAlyF,IAjBjC,EAAA,GCKX,MAAA0yF,GAAiB,CAC5B,CAAC31E,OAAOC,aAAa2K,GACZA,aAAoBgrE,IACpBC,GAAe71E,OAAOC,aAAa2K,IAejCirE,GAAiB,CAC5B,CAAC71E,OAAOC,aAAa2K,GACZ3Q,EAAAA,QAAQ8Q,WAA2BH,EAAU,QAAS,WAKpDgrE,MAAAA,GACX,WAAA/yF,CAAY8mD,EAAepgC,EAAgB0oE,EAAgBE,GACzDpvF,KAAK4mD,MAAQA,EACb5mD,KAAKwmB,OAASA,EACdxmB,KAAKkvF,OAASA,EACdlvF,KAAKovF,OAASA,CACf,CASD,SAAA1F,CAAU9iC,GAER,OADAA,EAAQ3gC,SAAOrd,SAASg+C,IACdlqC,OAAO1c,KAAK4mD,OACb5mD,KAEFA,KAAK+gC,KAAK6lB,EAAO5mD,KAAKwmB,OAAQxmB,KAAKkvF,OAAQlvF,KAAKovF,OACxD,CAID,UAAAxmE,CAAWpC,GAET,OADAA,EAASP,SAAOrd,SAAS4d,IACd9J,OAAO1c,KAAKwmB,QACdxmB,KAEFA,KAAK+gC,KAAK/gC,KAAK4mD,MAAOpgC,EAAQxmB,KAAKkvF,OAAQlvF,KAAKovF,OACxD,CAED,QAAA3mE,CAASm+B,EAAmBpgC,GAG1B,OAFAogC,EAAQ3gC,SAAOrd,SAASg+C,GACxBpgC,EAASP,SAAOrd,SAAS4d,GACrBogC,EAAMlqC,OAAO1c,KAAK4mD,QAAUpgC,EAAO9J,OAAO1c,KAAKwmB,QAC1CxmB,KAEFA,KAAK+gC,KAAK6lB,EAAOpgC,EAAQxmB,KAAKkvF,OAAQlvF,KAAKovF,OACnD,CAID,UAAA2D,CAAW7D,GACT,OAAIA,IAAWlvF,KAAKkvF,OACXlvF,KAEFA,KAAK+gC,KAAK/gC,KAAK4mD,MAAO5mD,KAAKwmB,OAAQ0oE,EAAQlvF,KAAKovF,OACxD,CAID,UAAA4D,CAAW5D,GACT,OAAIA,IAAWpvF,KAAKovF,OACXpvF,KAEFA,KAAK+gC,KAAK/gC,KAAK4mD,MAAO5mD,KAAKwmB,OAAQxmB,KAAKkvF,OAAQE,EACxD,CAED,SAAA6D,CAAU/D,EAAgBE,GACxB,OAAIF,IAAWlvF,KAAKkvF,QAAUE,IAAWpvF,KAAKovF,OACrCpvF,KAEFA,KAAK+gC,KAAK/gC,KAAK4mD,MAAO5mD,KAAKwmB,OAAQ0oE,EAAQE,EACnD,CAED,MAAArmE,GACE,MAAO,CACL69B,MAAO5mD,KAAK4mD,MACZpgC,OAAQxmB,KAAKwmB,OACb0oE,OAAQlvF,KAAKkvF,OACbE,OAAQpvF,KAAKovF,OAEhB,CAES,IAAAruD,CAAK6lB,EAAepgC,EAAgB0oE,EAAgBE,GAC5D,OAAO,IAAIyD,GAAWjsC,EAAOpgC,EAAQ0oE,EAAQE,EAC9C,CAKD,aAAAnmE,CAActM,GACZ,OAAIA,aAAgBk2E,GACXK,GAAuBlzF,KAAM2c,GAE/B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBk2E,KAClB7yF,KAAK4mD,MAAMz9B,aAAaxM,EAAKiqC,MAAOx9B,IACpCppB,KAAKwmB,OAAO2C,aAAaxM,EAAK6J,OAAQ4C,IACtCuH,EAAAA,QAAQtH,WAAWrpB,KAAKkvF,OAAQvyE,EAAKuyE,OAAQ9lE,IAC7CuH,EAAAA,QAAQtH,WAAWrpB,KAAKovF,OAAQzyE,EAAKyyE,OAAQhmE,GAGvD,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBk2E,KAClB7yF,KAAK4mD,MAAMlqC,OAAOC,EAAKiqC,QAAU5mD,KAAKwmB,OAAO9J,OAAOC,EAAK6J,SACzDxmB,KAAKkvF,SAAWvyE,EAAKuyE,QAAUlvF,KAAKovF,SAAWzyE,EAAKyyE,OAG9D,CAGD,QAAAxyE,GACE,OAAOC,EAAAA,QAAQC,KAAKD,EAAAA,QAAQ+T,IAAI/T,EAAAA,QAAQ+T,IAAI/T,EAAQ+T,QAAAA,IAAI/T,EAAQ+T,QAAAA,IAC5DC,EAAaC,aAAAA,KAAK+hE,IAAa7yF,KAAK4mD,MAAMhqC,YAAa5c,KAAKwmB,OAAO5J,YACnE+T,EAAQG,QAAAA,KAAK9wB,KAAKkvF,SAAUv+D,EAAAA,QAAQG,KAAK9wB,KAAKovF,SACnD,CAGD,KAAA9lE,CAASjC,GAIP,OAHAA,EAASA,EAAOE,MAAM,cAAcA,MAAM,IAAWA,MAAM,MAAMA,MAAM,IACvD+B,MAAMtpB,KAAK4mD,OAAOr/B,MAAM,MAAM+B,MAAMtpB,KAAKwmB,QAAQe,MAAM,MACvD+B,MAAMtpB,KAAKkvF,QAAQ3nE,MAAM,MAAM+B,MAAMtpB,KAAKovF,QAAQ7nE,MAAM,GAEzE,CAGD,QAAAxS,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,SAAOosB,CAAGw6B,EAAmBpgC,EAAoB0oE,EAAiBE,GAShE,OARAxoC,EAAQ3gC,SAAOrd,SAASg+C,GACxBpgC,EAASP,SAAOrd,SAAS4d,YACrB0oE,IACFA,EAAS,aAEPE,IACFA,EAAS,IAEJ,IAAIyD,GAAWjsC,EAAOpgC,EAAQ0oE,EAAQE,EAC9C,CAED,eAAAxmF,CAA6DtJ,GAC3D,GAAIA,SAAsCA,aAAiBuzF,GACzD,OAAOvzF,EACF,GAAIwzF,GAAe71E,OAAOC,aAAa5d,GAC5C,OAAOuzF,GAAWnpE,SAASpqB,GAE7B,MAAM,IAAI1B,UAAU,GAAK0B,EAC1B,CAED,eAAAoqB,CAAgBzqB,GACd,MAAM2nD,EAAQ3gC,EAAOrd,OAAAA,SAAS3J,EAAK2nD,OAC7BpgC,EAASP,EAAOrd,OAAAA,SAAS3J,EAAKunB,QACpC,IAAI0oE,EAASjwF,EAAKiwF,OACdE,EAASnwF,EAAKmwF,OAOlB,gBANIF,IACFA,EAAS,aAEPE,IACFA,EAAS,IAEJ,IAAIyD,GAAWjsC,EAAOpgC,EAAQ0oE,EAAQE,EAC9C,EAIU,MAAA8D,GAAyB,SAAWnoE,GAC/C,MAAMmoE,EAAyB,SAAUC,EAAgBC,GACvD,MAAMloE,EAAe,SAAUC,GAC7B,MAAMgoE,EAAKjoE,EAAa,GAClBkoE,EAAKloE,EAAa,GAClB07B,EAAQ3gC,EAAAA,OAAOmG,GAAG+mE,EAAGvsC,MAAMtnD,MAAQ6rB,GAAKioE,EAAGxsC,MAAMtnD,MAAQ6zF,EAAGvsC,MAAMtnD,OAAQ8zF,EAAGxsC,MAAMv5B,OACnF7G,EAASP,EAAAA,OAAOmG,GAAG+mE,EAAG3sE,OAAOlnB,MAAQ6rB,GAAKioE,EAAG5sE,OAAOlnB,MAAQ6zF,EAAG3sE,OAAOlnB,OAAQ8zF,EAAG5sE,OAAO6G,OACxF6hE,EAASiE,EAAGjE,OAAS/jE,GAAKioE,EAAGlE,OAASiE,EAAGjE,QACzCE,EAAS+D,EAAG/D,OAASjkE,GAAKioE,EAAGhE,OAAS+D,EAAG/D,QAC/C,OAAO,IAAIyD,GAAWjsC,EAAOpgC,EAAQ0oE,EAAQE,EAC/C,EAKA,OAJAjxF,OAAOwtB,eAAeT,EAAcgoE,EAAuBj1F,WAC1DitB,EAA8C,GAAKioE,EAAGvsC,MAAMv5B,QAAU+lE,EAAGxsC,MAAMv5B,OAAS8lE,EAAG3sE,OAAO6G,QAAU+lE,EAAG5sE,OAAO6G,MACnE8lE,EAAK,IAAIN,GAAWM,EAAGvsC,MAAMyc,GAAG+vB,EAAGxsC,MAAMv5B,OAAQ8lE,EAAG3sE,OAAO68C,GAAG+vB,EAAG5sE,OAAO6G,OAAQ8lE,EAAGjE,OAAQiE,EAAG/D,QACjJlkE,EAA8C,GAAKkoE,EAC7CloE,CACT,EAUA,OAHAgoE,EAAuBj1F,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACxDi1F,EAAuBj1F,UAAU6B,YAAcozF,EAExCA,CACR,CA3BqC,CA2BnCtnE,gBCvOmBynE,MAAAA,ICFhB,MAAgBC,WAAmBD,ICkBnC,MAAOE,WAAmBD,GAC9B,WAAAxzF,CAAYivD,EAAcmsB,EAA4BsY,EAC1CC,EAA8BthD,GACxCpyC,QACAC,KAAK+uD,KAAOA,EACZ/uD,KAAKk7E,SAAWA,EAChBl7E,KAAKwzF,UAAYA,EACjBxzF,KAAKyzF,SAAWA,EAChBzzF,KAAKmyC,aAAeA,CACrB,CAMD,YAAAuhD,CAAaxY,GACX,OAAIznD,SAAOzzB,KAAKk7E,SAAUA,GACjBl7E,KAEFA,KAAK+gC,KAAK/gC,KAAK+uD,KAAMmsB,EAAUl7E,KAAKwzF,UAC1BxzF,KAAKyzF,SAAUzzF,KAAKmyC,aACtC,CAIQ,aAAAwhD,CAAcH,GACrB,OAAI//D,SAAOzzB,KAAKwzF,UAAWA,GAClBxzF,KAEFA,KAAK+gC,KAAK/gC,KAAK+uD,KAAM/uD,KAAKk7E,SAAUsY,EAC1BxzF,KAAKyzF,SAAUzzF,KAAKmyC,aACtC,CAIQ,YAAAyhD,CAAaH,GACpB,OAAIzzF,KAAKyzF,WAAaA,EACbzzF,KAEFA,KAAK+gC,KAAK/gC,KAAK+uD,KAAM/uD,KAAKk7E,SAAUl7E,KAAKwzF,UAC/BC,EAAUzzF,KAAKmyC,aACjC,CAIQ,gBAAA0hD,CAAiB1hD,GACxB,OAAI1e,SAAOzzB,KAAKmyC,aAAcA,GACrBnyC,KAEFA,KAAK+gC,KAAK/gC,KAAK+uD,KAAM/uD,KAAKk7E,SAAUl7E,KAAKwzF,UAC/BxzF,KAAKyzF,SAAUthD,EACjC,CAEQ,UAAA2L,CAAW5d,EAAYK,GAC9B,IAAIyd,EAAkBh+C,KAAKmyC,aACH,OAApB6L,IACFA,EAAkB3b,GAAWrB,SAE/B,MAAMkd,EAAkBF,EAAgBpZ,WAAW1E,EAAMK,GAAS,GAClE,OAAI2d,EAAgBxhC,OAAOshC,GAClBh+C,KAEFA,KAAK6zF,iBAAiB31C,EAC9B,CAEQ,QAAA41C,GACP,OAA0B,OAAnB9zF,KAAKwzF,SACb,CAEQ,SAAAO,CAAU3sD,EAAoB/B,GACrC,MAAMouD,EAAWzzF,KAAKyzF,SACtB,GAAiB,OAAbA,EACF,OAAOzzF,KAET,MAAMmyC,EAAenyC,KAAKmyC,aAI1B,OAHqB,OAAjBA,IACF9M,EAAO8M,EAAa1O,SAAS4B,GAAM,IAE9BrlC,KAAK2zF,cAAcvsD,EAAMhH,MAAMqzD,EAAUpuD,EAAM,MACvD,CAEQ,MAAAskD,CAAOrW,EAA4B2J,GACtC3J,aAAoBoG,GACtB15E,KAAKg0F,MAAM1gB,EAAS70E,QAASw+E,GACpB3J,aAAoBmD,IAC7Bz2E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAEQ,KAAA+W,CAAMv1F,EAA0Bw+E,GAEvC,MAAMgX,EAAqBx1F,EAAQs7E,YAC7BuQ,EAAmB7rF,EAAQw7E,UAEjCx7E,EAAQy1E,YACRl0E,KAAKg9E,KAAKv+E,EAASw+E,GACI,OAAnBj9E,KAAKwzF,YACP/0F,EAAQs7E,YAAc/5E,KAAKwzF,UAAUhlE,QACrC/vB,EAAQw7E,UAAYj6E,KAAKwzF,UAAUziE,eAErCtyB,EAAQu8E,KAAKh7E,KAAKk7E,UAGlBz8E,EAAQs7E,YAAcka,EACtBx1F,EAAQw7E,UAAYqQ,CACrB,CAEQ,IAAAtN,CAAKv+E,EAAyBw+E,GACrC,MAAMjkD,EAAYT,EAAUzI,UAAAA,MAAMmtD,EAAMr2B,MAAOq2B,EAAMz2D,QAAQo6B,UAAUq8B,EAAM3jE,EAAG2jE,EAAM1jE,GACtFvZ,KAAK+uD,KAAKmlC,cAAcz1F,EAASu6B,EAClC,CAES,IAAA+H,CAAKguB,EAAcmsB,EAA4BsY,EAC1CC,EAA8BthD,GAC3C,OAAO,IAAIohD,GAAWxkC,EAAMmsB,EAAUsY,EAAWC,EAAUthD,EAC5D,CAKD,aAAAlpB,CAActM,GACZ,OAAIA,aAAgB42E,GACXY,GAAuBn0F,KAAM2c,GAE/B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgB42E,KAClBvzF,KAAK+uD,KAAK5lC,aAAaxM,EAAKoyC,KAAM3lC,IAClCppB,KAAKk7E,WAAav+D,EAAKu+D,UACvB1nD,EAAAA,WAAWxzB,KAAKwzF,UAAW72E,EAAK62E,UAAWpqE,IAC3CppB,KAAKyzF,WAAa92E,EAAK82E,UACvBjgE,EAAWxzB,WAAAA,KAAKmyC,aAAcx1B,EAAKw1B,aAAc/oB,GAG3D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgB42E,KAClBvzF,KAAK+uD,KAAKryC,OAAOC,EAAKoyC,OACtB/uD,KAAKk7E,WAAav+D,EAAKu+D,UACvBznD,EAAAA,OAAOzzB,KAAKwzF,UAAW72E,EAAK62E,YAC5BxzF,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAGzC,CAGD,KAAA7oB,CAASjC,GAOP,OANAA,EAASA,EAAOE,MAAM,OAAOA,MAAM,IAAWA,MAAM,cAAcA,MAAM,IACxD+B,MAAMtpB,KAAK+uD,MAAMxnC,MAAM,MACvB+B,MAAMtpB,KAAKk7E,UAAU3zD,MAAM,MAC3B+B,MAAMtpB,KAAKwzF,WAAWjsE,MAAM,MAC5B+B,MAAMtpB,KAAKyzF,UAAUlsE,MAAM,MAC3B+B,MAAMtpB,KAAKmyC,cAAc5qB,MAAM,GAEhD,CAGQ,QAAAxS,GACP,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAOwP,CAAOo3C,EAAepgC,EAAgBuoC,EAC/BmsB,GAQZ,OAPAnsB,EAAOqlC,SAAOxrF,SAASmmD,GACT,IAAVnI,GAA0B,IAAXpgC,IACjBuoC,EAAOA,EAAK/1B,UAAUT,YAAUzI,MAAM,EAAI82B,EAAO,EAAIpgC,cAEnD00D,IACFA,EAAW,WAEN,IAAIqY,GAAWxkC,EAAMmsB,EAAU,KAAMr1C,GAAKqG,UAAW,KAC7D,EA4BU,MAAAioD,GAAyB,SAAWppE,GAC/C,MAAMopE,EAAyB,SAAUE,EAAgBC,GACvD,MAAMppE,EAAe,SAAUC,GAC7B,MAAM4jC,EAAO7jC,EAAa6jC,KACpBmsB,EAAWhwD,EAAagwD,SACxBsY,EAAYtoE,EAAaqpE,sBAAsBppE,GAC/CsoE,EAAWvoE,EAAauoE,SACxBthD,EAAejnB,EAAainB,aAClC,OAAO,IAAIohD,GAAWxkC,EAAMmsB,EAAUsY,EAAWC,EAAUthD,EAC7D,EAOA,OANAh0C,OAAOwtB,eAAeT,EAAcipE,EAAuBl2F,WAC1DitB,EAA8C6jC,KAAOulC,EAAGvlC,KACxD7jC,EAA8CgwD,SAAWoZ,EAAGpZ,SAC5DhwD,EAA8CqpE,sBAAwB3oE,eAAayoE,EAAGb,UAAWc,EAAGd,WACpGtoE,EAA8CuoE,SAAWa,EAAGb,SAC5DvoE,EAA8CinB,aAAemiD,EAAGniD,aAC1DjnB,CACT,EA+CA,OAxCAipE,EAAuBl2F,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACxDk2F,EAAuBl2F,UAAU6B,YAAcq0F,EAE/Ch2F,OAAOgB,eAAeg1F,EAAuBl2F,UAAW,EAAG,CACzD,GAAAc,GACE,MAAMgwD,EAAO/uD,KAAK+uD,KACZmsB,EAAWl7E,KAAKk7E,SAChBsY,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIohD,GAAWxkC,EAAMmsB,EAAUsY,EAAWC,EAAUthD,EAC5D,EACDv4B,cAAc,IAGhBzb,OAAOgB,eAAeg1F,EAAuBl2F,UAAW,EAAG,CACzD,GAAAc,GACE,MAAMgwD,EAAO/uD,KAAK+uD,KACZmsB,EAAWl7E,KAAKk7E,SAChBsY,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIohD,GAAWxkC,EAAMmsB,EAAUsY,EAAWC,EAAUthD,EAC5D,EACDv4B,cAAc,IAGhBu6E,EAAuBl2F,UAAUye,OAAS,SAAUC,GAClD,OAAI3c,OAAS2c,GAEFA,aAAgBw3E,IAClBn0F,KAAK+uD,KAAKryC,OAAOC,EAAKoyC,OACtB/uD,KAAKk7E,WAAav+D,EAAKu+D,UACvBl7E,KAAKu0F,sBAAsB73E,OAAOC,EAAK43E,wBACvCv0F,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAG1C,EAEOgiD,CACR,CAjEqC,CAiEnCvoE,gBCtRG,MAAO4oE,WAAmBlB,GAC9B,WAAAxzF,CAAY0zF,EAAyBC,EAA8BthD,GACjEpyC,QACAC,KAAKwzF,UAAYA,EACjBxzF,KAAKyzF,SAAWA,EAChBzzF,KAAKmyC,aAAeA,CACrB,CAIQ,aAAAwhD,CAAcH,GACrB,OAAI//D,SAAOzzB,KAAKwzF,UAAWA,GAClBxzF,KAEFA,KAAK+gC,KAAKyyD,EAAWxzF,KAAKyzF,SAAUzzF,KAAKmyC,aACjD,CAIQ,YAAAyhD,CAAaH,GACpB,OAAIzzF,KAAKyzF,WAAaA,EACbzzF,KAEFA,KAAK+gC,KAAK/gC,KAAKwzF,UAAWC,EAAUzzF,KAAKmyC,aACjD,CAIQ,gBAAA0hD,CAAiB1hD,GACxB,OAAI1e,SAAOzzB,KAAKmyC,aAAcA,GACrBnyC,KAEFA,KAAK+gC,KAAK/gC,KAAKwzF,UAAWxzF,KAAKyzF,SAAUthD,EACjD,CAEQ,UAAA2L,CAAW5d,EAAYK,GAC9B,IAAIyd,EAAkBh+C,KAAKmyC,aACH,OAApB6L,IACFA,EAAkB3b,GAAWrB,SAE/B,MAAMkd,EAAkBF,EAAgBpZ,WAAW1E,EAAMK,GAAS,GAClE,OAAI2d,EAAgBxhC,OAAOshC,GAClBh+C,KAEFA,KAAK6zF,iBAAiB31C,EAC9B,CAEQ,QAAA41C,GACP,OAA0B,OAAnB9zF,KAAKwzF,SACb,CAEQ,SAAAO,CAAU3sD,EAAoB/B,GACrC,MAAMouD,EAAWzzF,KAAKyzF,SACtB,GAAiB,OAAbA,EACF,OAAOzzF,KAET,MAAMmyC,EAAenyC,KAAKmyC,aAI1B,OAHqB,OAAjBA,IACF9M,EAAO8M,EAAa1O,SAAS4B,GAAM,IAE9BrlC,KAAK2zF,cAAcvsD,EAAMhH,MAAMqzD,EAAUpuD,EAAM,MACvD,CAEQ,MAAAskD,CAAOrW,EAA4B2J,GACtC3J,aAAoBoG,GACtB15E,KAAKg0F,MAAM1gB,EAAS70E,QAASw+E,GACpB3J,aAAoBmD,IAC7Bz2E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAEQ,KAAA+W,CAAMv1F,EAA0Bw+E,GAEvC,MAAMgX,EAAqBx1F,EAAQs7E,YAC7BuQ,EAAmB7rF,EAAQw7E,UAEjCx7E,EAAQy1E,YACRl0E,KAAKg9E,KAAKv+E,EAASw+E,GACI,OAAnBj9E,KAAKwzF,YACP/0F,EAAQs7E,YAAc/5E,KAAKwzF,UAAUhlE,QACrC/vB,EAAQw7E,UAAYj6E,KAAKwzF,UAAUziE,eAErCtyB,EAAQu8E,OAGRv8E,EAAQs7E,YAAcka,EACtBx1F,EAAQw7E,UAAYqQ,CACrB,CAEQ,IAAAtN,CAAKv+E,EAAyBw+E,GACrC,MAAMwX,GAAWxX,EAAMppB,KAAOopB,EAAMjpB,MAAQ,EACtC0gC,GAAWzX,EAAM9oB,KAAO8oB,EAAM5oB,MAAQ,EACtCzN,EAAQq2B,EAAMr2B,MACdpgC,EAASy2D,EAAMz2D,OACfqqE,EAAS16E,KAAKC,IAAIwwC,EAAOpgC,GAAU,EACzC/nB,EAAQ65E,IAAImc,EAASC,EAAS7D,EAAQ,EAAG,EAAI16E,KAAKwkD,IAClDl8D,EAAQ41E,WACT,CAES,IAAAtzC,CAAKyyD,EAAyBC,EACzBthD,GACb,OAAO,IAAIqiD,GAAWhB,EAAWC,EAAUthD,EAC5C,CAKD,aAAAlpB,CAActM,GACZ,OAAIA,aAAgB63E,GACXG,GAAuB30F,KAAM2c,GAE/B,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgB63E,KAClBhhE,EAAAA,WAAWxzB,KAAKwzF,UAAW72E,EAAK62E,UAAWpqE,IAC3CppB,KAAKyzF,WAAa92E,EAAK82E,UACvBjgE,EAAAA,WAAWxzB,KAAKmyC,aAAcx1B,EAAKw1B,aAAc/oB,GAG3D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgB63E,KAClB/gE,EAAAA,OAAOzzB,KAAKwzF,UAAW72E,EAAK62E,YAC5BxzF,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAGzC,CAGD,KAAA7oB,CAASjC,GAKP,OAJAA,EAASA,EAAOE,MAAM,OAAOA,MAAM,IAAWA,MAAM,cAAcA,MAAM,IACxD+B,MAAMtpB,KAAKwzF,WAAWjsE,MAAM,MAC5B+B,MAAMtpB,KAAKyzF,UAAUlsE,MAAM,MAC3B+B,MAAMtpB,KAAKmyC,cAAc5qB,MAAM,GAEhD,CAGQ,QAAAxS,GACP,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAOwP,GACL,OAAO,IAAIglF,GAAW,KAAM3uD,GAAK2G,YAAa,KAC/C,EAsBU,MAAAmoD,GAAyB,SAAW5pE,GAC/C,MAAM4pE,EAAyB,SAAUN,EAAgBC,GACvD,MAAMppE,EAAe,SAAUC,GAC7B,MAAMqoE,EAAYtoE,EAAaqpE,sBAAsBppE,GAC/CsoE,EAAWvoE,EAAauoE,SACxBthD,EAAejnB,EAAainB,aAClC,OAAO,IAAIqiD,GAAWhB,EAAWC,EAAUthD,EAC7C,EAKA,OAJAh0C,OAAOwtB,eAAeT,EAAcypE,EAAuB12F,WAC1DitB,EAA8CqpE,sBAAwB3oE,eAAayoE,EAAGb,UAAWc,EAAGd,WACpGtoE,EAA8CuoE,SAAWa,EAAGb,SAC5DvoE,EAA8CinB,aAAemiD,EAAGniD,aAC1DjnB,CACT,EAyCA,OAlCAypE,EAAuB12F,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACxD02F,EAAuB12F,UAAU6B,YAAc60F,EAE/Cx2F,OAAOgB,eAAew1F,EAAuB12F,UAAW,EAAG,CACzD,GAAAc,GACE,MAAMy0F,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIqiD,GAAWhB,EAAWC,EAAUthD,EAC5C,EACDv4B,cAAc,IAGhBzb,OAAOgB,eAAew1F,EAAuB12F,UAAW,EAAG,CACzD,GAAAc,GACE,MAAMy0F,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIqiD,GAAWhB,EAAWC,EAAUthD,EAC5C,EACDv4B,cAAc,IAGhB+6E,EAAuB12F,UAAUye,OAAS,SAAUC,GAClD,OAAI3c,OAAS2c,GAEFA,aAAgBg4E,IAClB30F,KAAKu0F,sBAAsB73E,OAAOC,EAAK43E,wBACvCv0F,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAG1C,EAEOwiD,CACR,CAvDqC,CAuDnC/oE,gBCrOG,MAAOgpE,WAAoBtB,GAC/B,WAAAxzF,CAAY+0F,EAAeC,EAAiBtB,EAChCC,EAA8BthD,GACxCpyC,QACAC,KAAK60F,MAAQA,EACb70F,KAAK80F,SAAWA,EAChB90F,KAAKwzF,UAAYA,EACjBxzF,KAAKyzF,SAAWA,EAChBzzF,KAAKmyC,aAAeA,CACrB,CAQQ,aAAAwhD,CAAcH,GACrB,OAAI//D,SAAOzzB,KAAKwzF,UAAWA,GAClBxzF,KAEFA,KAAK+gC,KAAK/gC,KAAK60F,MAAO70F,KAAK80F,SAAUtB,EAC3BxzF,KAAKyzF,SAAUzzF,KAAKmyC,aACtC,CAIQ,YAAAyhD,CAAaH,GACpB,OAAIzzF,KAAKyzF,WAAaA,EACbzzF,KAEFA,KAAK+gC,KAAK/gC,KAAK60F,MAAO70F,KAAK80F,SAAU90F,KAAKwzF,UAChCC,EAAUzzF,KAAKmyC,aACjC,CAIQ,gBAAA0hD,CAAiB1hD,GACxB,OAAI1e,SAAOzzB,KAAKmyC,aAAcA,GACrBnyC,KAEFA,KAAK+gC,KAAK/gC,KAAK60F,MAAO70F,KAAK80F,SAAU90F,KAAKwzF,UAChCxzF,KAAKyzF,SAAUthD,EACjC,CAEQ,UAAA2L,CAAW5d,EAAYK,GAC9B,IAAIyd,EAAkBh+C,KAAKmyC,aACH,OAApB6L,IACFA,EAAkB3b,GAAWrB,SAE/B,MAAMkd,EAAkBF,EAAgBpZ,WAAW1E,EAAMK,GAAS,GAClE,OAAI2d,EAAgBxhC,OAAOshC,GAClBh+C,KAEFA,KAAK6zF,iBAAiB31C,EAC9B,CAEQ,QAAA41C,GACP,OAA0B,OAAnB9zF,KAAKwzF,SACb,CAEQ,SAAAO,CAAU3sD,EAAoB/B,GACrC,MAAMouD,EAAWzzF,KAAKyzF,SACtB,GAAiB,OAAbA,EACF,OAAOzzF,KAET,MAAMmyC,EAAenyC,KAAKmyC,aAI1B,OAHqB,OAAjBA,IACF9M,EAAO8M,EAAa1O,SAAS4B,GAAM,IAE9BrlC,KAAK2zF,cAAcvsD,EAAMhH,MAAMqzD,EAAUpuD,EAAM,MACvD,CAEQ,MAAAskD,CAAOrW,EAA4B2J,GACtC3J,aAAoBoG,GACtB15E,KAAKg0F,MAAM1gB,EAAS70E,QAASw+E,GACpB3J,aAAoBmD,IAC7Bz2E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAEQ,KAAA+W,CAAMv1F,EAA0Bw+E,GAEvC,MAAMgX,EAAqBx1F,EAAQs7E,YAC7BuQ,EAAmB7rF,EAAQw7E,UAEjCx7E,EAAQy1E,YACRl0E,KAAKg9E,KAAKv+E,EAASw+E,GACI,OAAnBj9E,KAAKwzF,YACP/0F,EAAQs7E,YAAc/5E,KAAKwzF,UAAUhlE,QACrC/vB,EAAQw7E,UAAYj6E,KAAKwzF,UAAUziE,eAErCtyB,EAAQu8E,OAGRv8E,EAAQs7E,YAAcka,EACtBx1F,EAAQw7E,UAAYqQ,CACrB,CAEQ,IAAAtN,CAAKv+E,EAAyBw+E,GACrC,MAAM4X,EAAQ70F,KAAK60F,MACnB,GAAIA,EAAQ,EACV,OAEF,MAAMJ,GAAWxX,EAAMppB,KAAOopB,EAAMjpB,MAAQ,EACtC0gC,GAAWzX,EAAM9oB,KAAO8oB,EAAM5oB,MAAQ,EACtCzN,EAAQq2B,EAAMr2B,MACdpgC,EAASy2D,EAAMz2D,OACfqqE,EAAS16E,KAAKC,IAAIwwC,EAAOpgC,GAAU,EACnCuuE,EAAS,EAAI5+E,KAAKwkD,GAAKk6B,EAC7B,IAAIlgE,EAAQ30B,KAAK80F,SAASrI,WAC1BhuF,EAAQ01E,OAAOsgB,EAAU5D,EAAS16E,KAAKq7C,IAAI78B,GAC5B+/D,EAAU7D,EAAS16E,KAAKs7C,IAAI98B,IAC3CA,GAASogE,EACT,IAAK,IAAIx2F,EAAI,EAAGA,EAAIs2F,EAAOt2F,GAAK,EAC9BE,EAAQ21E,OAAOqgB,EAAU5D,EAAS16E,KAAKq7C,IAAI78B,GAC5B+/D,EAAU7D,EAAS16E,KAAKs7C,IAAI98B,IAC3CA,GAASogE,EAEXt2F,EAAQ41E,WACT,CAES,IAAAtzC,CAAK8zD,EAAeC,EAAiBtB,EAChCC,EAA8BthD,GAC3C,OAAO,IAAIyiD,GAAYC,EAAOC,EAAUtB,EAAWC,EAAUthD,EAC9D,CAKD,aAAAlpB,CAActM,GACZ,OAAIA,aAAgBi4E,GACXI,GAAwBh1F,KAAM2c,GAEhC,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBi4E,KAClB50F,KAAK60F,QAAUl4E,EAAKk4E,OACpB70F,KAAK80F,SAAS3rE,aAAaxM,EAAKm4E,SAAU1rE,IAC1CoK,EAAAA,WAAWxzB,KAAKwzF,UAAW72E,EAAK62E,UAAWpqE,IAC3CppB,KAAKyzF,WAAa92E,EAAK82E,UACvBjgE,EAAWxzB,WAAAA,KAAKmyC,aAAcx1B,EAAKw1B,aAAc/oB,GAG3D,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBi4E,KAClB50F,KAAK60F,QAAUl4E,EAAKk4E,OACpB70F,KAAK80F,SAASp4E,OAAOC,EAAKm4E,WAC1BrhE,EAAAA,OAAOzzB,KAAKwzF,UAAW72E,EAAK62E,YAC5BxzF,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAGzC,CAGD,KAAA7oB,CAASjC,GAOP,OANAA,EAASA,EAAOE,MAAM,OAAOA,MAAM,IAAWA,MAAM,eAAeA,MAAM,IACzD+B,MAAMtpB,KAAK60F,OAAOttE,MAAM,MACxB+B,MAAMtpB,KAAK80F,UAAUvtE,MAAM,MAC3B+B,MAAMtpB,KAAKwzF,WAAWjsE,MAAM,MAC5B+B,MAAMtpB,KAAKyzF,UAAUlsE,MAAM,MAC3B+B,MAAMtpB,KAAKmyC,cAAc5qB,MAAM,GAEhD,CAGQ,QAAAxS,GACP,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAAwP,CAAcqlF,EAAeC,GAM3B,OAJEA,WADEA,EACS/lE,QAAMnmB,SAASksF,GAEf/lE,EAAAA,MAAMgI,OAEZ,IAAI69D,GAAYC,EAAOC,EAAU,KAAMjvD,GAAK2G,YAAa,KACjE,EA4BU,MAAAwoD,GAA0B,SAAWjqE,GAChD,MAAMiqE,EAA0B,SAAUX,EAAiBC,GACzD,MAAMppE,EAAe,SAAUC,GAC7B,MAAM0pE,EAAQ3pE,EAAa2pE,MACrBC,EAAW5pE,EAAa+pE,qBAAqB9pE,GAC7CqoE,EAAYtoE,EAAaqpE,sBAAsBppE,GAC/CsoE,EAAWvoE,EAAauoE,SACxBthD,EAAejnB,EAAainB,aAClC,OAAO,IAAIyiD,GAAYC,EAAOC,EAAUtB,EAAWC,EAAUthD,EAC/D,EAOA,OANAh0C,OAAOwtB,eAAeT,EAAc8pE,EAAwB/2F,WAC3DitB,EAA8C2pE,MAAQP,EAAGO,MACzD3pE,EAA8C+pE,qBAAuBZ,EAAGS,SAAS7rE,cAAcqrE,EAAGQ,UAClG5pE,EAA8CqpE,sBAAwB3oE,eAAayoE,EAAGb,UAAWc,EAAGd,WACpGtoE,EAA8CuoE,SAAWa,EAAGb,SAC5DvoE,EAA8CinB,aAAemiD,EAAGniD,aAC1DjnB,CACT,EA+CA,OAxCA8pE,EAAwB/2F,UAAYE,OAAOqR,OAAOub,EAAO9sB,WACzD+2F,EAAwB/2F,UAAU6B,YAAck1F,EAEhD72F,OAAOgB,eAAe61F,EAAwB/2F,UAAW,EAAG,CAC1D,GAAAc,GACE,MAAM81F,EAAQ70F,KAAK60F,MACbC,EAAW90F,KAAKi1F,qBAAqB,GACrCzB,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIyiD,GAAYC,EAAOC,EAAUtB,EAAWC,EAAUthD,EAC9D,EACDv4B,cAAc,IAGhBzb,OAAOgB,eAAe61F,EAAwB/2F,UAAW,EAAG,CAC1D,GAAAc,GACE,MAAM81F,EAAQ70F,KAAK60F,MACbC,EAAW90F,KAAKi1F,qBAAqB,GACrCzB,EAAYxzF,KAAKu0F,sBAAsB,GACvCd,EAAWzzF,KAAKyzF,SAChBthD,EAAenyC,KAAKmyC,aAC1B,OAAO,IAAIyiD,GAAYC,EAAOC,EAAUtB,EAAWC,EAAUthD,EAC9D,EACDv4B,cAAc,IAGhBo7E,EAAwB/2F,UAAUye,OAAS,SAAUC,GACnD,OAAI3c,OAAS2c,GAEFA,aAAgBq4E,IAClBh1F,KAAK60F,QAAUl4E,EAAKk4E,OACpB70F,KAAKi1F,qBAAqBv4E,OAAOC,EAAKs4E,uBACtCj1F,KAAKu0F,sBAAsB73E,OAAOC,EAAK43E,wBACvCv0F,KAAKyzF,WAAa92E,EAAK82E,UACvBhgE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,cAG1C,EAEO6iD,CACR,CAjEsC,CAiEpCppE,gBC5RUspE,IAAAA,GAAY,uBAAZ,OAAAt1F,EAAA,MAAAs1F,UAAqB7B,GAChC,WAAAvzF,CAAYq1F,EAAoBC,EAAoBC,EAAoBljD,EAC5DmjD,EAAsCC,GAChDx1F,QACAC,KAAKm1F,MAAQA,EACbn1F,KAAKo1F,MAAQA,EACbp1F,KAAKq1F,WAAaA,EAClBr1F,KAAKmyC,aAAeA,EACpBnyC,KAAKs1F,kBAAoBA,EACzBt1F,KAAKu1F,kBAAoBA,CAC1B,CAID,SAAAC,CAAUL,GACR,OAAIn1F,KAAKm1F,QAAUA,EACVn1F,KAEFA,KAAK+gC,KAAKo0D,EAAOn1F,KAAKo1F,MAAOp1F,KAAKq1F,WAAYr1F,KAAKmyC,aACzCnyC,KAAKs1F,kBAAmBt1F,KAAKu1F,kBAC/C,CAID,SAAAE,CAAUL,GACR,OAAIp1F,KAAKo1F,QAAUA,EACVp1F,KAEFA,KAAK+gC,KAAK/gC,KAAKm1F,MAAOC,EAAOp1F,KAAKq1F,WAAYr1F,KAAKmyC,aACzCnyC,KAAKs1F,kBAAmBt1F,KAAKu1F,kBAC/C,CAID,cAAAG,CAAeL,GACb,OAAIr1F,KAAKq1F,aAAeA,EACfr1F,KAEFA,KAAK+gC,KAAK/gC,KAAKm1F,MAAOn1F,KAAKo1F,MAAOC,EAAYr1F,KAAKmyC,aACzCnyC,KAAKs1F,kBAAmBt1F,KAAKu1F,kBAC/C,CAIQ,gBAAA1B,CAAiB1hD,GACxB,OAAI1e,SAAOzzB,KAAKmyC,aAAcA,GACrBnyC,KAEFA,KAAK+gC,KAAK/gC,KAAKm1F,MAAOn1F,KAAKo1F,MAAOp1F,KAAKq1F,WAAYljD,EACzCnyC,KAAKs1F,kBAAmBt1F,KAAKu1F,kBAC/C,CAEQ,UAAAz3C,CAAW5d,EAAYK,GAC9B,IAAIyd,EAAkBh+C,KAAKmyC,aACH,OAApB6L,IACFA,EAAkB3b,GAAWrB,SAE/B,MAAMkd,EAAkBF,EAAgBpZ,WAAW1E,EAAMK,GAAS,GAClE,OAAI2d,EAAgBxhC,OAAOshC,GAClBh+C,KAEFA,KAAK6zF,iBAAiB31C,EAC9B,CAKD,qBAAAy3C,CAAsBL,GACpB,OAAI7hE,SAAOzzB,KAAKs1F,kBAAmBA,GAC1Bt1F,KAEFA,KAAK+gC,KAAK/gC,KAAKm1F,MAAOn1F,KAAKo1F,MAAOp1F,KAAKq1F,WAAYr1F,KAAKmyC,aAC9CmjD,EAAmBt1F,KAAKu1F,kBAC1C,CAED,eAAAK,CAAgB11D,EAAYK,GAC1B,IAAIs1D,EAAuB71F,KAAKs1F,kBACH,OAAzBO,IACFA,EAAuBxzD,GAAWrB,SAEpC,MAAM80D,EAAuBD,EAAqBjxD,WAAW1E,EAAMK,GAAS,GAC5E,OAAIu1D,EAAqBp5E,OAAOm5E,GACvB71F,KAEFA,KAAK21F,sBAAsBG,EACnC,CAKD,qBAAAC,CAAsBR,GACpB,OAAI9hE,SAAOzzB,KAAKu1F,kBAAmBA,GAC1Bv1F,KAEFA,KAAK+gC,KAAK/gC,KAAKm1F,MAAOn1F,KAAKo1F,MAAOp1F,KAAKq1F,WAAYr1F,KAAKmyC,aAC9CnyC,KAAKs1F,kBAAmBC,EAC1C,CAED,eAAAS,CAAgB91D,EAAYK,GAC1B,IAAI01D,EAAuBj2F,KAAKu1F,kBACH,OAAzBU,IACFA,EAAuB5zD,GAAWrB,SAEpC,MAAMk1D,EAAuBD,EAAqBrxD,WAAW1E,EAAMK,GAAS,GAC5E,OAAI21D,EAAqBx5E,OAAOu5E,GACvBj2F,KAEFA,KAAK+1F,sBAAsBG,EACnC,CAEQ,QAAApC,GACP,MAAMqB,EAAQn1F,KAAKm1F,MACbC,EAAQp1F,KAAKo1F,MACnB,OAAkB,OAAVD,GAAkBA,EAAMrB,cACd,OAAVsB,GAAkBA,EAAMtB,WACjC,CAEQ,SAAAC,CAAU3sD,EAAoB/B,GACrC,MAAM8M,EAAenyC,KAAKmyC,aACpBmjD,EAAoBt1F,KAAKs1F,kBACzBC,EAAoBv1F,KAAKu1F,kBAE/B,IAAIY,EAAe9wD,EACE,OAAjB8M,IACFgkD,EAAehkD,EAAa1O,SAAS0yD,GAAc,IAGrD,MAAMC,EAAWp2F,KAAKm1F,MACtB,IAAIkB,EACJ,GAAiB,OAAbD,EACFC,EAAW,SACN,CACL,IAAIC,EAAYH,EACU,OAAtBb,IACFgB,EAAYhB,EAAkB7xD,SAAS6yD,GAAW,IAEpDD,EAAWD,EAASrC,UAAU3sD,EAAOkvD,EACtC,CAED,MAAMC,EAAWv2F,KAAKo1F,MACtB,IAAIoB,EACJ,GAAiB,OAAbD,EACFC,EAAW,SACN,CACL,IAAIC,EAAYN,EACU,OAAtBZ,IACFkB,EAAYlB,EAAkB9xD,SAASgzD,GAAW,IAEpDD,EAAWD,EAASxC,UAAU3sD,EAAOqvD,EACtC,CAED,OAAIJ,IAAaD,GAAYI,IAAaD,EACjCv2F,KAEFA,KAAK+gC,KAAKs1D,EAAUG,EAAUx2F,KAAKq1F,WAAYljD,EACrCmjD,EAAmBC,EACrC,CAEQ,MAAA5L,CAAOrW,EAA4B2J,GACtC3J,aAAoBoG,GACtB15E,KAAKg0F,MAAM1gB,EAAS70E,QAASw+E,GACpB3J,aAAoBmD,IAC7Bz2E,KAAKg9E,KAAK1J,EAAS70E,QAASw+E,EAE/B,CAEQ,KAAA+W,CAAMv1F,EAA0Bw+E,GACvC,MAAMkY,EAAQn1F,KAAKm1F,MACL,OAAVA,GACFA,EAAMnB,MAAMv1F,EAASuB,KAAK02F,WAAWzZ,IAEvC,MAAMmY,EAAQp1F,KAAKo1F,MACL,OAAVA,GACFA,EAAMpB,MAAMv1F,EAASuB,KAAK22F,WAAW1Z,GAExC,CAEQ,IAAAD,CAAKv+E,EAAyBw+E,GACrC,MAAMkY,EAAQn1F,KAAKm1F,MACL,OAAVA,GACFA,EAAMnY,KAAKv+E,EAASuB,KAAK02F,WAAWzZ,IAEtC,MAAMmY,EAAQp1F,KAAKo1F,MACL,OAAVA,GACFA,EAAMpY,KAAKv+E,EAASuB,KAAK22F,WAAW1Z,GAEvC,CAED,UAAAyZ,CAAWzZ,GACT,OAAOA,CACR,CAED,UAAA0Z,CAAW1Z,GACT,IAAIppB,KAACA,EAAIG,KAAEA,EAAIG,KAAEA,EAAIE,KAAEA,GAAQ4oB,EAC3Br2B,EAAQoN,EAAOH,EACfrtC,EAAS6tC,EAAOF,EACpB,MAAMkhC,EAAar1F,KAAKq1F,WACxB,GAAmB,IAAfA,EAAkB,CACpB,MAAM9c,GAAM1kB,EAAOG,GAAQ,EACrBwkB,GAAMrkB,EAAOE,GAAQ,EAC3BzN,GAAgByuC,EAChB7uE,GAAkB6uE,EAClBxhC,EAAO0kB,EAAK3xB,EAAQ,EACpBuN,EAAOqkB,EAAKhyD,EAAS,EACrBwtC,EAAOukB,EAAK3xB,EAAQ,EACpByN,EAAOmkB,EAAKhyD,EAAS,CACtB,CACD,GAAIogC,EAAQpgC,EAAQ,CAClB,MAAMowE,GAAMhwC,EAAQpgC,GAAU,EAC9BqtC,GAAQ+iC,EACR5iC,GAAQ4iC,CACT,MAAM,GAAIhwC,EAAQpgC,EAAQ,CACzB,MAAMqwE,GAAMrwE,EAASogC,GAAS,EAC9BuN,GAAQ0iC,EACRxiC,GAAQwiC,CACT,CACD,OAAIjwC,IAAUpgC,GAAyB,IAAf6uE,EACfpY,EAEF,IAAIp8B,EAAAA,MAAMgT,EAAMM,EAAMH,EAAMK,EACpC,CAES,IAAAtzB,CAAKo0D,EAAoBC,EAAoBC,EAAoBljD,EAC5DmjD,EAAsCC,GACnD,OAAO,IAAIL,EAAaC,EAAOC,EAAOC,EAAYljD,EAAcmjD,EAAmBC,EACpF,CAKD,aAAAtsE,CAActM,GACZ,OAAIA,aAAgBu4E,EACX4B,GAAyB92F,KAAM2c,GAEjC,IACR,CAGD,YAAAwM,CAAaxM,EAAeyM,GAC1B,OAAIppB,OAAS2c,GAEFA,aAAgBu4E,IAClB1hE,EAAWxzB,WAAAA,KAAKm1F,MAAOx4E,EAAKw4E,MAAO/rE,IACnCoK,EAAAA,WAAWxzB,KAAKo1F,MAAOz4E,EAAKy4E,MAAOhsE,IACnCoK,EAAAA,WAAWxzB,KAAKq1F,WAAY14E,EAAK04E,WAAYjsE,IAC7CoK,EAAAA,WAAWxzB,KAAKmyC,aAAcx1B,EAAKw1B,aAAc/oB,IACjDoK,EAAAA,WAAWxzB,KAAKs1F,kBAAmB34E,EAAK24E,kBAAmBlsE,IAC3DoK,aAAWxzB,KAAKu1F,kBAAmB54E,EAAK44E,kBAAmBnsE,GAGrE,CAGD,MAAA1M,CAAOC,GACL,OAAI3c,OAAS2c,GAEFA,aAAgBu4E,IAClBzhE,EAAAA,OAAOzzB,KAAKm1F,MAAOx4E,EAAKw4E,QACxB1hE,SAAOzzB,KAAKo1F,MAAOz4E,EAAKy4E,QACxB3hE,EAAAA,OAAOzzB,KAAKq1F,WAAY14E,EAAK04E,aAC7B5hE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,eAC/B1e,EAAOzzB,OAAAA,KAAKs1F,kBAAmB34E,EAAK24E,oBACpC7hE,SAAOzzB,KAAKu1F,kBAAmB54E,EAAK44E,mBAG9C,CAGD,KAAAjsE,CAASjC,GAQP,OAPAA,EAASA,EAAOE,MAAM,OAAOA,MAAM,IAAWA,MAAM,gBAAgBA,MAAM,IAC1D+B,MAAMtpB,KAAKm1F,OAAO5tE,MAAM,MACxB+B,MAAMtpB,KAAKo1F,OAAO7tE,MAAM,MACxB+B,MAAMtpB,KAAKq1F,YAAY9tE,MAAM,MAC7B+B,MAAMtpB,KAAKmyC,cAAc5qB,MAAM,MAC/B+B,MAAMtpB,KAAKs1F,mBAAmB/tE,MAAM,MACpC+B,MAAMtpB,KAAKu1F,mBAAmBhuE,MAAM,GAErD,CAGQ,QAAAxS,GACP,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,aAAAwP,CAAc2lF,EAAoBC,GAChC,OAAO,IAAIF,EAAaC,EAAOC,EAAO,EAAG,KAAM,KAAM,KACtD,CAED,eAAA7mD,CAAgB4mD,EAAoBC,GAClC,OAAO,IAAIF,EAAaC,EAAOC,EAAO,EAAG,KAAM,KAAMF,EAAa6B,qBACnE,CAGD,+BAAWA,GACT,OAAO10D,GAAWrB,QAAQ4D,WAAWuI,GAAKO,QAAS,CAAC,CAACP,GAAKoB,SAAU,KAAK,EAC1E,GAHA3jB,EAAAA,CAAAA,EAAAA,MACDztB,EAAAyC,EAAA,KAAAo3F,EAAA,CAAAl5F,KAAA,SAAAO,KAAA,uBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,yBAAAA,EAAA5T,IAAA4T,GAAAA,EAAWokF,uBAEV,KAAAjsE,GAvSU1rB,EAAYQ,EAAAkrB,IAAA,EAAA,GAsUZ,MAAAgsE,GAA2B,SAAW/rE,GACjD,MAAM+rE,EAA2B,SAAUzC,EAAkBC,GAC3D,MAAMppE,EAAe,SAAUC,GAC7B,MAAMgqE,EAAQjqE,EAAa+rE,kBAAkB9rE,GACvCiqE,EAAQlqE,EAAagsE,kBAAkB/rE,GACvCkqE,EAAanqE,EAAaisE,uBAAuBhsE,GACjDgnB,EAAejnB,EAAainB,aAC5BmjD,EAAoBpqE,EAAaoqE,kBACjCC,EAAoBrqE,EAAaqqE,kBACvC,OAAO,IAAIL,GAAaC,EAAOC,EAAOC,EAAYljD,EAC1BmjD,EAAmBC,EAC7C,EAQA,OAPAp3F,OAAOwtB,eAAeT,EAAc4rE,EAAyB74F,WAC5DitB,EAA8C+rE,kBAAoBrrE,eAAayoE,EAAGc,MAAOb,EAAGa,OAC5FjqE,EAA8CgsE,kBAAoBtrE,eAAayoE,EAAGe,MAAOd,EAAGc,OAC5FlqE,EAA8CisE,uBAAyBvrE,eAAayoE,EAAGgB,WAAYf,EAAGe,YACtGnqE,EAA8CinB,aAAemiD,EAAGniD,aAChEjnB,EAA8CoqE,kBAAoBhB,EAAGgB,kBACrEpqE,EAA8CqqE,kBAAoBjB,EAAGiB,kBAC/DrqE,CACT,EAoDA,OA7CA4rE,EAAyB74F,UAAYE,OAAOqR,OAAOub,EAAO9sB,WAC1D64F,EAAyB74F,UAAU6B,YAAcg3F,EAEjD34F,OAAOgB,eAAe23F,EAAyB74F,UAAW,EAAG,CAC3D,GAAAc,GACE,MAAMo2F,EAAQn1F,KAAKi3F,kBAAkB,GAC/B7B,EAAQp1F,KAAKk3F,kBAAkB,GAC/B7B,EAAar1F,KAAKm3F,uBAAuB,GACzChlD,EAAenyC,KAAKmyC,aACpBmjD,EAAoBt1F,KAAKs1F,kBACzBC,EAAoBv1F,KAAKu1F,kBAC/B,OAAO,IAAIL,GAAaC,EAAOC,EAAOC,EAAYljD,EAC1BmjD,EAAmBC,EAC5C,EACD37E,cAAc,IAGhBzb,OAAOgB,eAAe23F,EAAyB74F,UAAW,EAAG,CAC3D,GAAAc,GACE,MAAMo2F,EAAQn1F,KAAKi3F,kBAAkB,GAC/B7B,EAAQp1F,KAAKk3F,kBAAkB,GAC/B7B,EAAar1F,KAAKm3F,uBAAuB,GACzChlD,EAAenyC,KAAKmyC,aACpBmjD,EAAoBt1F,KAAKs1F,kBACzBC,EAAoBv1F,KAAKu1F,kBAC/B,OAAO,IAAIL,GAAaC,EAAOC,EAAOC,EAAYljD,EAC1BmjD,EAAmBC,EAC5C,EACD37E,cAAc,IAGhBk9E,EAAyB74F,UAAUye,OAAS,SAAUC,GACpD,OAAI3c,OAAS2c,GAEFA,aAAgBm6E,IAClB92F,KAAKi3F,kBAAkBv6E,OAAOC,EAAKs6E,oBACnCj3F,KAAKk3F,kBAAkBx6E,OAAOC,EAAKu6E,oBACnCl3F,KAAKm3F,uBAAuBz6E,OAAOC,EAAKw6E,yBACxC1jE,EAAAA,OAAOzzB,KAAKmyC,aAAcx1B,EAAKw1B,eAC/B1e,EAAOzzB,OAAAA,KAAKs1F,kBAAmB34E,EAAK24E,oBACpC7hE,SAAOzzB,KAAKu1F,kBAAmB54E,EAAK44E,mBAG/C,EAEOuB,CACR,CAzEuC,CAyErClrE,gBClZUwrE,GAAW,CACtB,CAACn6E,OAAOC,aAAa2K,GACZA,aAAoBgqB,IACpB,eAAgBhqB,GAChB,cAAeA,GACf,aAAcA,GAKZwvE,GAAyE7xD,GAAcjyB,OAAiE,uBAAwB,CAC3L1B,UAAWuhE,GAEX,WAAAvrC,CAAYyvD,GACV,MAAMC,EAAWv3F,KAAKuR,MACtB,KAAK6lF,GAASn6E,OAAOC,aAAaq6E,IAAeD,aAAoBjE,IACnE,OAAOiE,EAET,MAAMprD,EAAYqrD,EAASrrD,UAAUhF,MAIrC,OAHkB,OAAdgF,GAAsBorD,aAAoBhE,IAAcgE,EAAS7D,WAAa8D,EAASrrD,UAAU9K,OACnGk2D,EAAWA,EAAS3D,cAAcznD,IAE7BorD,CACR,EAED,cAAAE,CAAeF,GACb,MAAMC,EAAWv3F,KAAKuR,MACtB,KAAK6lF,GAASn6E,OAAOC,aAAaq6E,IAAeD,aAAoBjE,IACnE,OAAOiE,EAET,MAAMprD,EAAYqrD,EAASrrD,UAAUhF,MACrC,GAAkB,OAAdgF,GAAsBorD,aAAoBhE,GAC5CgE,EAAWA,EAAS3D,cAAcznD,OAC7B,CACL,MAAM9E,EAAQmwD,EAASnwD,MAAM9nC,MACvB+lC,EAAOkyD,EAASlyD,KAAK/lC,MACb,OAAV8nC,GAA2B,OAAT/B,IACpBiyD,EAAWA,EAASvD,UAAU3sD,EAAO/B,GAExC,CACD,OAAOiyD,CACR,IC1CUG,IAAAA,GAAgB,qCAAhB,OAAA73F,EAAA,cAAyByzE,qCAG3BrzE,KAAA03F,YAA+Ct4F,EAAAY,KAAAE,GAAAd,EAAAY,KAAA23F,OAAA,IAuB/C33F,KAAAs3F,SAAgDl4F,EAAAY,KAAA43F,OAAA,EAwD1D,CAnEC,aAAI1rD,GACF,OAAO1G,GAAcv2B,QACtB,CAWkB,YAAA0uC,CAAavW,EAAoB/B,EAAkBxpB,GAEpE,GADA9b,MAAM49C,aAAavW,EAAO/B,EAAMxpB,IAC3B7b,KAAKs3F,SAASxgD,QAAS,CAC1B,MAAM+gD,EAAc73F,KAAKs3F,SAASh4F,MAClC,GAAIu4F,aAAuBxE,GAAM,CAC/B,MAAMyE,EAAcD,EAAY9D,UAAU3sD,EAAO/B,GACjDrlC,KAAKs3F,SAAS96D,SAASs7D,IAAaD,EAAY/D,YAAaj4E,EAAgB5F,EAASgnB,SAAAA,UACvF,CACF,CACF,CAEkB,QAAAsf,GACjBx8C,MAAMw8C,WACN,MAAM+2B,EAAWtzE,KAAKszE,SAASh0E,MAC3Bg0E,aAAoBoG,KAAqB15E,KAAK+2C,SAAW/2C,KAAK20C,QAChE30C,KAAK+3F,WAAWzkB,EAAUtzE,KAAK80E,WAElC,CAES,UAAAijB,CAAWzkB,EAA4B2J,GAC/C,MAAMqa,EAAWt3F,KAAKs3F,SAASh4F,MAC/B,GAAiB,OAAbg4F,EAAmB,CACLhkB,EAAS70E,QACjBy1E,YACRojB,EAAS3N,OAAOrW,EAAU2J,EAC3B,CACF,CAIkB,OAAAxH,CAAQn8D,EAAWC,GACpC,MAAM+5D,EAAWtzE,KAAKszE,SAASh0E,MAC/B,OAAIg0E,aAAoBgJ,GACft8E,KAAKg4F,YAAY1+E,EAAGC,EAAG+5D,EAAUtzE,KAAK80E,YAExC,IACR,CAES,WAAAkjB,CAAY1+E,EAAWC,EAAW+5D,EAA0B2J,GAEpE,OAAIj9E,KAAKm1E,UAAU1K,SAASnxD,EAAGC,GACtBvZ,KAWF,IACR,GA/EAi4F,EAAA,CAAAl8E,EAAAA,SAAS,CAAClK,UAAWghF,GAAYvzF,MAAO,KAAMoC,YAAamwC,GAAKkK,eAIhEm8C,EAAA,CAAA1yD,GAAc,CACb3zB,UAAW6b,EACXpuB,MAAO,KACPoC,YAAamwC,GAAKkK,YAClB,WAAAo8C,CAAYjsD,GACV,MAAMrwB,EAAyB,OAAhB7b,KAAK6b,QAAkB7b,KAAK6b,OAC3C7b,KAAKuR,MAAM+lF,SAAS96D,SAASx8B,KAAKuR,MAAM+lF,SAASpwD,MAAOrrB,EAAQ5F,EAASgnB,SAAAA,UAC1E,KAOFm7D,EAAA,CAAA5yD,GAAc,CACbgnB,QAAS6qC,GACTxlF,UAAWuhE,GACX9zE,MAAO,KACPoC,YAAamwC,GAAKkK,eATpB5+C,EAAAyC,EAAA,KAAAs4F,EAAA,CAAAp6F,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAIu5B,YAEH,KAAAhsC,GAdD/C,EAAS,KAAA,KAAA86F,EAAA,CAAAn6F,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+kF,WAAA14F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+kF,WAA+Cp4F,CAAAA,IAAAq4F,EAAAz3F,GAuBxD/C,EAAS,KAAA,KAAAi7F,EAAA,CAAAt6F,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2kF,SAAAt4F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2kF,SAAgDh4F,CAAAA,IAAAs4F,EAAA13F,IA1B9B,EAAA,GAmF7B/B,OAAOgB,eAAes4F,GAAiBx5F,UAAW,aAAc,CAC9D,GAAAc,GACE,MAAMy1E,EAAYx0E,KAAKw0E,UACjB6jB,EAAY7jB,EAAU5tB,MACtB0xC,EAAa9jB,EAAUhuD,OACvB+xE,EAAWpiF,KAAKC,IAAIiiF,EAAWC,GAC/BZ,EAAa13F,KAAK03F,WAAWp4F,MAC7Bk5F,EAA2B,OAAfd,EAAsBA,EAAW9wC,MAAMoX,QAAQu6B,GAAYA,EACvEE,EAA4B,OAAff,EAAsBA,EAAWlxE,OAAOw3C,QAAQu6B,GAAYA,EACzErJ,EAAwB,OAAfwI,EAAsBA,EAAWxI,OAAS,GACnDE,EAAwB,OAAfsI,EAAsBA,EAAWtI,OAAS,GACnD91E,EAAIk7D,EAAUl7D,GAAK++E,EAAYG,GAAatJ,EAC5C31E,EAAIi7D,EAAUj7D,GAAK++E,EAAaG,GAAcrJ,EACpD,OAAO,IAAIvuC,EAAAA,MAAMvnC,EAAGC,EAAGD,EAAIk/E,EAAWj/E,EAAIk/E,EAC3C,EACD7+E,cAAc,ICjGH8+E,IAAAA,GAAW,qCAAX,OAAA94F,EAAA,cAAoBotE,qCAGtBhtE,KAAA03F,YAA+Ct4F,EAAAY,KAAAE,GAAAd,EAAAY,KAAA23F,OAAA,IAuB/C33F,KAAAs3F,SAAgDl4F,EAAAY,KAAA43F,OAAA,EAqE1D,CAhFC,aAAI1rD,GACF,OAAO1G,GAAcv2B,QACtB,CAWkB,YAAA0uC,CAAavW,EAAoB/B,EAAkBxpB,GAEpE,GADA9b,MAAM49C,aAAavW,EAAO/B,EAAMxpB,IAC3B7b,KAAKs3F,SAASxgD,QAAS,CAC1B,MAAM+gD,EAAc73F,KAAKs3F,SAASh4F,MAClC,GAAIu4F,aAAuBxE,GAAM,CAC/B,MAAMyE,EAAcD,EAAY9D,UAAU3sD,EAAO/B,GACjDrlC,KAAKs3F,SAAS96D,SAASs7D,IAAaD,EAAY/D,YAAaj4E,EAAgB5F,EAASgnB,SAAAA,UACvF,CACF,CACF,CAEkB,QAAA6c,GACjB/5C,MAAM+5C,WACN95C,KAAK+C,cAAc8uC,GAAKgK,YACzB,CAEkB,YAAAJ,CAAaC,GAI9B,OAHwC,IAAnC17C,KAAK2B,MAAQkwC,GAAKgK,eACrBH,IAAiB7J,GAAKgK,aAEjBH,CACR,CAEkB,QAAAY,GACjBv8C,MAAMu8C,WACNt8C,KAAK+3F,YACN,CAES,UAAAA,GACR,MAAMt5F,EAAU,IAAIk7E,GAAW35E,MAC/BvB,EAAQo4E,aAAa,GACrBp4E,EAAQ09E,WACR,MAAMmb,EAAWt3F,KAAKs3F,SAASh4F,MAC/B,GAAiB,OAAbg4F,EAAmB,CACrB,MAAMra,EAAQj9E,KAAK24F,WACnB,GAAI1b,EAAMpsE,aAAeosE,EAAMr2B,MAAQ,GAAKq2B,EAAMz2D,OAAS,EAAG,CAC5D/nB,EAAQy1E,YACR,MAAMZ,EAAW,IAAI+I,GAAY59E,GACjC64F,EAAS3N,OAAOrW,EAAU2J,EAC3B,CACF,CACDx+E,EAAQ29E,aACT,CAED,cAAIuc,GACF,IAAIC,EAAkB54F,KAAKgiE,KAAK42B,gBAIhC,GAHwB,OAApBA,IACFA,EAAkB54F,KAAKgiE,QAEnB42B,aAA2BC,eAC/B,OAAOh4C,EAAAA,MAAMC,YAEf,MAAM6yB,EAAUilB,EAAgBjlB,QAAQmlB,QAClCT,EAAY1kB,EAAQ/sB,MACpB0xC,EAAa3kB,EAAQntD,OACrB+xE,EAAWpiF,KAAKC,IAAIiiF,EAAWC,GAC/BZ,EAAa13F,KAAK03F,WAAWp4F,MAC7Bk5F,EAA2B,OAAfd,EAAsBA,EAAW9wC,MAAMoX,QAAQu6B,GAAYA,EACvEE,EAA4B,OAAff,EAAsBA,EAAWlxE,OAAOw3C,QAAQu6B,GAAYA,EACzErJ,EAAwB,OAAfwI,EAAsBA,EAAWxI,OAAS,GACnDE,EAAwB,OAAfsI,EAAsBA,EAAWtI,OAAS,GACnD91E,EAAIq6D,EAAQr6D,GAAK++E,EAAYG,GAAatJ,EAC1C31E,EAAIo6D,EAAQp6D,GAAK++E,EAAaG,GAAcrJ,EAClD,OAAO,IAAIvuC,EAAAA,MAAMvnC,EAAGC,EAAGD,EAAIk/E,EAAWj/E,EAAIk/E,EAC3C,GA1FAR,EAAA,CAAAl8E,EAAAA,SAAS,CAAClK,UAAWghF,GAAYvzF,MAAO,KAAMoC,YAAamwC,GAAKgK,eAIhEq8C,EAAA,CAAA1yD,GAAc,CACb3zB,UAAW6b,EACXpuB,MAAO,KACPoC,YAAamwC,GAAKgK,YAClB,WAAAs8C,CAAYjsD,GACV,MAAMrwB,EAAyB,OAAhB7b,KAAK6b,QAAkB7b,KAAK6b,OAC3C7b,KAAKuR,MAAM+lF,SAAS96D,SAASx8B,KAAKuR,MAAM+lF,SAASpwD,MAAOrrB,EAAQ5F,EAASgnB,SAAAA,UAC1E,KAOFm7D,EAAA,CAAA5yD,GAAc,CACbgnB,QAAS6qC,GACTxlF,UAAWuhE,GACX9zE,MAAO,KACPoC,YAAamwC,GAAKgK,eATpB1+C,EAAAyC,EAAA,KAAAs4F,EAAA,CAAAp6F,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAIu5B,YAEH,KAAAhsC,GAdD/C,EAAS,KAAA,KAAA86F,EAAA,CAAAn6F,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+kF,WAAA14F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+kF,WAA+Cp4F,CAAAA,IAAAq4F,EAAAz3F,GAuBxD/C,EAAS,KAAA,KAAAi7F,EAAA,CAAAt6F,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2kF,SAAAt4F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2kF,SAAgDh4F,CAAAA,IAAAs4F,EAAA13F,GAoEhCN,EAAAuT,WAAwB65D,GAAQ75D,WAAa0+B,GAAK4D,aAAAA,CA9FrD,EAAA,GCDXsjD,GAAY,4CAAZ,OAAAn5F,EAAA,cAAqBktE,GAChC,WAAAhtE,CAAYkiE,GACVjiE,MAAMiiE,GAUChiE,KAAA03F,YAA+Ct4F,EAAAY,KAAAE,GAAAd,EAAAY,KAAA23F,OAAA,IAuB/C33F,KAAAs3F,SAAgDl4F,EAAAY,KAAA43F,OAAA,GAgBhD53F,KAAAg5F,IAAiC55F,EAAAY,KAAAi5F,OAAA,GAhDxCj5F,KAAKk5F,UACN,CAES,QAAAA,GACRl5F,KAAKioB,MAAM+nD,SAASz6D,aAAa,WAClC,CAgBD,aAAI22B,GACF,OAAO1G,GAAcv2B,QACtB,CA2BkB,YAAA0uC,CAAavW,EAAoB/B,EAAkBxpB,GAEpE,GADA9b,MAAM49C,aAAavW,EAAO/B,EAAMxpB,IAC3B7b,KAAKs3F,SAASxgD,QAAS,CAC1B,MAAM+gD,EAAc73F,KAAKs3F,SAASh4F,MAClC,GAAIu4F,aAAuBxE,GAAM,CAC/B,MAAMyE,EAAcD,EAAY9D,UAAU3sD,EAAO/B,GACjDrlC,KAAKs3F,SAAS96D,SAASs7D,IAAaD,EAAY/D,YAAaj4E,EAAgB5F,EAASgnB,SAAAA,UACvF,CACF,CACF,CAEkB,QAAA6c,GACjB/5C,MAAM+5C,WACN95C,KAAK+C,cAAc8uC,GAAKgK,YACzB,CAEkB,YAAAJ,CAAaC,GAI9B,OAHwC,IAAnC17C,KAAK2B,MAAQkwC,GAAKgK,eACrBH,IAAiB7J,GAAKgK,aAEjBH,CACR,CAEkB,QAAAY,GACjBv8C,MAAMu8C,WACNt8C,KAAKm5F,YACN,CAES,UAAAA,GACR,MAAMC,EAAUp5F,KAAKg5F,IAAI31C,KACzB,GAAgB,OAAZ+1C,IAAqBA,EAAQ1rB,WAAW9mB,MAAM7I,YAAY9nC,WAASI,aAC9C+iF,EAAQ1rB,WAAWlnD,OAAOu3B,YAAY9nC,EAAAA,SAASI,aAC/C+iF,EAAQ1rB,WAAWiG,QAAQ51B,YAAY9nC,WAASI,WACvE,OAEF,MAAMuwC,EAAQ5mD,KAAKioB,MAAM2+B,MAAMoX,UACzBx3C,EAASxmB,KAAKioB,MAAMzB,OAAOw3C,UACjCo7B,EAAQ1rB,WAAWn4D,aAAa,CAC9BqxC,MAAAA,EAAOpgC,OAAAA,EACPmtD,QAAS,OAAS/sB,EAAQ,IAAMpgC,GAEnC,GAnFAyxE,EAAA,CAAAl8E,EAAAA,SAAS,CAAClK,UAAWghF,GAAYvzF,MAAO,KAAMoC,YAAamwC,GAAKgK,eAIhEq8C,EAAA,CAAA1yD,GAAc,CACb3zB,UAAW6b,EACXpuB,MAAO,KACPoC,YAAamwC,GAAKgK,YAClB,WAAAs8C,CAAYjsD,GACV,MAAMrwB,EAAyB,OAAhB7b,KAAK6b,QAAkB7b,KAAK6b,OAC3C7b,KAAKuR,MAAM+lF,SAAS96D,SAASx8B,KAAKuR,MAAM+lF,SAASpwD,MAAOrrB,EAAQ5F,EAASgnB,SAAAA,UAC1E,KAOFm7D,EAAA,CAAA5yD,GAAc,CACbgnB,QAAS6qC,GACTxlF,UAAWuhE,GACX9zE,MAAO,KACPoC,YAAamwC,GAAKgK,eAInBw9C,EAAA,CAAAr1C,GAAQ,CACPb,SAAUu1C,GACVt0C,SAAS,EACT74C,OAAO,EACP,IAAAtM,GACEe,KAAK0kD,YACN,EACD,QAAAtB,CAASg2C,GACPA,EAAQnxE,MAAM+nD,SAAShxE,IAAI,YAC3Bo6F,EAAQ1B,WAAW4B,aAAY,GAC/BF,EAAQltD,UAAUotD,aAAY,GAC9BF,EAAQ9B,SAASgC,aAAY,EAC9B,KAzBHn8F,EAAAyC,EAAA,KAAAs4F,EAAA,CAAAp6F,KAAA,SAAAO,KAAA,YAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,cAAAA,EAAA5T,IAAA4T,GAAAA,EAAIu5B,YAEH,KAAAhsC,GAdD/C,EAAS,KAAA,KAAA86F,EAAA,CAAAn6F,KAAA,QAAAO,KAAA,aAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,eAAAA,EAAA5T,IAAA4T,GAAAA,EAAA+kF,WAAA14F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA+kF,WAA+Cp4F,CAAAA,IAAAq4F,EAAAz3F,GAuBxD/C,EAAS,KAAA,KAAAi7F,EAAA,CAAAt6F,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAA2kF,SAAAt4F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA2kF,SAAgDh4F,CAAAA,IAAAs4F,EAAA13F,GAgBzD/C,EAAS,KAAA,KAAAk8F,EAAA,CAAAv7F,KAAA,QAAAO,KAAA,MAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,QAAAA,EAAA5T,IAAA4T,GAAAA,EAAAqmF,IAAAh6F,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAqmF,IAAiC15F,CAAAA,IAAA25F,EAAA/4F,IAnDnB,EAAA,GC0FZq5F,GAAU,oCAAV,OAAA35F,EAAA,MAAA25F,UAAmB15F,YAC9B,WAAAC,GACEC,QAwdOC,KAAAK,eAAwCjB,EAAAY,KAAAE,GAoLxCF,KAAAG,QAA0Cf,EAAAY,KAAAI,OAAA,GA3oBjDJ,KAAKK,UAAY,IAClB,CAKD,iBAAaG,GACX,OAAO+4F,CACR,CAEkB,gBAAA94F,CAAiBC,GAClCV,KAAKW,cAAc,6BAA8BD,EAAQV,KAC1D,CAEkB,cAAAgB,CAAeN,GAEjC,CAEkB,eAAAO,CAAgBP,GACjCV,KAAKW,cAAc,4BAA6BD,EAAQV,KACzD,CAEkB,gBAAAkB,CAAiBR,GAClCV,KAAKW,cAAc,6BAA8BD,EAAQV,KAC1D,CAEkB,cAAAmB,CAAeT,GAEjC,CAEkB,eAAAU,CAAgBV,GACjCV,KAAKW,cAAc,4BAA6BD,EAAQV,KACzD,CAEkB,eAAAqB,CAAgBC,EAAmBtD,GACpD+B,MAAMsB,gBAAgBC,EAAOtD,GAC7BgC,KAAKW,cAAc,4BAA6BW,EAAOtD,EAAQgC,KAChE,CAEkB,aAAAuB,CAAcD,EAAmBtD,GAClD+B,MAAMwB,cAAcD,EAAOtD,EAC5B,CAEkB,cAAAwD,CAAeF,EAAmBtD,GACnDgC,KAAKW,cAAc,2BAA4BW,EAAOtD,EAAQgC,MAC9DD,MAAMyB,eAAeF,EAAOtD,EAC7B,CAGQ,aAAAyD,CAAcC,GACyB,IAAzC1B,KAAK2B,MAAQ43F,EAAW33F,wBAElBF,IACTA,EAAc,GAG+B,KAD/CA,GAAe1B,KAAK2B,MAAQ43F,EAAW13F,YACpB03F,EAAWC,cAC5Bx5F,KAAKy5F,eAAe/3F,GAEvB,CAEkB,eAAAM,CAAgBV,GACjCvB,MAAMiC,gBAAgBV,GACtBtB,KAAKW,cAAc,4BAA6BW,EAAOtB,KACxD,CAEkB,aAAAiC,CAAcX,GAC/BvB,MAAMkC,cAAcX,EACrB,CAEkB,cAAAY,CAAeZ,GAChCtB,KAAKW,cAAc,2BAA4BW,EAAOtB,MACtDD,MAAMmC,eAAeZ,EACtB,CAEkB,iBAAAa,CAAkBb,EAAmBtD,GACtD+B,MAAMoC,kBAAkBb,EAAOtD,GAC/BgC,KAAKW,cAAc,8BAA+BW,EAAOtD,EAAQgC,KAClE,CAEkB,eAAAoC,CAAgBd,EAAmBtD,GACpD+B,MAAMqC,gBAAgBd,EAAOtD,EAC9B,CAEkB,gBAAAqE,CAAiBf,EAAmBtD,GACrDgC,KAAKW,cAAc,6BAA8BW,EAAOtD,EAAQgC,MAChED,MAAMsC,iBAAiBf,EAAOtD,EAC/B,CAEkB,SAAAwE,GACjBzC,MAAMyC,YACNxC,KAAKW,cAAc,sBAAuBX,KAC3C,CAEkB,QAAA6C,GAEjB7C,KAAK8C,cAAc9C,KAAMA,KAAK2B,MAAQ43F,EAAW13F,YAAY,GAC7D7B,KAAK+C,cAAc/C,KAAKgD,YAEA,OAApBhD,KAAKiD,YAAkD,IAA3BjD,KAAKiD,WAAWzE,QAC9CwB,KAAK+C,cAAcw2F,EAAWG,aAGhC15F,KAAKmD,iBAEkB,OAAnBnD,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,iBAGPrD,KAAKW,cAAc,qBAAsBX,MACzCD,MAAM8C,UACP,CAEkB,WAAAU,GACjBxD,MAAMwD,cACNvD,KAAKW,cAAc,wBAAyBX,MAE5CA,KAAK4D,eACN,CAEkB,UAAAD,GACjB3D,KAAKW,cAAc,uBAAwBX,MAC3CD,MAAM4D,YACP,CAEQ,aAAAZ,CAAcrB,EAA8ByC,GAAqB,GACxE,MAAMxC,EAAQ3B,KAAK2B,MACbyC,EAAmB1C,GAAeC,EAAQ43F,EAAW13F,WAClC,IAArBuC,IAGJpE,KAAKyC,SAASd,EAAQyC,GACtBpE,KAAK8C,cAAc9C,KAAMoE,EAAkBD,GAC5C,CAES,WAAAE,CAAY3C,EAA8ByC,GAClD,OAAOzC,CACR,CAED,aAAAoB,CAAc9E,EAAoB0D,EAA8ByC,GAC9DzC,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK2B,OAASD,EAAc63F,EAAW13F,WAO9D,GAN+C,IAA1CH,EAAc63F,EAAWC,eAC5Bp1F,GAAoBm1F,EAAWI,cAEc,IAA1Cj4F,EAAc63F,EAAWK,eAC5Bx1F,GAAoBm1F,EAAWM,cAER,IAArBz1F,IAA2BD,EAC7B,OAEFnE,KAAKyC,SAASzC,KAAK2B,MAAQyC,GAC3B,MAAM1D,EAASV,KAAKU,OACpB,GAAe,OAAXA,EACFA,EAAOoC,cAAc9E,EAAQ0D,EAAayC,QACrC,GAAInE,KAAKyE,QAAS,CACvB,MAAMC,EAAiB1E,KAAKG,QAAQwE,QACb,OAAnBD,GACFA,EAAe5B,cAAc9E,EAAQ0D,EAAayC,EAErD,CACF,CAED,YAAIS,GACF,OAAkD,IAA1C5E,KAAK2B,MAAQ43F,EAAW10F,aACjC,CAED,aAAIi1F,GACF,OAAmD,IAA3C95F,KAAK2B,MAAQ43F,EAAWQ,cACjC,CAES,YAAAC,CAAaC,GACrB,OAAOA,CACR,CAED,cAAAR,CAAeQ,GACb,IAIE,GAHAA,IAAiBV,EAAWI,aAC5BM,GAAgBj6F,KAAK2B,MAAQ43F,EAAW13F,WAEQ,KADhDo4F,EAAej6F,KAAKg6F,aAAaC,IACbV,EAAWC,aAC7B,OAEF,IAAIt0F,EAAe+0F,EACnBj6F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWI,aAAeJ,EAAWQ,eACjE/5F,KAAKk6F,YAAYh1F,GAC+C,KAA1DlF,KAAK2B,MAAQs4F,GAAgBV,EAAWY,gBAC5Cj1F,GAAgBq0F,EAAWY,aAC3Bn6F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWY,cACvCn6F,KAAKo6F,eAE0D,KAA3Dp6F,KAAK2B,MAAQs4F,GAAgBV,EAAWc,iBAC5Cn1F,GAAgBq0F,EAAWc,cAC3Br6F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWc,eACvCr6F,KAAKs6F,gBAE0D,KAA3Dt6F,KAAK2B,MAAQs4F,GAAgBV,EAAWgB,iBAC5Cr1F,GAAgBq0F,EAAWgB,cAC3Bv6F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWgB,eACvCv6F,KAAKw6F,gBAGPx6F,KAAKy6F,UAAUv1F,GACkC,IAA5CA,EAAeq0F,EAAWY,eAC7Bn6F,KAAK06F,YAE2C,IAA7Cx1F,EAAeq0F,EAAWc,gBAC7Br6F,KAAK26F,aAE2C,IAA7Cz1F,EAAeq0F,EAAWgB,gBAC7Bv6F,KAAK46F,aAGyC,IAA3C11F,EAAeq0F,EAAWC,cAC7Bx5F,KAAK66F,gBAAgB31F,EAAclF,KAAK86F,cAGQ,IAA7C51F,EAAeq0F,EAAWgB,gBAC7Bv6F,KAAK+6F,cAE2C,IAA7C71F,EAAeq0F,EAAWc,gBAC7Br6F,KAAKg7F,cAE0C,IAA5C91F,EAAeq0F,EAAWY,eAC7Bn6F,KAAKi7F,aAEPj7F,KAAKk7F,WAAWh2F,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWQ,cACxC,CACF,CAES,WAAAG,CAAYD,GAErB,CAES,SAAAQ,CAAUR,GAEnB,CAES,UAAAiB,CAAWjB,GAEpB,CAES,WAAAG,GACRp6F,KAAKW,cAAc,wBAAyBX,KAC7C,CAES,SAAA06F,GAET,CAES,UAAAO,GACRj7F,KAAKW,cAAc,uBAAwBX,KAC5C,CAES,YAAAs6F,GACRt6F,KAAKW,cAAc,yBAA0BX,KAC9C,CAES,UAAA26F,GAET,CAES,WAAAK,GACRh7F,KAAKW,cAAc,wBAAyBX,KAC7C,CAES,YAAAw6F,GACRx6F,KAAKW,cAAc,yBAA0BX,KAC9C,CAES,UAAA46F,GAET,CAES,WAAAG,GACR/6F,KAAKW,cAAc,wBAAyBX,KAC7C,CAES,eAAA66F,CAAgBZ,EAA+Ba,GACvD,IAAIx5F,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAq0F,EAAar7F,KAAKO,KAAMsB,EAAO24F,GAClB,OAATp5F,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAES,YAAAi6F,CAAax5F,EAAmB24F,GACxC34F,EAAMm4F,eAAeQ,EACtB,CAED,aAAIkB,GACF,OAAmD,IAA3Cn7F,KAAK2B,MAAQ43F,EAAW6B,cACjC,CAES,YAAAC,CAAaC,GACrB,OAAOA,CACR,CAED,cAAAC,CAAeD,GACb,IAIE,GAHAA,IAAiB/B,EAAWM,aAC5ByB,GAAgBt7F,KAAK2B,MAAQ43F,EAAW13F,WAEQ,KADhDy5F,EAAet7F,KAAKq7F,aAAaC,IACb/B,EAAWK,aAC7B,OAEF,IAAI10F,EAAeo2F,EACnBt7F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWM,aAAeN,EAAW6B,eACjEp7F,KAAKw7F,YAAYt2F,GAC8C,KAAzDlF,KAAK2B,MAAQ25F,GAAgB/B,EAAWG,eAC5Cx0F,GAAgBq0F,EAAWG,YAC3B15F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWG,aACvC15F,KAAKy7F,cAEyD,KAA1Dz7F,KAAK2B,MAAQ25F,GAAgB/B,EAAWmC,gBAC5Cx2F,GAAgBq0F,EAAWmC,aAC3B17F,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWmC,cACvC17F,KAAK27F,eAGP37F,KAAK47F,UAAU12F,GACiC,IAA3CA,EAAeq0F,EAAWG,cAC7B15F,KAAK67F,WAE0C,IAA5C32F,EAAeq0F,EAAWmC,eAC7B17F,KAAK87F,YAGyC,IAA3C52F,EAAeq0F,EAAWK,cAC7B55F,KAAK+7F,gBAAgB72F,EAAclF,KAAKg8F,cAGO,IAA5C92F,EAAeq0F,EAAWmC,eAC7B17F,KAAKi8F,aAEyC,IAA3C/2F,EAAeq0F,EAAWG,cAC7B15F,KAAKk8F,YAEPl8F,KAAKm8F,WAAWj3F,EACjB,CAAS,QACRlF,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAW6B,cACxC,CACF,CAES,WAAAI,CAAYF,GAErB,CAES,SAAAM,CAAUN,GAEnB,CAES,UAAAa,CAAWb,GAEpB,CAES,UAAAG,GACRz7F,KAAKW,cAAc,uBAAwBX,KAC5C,CAES,QAAA67F,GACR77F,KAAKmG,kBAAkBnG,KAAKoG,WAC7B,CAES,SAAA81F,GACRl8F,KAAKW,cAAc,sBAAuBX,KAC3C,CAES,WAAA27F,GACR37F,KAAKW,cAAc,wBAAyBX,KAC7C,CAES,SAAA87F,GAET,CAES,UAAAG,GACRj8F,KAAKW,cAAc,uBAAwBX,KAC5C,CAES,eAAA+7F,CAAgBT,EAA+BU,GACvD,IAAI16F,EAAQtB,KAAKwG,WACjB,KAAiB,OAAVlF,GAAgB,CACrB,MAAMT,EAAOS,EAAMmF,YAEnB,GADAu1F,EAAav8F,KAAKO,KAAMsB,EAAOg6F,GAClB,OAATz6F,GAAiBA,EAAKH,SAAWV,KACnC,MAAM,IAAIuC,MAAM,6BAElBjB,EAAQT,CACT,CACF,CAGS,YAAAm7F,CAAa16F,EAAmBg6F,GACxCh6F,EAAMi6F,eAAeD,EACtB,CAEkB,YAAAjwF,CAAapH,GAC9BlE,MAAMsL,aAAapH,GACfjE,KAAKyL,YACHxH,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBm4F,KAA4C,IAAtBn4F,EAAS0H,UAEnD1H,aAAoBo4F,KAAsC,IAAtBp4F,EAAS0H,UAE7C1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAPvD1H,EAAS4H,QAAQ7L,KAWtB,CAGkB,iBAAA8L,CAAkB7H,EAAoB3C,EAAmBtD,GAC1E+B,MAAM+L,kBAAkB7H,EAAU3C,EAAOtD,GACrCiG,aAAoBm4F,IACtBn4F,EAASq4F,eAAeh7F,EAAOtD,EAElC,CAGkB,mBAAAgO,CAAoB/H,EAAoB3C,GACrD2C,aAAoBm4F,IACtBn4F,EAASs4F,iBAAiBj7F,GAE5BvB,MAAMiM,oBAAoB/H,EAAU3C,EACrC,CAGkB,eAAAoL,CAAgBzI,GACjClE,MAAM2M,gBAAgBzI,GACtBjE,KAAK+C,cAAcw2F,EAAWG,YAC/B,CAGQ,iBAAAvzF,CAAkBwG,GACzB,MAAM1J,EAAajD,KAAKiD,WACxB,GAAmB,OAAfA,GAA6C,IAAtBA,EAAWzE,OACpC,gBACSmO,IACTA,EAAIC,YAAYC,OAElB,IAAII,GAAwB,EAC3BjN,KAAuB8M,aAAeH,EACtC3M,KAAuBiD,WAAa,KACpCjD,KAAuB+M,WAAa9J,EACrC,IACE,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAWzE,OAAQD,GAAK,EAAG,CAC7C,MAAM0F,EAAWhB,EAAW1E,GACxB0F,aAAoByH,iBAAiBuB,IACvCA,GAAwB,EACxBjN,KAAKkN,QAAQF,SAASL,GACtB3M,KAAKmN,QAAQH,SAASL,GACtB3M,KAAKoN,QAAQJ,SAASL,IAExB1I,EAAS+I,SAASL,EACnB,CACF,CAAS,QACP3M,KAAuB+M,WAAa,IACtC,CACF,CAMD,OAAAlB,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAAuBK,UAAYA,OAC/B,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,CAES,WAAAmK,CAAYH,GAErB,CAES,SAAAK,CAAUL,GAEnB,CAES,UAAAM,CAAWN,GAEpB,CAGD,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,CAES,aAAAiK,CAAcR,GAEvB,CAES,WAAAU,CAAYV,GAErB,CAES,YAAAW,CAAaX,GAEtB,CAED,aAAI5B,GACF,OAAmD,IAA3CzL,KAAK2B,MAAQ43F,EAAWtrF,cACjC,CAED,uBAAIC,GACF,OAAQlO,KAAKF,YAAkCqO,mBAChD,CAES,cAAA9K,GACwC,IAA3CrD,KAAK2B,MAAQ43F,EAAWtrF,iBAG7BjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQ43F,EAAWtrF,eACtCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,CAES,kBAAAF,GACRpO,KAAKW,cAAc,+BAAgCX,KACpD,CAES,gBAAAqO,GACRrO,KAAK+C,cAAc/C,KAAKkO,qBACxBlO,KAAKuO,yBACN,CAES,iBAAAD,GACRtO,KAAKW,cAAc,8BAA+BX,KACnD,CAED,sBAAIwO,GACF,OAAQxO,KAAKF,YAAkC2O,kBAChD,CAES,aAAA7K,GACwC,IAA3C5D,KAAK2B,MAAQ43F,EAAWtrF,iBAG7BjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAAS43F,EAAWtrF,eACvCjO,KAAK2O,kBACL3O,KAAK4O,mBACN,CAES,iBAAAF,GACR1O,KAAKW,cAAc,8BAA+BX,KACnD,CAES,eAAA2O,GACR3O,KAAK+C,cAAc/C,KAAKwO,oBACxBxO,KAAK6O,wBACN,CAES,gBAAAD,GACR5O,KAAKW,cAAc,6BAA8BX,KAClD,CAGS,uBAAAuO,GACR,MAAMrC,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBm4F,KAA4C,IAAtBn4F,EAAS0H,UAEnD1H,aAAoBo4F,KAAsC,IAAtBp4F,EAAS0H,UAE7C1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAPvD1H,EAAS4H,QAAQ7L,KAUpB,CACF,CAGS,sBAAA6O,GACR,MAAM3C,EAAYC,EAAAA,yBAAyBpN,IAAIiB,MAC/C,GAAkB,OAAdkM,EACF,OAEF,MAAME,EAAgBF,EAAUG,MAChC,IAAK,IAAI9N,EAAI,EAAGA,EAAI6N,EAAc5N,OAAQD,GAAK,EAAG,CAChD,MAAM0F,EAAWjE,KAAKoM,EAAc7N,KAChC0F,aAAoByH,EAAAA,eAAsC,IAAtBzH,EAAS0H,UAEtC1H,aAAoBm4F,KAA4C,IAAtBn4F,EAAS0H,UAEnD1H,aAAoBo4F,KAAsC,IAAtBp4F,EAAS0H,UAE7C1H,aAAoBqH,IAAuC,IAAtBrH,EAAS0H,UAE9C1H,aAAoB2H,IAAuC,IAAtB3H,EAAS0H,WAPvD1H,EAAS2J,UAAU5N,KAUtB,CACF,CAED,cAAIoG,GACF,OAAOpG,KAAKG,QAAQ2O,aAAa1I,UAClC,CA0BD,WAAI8G,GACF,OAAOgC,EAAAA,SAASD,QACjB,CAWD,WAAI9B,GACF,OAAO+B,EAAAA,SAASD,QACjB,CAWD,WAAI7B,GACF,OAAO8B,EAAAA,SAASD,QACjB,CAGD,QAAAE,CAASC,GACP,IAAIC,EAAgBC,EAAAA,cAIpB,gBAHIF,IACFC,EAAgBA,EAAcE,OAAO,WAAYH,IAE5CC,EAAcG,OAAOxP,KAC7B,CAGD,aAAAyP,CAAyBL,GACvB,IAAIC,EAAgBK,EAAAA,cAIpB,gBAHIN,IACFC,EAAgBA,EAAcE,OAAO,gBAAiBH,IAEjDC,EAAcG,OAAOxP,KAC7B,CAGD,YAAA2P,CAAwBP,GACtB,IAAIC,EAAgBO,EAAAA,aAIpB,gBAHIR,IACFC,EAAgBA,EAAcE,OAAO,eAAgBH,IAEhDC,EAAcG,OAAOxP,KAC7B,CAGD,WAAA6P,CAAkCT,GAChC,IAAIC,EAAgBS,EAAAA,YAIpB,gBAHIV,IACFC,EAAgBA,EAAcE,OAAO,cAAeH,IAE/CC,EAAcG,OAAOxP,KAC7B,CAUD,OAAA+P,CAAQ7C,EAA8BC,EAA+BC,EAA+B4C,YAC9F7C,GACF6C,EAAOC,QAAMrH,SAASsE,GACtBE,EAAUpN,KAAKoN,QAAQ8C,WACvB/C,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd8N,GACT4C,EAAOC,QAAMrH,SAASuE,GACtBC,EAAU+C,MAAIvH,SAASsE,GACvBC,EAAUnN,KAAKmN,QAAQ+C,WACvBhD,EAAUlN,KAAKkN,QAAQ5N,gBACd0Q,GACTA,EAAOC,QAAMrH,SAASwE,GACtBA,EAAU+C,MAAIvH,SAASuE,GACvBA,EAAUgD,MAAIvH,SAASsE,GACvBA,EAAUlN,KAAKkN,QAAQ5N,QAEvB0Q,EAAOC,QAAMrH,SAASoH,GACtB5C,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAET,OAAZA,IACFA,EAAUC,EAAQiD,WAClBjD,EAAUD,EAAQmD,UAAUlD,IAEdnN,KAAKsQ,QAAQhR,MACrByQ,QAAQ7C,EAASC,EAASC,EAAS4C,EAC5C,CAMD,YAAAO,CAAarD,EAA8BsD,YACrCA,GACFA,EAAcP,QAAMrH,SAASsE,GAC7BA,EAAUlN,KAAKkN,QAAQgD,aAEvBM,EAAcP,QAAMrH,SAAS4H,GAC7BtD,EAAUiD,MAAIvH,SAASsE,IAETlN,KAAKsQ,QAAQhR,MACrBiR,aAAarD,EAASsD,EAC/B,CAGD,OAAAC,CAAQvD,GACNA,EAAUiD,MAAIvH,SAASsE,GACvB,MAAMwD,EAAW,IAAI6oF,EAGrB,OAFA7oF,EAASxD,QAAQlO,IAAIkO,GACrBlN,KAAK2Q,YAAYD,GACVA,CACR,CAMD,OAAAE,CAAQ1D,EAA8BC,YAChCA,GAEFD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,GAGjBC,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI6oF,EAQrB,gBAPIrsF,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,GAEvBnN,KAAK2Q,YAAYD,GACVA,CACR,CAQD,OAAAI,CAAQ5D,EAA8BC,EAAmBC,YACnDD,GACFC,EAAU+C,MAAIvH,SAASsE,GACvBC,OAAe,EACfD,OAAe,YACNE,GACTA,EAAU+C,MAAIvH,SAASuE,IAEvBD,GADAC,EAAUgD,MAAIvH,SAASsE,IACLkD,YACNS,YACV1D,EAAUD,EAAQmD,UAAUlD,GAE5BD,OAAe,IAGjBE,EAAU+C,MAAIvH,SAASwE,GACvBD,EAAUgD,MAAIvH,SAASuE,GACvBD,EAAUiD,MAAIvH,SAASsE,IAEzB,MAAMwD,EAAW,IAAI6oF,EAWrB,gBAVIrsF,GACFwD,EAASxD,QAAQlO,IAAIkO,YAEnBC,GACFuD,EAASvD,QAAQnO,IAAImO,YAEnBC,GACFsD,EAAStD,QAAQpO,IAAIoO,GAEvBpN,KAAK2Q,YAAYD,GACVA,CACR,CAGD,WAAAK,CAAY7D,EAAcC,EAAcC,GAEtC,OADgBpN,KAAKsQ,QAAQhR,MACdyR,YAAY7D,EAASC,EAASC,EAC9C,CAGD,YAAA4D,CAAa7B,GACKnP,KAAKsQ,QAAQhR,MACrB0R,aAAa7B,EACtB,CAeD,WAAImB,GACF,OAAOpB,EAAAA,SAASD,QACjB,GAvPAgC,EAAA,CAAAjC,EAAAA,SAAS,CACR,eAAIkC,GACF,OAAOsrF,EACR,EACD,gBAAAprF,CAAiBzM,GACf5E,MAAMqR,iBAAiBzM,GACvBA,EAAQ0M,MAAMorF,cAAcz8F,KAAKuR,MAClC,EACD,kBAAAC,CAAmB7M,GACjB5E,MAAMyR,mBAAmB7M,GACzBA,EAAQ0M,MAAMqrF,iBAAiB18F,KAAKuR,MACrC,KAKFK,EAAA,CAAA1C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO63F,GAAWG,WACnB,KAOF3nF,EAAA,CAAA7C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO63F,GAAWG,WACnB,KAOF1nF,EAAA,CAAA9C,EAAAA,SAAS,CACR2C,UAAW1B,EAAAA,IACX7Q,MAAO,KACPwS,UAAU,EACV,eAAIpQ,GACF,OAAO63F,GAAWG,WACnB,KAwLFznF,EAAA,CAAA/C,EAAAA,SAAS,CACR2C,UAAWK,EAAAA,QACXJ,UAAU,EACV,eAAIpQ,GACF,OAAO63F,GAAWG,WACnB,EACDvnF,UAAAA,IACSC,EAAAA,WAAWC,SAEpBC,YAAAA,CAAYC,EAAmBC,IACtBD,IAAaC,KA1NxBrV,EAAAyC,EAAA,KAAAgS,EAAA,CAAA9T,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIzF,UAEH,KAAAhN,GAWD/C,EAAAyC,EAAA,KAAAmS,EAAA,CAAAjU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIxF,UAEH,KAAAjN,GAWD/C,EAAAyC,EAAA,KAAAoS,EAAA,CAAAlU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIvF,UAEH,KAAAlN,GAiMD/C,EAAAyC,EAAA,KAAAqS,EAAA,CAAAnU,KAAA,SAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAIrC,UAEH,KAAApQ,GA1OD/C,EAAS,KAAA,KAAA8T,EAAA,CAAAnT,KAAA,QAAAO,KAAA,UAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,YAAAA,EAAA5T,IAAA4T,GAAAA,EAAAxS,QAAAnB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAxS,QAA0Cb,CAAAA,IAAAc,EAAAF,GA6OnCN,EAAAgT,IAAoB,WAClC,IAAIC,EAAS,EACb,OAAO,WACL,MAAMC,IAAOD,EAEb,OADAA,GAAU,EACH,aAAeC,CACxB,CACD,CAPmC,GAUXlT,EAAWgC,YAAoB/B,YAAU+B,YAEzChC,EAAawJ,cAAoBvJ,EAAAA,UAAUuJ,cAE3CxJ,EAAYmT,aAAoBlT,EAAUkT,UAAAA,aAEnDnT,EAAam6F,cAAoB,GAAMl6F,YAAUmT,UAAY,EAE7DpT,EAAaw7F,cAAoB,GAAMv7F,EAAAA,UAAUmT,UAAY,EAE7DpT,EAAaqO,cAAoB,GAAMpO,EAAAA,UAAUmT,UAAY,EAE7DpT,EAAYiF,aAAoBjF,EAAKm6F,cACLn6F,EAAKw7F,cAErCx7F,EAAUqT,WAAoBrT,EAAKgC,YACLhC,EAAKwJ,cACLxJ,EAAKmT,aACLnT,EAAKm6F,cACLn6F,EAAKw7F,cAEnCx7F,EAAY+5F,aAAoB,GAAM95F,EAAAA,UAAUmT,UAAY,EAC5DpT,EAAYu6F,aAAoB,GAAMt6F,EAAAA,UAAUmT,UAAY,EAC5DpT,EAAay6F,cAAoB,GAAMx6F,EAAAA,UAAUmT,UAAY,EAC7DpT,EAAa26F,cAAoB,GAAM16F,EAAAA,UAAUmT,UAAY,EAE7DpT,EAAW45F,YAAoB55F,EAAK+5F,aACL/5F,EAAKu6F,aACLv6F,EAAKy6F,cACLz6F,EAAK26F,cAEpC36F,EAAYi6F,aAAoB,GAAMh6F,EAAAA,UAAUmT,UAAY,EAC5DpT,EAAW85F,YAAoB,GAAM75F,EAAAA,UAAUmT,UAAY,EAC3DpT,EAAY87F,aAAoB,GAAM77F,EAAAA,UAAUmT,UAAY,EAE5DpT,EAAWg6F,YAAoBh6F,EAAKi6F,aACLj6F,EAAK85F,YACL95F,EAAK87F,aAGpC97F,EAAUiC,WAAoBjC,EAAK45F,YACL55F,EAAKg6F,YAG1Bh6F,EAAAoT,UAAoBnT,YAAUmT,UAAY,GAE1CpT,EAAQsT,UAAqB,GAAKtT,EAAKoT,WAAa,EAEpDpT,EAAAuT,WAA8B,EAC9BvT,EAAAwT,iBAAoC,EACpCxT,EAAAyT,iBAAoC,EACpCzT,EAAA0T,mBAAsC,EAC/C1T,EAAAuO,oBAAuC,EACvCvO,EAAA6O,mBAAsC,EAAA7O,CA17BjC,EAAA,GCoDVw8F,MAAAA,GAAmH9vF,WAASiH,OAAgE,qBAAsB,CAC7N,gBAAIxP,GACF,OAAOq4F,EACR,EAEDzwF,UAAU,EAEVgxF,eAAgB,KAEhBlpF,UAAU,EAEV,YAAAC,CAAaC,GACX,IAAIC,EAAU5T,KAAK4T,QACH,OAAZA,IACFA,EAAU,IAAItG,IACbtN,KAA8B4T,QAAUA,GAE3CA,EAAQnG,IAAIkG,EACb,EAED,YAAAE,CAAaF,GACX,MAAMC,EAAU5T,KAAK4T,QACL,OAAZA,GAGJA,EAAQ9F,OAAO6F,EAChB,EAED,eAAAG,GACE,MAAMF,EAAU5T,KAAK4T,QACrB,GAAgB,OAAZA,EAGJ,IAAK,MAAMD,KAAUC,EACnBD,EAAOI,SAAS/T,KAEnB,EAED,cAAA48F,CAAeC,GAEd,EAED,oBAAAC,CAAqBD,EAAe7+F,GAEnC,EAED,kBAAA++F,CAAmBF,EAAe7+F,IACV,IAAlBgC,KAAKyT,UACPopF,EAAW1oF,QAAQnU,MAEmC,IAAnDA,KAAK2B,MAAQy6F,GAAmBnuF,gBACnC4uF,EAAWhxF,QAAQ7L,KAEtB,EAED,mBAAAg9F,CAAoBH,EAAe7+F,GAElC,EAED,gBAAAi/F,CAAiBJ,GAEhB,EAED,oBAAAK,CAAqBL,GAEpB,EAED,kBAAAM,CAAmBN,GACuC,IAAnD78F,KAAK2B,MAAQy6F,GAAmBnuF,gBACnC4uF,EAAWjvF,UAAU5N,OAED,IAAlBA,KAAKyT,UACPopF,EAAWroF,UAAUxU,KAExB,EAED,mBAAAo9F,CAAoBP,GAEnB,EAED,oBAAIQ,GACF,MAAM9rF,EAAQvR,KAAKuR,MACnB,OAAOA,aAAiBgoF,GAAahoF,EAAQ,IAC9C,EAED,WAAAoD,CAAYjU,EAAoBY,EAAUtD,EAA2BD,GACnE2C,EAAOiU,YAAYrT,EAAOtD,EAAQD,EACnC,EAED,cAAAu+F,CAAeO,EAAwB7+F,GAEtC,EAED,gBAAAu+F,CAAiBM,GAEhB,EAEDS,iBAAiBT,GACR,KAGT,gBAAAU,GACE,IAAIV,EACJ,MAAMF,EAAiB38F,KAAK28F,eAI5B,GAHuB,OAAnBA,IACFE,EAAaF,EAAentF,UAE1BqtF,QAA8C,CAChD,IAAI/nF,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,aACL,IAAIvS,MAAMuS,EACjB,CACD,OAAO+nF,CACR,EAED,QAAAj0F,CAAStJ,GACP,MAAMq9F,EAAiB38F,KAAK28F,eAC5B,OAAuB,OAAnBA,EACKA,EAAe/zF,SAAStJ,GAE1Bi6F,GAAW3wF,SAAStJ,EAC5B,EAED,OAAAuM,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAA8BK,UAAYA,OACtC,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,EAED,WAAAmK,CAAYH,GAEX,EAED,SAAAK,CAAUL,GAET,EAED,UAAAM,CAAWN,GAEV,EAED,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,EAED,aAAAiK,CAAcR,GAEb,EAED,WAAAU,CAAYV,GAEX,EAED,YAAAW,CAAaX,GAEZ,EAED,aAAI5B,GACF,OAA2D,IAAnDzL,KAAK2B,MAAQy6F,GAAmBnuF,cACzC,EAED,cAAA5K,GAC0D,IAAnDrD,KAAK2B,MAAQy6F,GAAmBnuF,iBAGrCjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQy6F,GAAmBnuF,eAC9CjO,KAAKqO,mBACLrO,KAAKsO,oBACN,EAED,kBAAAF,GAEC,EAED,gBAAAC,GAEC,EAED,iBAAAC,GAEC,EAED,aAAA1K,GAC0D,IAAnD5D,KAAK2B,MAAQy6F,GAAmBnuF,iBAGrCjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAASy6F,GAAmBnuF,eAC/CjO,KAAK2O,kBACL3O,KAAK4O,mBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GAEC,EAED,gBAAAC,GAEC,EAED,OAAAlM,GACE3C,MAAM2C,UACiB,OAAnB1C,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,gBAER,EAED,SAAAK,GACE3D,MAAM2D,YACN1D,KAAK4D,eACN,GAEH,CACE,SAAAoR,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEqC,QAAU,KAChD3P,EAAsC5D,UAAY,KAC5C4D,CACR,EAEDgK,cAAe,GAAM3B,WAAS0G,UAAY,EAE1CA,UAAW1G,EAAAA,SAAS0G,UAAY,EAChCE,UAAW,GAAM5G,EAAS0G,SAAAA,UAAY,GAAM,IC5UjCwqF,GAAyGpB,GAAmB7oF,OAAsD,gBAAiB,CAC9M,gBAAIxP,GACF,OAAOy5F,EACR,EAED,mBAAIC,GACF,MAAMtoF,EAAQnV,KAAKmV,MACnB,OAAOA,aAAiBqoF,GAAgBroF,EAAM0nF,WAAa,IAC5D,EAED,kBAAAa,GACE,MAAMD,EAAkBz9F,KAAKy9F,gBAC7B,GAAIA,QAAwD,CAC1D,IAAI3oF,EAAU2oF,EAAkB,IAChC,MAAMp/F,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,mBACL,IAAIlX,UAAUkX,EACrB,CACD,OAAO2oF,CACR,EAED,GAAA1+F,GACE,OAAOiB,KAAK68F,UACb,EAED,GAAA79F,CAAI69F,GAMF,OALIA,aAAsBvwF,EAAAA,SACxBtM,KAAKqV,UAAUwnF,GAEf78F,KAAK29F,cAAcd,GAEd78F,KAAKuR,KACb,EAED,YAAAgE,CAAasnF,GAMX,OALIA,aAAsBvwF,EAAAA,SACxBtM,KAAKqV,UAAUwnF,GAEf78F,KAAK29F,cAAcd,GAEd78F,KAAKuR,KACb,EAEDqsF,mBAAoB,EAEpB,aAAAC,GACE,MAAMhB,EAAa78F,KAAK68F,WACxB,GAAmB,OAAfA,EAAqB,CACvB,IAAI/nF,EAAU+nF,EAAa,IAC3B,MAAMx+F,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,aACL,IAAIlX,UAAUkX,EACrB,CACD,OAAO+nF,CACR,EAED,aAAAc,CAAcG,EAA0B9/F,EAA4BD,GAC5C,OAAlB+/F,IACFA,EAAgB99F,KAAK4I,SAASk1F,IAEhC,IAOIp9F,EAPAq9F,EAAgB/9F,KAAK68F,WACzB,OAAIkB,IAAkBD,GACpB99F,KAAK4V,aAAY,GACVmoF,aACE//F,IACTA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAKq9F,iBAA6B,OAAX38F,KAC3B,OAAlBq9F,GAA0BA,EAAcr9F,SAAWA,IACtC,OAAX1C,IACFA,EAAS+/F,EAAct3F,aAEzBs3F,EAAcj1F,UAEM,OAAlBg1F,aACE//F,IACFA,EAAMiC,KAAK49F,eAEb59F,KAAK2U,YAAYjU,EAAQo9F,EAAe9/F,EAAQD,IAElDggG,EAAgB/9F,KAAK68F,WACjBkB,IAAkBD,KAIF,OAAlBC,IACD/9F,KAA8B68F,WAAa,KAC5C78F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,IAEL,OAAlBD,IACD99F,KAA8B68F,WAAaiB,EAC5C99F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,IAE1CgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAlBMiqF,EAoBZ,EAED,gBAAAC,CAAiBF,EAAwC9/F,GACvD,MAAM+/F,EAAgB/9F,KAAK68F,WAW3B,gBAHI7+F,IACFA,EAAS,MAEP+/F,KATFD,EADEA,QACc99F,KAAK4I,SAASk1F,GACH,OAAlBC,EACO/9F,KAAKu9F,mBAELQ,KAOW,OAAlBA,IACR/9F,KAA8B68F,WAAa,KAC5C78F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,IAE1B/9F,KAA8B68F,WAAaiB,EAC5C99F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAdIgqF,CAgBV,EAED,gBAAAG,GACE,MAAMF,EAAgB/9F,KAAK68F,WAC3B,OAAsB,OAAlBkB,EACK,MAER/9F,KAA8B68F,WAAa,KAC5C78F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,GACzB/9F,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEiqF,EACR,EAED,gBAAAG,CAAiBx9F,EAA4Bo9F,EAAiC9/F,EAA4BD,GACxG,IAAIggG,EAAgB/9F,KAAK68F,WAWzB,OATEiB,EADEA,QACc99F,KAAK4I,SAASk1F,GACH,OAAlBC,EACO/9F,KAAKu9F,mBAELQ,WAEdr9F,IACFA,EAAS,MAENV,KAAKuL,OAASwyF,IAAkBD,GAA0C,OAAzBA,EAAcp9F,QAA8B,OAAXA,QAAmB3C,IAAAA,GAG3F,OAAX2C,IACFA,EAASV,KAAKq9F,2BAEZr/F,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAK49F,eAEE,OAAXl9F,GAAoBo9F,EAAcp9F,SAAWA,GAAUo9F,EAAc//F,MAAQA,GAC/EiC,KAAK2U,YAAYjU,EAAQo9F,EAAe9/F,EAAQD,GAElDggG,EAAgB/9F,KAAK68F,WACjBkB,IAAkBD,IAEO,OAAlBC,IACR/9F,KAA8B68F,WAAa,KAC5C78F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,GACrB/9F,KAAKuL,OAAoB,OAAX7K,GAAmBq9F,EAAcr9F,SAAWA,GAC5Dq9F,EAAcj1F,UAGjB9I,KAA8B68F,WAAaiB,EAC5C99F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAjBIgqF,GAhBAA,CAmCV,EAED,gBAAApB,GACE,MAAMG,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,MAETA,EAAW/zF,SACJ+zF,EACR,EAED,gBAAAsB,GACE,MAAMtB,EAAa78F,KAAKi+F,mBACxB,OAAmB,OAAfpB,EACK,MAETA,EAAW/zF,SACJ+zF,EACR,EAED,cAAAP,CAAeO,EAAwB7+F,GACrC,IAAKgC,KAAKuL,OAA6B,OAApBvL,KAAK68F,WACtB,OAEF,MAAMiB,EAAgB99F,KAAKs9F,iBAAiBT,GACtB,OAAlBiB,IAGH99F,KAA8B68F,WAAaiB,EAC5C99F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,gBAAAyoF,CAAiBM,GACf,IAAK78F,KAAKuL,MACR,OAEF,MAAMwyF,EAAgB/9F,KAAKs9F,iBAAiBT,GACtB,OAAlBkB,GAA0B/9F,KAAK68F,aAAekB,IAGjD/9F,KAA8B68F,WAAa,KAC5C78F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,GACzB/9F,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,gBAAAwpF,CAAiBT,GACf,MAAM9+F,EAAMiC,KAAK49F,cACjB,YAAiB,IAAb7/F,GAAkBA,IAAQ8+F,EAAW9+F,IAChC8+F,EAEF,IACR,EAED,gBAAAxuF,GACE,MAAMwuF,EAAa78F,KAAK68F,WACL,OAAfA,GACFA,EAAWhxF,QAAQ7L,KAEtB,EAED,eAAA2O,GACE,MAAMkuF,EAAa78F,KAAK68F,WACL,OAAfA,GACFA,EAAWjvF,UAAU5N,KAExB,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiBqoF,IACnBx9F,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAK29F,cAAcxoF,EAAM0nF,aAG3B78F,KAAKgW,YAAW,EAEnB,GAEH,CACE,aAAAooF,CAAoD7sF,EAAUzN,GAC5D,MAAMoI,EAAYC,EAAAA,yBAAyBpN,IAAIwS,GACzC8sF,EAA8B,OAAdnyF,EAAqBA,EAAUuK,YAAYlF,EAAOzN,GAAgB,KACxF,OAAOu6F,aAAyBb,GAAgBa,EAAcxB,WAAa,IAC5E,EAED,SAAA7nF,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEsrF,WAAa,KAC7C54F,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCqgG,EAA0BngG,OAAOC,yBAAyBwY,EAAmB,sBAC/E0nF,IAAAA,GAAsC,UAAWA,KACb,IAAlCA,EAAwBh/F,OAC1Bg/F,EAAwBh/F,MAAQqX,EAActY,KAC9CF,OAAOgB,eAAeyX,EAAmB,gBAAiB0nF,KACf,IAAlCA,EAAwBh/F,QACjCg/F,EAAwBh/F,WAAa,EACrCnB,OAAOgB,eAAeyX,EAAmB,gBAAiB0nF,IAG/D,ICjQUC,GAAyGnC,GAAmB7oF,OAAsD,gBAAiB,CAC9M,gBAAIxP,GACF,OAAOw6F,EACR,EAED,aAAAX,CAAcf,GAEb,EAED,mBAAA2B,CAAoBV,EAAkB9/F,GACpC,MAAMygG,EAAcz+F,KAAKy+F,YACV,OAAXzgG,GAAgE,IAA5CgC,KAAK2B,MAAQ48F,GAActnF,aAChDjX,KAA8By+F,YAAcvnF,EAAQC,QAAAA,SAASsnF,EAAaX,EAAclrF,IAAKkrF,EAAe9/F,GAE7GygG,EAAYX,EAAclrF,KAAOkrF,CAEpC,EAED,mBAAAY,CAAoBX,UACE/9F,KAAKy+F,YACNV,EAAcnrF,IAClC,EAED,aAAA+rF,CAAc9B,GACZ,YAAiD,IAA1C78F,KAAKy+F,YAAY5B,EAAWjqF,IACpC,EAED,aAAA6pF,CAAcqB,EAAiC9/F,EAA4BD,GASzE,IAAI2C,EAgBJ,OAvBEo9F,EADEA,QACc99F,KAAK4I,SAASk1F,GAEd99F,KAAKu9F,4BAEnBv/F,IACFA,EAAS,MAGPgC,KAAKuL,QAAU7K,EAASV,KAAKq9F,iBAA6B,OAAX38F,KAClC,OAAX1C,IAEAA,EADE8/F,EAAcp9F,SAAWA,EAClBo9F,EAAcr3F,YAEdzG,KAAKsX,eAAe5W,EAAQo9F,aAGrC//F,IACFA,EAAMiC,KAAK49F,cAAcE,IAEvBA,EAAcp9F,SAAWA,GAAUo9F,EAAcr3F,cAAgBzI,GAAU8/F,EAAc//F,MAAQA,GACnGiC,KAAK2U,YAAYjU,EAAQo9F,EAAe9/F,EAAQD,SAGjB6U,IAA/B5S,KAAKy+F,YAAYX,EAAclrF,OAGnC5S,KAAKw+F,oBAAoBV,EAAe9/F,GACvCgC,KAA8B4+F,iBAAmB,EAClD5+F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIgqF,CAWV,EAED,cAAAe,CAAeC,EAAkE9gG,GAC/E,IAAK,MAAM+gG,KAAgBD,EACzB9+F,KAAKy8F,cAAcqC,EAAeC,GAAgB/gG,EAErD,EAED,cAAAghG,CAAeF,EAAkE9gG,GAC/E,MAAMuN,EAAQvL,KAAKuL,MACb7K,EAAS6K,EAAQvL,KAAKq9F,iBAAmB,KACzCoB,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EACzB,YAAIK,EAAeC,GAA0B,CAC3C,MAAMhB,EAAgB/9F,KAAKi+F,iBAAiBQ,EAAYM,IAClC,OAAlBhB,GAA0BxyF,GAAoB,OAAX7K,GAAmBq9F,EAAcr9F,SAAWA,GACjFq9F,EAAcj1F,QAEjB,CAEH,GAAiD,IAA5C9I,KAAK2B,MAAQ48F,GAActnF,aAAoB,CAClD,MAAMgoF,EAAqB,IAAIpnF,MAC/B,IAAK,MAAMknF,KAAgBD,EACzBG,EAAmBpgG,KAAKigG,EAAeC,IAEzC,IAAK,IAAIxgG,EAAI,EAAGwZ,EAAIknF,EAAmBzgG,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CAC5D,MAAMu/F,EAAgBmB,EAAmB1gG,GACzC,QAA8BqU,IAA1B6rF,EAAYX,EAAclrF,KAAiB,CAC7C,MAAMssF,EAAmB3gG,EAAIwZ,EAAI,EAAIknF,EAAmB1gG,EAAI,GAAKP,EACjEgC,KAAKy8F,cAAcqB,EAAeoB,EACnC,CACF,CACF,MACC,IAAK,MAAMH,KAAgBD,WACrBL,EAAYM,IACd/+F,KAAKy8F,cAAcqC,EAAeC,GAAgB/gG,EAIzD,EAED,gBAAAggG,CAAiBF,EAAwC9/F,GAMvD,OAJE8/F,EADEA,QACc99F,KAAK4I,SAASk1F,GAEd99F,KAAKu9F,wBAEY3qF,IAA/B5S,KAAKy+F,YAAYX,EAAclrF,gBAExB5U,IACTA,EAAS,MAEXgC,KAAKw+F,oBAAoBV,EAAe9/F,GACvCgC,KAA8B4+F,iBAAmB,EAClD5+F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBAXIgqF,CAaV,EAED,iBAAAqB,CAAkBL,EAAkE9gG,GAClF,IAAK,MAAM+gG,KAAgBD,EACzB9+F,KAAKg+F,iBAAiBc,EAAeC,GAAgB/gG,EAExD,EAED,gBAAAigG,CAAiBF,GACf,YAAmCnrF,IAA/B5S,KAAKy+F,YAAYV,EAAcnrF,KAC1B,MAER5S,KAA8B4+F,iBAAmB,EAClD5+F,KAAK0+F,oBAAoBX,GACzB/9F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,GACzB/9F,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACEiqF,EACR,EAED,iBAAAqB,CAAkBX,YACZA,IACFA,EAAcz+F,KAAKy+F,aAErB,IAAK,MAAMM,KAAgBN,EACzBz+F,KAAKi+F,iBAAiBQ,EAAYM,GAErC,EAED,gBAAAb,CAAiBx9F,EAA4Bo9F,EAAiC9/F,EAA4BD,GASxG,OAPE+/F,EADEA,QACc99F,KAAK4I,SAASk1F,GAEd99F,KAAKu9F,4BAEnB78F,IACFA,EAAS,MAENV,KAAKuL,YAAwCqH,IAA/B5S,KAAKy+F,YAAYX,EAAclrF,MAA4C,OAAzBkrF,EAAcp9F,QAA8B,OAAXA,YAAmB3C,GAG1G,OAAX2C,IACFA,EAASV,KAAKq9F,2BAEZr/F,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAK49F,cAAcE,IAEZ,OAAXp9F,GAAoBo9F,EAAcp9F,SAAWA,GAAUo9F,EAAc//F,MAAQA,IAChE,OAAXC,IACFA,EAASgC,KAAKsX,eAAe5W,EAAQo9F,IAEvC99F,KAAK2U,YAAYjU,EAAQo9F,EAAe9/F,EAAQD,SAEf6U,IAA/B5S,KAAKy+F,YAAYX,EAAclrF,OAGnC5S,KAAKw+F,oBAAoBV,EAAe9/F,GACvCgC,KAA8B4+F,iBAAmB,EAClD5+F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,mBATIgqF,GAlBAA,CA6BV,EAED,iBAAAuB,CAAkB3+F,EAA2Bo+F,EAAkE9gG,GAC7G,IAAK,MAAM+gG,KAAgBD,EACzB9+F,KAAKk+F,iBAAiBx9F,EAAQo+F,EAAeC,GAAgB/gG,EAEhE,EAED,gBAAA0+F,CAAiBG,GACf,OAAK78F,KAAK2+F,cAAc9B,IAGxBA,EAAW/zF,SACJ+zF,GAHE,IAIV,EAED,iBAAAyC,CAAkBb,YACZA,IACFA,EAAcz+F,KAAKy+F,aAErB,IAAK,MAAMM,KAAgBN,EACzBz+F,KAAK08F,iBAAiB+B,EAAYM,GAErC,EAED,gBAAAZ,CAAiBtB,GACf,MAAMkB,EAAgB/9F,KAAKi+F,iBAAiBpB,GAC5C,OAAsB,OAAlBkB,EACK,MAETA,EAAcj1F,SACPi1F,EACR,EAED,iBAAAwB,CAAkBd,YACZA,IACFA,EAAcz+F,KAAKy+F,aAErB,IAAK,MAAMM,KAAgBN,EACzBz+F,KAAKm+F,iBAAiBM,EAAYM,GAErC,EAED,kBAAAS,CAAmB3C,EAAe7+F,GAChC,QAA8C,IAA1CgC,KAAKy+F,YAAY5B,EAAWjqF,WAAoC,IAAhB5U,GAAiE,IAA3CgC,KAAK2B,MAAQ48F,GAAchmF,YACnG,OAEF,MAAM7X,EAASm8F,EAAWn8F,OACX,OAAXA,aAEO1C,IACTA,EAASgC,KAAKsX,eAAe5W,EAAQm8F,IAEvCn8F,EAAO8X,cAAcqkF,EAAY7+F,GAClC,EAED,cAAAs+F,CAAeO,EAAwB7+F,GACrC,IAAKgC,KAAKuL,MACR,OAEF,MAAMuyF,EAAgB99F,KAAKs9F,iBAAiBT,GACtB,OAAlBiB,YAA0B99F,KAAKy+F,YAAYX,EAAclrF,OAG7D5S,KAAKw+F,oBAAoBV,EAAe9/F,GACvCgC,KAA8B4+F,iBAAmB,EAClD5+F,KAAK88F,qBAAqBgB,EAAe9/F,GACzCgC,KAAK+8F,mBAAmBe,EAAe9/F,GACvCgC,KAAK48F,eAAekB,GACpB99F,KAAKg9F,oBAAoBc,EAAe9/F,GACxCgC,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,gBAAAyoF,CAAiBM,GACf,IAAK78F,KAAKuL,MACR,OAEF,MAAMwyF,EAAgB/9F,KAAKs9F,iBAAiBT,GACtB,OAAlBkB,YAA0B/9F,KAAKy+F,YAAYV,EAAcnrF,OAG5D5S,KAA8B4+F,iBAAmB,EAClD5+F,KAAK0+F,oBAAoBX,GACzB/9F,KAAKk9F,qBAAqBa,GAC1B/9F,KAAKm9F,mBAAmBY,GACxB/9F,KAAKi9F,iBAAiBc,GACtB/9F,KAAKo9F,oBAAoBW,GACzB/9F,KAAK4V,aAAY,GACjB5V,KAAK8T,kBACN,EAED,gBAAAwpF,CAAiBT,GACf,MAAmC,mBAAxB78F,KAAK28F,gBAAiCE,aAAsB78F,KAAK28F,eACnEE,EAEF,IACR,EAED,kBAAA4C,CAAmBpyF,GACjB,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EACNA,EAAYM,GACpBlzF,QAAQwB,EAEtB,EAED,oBAAAqyF,CAAqBryF,GACnB,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EACNA,EAAYM,GACpBnxF,UAAUP,EAExB,EAED,gBAAAgB,GACErO,KAAKy/F,mBAAmBz/F,KACzB,EAED,eAAA2O,GACE3O,KAAK0/F,qBAAqB1/F,KAC3B,EAED,QAAAgN,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiBopF,IACnBv+F,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,cACzBtW,KAAKg/F,eAAe7pF,EAAMspF,cAG5Bz+F,KAAKgW,YAAW,EAEnB,EAED,WAAI2C,GACF,OAAoD,IAA5C3Y,KAAK2B,MAAQ48F,GAActnF,YACpC,EAED,KAAA2B,CAAMD,GASJ,gBARIA,IACFA,GAAU,GAERA,EACF3Y,KAAKyC,SAASzC,KAAK2B,MAAQ48F,GAActnF,aAEzCjX,KAAKyC,SAASzC,KAAK2B,OAAS48F,GAActnF,aAErCjX,IACR,EAED,UAAI6Y,GACF,OAAmD,IAA3C7Y,KAAK2B,MAAQ48F,GAAchmF,WACpC,EAED,IAAA9N,CAAKoO,GAIH,YAHIA,IACFA,GAAS,GAEPA,EAAQ,CACV,MAAMnY,EAASV,KAAKq9F,iBACpBr9F,KAAK8Y,SAASpY,GACdV,KAAKyC,SAASzC,KAAK2B,MAAQ48F,GAAchmF,YACzCvY,KAAK+Y,OAAOrY,GACZV,KAAKgZ,QAAQtY,EACd,MACCV,KAAKyC,SAASzC,KAAK2B,OAAS48F,GAAchmF,YAE5C,OAAOvY,IACR,EAED,QAAA8Y,CAASpY,GAER,EAED,MAAAqY,CAAOrY,GACU,OAAXA,GACFV,KAAKiZ,aAAavY,EAErB,EAED,OAAAsY,CAAQtY,GAEP,EAED,YAAAuY,CAAavY,EAAoB6J,GAC/B7J,EAAOuY,aAAajZ,KAAKkZ,gBAAgB3S,KAAKvG,MAC/C,EAED,cAAAsX,CAAe5W,EAAoBY,GACjC,OAAgD,IAA3CtB,KAAK2B,MAAQ48F,GAAchmF,YACvB7X,EAAO4W,eAAehW,EAAOtB,KAAKmZ,mBAAmB5S,KAAKvG,OAE5D,IACR,EAED,eAAAkZ,CAAgBE,EAAeC,GAC7B,MAAMolF,EAAcz+F,KAAKy+F,YACnBnlF,EAAImlF,EAAYrlF,EAAExG,KAClB2G,EAAIklF,EAAYplF,EAAEzG,KACxB,YAAI0G,IAAAA,QAAgBC,IAAAA,EACXvZ,KAAKwZ,QAAQF,EAAGC,QAEP,IAAXD,EAAe,OAAIC,IAAAA,GAAgB,EAAI,CAC/C,EAED,kBAAAJ,CAAmBC,EAAMC,GACvB,MACME,EADcvZ,KAAKy+F,YACHplF,EAAEzG,KACxB,gBAAI2G,EACKvZ,KAAKwZ,QAAQJ,EAAGG,QAElBA,IAAAA,GAAgB,EAAI,CAC5B,EAEDC,QAAAA,CAAQJ,EAAMC,IACLD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAI5B,OAHAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEktF,YAAc,GACpDx6F,EAAsC26F,gBAAkB,EAClD36F,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAExC,IAAIwb,EAAY7C,EAAkB6C,UAC9Btb,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,aACtDA,EAAkB+B,QACpBc,GAAa8kF,GAActnF,YAE3BwC,IAAc8kF,GAActnF,mBAEtBL,EAAwD+B,SAE9Dxa,OAAOF,UAAUyb,eAAeja,KAAKmX,EAAmB,YACtDA,EAAkBiC,OACpBY,GAAa8kF,GAAchmF,WAE3BkB,IAAc8kF,GAAchmF,kBAEtB3B,EAAwDiC,QAElE1a,OAAOgB,eAAeyX,EAAmB,YAAa,CACpDtX,MAAOma,EACPE,YAAY,EACZC,cAAc,GAEjB,EAED3C,YAAa,GAAMmlF,GAAmBppF,UAAY,EAClDuF,WAAY,GAAM6jF,GAAmBppF,UAAY,EAEjDA,UAAWopF,GAAmBppF,UAAY,EAC1CE,UAAW,GAAMkpF,GAAmBppF,UAAY,GAAM,IChW3CqpF,GAAiG/vF,WAASiH,OAAoD,eAAgB,CACzL,gBAAIxP,GACF,OAAOs4F,EACR,EAED1wF,UAAU,EAEVyR,UAAW,KAEXc,cAAe,EAEfyhF,YAAY,EAEZ9/E,eAAe,EAEf,QAAArX,GACE,MAAM5H,EAAQZ,KAAKY,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAIkU,EAAUlU,EAAQ,IACtB,MAAMvC,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOlU,CACR,EAED,QAAA6H,CAASC,EAAkC1K,EAAuBD,GAChE,IASIgD,EATA8H,EAAW7I,KAAKY,MAIpB,OAHiB,OAAb8H,IACFA,EAAW1I,KAAK8f,cAAcpX,IAE5BG,IAAaH,aAEN1K,IACTA,EAAS,MAGPgC,KAAK2/F,aAAe5+F,EAAQf,KAAK0U,YAAuB,OAAV3T,KAC/B,OAAb8H,GAAqBA,EAAS9H,QAAUA,IAC3B,OAAX/C,IACFA,EAAS6K,EAAS/H,WAEpB+H,EAASC,UAEM,OAAbJ,aACE3K,IACFA,EAAMiC,KAAKke,UAEble,KAAK4/F,iBAAiB7+F,EAAO2H,EAAU1K,EAAQD,IAEjD8K,EAAW7I,KAAKY,MACZiI,IAAaH,KAIF,OAAbG,IACD7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAEL,OAAbH,IACD1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,MAnCvB6K,CAsCV,EAED,WAAAsV,CAAYzV,EAA4B1K,GACtC,MAAM6K,EAAW7I,KAAKY,MAWtB,gBAHI5C,IACFA,EAAS,MAEP6K,KATFH,EADEA,QACS1I,KAAK8f,cAAcpX,GACR,OAAbG,EACE7I,KAAK8d,cAELjV,KAOW,OAAbA,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,IAErB7I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,IAZrB0K,CAcV,EAED,WAAA0V,GACE,MAAMvV,EAAW7I,KAAKY,MACtB,OAAiB,OAAbiI,EACK,MAER7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACbA,EACR,EAED,SAAAwU,CAAUzc,GAET,EAED,eAAA0c,CAAgB1c,EAAU5C,GAEzB,EAED,aAAAuf,CAAc3c,EAAU5C,GAClBgC,KAAK6f,eACPjf,EAAMuT,QAAQnU,MAEkC,IAA7CA,KAAK2B,MAAQ06F,GAAapuF,gBAC7BrN,EAAMiL,QAAQ7L,KAEjB,EAED,cAAAwd,CAAe5c,EAAU5C,GAExB,EAED,WAAAyf,CAAY7c,GAEX,EAED,eAAA8c,CAAgB9c,GAEf,EAED,aAAA+c,CAAc/c,GACsC,IAA7CZ,KAAK2B,MAAQ06F,GAAapuF,gBAC7BrN,EAAMgN,UAAU5N,MAEdA,KAAK6f,eACPjf,EAAM4T,UAAUxU,KAEnB,EAED,cAAA4d,CAAehd,GAEd,EAED,WAAAgJ,CAAY7I,EAAsB2H,EAAmC1K,EAAuBD,GAC1F,IAAI8K,EAAW7I,KAAKY,MAWpB,OATE8H,EADEA,QACS1I,KAAK8f,cAAcpX,GACR,OAAbG,EACE7I,KAAK8d,cAELjV,WAET9H,IACFA,EAAQ,MAELf,KAAK2/F,YAAc92F,IAAaH,GAA+B,OAAnBA,EAAS3H,OAA4B,OAAVA,QAAkBhD,IAAAA,GAGhF,OAAVgD,IACFA,EAAQf,KAAK0U,sBAEX1W,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKke,UAEC,OAAVnd,GAAmB2H,EAAS3H,QAAUA,GAAS2H,EAAS3K,MAAQA,GAClEiC,KAAK4/F,iBAAiB7+F,EAAO2H,EAAU1K,EAAQD,GAEjD8K,EAAW7I,KAAKY,MACZiI,IAAaH,IAEO,OAAbG,IACR7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GAChB7I,KAAK2/F,YAAwB,OAAV5+F,GAAkB8H,EAASnI,SAAWK,GAC3D8H,EAASC,UAGZ9I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,IAfrB0K,GAhBAA,CAiCV,EAED,WAAAwB,GACE,MAAMtJ,EAAQZ,KAAKY,MACnB,OAAc,OAAVA,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,WAAAyd,GACE,MAAMzd,EAAQZ,KAAKoe,cACnB,OAAc,OAAVxd,EACK,MAETA,EAAMkI,SACClI,EACR,EAED,eAAI8T,GACF,MAAMnD,EAAQvR,KAAKuR,MACnB,OAAIA,aAAiB5R,EACZ4R,EACEA,aAAiB5I,EACnB4I,EAAMxQ,MAER,IACR,EAED,gBAAA6+F,CAAiB7+F,EAAcH,EAAU5C,EAAsBD,GAC7DgD,EAAM6I,YAAYhJ,EAAO5C,EAAQD,EAClC,EAED,SAAAgO,CAAUhL,EAAciX,GACtB,IAAKhY,KAAK2/F,YAA6B,OAAf3/F,KAAKY,MAC3B,OAEF,MAAM8H,EAAW1I,KAAK4U,YAAY7T,GACjB,OAAb2H,IAGH1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU,MAC/B1I,KAAKud,cAAc7U,EAAU,MAC7B1I,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU,MAC/B,EAED,WAAAuD,CAAYlL,GACV,IAAKf,KAAK2/F,WACR,OAEF,MAAM92F,EAAW7I,KAAK4U,YAAY7T,GACjB,OAAb8H,GAAqB7I,KAAKY,QAAUiI,IAGvC7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACrB,EAED+L,YAAY7T,GACH,KAGT,SAAAyK,CAAU5K,EAAc5C,GACtB,IAAKgC,KAAK2/F,YAA6B,OAAf3/F,KAAKY,MAC3B,OAEF,MAAM8H,EAAW1I,KAAK6d,YAAYjd,GACjB,OAAb8H,IAGH1I,KAA8BY,MAAQ8H,EACvC1I,KAAKsd,gBAAgB5U,EAAU1K,GAC/BgC,KAAKud,cAAc7U,EAAU1K,GAC7BgC,KAAKqd,UAAU3U,GACf1I,KAAKwd,eAAe9U,EAAU1K,GAC/B,EAED,WAAAyO,CAAY7L,GACV,IAAKZ,KAAK2/F,WACR,OAEF,MAAM92F,EAAW7I,KAAK6d,YAAYjd,GACjB,OAAbiI,GAAqB7I,KAAKY,QAAUiI,IAGvC7I,KAA8BY,MAAQ,KACvCZ,KAAK0d,gBAAgB7U,GACrB7I,KAAK2d,cAAc9U,GACnB7I,KAAKyd,YAAY5U,GACjB7I,KAAK4d,eAAe/U,GACrB,EAED,WAAAgV,CAAYjd,GACV,MAAM7C,EAAMiC,KAAKke,SACjB,YAAiB,IAAbngB,GAAkBA,IAAQ6C,EAAM7C,IAC3B6C,EAEF,IACR,EAED,WAAAkd,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED6jD,SAAU,KAEViB,aAAc,EAEdy7C,WAAW,EAEXC,cAAc,EAEd,OAAAz7C,GACE,MAAMhB,EAAOrjD,KAAKqjD,KAClB,GAAa,OAATA,EAAe,CACjB,IAAIvuC,EAAUuuC,EAAO,IACrB,MAAMhlD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOuuC,CACR,EAED,OAAAc,CAAQG,EAAiCtmD,EAAsBD,GAC7C,OAAZumD,IACFA,EAAUtkD,KAAK+/F,aAAaz7C,IAE9B,IAMI5jD,EANA6jD,EAAUvkD,KAAKqjD,KACnB,OAAIkB,IAAYD,aAELtmD,IACTA,EAAS,MAGPgC,KAAK6/F,YAAcn/F,EAASV,KAAK6jD,WAAuB,OAAXnjD,KAC/B,OAAZ6jD,GAAoBA,EAAQ7jD,SAAWA,IAC1B,OAAX1C,IACFA,EAASumD,EAAQ99C,aAEnB89C,EAAQz7C,UAEM,OAAZw7C,aACEvmD,IACFA,EAAMiC,KAAKokD,SAEbpkD,KAAKggG,gBAAgBt/F,EAAQ4jD,EAAStmD,EAAQD,IAEhDwmD,EAAUvkD,KAAKqjD,KACXkB,IAAYD,KAIF,OAAZC,IACDvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEL,OAAZD,IACDtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,MAnCrBumD,CAsCV,EAED,UAAAC,CAAWF,EAAkCtmD,GAC3C,MAAMumD,EAAUvkD,KAAKqjD,KAWrB,gBAHIrlD,IACFA,EAAS,MAEPumD,KATFD,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GACP,OAAZC,EACCvkD,KAAK+jD,aAELQ,KAOW,OAAZA,IACRvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEpBvkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,IAZnBsmD,CAcV,EAED,UAAAG,GACE,MAAMF,EAAUvkD,KAAKqjD,KACrB,OAAgB,OAAZkB,EACK,MAERvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACZA,EACR,EAED,QAAAnB,CAASC,GAER,EAED,cAAAC,CAAeD,EAASrlD,GAEvB,EAED,YAAAulD,CAAaF,EAASrlD,GAChBgC,KAAK8/F,cACPz8C,EAAKlvC,QAAQnU,KAEhB,EAED,aAAAwjD,CAAcH,EAASrlD,GAEtB,EAED,UAAAylD,CAAWJ,GAEV,EAED,cAAAK,CAAeL,GAEd,EAED,YAAAM,CAAaN,GACPrjD,KAAK8/F,cACPz8C,EAAK7uC,UAAUxU,KAElB,EAED,aAAA4jD,CAAcP,GAEb,EAED,UAAAqB,CAAWhkD,EAAsB4jD,EAAkCtmD,EAAsBD,GACvF,IAAIwmD,EAAUvkD,KAAKqjD,KAWnB,OATEiB,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GACP,OAAZC,EACCvkD,KAAK+jD,aAELQ,WAER7jD,IACFA,EAAS,MAENV,KAAK6/F,WAAat7C,IAAYD,GAA8B,OAAnBA,EAAQ5jD,QAA8B,OAAXA,QAAmB3C,IAAAA,GAG7E,OAAX2C,IACFA,EAASV,KAAK6jD,qBAEZ7lD,IACFA,EAAS,eAEPD,IACFA,EAAMiC,KAAKokD,SAEE,OAAX1jD,GAAoB4jD,EAAQ5jD,SAAWA,GAAU4jD,EAAQvmD,MAAQA,GACnEiC,KAAKggG,gBAAgBt/F,EAAQ4jD,EAAStmD,EAAQD,GAEhDwmD,EAAUvkD,KAAKqjD,KACXkB,IAAYD,IAEO,OAAZC,IACRvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACfvkD,KAAK6/F,WAAwB,OAAXn/F,GAAmB6jD,EAAQ7jD,SAAWA,GAC1D6jD,EAAQz7C,UAGX9I,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,IAfnBsmD,GAhBAA,CAiCV,EAED,UAAApC,GACE,MAAMmB,EAAOrjD,KAAKqjD,KAClB,OAAa,OAATA,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,UAAAsB,GACE,MAAMtB,EAAOrjD,KAAKykD,aAClB,OAAa,OAATpB,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,cAAIQ,GACF,MAAMtyC,EAAQvR,KAAKuR,MACnB,OAAOA,aAAiBsgC,GAAOtgC,EAAQ,IACxC,EAED,eAAAyuF,CAAgBt/F,EAAcY,EAAUtD,EAAqBD,GAC3D2C,EAAOiU,YAAYrT,EAAOtD,EAAQD,EACnC,EAED,QAAAygD,CAAS6E,EAAYrlD,GACnB,IAAKgC,KAAK6/F,WAA2B,OAAd7/F,KAAKqjD,KAC1B,OAEF,MAAMiB,EAAUtkD,KAAK8jD,WAAWT,GAChB,OAAZiB,IAGHtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAAStmD,GAC7BgC,KAAKujD,aAAae,EAAStmD,GAC3BgC,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAStmD,GAC7B,EAED,UAAAygD,CAAW4E,GACT,IAAKrjD,KAAK6/F,UACR,OAEF,MAAMt7C,EAAUvkD,KAAK8jD,WAAWT,GAChB,OAAZkB,GAAoBvkD,KAAKqjD,OAASkB,IAGrCvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACpB,EAED,UAAAT,CAAWT,GACT,MAAMtlD,EAAMiC,KAAKokD,QACjB,YAAiB,IAAbrmD,GAAkBA,IAAQslD,EAAKtlD,IAC1BslD,EAEF,IACR,EAED,UAAAU,GACE,IAAIV,EACJ,MAAMF,EAAWnjD,KAAKmjD,SAItB,GAHiB,OAAbA,IACFE,EAAOF,EAAS3zC,UAEd6zC,QAAkC,CACpC,IAAIvuC,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOuuC,CACR,EAED,YAAA08C,CAAazgG,GACX,MAAM6jD,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACKA,EAASv6C,SAAStJ,GAEpBuyC,GAAKjpC,SAAStJ,EACtB,EAED,QAAA0N,CAASL,GACP3M,KAAK+V,gBAAgBpJ,GACrB,MAAMwI,EAAQnV,KAAKmV,MACfA,aAAiBknF,IACnBr8F,KAAKgW,YAAYhW,KAAK2B,MAAQsU,EAAAA,SAASC,OAASC,KAAKC,IAAIjB,EAAMxT,MAAQsU,EAASC,SAAAA,KAAMD,EAASI,SAAAA,YACnD,IAAvCrW,KAAK2B,MAAQ2K,EAAAA,SAASgK,eACzBtW,KAAKyI,SAAS0M,EAAMvU,OACpBZ,KAAKmkD,QAAQhvC,EAAMkuC,MACnBrjD,KAAK4V,aAAY,KAGnB5V,KAAKgW,YAAW,EAEnB,EAED,OAAAnK,CAAQwB,GACN,IAAIhN,EAAYL,KAAKK,UACrB,GAAkB,OAAdA,EACFA,EAAY,IAAIiN,IACftN,KAA8BK,UAAYA,OACtC,GAAIA,EAAUkN,IAAIF,GACvB,OAEFrN,KAAKwN,YAAYH,GACjBhN,EAAUoN,IAAIJ,GACdrN,KAAK0N,UAAUL,GACfrN,KAAK2N,WAAWN,GACO,IAAnBhN,EAAU+C,MAAcpD,KAAKyE,SAC/BzE,KAAKqD,gBAER,EAED,WAAAmK,CAAYH,GAEX,EAED,SAAAK,CAAUL,GAET,EAED,UAAAM,CAAWN,GAEV,EAED,SAAAO,CAAUP,GACR,MAAMhN,EAAYL,KAAKK,UACL,OAAdA,GAAuBA,EAAUkN,IAAIF,KAGzCrN,KAAK6N,cAAcR,GACnBhN,EAAUyN,OAAOT,GACjBrN,KAAK+N,YAAYV,GACjBrN,KAAKgO,aAAaX,GACK,IAAnBhN,EAAU+C,MACZpD,KAAK4D,gBAER,EAED,aAAAiK,CAAcR,GAEb,EAED,WAAAU,CAAYV,GAEX,EAED,YAAAW,CAAaX,GAEZ,EAED,aAAI5B,GACF,OAAqD,IAA7CzL,KAAK2B,MAAQ06F,GAAapuF,cACnC,EAED,cAAA5K,GACoD,IAA7CrD,KAAK2B,MAAQ06F,GAAapuF,iBAG/BjO,KAAKoO,qBACLpO,KAAKyC,SAASzC,KAAK2B,MAAQ06F,GAAapuF,eACxCjO,KAAKqO,mBACLrO,KAAKsO,oBACN,EAED,kBAAAF,GAEC,EAED,gBAAAC,GACE,MAAMzN,EAAQZ,KAAKY,MACL,OAAVA,GACFA,EAAMiL,QAAQ7L,KAEjB,EAED,iBAAAsO,GAEC,EAED,aAAA1K,GACoD,IAA7C5D,KAAK2B,MAAQ06F,GAAapuF,iBAG/BjO,KAAK0O,oBACL1O,KAAKyC,SAASzC,KAAK2B,OAAS06F,GAAapuF,eACzCjO,KAAK2O,kBACL3O,KAAK4O,mBACN,EAED,iBAAAF,GAEC,EAED,eAAAC,GACE,MAAM/N,EAAQZ,KAAKY,MACL,OAAVA,GACFA,EAAMgN,UAAU5N,KAEnB,EAED,gBAAA4O,GAEC,EAED,OAAAlM,GACE3C,MAAM2C,UACiB,OAAnB1C,KAAKK,WAA8C,IAAxBL,KAAKK,UAAU+C,MAC5CpD,KAAKqD,gBAER,EAED,SAAAK,GACE3D,MAAM2D,YACN1D,KAAK4D,eACN,GAEH,CACE,SAAAoR,CAAU/Q,EAAoBsN,GAK5B,OAJAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACElR,UAAY,KAClD4D,EAAsCrD,MAAQ,KAC9CqD,EAAsCo/C,KAAO,KACvCp/C,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,KAIzD,MAAMumC,EAAoB5mD,OAAOC,yBAAyBwY,EAAmB,gBACzEmuC,IAAAA,GAAgC,UAAWA,KACb,IAA5BA,EAAkBzlD,OACpBylD,EAAkBzlD,MAAQqX,EAActY,KACxCF,OAAOgB,eAAeyX,EAAmB,UAAWmuC,KACf,IAA5BA,EAAkBzlD,QAC3BylD,EAAkBzlD,WAAa,EAC/BnB,OAAOgB,eAAeyX,EAAmB,UAAWmuC,IAGzD,EAED92C,cAAe,GAAM3B,WAAS0G,UAAY,EAE1CA,UAAW1G,EAAAA,SAAS0G,UAAY,EAChCE,UAAW,GAAM5G,EAAS0G,SAAAA,UAAY,GAAM,ICn7BjCitF,GAAsIzC,GAAcjqF,OAAiE,oBAAqB,CACrP,GAAAvU,CAAIkhG,GAQF,OAPIA,aAA4B5zF,EAAAA,SAC9BtM,KAAKqV,UAAU6qF,GACNA,aAA4BruD,GACrC7xC,KAAKmkD,QAAQ+7C,GAEblgG,KAAK29F,cAAcuC,GAEdlgG,KAAKuR,KACb,EAED,YAAAgE,CAAa2qF,GAQX,OAPIA,aAA4B5zF,EAAAA,SAC9BtM,KAAKqV,UAAU6qF,GACNA,aAA4BruD,GACrC7xC,KAAKmkD,QAAQ+7C,GAEblgG,KAAK29F,cAAcuC,GAEdlgG,KAAKuR,KACb,EAED4xC,SAAU,KAEViB,aAAc,EAEd07C,cAAc,EAEd,OAAAz7C,GACE,MAAMhB,EAAOrjD,KAAKqjD,KAClB,GAAa,OAATA,EAAe,CACjB,IAAIvuC,EAAUuuC,EAAO,IACrB,MAAMhlD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOuuC,CACR,EAED,OAAAc,CAAQG,EAAiCqB,EAA0Bi4C,GACjD,OAAZt5C,IACFA,EAAUtkD,KAAK+/F,aAAaz7C,IAE9B,IAAIC,EAAUvkD,KAAKqjD,KACnB,GAAIkB,IAAYD,EACd,OAAOC,WACEoB,IACTA,EAAa,MAEf,IAAIk3C,EAAa78F,KAAK68F,WAKtB,OAJmB,OAAfA,GAAmC,OAAZv4C,IACzBu4C,EAAa78F,KAAKu9F,iBAAiBj5C,GACnCtkD,KAAK29F,cAAcd,EAAY,KAAMe,IAEpB,OAAff,IACc,OAAZt4C,IACiB,OAAfoB,IACFA,EAAapB,EAAQ99C,aAEvB89C,EAAQz7C,UAEM,OAAZw7C,GACFtkD,KAAKmgG,qBAAqBtD,EAAYv4C,EAASqB,EAAY3lD,KAAKokD,SAElEG,EAAUvkD,KAAKqjD,KACXkB,IAAYD,KAIF,OAAZC,IACDvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEL,OAAZD,IACDtkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAASqB,GAC7B3lD,KAAKujD,aAAae,EAASqB,GAC3B3lD,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAASqB,KAfnBpB,CAkBZ,EAED,UAAAC,CAAWF,EAAkCqB,GAC3C,IAAIpB,EAAUvkD,KAAKqjD,KAEjBiB,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GACP,OAAZC,EACCvkD,KAAK+jD,aAELQ,EAEZ,IAAIs4C,EAAa78F,KAAK68F,WAStB,OARmB,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiBj5C,GACnCtkD,KAAKg+F,iBAAiBnB,GACtBt4C,EAAUvkD,KAAKqjD,eAEbsC,IACFA,EAAa,MAEXpB,IAAYD,IAEO,OAAZC,IACRvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,IAEpBvkD,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAASqB,GAC7B3lD,KAAKujD,aAAae,EAASqB,GAC3B3lD,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAASqB,IAZnBrB,CAcV,EAED,QAAAlB,CAASC,GAER,EAED,cAAAC,CAAeD,EAASsC,GAEvB,EAED,YAAApC,CAAaF,EAASsC,GAChB3lD,KAAK8/F,cACPz8C,EAAKlvC,QAAQnU,KAEhB,EAED,aAAAwjD,CAAcH,EAASsC,GAEtB,EAED,UAAAlB,GACE,MAAMF,EAAUvkD,KAAKqjD,KACrB,OAAgB,OAAZkB,EACK,MAERvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACZA,EACR,EAED,UAAAd,CAAWJ,GAEV,EAED,cAAAK,CAAeL,GAEd,EAED,YAAAM,CAAaN,GACPrjD,KAAK8/F,cACPz8C,EAAK7uC,UAAUxU,KAElB,EAED,aAAA4jD,CAAcP,GAEb,EAED,UAAAqB,CAAWm4C,EAAuBv4C,EAA2BqB,EAA0Bi4C,GACrF,IAAIr5C,EAAUvkD,KAAKqjD,KAWnB,gBAHIw5C,IACFA,EAAa,MAEXt4C,KATFD,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GACP,OAAZC,EACCvkD,KAAK+jD,aAELQ,IAK8B,OAAfs4C,IAGR,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiBj5C,GACnCtkD,KAAKk+F,iBAAiB,KAAMrB,aAE1Bl3C,IACFA,EAAa,MAEI,OAAfk3C,GACF78F,KAAKmgG,qBAAqBtD,EAAYv4C,EAASqB,EAAY3lD,KAAKokD,SAElEG,EAAUvkD,KAAKqjD,KACXkB,IAAYD,IAEO,OAAZC,IACRvkD,KAA8BqjD,KAAO,KACtCrjD,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnBA,EAAQz7C,UAET9I,KAA8BqjD,KAAOiB,EACtCtkD,KAAKsjD,eAAegB,EAASqB,GAC7B3lD,KAAKujD,aAAae,EAASqB,GAC3B3lD,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAASqB,KA3BnBrB,CA6BV,EAED,UAAApC,GACE,MAAMmB,EAAOrjD,KAAKqjD,KAClB,OAAa,OAATA,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,UAAAsB,GACE,MAAMtB,EAAOrjD,KAAKykD,aAClB,OAAa,OAATpB,EACK,MAETA,EAAKv6C,SACEu6C,EACR,EAED,UAAAU,GACE,IAAIV,EACJ,MAAMF,EAAWnjD,KAAKmjD,SAItB,GAHiB,OAAbA,IACFE,EAAOF,EAAS3zC,UAEd6zC,QAAkC,CACpC,IAAIvuC,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOuuC,CACR,EAED,YAAA08C,CAAazgG,GACX,MAAM6jD,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACKA,EAASv6C,SAAStJ,GAEpBuyC,GAAKjpC,SAAStJ,EACtB,EAED8gG,qBAAqBvD,GACZ,KAGT,oBAAAsD,CAAqBtD,EAAex5C,EAASsC,EAAyBvB,GAErE,EAED,kBAAA24C,CAAmBF,EAAeqC,GAChC,MAAM77C,EAAOrjD,KAAKogG,qBAAqBvD,GACvC,GAAa,OAATx5C,EAAe,CACjB,MAAMsC,EAAkC,OAArBu5C,EAA4Bl/F,KAAKogG,qBAAqBlB,GAAoB,KAC7Fl/F,KAAKwkD,WAAWnB,EAAMsC,EACvB,CACD5lD,MAAMg9F,mBAAmBF,EAAYqC,EACtC,EAED,kBAAA/B,CAAmBN,GACjB98F,MAAMo9F,mBAAmBN,GACzB,MAAMx5C,EAAOrjD,KAAKogG,qBAAqBvD,GAC1B,OAATx5C,GAAiBA,IAASrjD,KAAKqjD,MACjCrjD,KAAKykD,YAER,EAED,gBAAA84C,CAAiBl6C,GACf,MAAMw5C,EAAa98F,MAAMw9F,mBAKzB,gBAJIl6C,IACFA,EAAOrjD,KAAK+jD,cAEd/jD,KAAKmgG,qBAAqBtD,EAAYx5C,EAAM,KAAMrjD,KAAKokD,SAChDy4C,CACR,GAEH,CACE,SAAA7nF,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACE8xC,KAAO,KACvCp/C,CACR,EAED,MAAAyS,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElC8mD,EAAoB5mD,OAAOC,yBAAyBwY,EAAmB,gBACzEmuC,IAAAA,GAAgC,UAAWA,KACb,IAA5BA,EAAkBzlD,OACpBylD,EAAkBzlD,MAAQqX,EAActY,KACxCF,OAAOgB,eAAeyX,EAAmB,UAAWmuC,KACf,IAA5BA,EAAkBzlD,QAC3BylD,EAAkBzlD,WAAa,EAC/BnB,OAAOgB,eAAeyX,EAAmB,UAAWmuC,IAGzD,IC3RUs7C,GAAsI9B,GAAchrF,OAAiE,oBAAqB,CACrP4vC,SAAU,KAEV,OAAAiB,CAAQf,GAEP,EAEDy8C,cAAc,EAEd,iBAAAQ,CAAkBj9C,GAChB,MAAMw5C,EAAa78F,KAAKugG,gBAAgBl9C,EAAKzwC,KAC7C,YAAOiqF,IAAAA,EAAwBA,EAAa,IAC7C,EAED,uBAAA2D,CAAwBn9C,EAASw5C,GACP78F,KAAKugG,gBACbl9C,EAAKzwC,KAAOiqF,CAC7B,EAED,wBAAA4D,CAAyBp9C,EAASw5C,UACR78F,KAAKugG,gBACNl9C,EAAKzwC,IAC7B,EAED,OAAAwyC,CAAQ/B,GACN,YAAqC,IAA9BrjD,KAAKklD,MAAM7B,EAAKzwC,IACxB,EAED,OAAAqvC,CAAQqC,EAA2B46C,EAAsCtB,GAErEt5C,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GAElBtkD,KAAK+jD,aAEjB,IAAI84C,EAAa78F,KAAKsgG,kBAAkBh8C,GAKxC,OAJmB,OAAfu4C,IACFA,EAAa78F,KAAKu9F,iBAAiBj5C,IAErCtkD,KAAKy8F,cAAcI,EAAYqC,EAAkBtB,GAC1Ct5C,CACR,EAED,QAAAgB,CAASC,EAAsD25C,GAC7D,IAAK,MAAM15C,KAAUD,EACnBvlD,KAAKiiD,QAAQsD,EAASC,GAAU05C,EAEnC,EAED,QAAAz5C,CAASF,EAAsD25C,GAC7D,MAAMh6C,EAAQllD,KAAKklD,MACnB,IAAK,MAAMM,KAAUN,WACfK,EAASC,IACXxlD,KAAKykD,WAAWS,EAAMM,IAG1B,IAAK,MAAMA,KAAUD,WACfL,EAAMM,IACRxlD,KAAKwkD,WAAWe,EAASC,GAAU05C,EAGxC,EAED,UAAA16C,CAAWF,EAAkC46C,GAEzC56C,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GAElBtkD,KAAK+jD,aAEjB,MAAMmB,EAAQllD,KAAKklD,MACnB,QAAkBtyC,IAAdsyC,EAAMZ,EAAQ1xC,KAChB,OAAO0xC,EAETY,EAAMZ,EAAQ1xC,KAAO0xC,EACpBtkD,KAA8BqlD,WAAa,WACxC65C,IACFA,EAAmB,MAErB,IAAIrC,EAAa78F,KAAKsgG,kBAAkBh8C,GASxC,OARmB,OAAfu4C,IACFA,EAAa78F,KAAKu9F,iBAAiBj5C,IAErCtkD,KAAKg+F,iBAAiBnB,EAAYqC,GAClCl/F,KAAKsjD,eAAegB,EAAS46C,GAC7Bl/F,KAAKujD,aAAae,EAAS46C,GAC3Bl/F,KAAKojD,SAASkB,GACdtkD,KAAKwjD,cAAcc,EAAS46C,GACrB56C,CACR,EAED,QAAAlB,CAASC,GAER,EAED,cAAAC,CAAeD,EAAS67C,GAEvB,EAED,YAAA37C,CAAaF,EAAS67C,GAChBl/F,KAAK8/F,cACPz8C,EAAKlvC,QAAQnU,KAEhB,EAED,aAAAwjD,CAAcH,EAAS67C,GAEtB,EAED,WAAAt5C,CAAYL,EAAsD25C,GAChE,IAAK,MAAM15C,KAAUD,EACnBvlD,KAAKwkD,WAAWe,EAASC,GAAU05C,EAEtC,EAED,UAAAz6C,CAAWF,GACT,MAAMW,EAAQllD,KAAKklD,MACnB,QAAkBtyC,IAAdsyC,EAAMX,EAAQ3xC,KAChB,OAAO,KAER5S,KAA8BqlD,WAAa,SACrCH,EAAMX,EAAQ3xC,KACrB5S,KAAK0jD,eAAea,GACpBvkD,KAAK2jD,aAAaY,GAClBvkD,KAAKyjD,WAAWc,GAChBvkD,KAAK4jD,cAAcW,GACnB,MAAMs4C,EAAa78F,KAAKsgG,kBAAkB/7C,GAI1C,OAHmB,OAAfs4C,GACF78F,KAAKi+F,iBAAiBpB,GAEjBt4C,CACR,EAED,UAAAd,CAAWJ,GAEV,EAED,cAAAK,CAAeL,GAEd,EAED,YAAAM,CAAaN,GACPrjD,KAAK8/F,cACPz8C,EAAK7uC,UAAUxU,KAElB,EAED,aAAA4jD,CAAcP,GAEb,EAED,WAAAwC,CAAYX,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAKykD,WAAWS,EAAMM,GAEzB,EAED,UAAAd,CAAWhkD,EAA4B4jD,EAA2B46C,EAAsCtB,GAEpGt5C,EADEA,QACQtkD,KAAK+/F,aAAaz7C,GAElBtkD,KAAK+jD,aAEjB,IAAI84C,EAAa78F,KAAKsgG,kBAAkBh8C,GAKxC,OAJmB,OAAfu4C,IACFA,EAAa78F,KAAKu9F,iBAAiBj5C,IAErCtkD,KAAKk+F,iBAAiBx9F,EAAQm8F,EAAYqC,EAAkBtB,GACrDt5C,CACR,EAED,WAAAwB,CAAYplD,EAA2B6kD,EAAsD25C,GAC3F,IAAK,MAAM15C,KAAUD,EACnBvlD,KAAK0kD,WAAWhkD,EAAQ6kD,EAASC,GAAU05C,EAE9C,EAED,UAAAh9C,CAAWmB,GACT,OAAKrjD,KAAKolD,QAAQ/B,IAGlBA,EAAKv6C,SACEu6C,GAHE,IAIV,EAED,WAAA0C,CAAYb,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAKkiD,WAAWgD,EAAMM,GAEzB,EAED,UAAAb,CAAWtB,GACT,MAAMkB,EAAUvkD,KAAKykD,WAAWpB,GAChC,OAAgB,OAAZkB,EACK,MAETA,EAAQz7C,SACDy7C,EACR,EAED,WAAAyB,CAAYd,YACNA,IACFA,EAAQllD,KAAKklD,OAEf,IAAK,MAAMM,KAAUN,EACnBllD,KAAK2kD,WAAWO,EAAMM,GAEzB,EAED,YAAAS,CAAa5C,EAASsC,GACpB,MAAMk3C,EAAa78F,KAAKsgG,kBAAkBj9C,GAC1C,GAAmB,OAAfw5C,EACF,OAEF,MAAMqC,EAAkC,OAAfv5C,EAAsB3lD,KAAKsgG,kBAAkB36C,GAAc,KACpF3lD,KAAKw/F,mBAAmB3C,EAAYqC,EACrC,EAED,UAAAn7C,GACE,IAAIV,EACJ,MAAMF,EAAWnjD,KAAKmjD,SAItB,GAHiB,OAAbA,IACFE,EAAOF,EAAS3zC,UAEd6zC,QAAkC,CACpC,IAAIvuC,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOuuC,CACR,EAED,YAAA08C,CAAazgG,GACX,MAAM6jD,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACKA,EAASv6C,SAAStJ,GAEpBuyC,GAAKjpC,SAAStJ,EACtB,EAED8gG,qBAAqBvD,GACZ,KAGT,oBAAAsD,CAAqBtD,EAAex5C,EAASsC,EAAyBvB,GAErE,EAED,gBAAAk5C,CAAiBT,GACf,OAA8C,OAA1C78F,KAAKogG,qBAAqBvD,GACrBA,EAEF,IACR,EAED,kBAAAE,CAAmBF,EAAeqC,GAChC,MAAM77C,EAAOrjD,KAAKogG,qBAAqBvD,GAC1B,OAATx5C,IACFrjD,KAAKwgG,wBAAwBn9C,EAAMw5C,GACnC78F,KAAKwkD,WAAWnB,EAAM67C,IAExBn/F,MAAMg9F,mBAAmBF,EAAYqC,EACtC,EAED,kBAAA/B,CAAmBN,GACjB98F,MAAMo9F,mBAAmBN,GACzB,MAAMx5C,EAAOrjD,KAAKogG,qBAAqBvD,GAC1B,OAATx5C,IACFrjD,KAAKykD,WAAWpB,GAChBrjD,KAAKygG,yBAAyBp9C,EAAMw5C,GAEvC,EAED,gBAAAU,CAAiBl6C,GACf,MAAMw5C,EAAa98F,MAAMw9F,4BACrBl6C,IACFA,EAAOrjD,KAAK+jD,cAEd,MAAMK,EAAUpkD,KAAKokD,QAAQf,GAE7B,OADArjD,KAAKmgG,qBAAqBtD,EAAYx5C,EAAM,KAAMe,GAC3Cy4C,CACR,EAED,OAAArjF,CAAQJ,EAAMC,GACZ,MAAMC,EAAItZ,KAAKogG,qBAAqBhnF,GAC9BG,EAAIvZ,KAAKogG,qBAAqB/mF,GACpC,OAAU,OAANC,GAAoB,OAANC,EACTvZ,KAAK0gG,aAAapnF,EAAGC,GAEjB,OAAND,EAAa,EAAU,OAANC,GAAc,EAAI,CAC3C,EAEDmnF,aAAAA,CAAatnF,EAAMC,IACVD,EAAExG,IAAMyG,EAAEzG,KAAO,EAAIwG,EAAExG,IAAMyG,EAAEzG,IAAM,EAAI,GAGpD,CACE,SAAAoC,CAAU/Q,EAAoBsN,GAK5B,OAJAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEgvF,gBAAkB,GACxDt8F,EAAsCihD,MAAQ,GAC9CjhD,EAAsCohD,UAAY,EAC5CphD,CACR,IC/VU08F,GAAyInD,GAAcjqF,OAAmE,qBAAsB,CAC3P,WAAAqtF,CAAY/D,GACV,MAAM,IAAIt6F,MAAM,yBACjB,EAED,GAAAvD,CAAI6hG,GAQF,OAPIA,aAA6Bv0F,EAAAA,SAC/BtM,KAAKqV,UAAUwrF,GACNA,aAA6Bl4F,EACtC3I,KAAKyI,SAASo4F,GAEd7gG,KAAK29F,cAAckD,GAEd7gG,KAAKuR,KACb,EAED,YAAAgE,CAAasrF,GAQX,OAPIA,aAA6Bv0F,EAAAA,SAC/BtM,KAAKqV,UAAUwrF,GACNA,aAA6Bl4F,EACtC3I,KAAKyI,SAASo4F,GAEd7gG,KAAK29F,cAAckD,GAEd7gG,KAAKuR,KACb,EAED6L,UAAW,KAEXc,cAAe,EAEf,SAAItd,GACF,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEQ78F,KAAK4gG,YAAY/D,GAClBj8F,KACjB,EAED,QAAA4H,GACE,MAAM5H,EAAQZ,KAAKY,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAIkU,EAAUlU,EAAQ,IACtB,MAAMvC,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOlU,CACR,EAED,QAAA6H,CAAS7H,EAA+Bqe,EAA4BlhB,GAClE,IAAI8+F,EAAa78F,KAAK68F,WAatB,OAZc,OAAVj8F,GACFA,EAAQZ,KAAK8f,cAAclf,GACR,OAAfi8F,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAEpBZ,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC3Cle,KAAK29F,cAAcd,EAAY,KAAM9+F,IACb,OAAf8+F,GACQ78F,KAAK4gG,YAAY/D,GACzBp0F,SAAS,MAEbo0F,CACR,EAED,WAAA1+E,CAAYvd,EAAgCqe,GAExCre,EADEA,QACMZ,KAAK8d,cAEL9d,KAAK8f,cAAclf,GAE7B,IAAIi8F,EAAa78F,KAAK68F,WAOtB,OANmB,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAEpBZ,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC3Cle,KAAKg+F,iBAAiBnB,EAAY,MAC3BA,CACR,EAED,SAAAx/E,CAAUzc,EAAUi8F,GAEnB,EAED,eAAAv/E,CAAgB1c,EAAUqe,EAA2B49E,GAEpD,EAED,aAAAt/E,CAAc3c,EAAUqe,EAA2B49E,GAElD,EAED,cAAAr/E,CAAe5c,EAAUqe,EAA2B49E,GAEnD,EAED,WAAAz+E,CAAYxd,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAAuB78F,KAAK4gG,YAAY/D,GAAYj8F,QAAUA,EACzD,MAETZ,KAAK0d,gBAAgB9c,EAAOi8F,GAC5B78F,KAAK2d,cAAc/c,EAAOi8F,GAC1B78F,KAAKyd,YAAY7c,EAAOi8F,GACxB78F,KAAK4d,eAAehd,EAAOi8F,GACpBA,EACR,EAED,WAAAp/E,CAAY7c,EAAUi8F,GAErB,EAED,eAAAn/E,CAAgB9c,EAAUi8F,GAEzB,EAED,aAAAl/E,CAAc/c,EAAUi8F,GAEvB,EAED,cAAAj/E,CAAehd,EAAUi8F,GAExB,EAED,WAAAjzF,CAAYlJ,EAA4BE,EAAyBqe,EAA4BlhB,GAEzF6C,EADEA,QACMZ,KAAK8d,cAEL9d,KAAK8f,cAAclf,GAE7B,IAAIi8F,EAAa78F,KAAK68F,WAOtB,OANmB,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAEpBZ,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC3Cle,KAAKk+F,iBAAiBx9F,EAAQm8F,GACvBA,CACR,EAED,WAAA3yF,CAAYtJ,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAGa78F,KAAK4gG,YAAY/D,GACrBj8F,QAAUA,EAHd,MAMTi8F,EAAW/zF,SACJ+zF,EACR,EAED,WAAAx+E,CAAYzd,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAGa78F,KAAK4gG,YAAY/D,GACrBj8F,QAAUA,EAHd,MAMTi8F,EAAW/zF,SACX9I,KAAK29F,cAAc,MACZd,EACR,EAED,aAAA/8E,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,kBAAAy9F,CAAmBF,EAAeqC,GAChC,MAAMt+F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC3C,GAAc,OAAVA,EAAgB,CAClB,MAAMqe,EAAmC,OAArBigF,EAA4Bl/F,KAAK4gG,YAAY1B,GAAuBt+F,MAAQ,KAChGZ,KAAKme,YAAYvd,EAAOqe,EACzB,CACDlf,MAAMg9F,mBAAmBF,EAAYqC,EACtC,EAED,kBAAA/B,CAAmBN,GACjB98F,MAAMo9F,mBAAmBN,GACzB,MAAMj8F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC7B,OAAVA,GACFZ,KAAKoe,YAAYxd,EAEpB,EAED,WAAAkd,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,GAEH,CACE,SAAAoU,CAAU/Q,EAAoBsN,GAE5B,OADAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,EAEtC,EAED,MAAAmF,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,IAG1D,IC/NUsiF,GAAyIvC,GAAchrF,OAAmE,qBAAsB,CAC3P,WAAAqtF,CAAY/D,GACV,MAAM,IAAIt6F,MAAM,yBACjB,EAED6a,UAAW,KAEX,QAAA7U,CAAS3H,GACP,YAAiD,IAA1CZ,KAAK+gG,iBAAiBngG,EAAMgS,IACpC,EAED,QAAA8L,CAAS9d,EAAwBqe,EAA4BlhB,GAC3D6C,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAC9B,IAAIlE,EAAakE,EAAiBngG,EAAMgS,KACxC,YAAIiqF,EACF,OAAOA,WACE59E,IACTA,EAAc,MAEhB49E,EAAa78F,KAAKu9F,iBAAiB38F,GAClBZ,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,EAAalhB,GACtC,MAAMmhG,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EAEzF,OADA5S,KAAKy8F,cAAcI,EAAYqC,EAAkBnhG,GAC1C8+F,CACR,EAED,SAAAj+E,CAAUC,EAAwD7gB,GAChE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAEtC,EAED,SAAA+gB,CAAUF,EAAwD7gB,GAChE,MAAMuN,EAAQvL,KAAKuL,MACb7K,EAAS6K,EAAQvL,KAAKq9F,iBAAmB,KACzC0D,EAAmB/gG,KAAK+gG,iBAC9B,IAAK,MAAMjiF,KAAWiiF,EACpB,YAAIliF,EAAUC,GAAqB,CACjC,MAAMi/E,EAAgB/9F,KAAKi+F,iBAAiB8C,EAAiBjiF,IACvC,OAAlBi/E,GAA0BxyF,GAAoB,OAAX7K,GAAmBq9F,EAAcr9F,SAAWA,GACjFq9F,EAAcj1F,QAEjB,CAEH,GAAiD,IAA5C9I,KAAK2B,MAAQ48F,GAActnF,aAAoB,CAClD,MAAM+H,EAAgB,IAAInH,MAC1B,IAAK,MAAMiH,KAAWD,EACpBG,EAAcngB,KAAKggB,EAAUC,IAE/B,IAAK,IAAIvgB,EAAI,EAAGwZ,EAAIiH,EAAcxgB,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CACvD,MAAMu/F,EAAgB9+E,EAAczgB,GACpC,QAAmCqU,IAA/BmuF,EAAiBjD,EAAclrF,KAAiB,CAClD,MAAMqM,EAAc1gB,EAAIwZ,EAAI,EAAIiH,EAAczgB,EAAI,GAAKP,EACvDgC,KAAK0e,SAASo/E,EAAe7+E,EAC9B,CACF,CACF,MACC,IAAK,MAAMH,KAAWD,WAChBkiF,EAAiBjiF,IACnB9e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAI1C,EAED,WAAAmgB,CAAYvd,EAAwBqe,EAA4B49E,GAC9Dj8F,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAO9B,YANIlE,IACFA,EAAakE,EAAiBngG,EAAMgS,eAElCqM,IACFA,EAAc,eAEZ49E,EAAuB,CACzBA,EAAa78F,KAAKu9F,mBACDv9F,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,GACzB,MAAMigF,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EACzF5S,KAAKg+F,iBAAiBnB,EAAYqC,EACnC,CACD,YAA2BtsF,IAAvBmuF,EAAiBngG,EAAMgS,OAG3BmuF,EAAiBngG,EAAMgS,KAAOiqF,EAC9B78F,KAAKsd,gBAAgB1c,EAAOqe,EAAa49E,GACzC78F,KAAKud,cAAc3c,EAAOqe,EAAa49E,GACvC78F,KAAKqd,UAAUzc,EAAOi8F,GACtB78F,KAAKwd,eAAe5c,EAAOqe,EAAa49E,IAN/BA,CAQV,EAED,SAAAx/E,CAAUzc,EAAUi8F,GAEnB,EAED,eAAAv/E,CAAgB1c,EAAUqe,EAA2B49E,GAEpD,EAED,aAAAt/E,CAAc3c,EAAUqe,EAA2B49E,GAElD,EAED,cAAAr/E,CAAe5c,EAAUqe,EAA2B49E,GAEnD,EAED,YAAA39E,CAAaL,EAAwD7gB,GACnE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAKme,YAAYU,EAAUC,GAAW9gB,EAEzC,EAED,WAAAogB,CAAYxd,GACV,MAAMmgG,EAAmB/gG,KAAK+gG,iBACxBlE,EAAakE,EAAiBngG,EAAMgS,KAC1C,gBAAIiqF,EACK,aAEFkE,EAAiBngG,EAAMgS,KAC9B5S,KAAK0d,gBAAgB9c,EAAOi8F,GAC5B78F,KAAK2d,cAAc/c,EAAOi8F,GAC1B78F,KAAKyd,YAAY7c,EAAOi8F,GACxB78F,KAAK4d,eAAehd,EAAOi8F,GACpBA,EACR,EAED,WAAAp/E,CAAY7c,EAAUi8F,GAErB,EAED,eAAAn/E,CAAgB9c,EAAUi8F,GAEzB,EAED,aAAAl/E,CAAc/c,EAAUi8F,GAEvB,EAED,cAAAj/E,CAAehd,EAAUi8F,GAExB,EAED,YAAA19E,CAAa3U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKoe,YAAY5T,EAAOsU,GAE3B,EAED,WAAAlV,CAAYlJ,EAAuCE,EAAwBqe,EAA4BlhB,GACrG6C,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAC9B,IAAIlE,EAAakE,EAAiBngG,EAAMgS,KACxC,YAAIiqF,EACF,OAAOA,WACE59E,IACTA,EAAc,MAEhB49E,EAAa78F,KAAKu9F,mBACDv9F,KAAK4gG,YAAY/D,GACzBp0F,SAAS7H,EAAOqe,GACzB,MAAMigF,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EAEzF,OADA5S,KAAKk+F,iBAAiBx9F,EAAQm8F,EAAYqC,EAAkBnhG,GACrD8+F,CACR,EAED,YAAAz9E,CAAa1e,EAAuCme,EAAwDI,EAA4BlhB,GACtI,IAAK,MAAM+gB,KAAWD,EACpB7e,KAAK4J,YAAYlJ,EAAQme,EAAUC,GAAWG,EAAalhB,EAE9D,EAED,WAAAmM,CAAYtJ,GACV,MAAM69F,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GAE/B,GADiB/+F,KAAK4gG,YAAY/D,GACrBj8F,QAAUA,EAIvB,OADAZ,KAAK08F,iBAAiBG,GACfA,CACR,CACD,OAAO,IACR,EAED,YAAAx9E,CAAa7U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKkK,YAAYM,EAAOsU,GAE3B,EAED,WAAAT,CAAYzd,GACV,MAAM69F,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GAE/B,GADiB/+F,KAAK4gG,YAAY/D,GACrBj8F,QAAUA,EAIvB,OADAZ,KAAKm+F,iBAAiBtB,GACfA,CACR,CACD,OAAO,IACR,EAED,YAAAv9E,CAAa9U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKqe,YAAY7T,EAAOsU,GAE3B,EAED,aAAAS,CAAc3e,EAAUqe,GACtB,MAAM49E,EAAa78F,KAAK+gG,iBAAiBngG,EAAMgS,KAC/C,YAAIiqF,EACF,OAEF,MAAMqC,EAAmC,OAAhBjgF,EAAuBjf,KAAK+gG,iBAAiB9hF,EAAYrM,UAAY,EAC9F5S,KAAKw/F,mBAAmB3C,OAAsC,IAA1BqC,EAA8BA,EAAmB,KACtF,EAED,aAAA1/E,CAAcnS,GACZ,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GACzBn+F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC7B,OAAVA,GACFA,EAAMiL,QAAQwB,EAEjB,CACF,EAED,eAAAoS,CAAgBpS,GACd,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GACzBn+F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC7B,OAAVA,GACFA,EAAMgN,UAAUP,EAEnB,CACF,EAED,WAAAyQ,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,kBAAAy9F,CAAmBF,EAAeqC,GAChC,MAAMt+F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC3C,GAAc,OAAVA,EAAgB,CAClB,MAAMqe,EAAmC,OAArBigF,GAA6Bl/F,KAAK2+F,cAAcO,GAAoBl/F,KAAK4gG,YAAY1B,GAAuBt+F,MAAQ,KACxIZ,KAAKme,YAAYvd,EAAOqe,EAAa49E,EACtC,CACD98F,MAAMg9F,mBAAmBF,EAAYqC,EACtC,EAED,kBAAA/B,CAAmBN,GACjB98F,MAAMo9F,mBAAmBN,GACzB,MAAMj8F,EAAQZ,KAAK4gG,YAAY/D,GAAYj8F,MAC7B,OAAVA,GACFZ,KAAKoe,YAAYxd,EAEpB,GAEH,CACE,SAAAoU,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEwvF,iBAAmB,GACnD98F,CACR,IC7RU+8F,GAAsKxD,GAAcjqF,OAA8E,yBAA0B,CACvS,eAAA0tF,CAAgBpE,GACd,MAAM,IAAIt6F,MAAM,yBACjB,EAED,GAAAvD,CAAIkiG,GAUF,OATIA,aAAmC50F,EAAAA,SACrCtM,KAAKqV,UAAU6rF,GACNA,aAAmCv4F,EAC5C3I,KAAKyI,SAASy4F,GACLA,aAAmCrvD,GAC5C7xC,KAAKmkD,QAAQ+8C,GAEblhG,KAAK29F,cAAcuD,GAEdlhG,KAAKuR,KACb,EAED,YAAAgE,CAAa2rF,GAUX,OATIA,aAAmC50F,EAAAA,SACrCtM,KAAKqV,UAAU6rF,GACNA,aAAmCv4F,EAC5C3I,KAAKyI,SAASy4F,GACLA,aAAmCrvD,GAC5C7xC,KAAKmkD,QAAQ+8C,GAEblhG,KAAK29F,cAAcuD,GAEdlhG,KAAKuR,KACb,EAED6L,UAAW,KAEXc,cAAe,EAEf,SAAItd,GACF,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEY78F,KAAKihG,gBAAgBpE,GACtBj8F,KACrB,EAED,QAAA4H,GACE,MAAM5H,EAAQZ,KAAKY,MACnB,GAAc,OAAVA,EAAgB,CAClB,IAAIkU,EAAUlU,EAAQ,IACtB,MAAMvC,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOlU,CACR,EAED,QAAA6H,CAAS7H,EAA+Bqe,EAA4BlhB,GAClE,IAAI8+F,EAAa78F,KAAK68F,WACtB,GAAc,OAAVj8F,EAAgB,CAClBA,EAAQZ,KAAK8f,cAAclf,GACR,OAAfi8F,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAErC,MAAMugG,EAAenhG,KAAKihG,gBAAgBpE,GAC1CsE,EAAa14F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC/Cle,KAAK29F,cAAcd,GACO,OAAtBsE,EAAa99C,MACf89C,EAAaz8C,WAAW1kD,KAAK6jD,WAAY,KAAM,KAAM7jD,KAAKokD,QAE7D,MAAyB,OAAfy4C,GACY78F,KAAKihG,gBAAgBpE,GAC7Bp0F,SAAS,MAExB,OAAOo0F,CACR,EAED,WAAA1+E,CAAYvd,EAAgCqe,GAExCre,EADEA,QACMZ,KAAK8d,cAEL9d,KAAK8f,cAAclf,GAE7B,IAAIi8F,EAAa78F,KAAK68F,WAOtB,OANmB,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAEhBZ,KAAKihG,gBAAgBpE,GAC7Bp0F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC/Cle,KAAKg+F,iBAAiBnB,EAAY,MAC3BA,CACR,EAED,SAAAx/E,CAAUzc,EAAUi8F,GAEnB,EAED,eAAAv/E,CAAgB1c,EAAUqe,EAA2B49E,GAEpD,EAED,aAAAt/E,CAAc3c,EAAUqe,EAA2B49E,GAElD,EAED,cAAAr/E,CAAe5c,EAAUqe,EAA2B49E,GAEnD,EAED,WAAAz+E,CAAYxd,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAAuB78F,KAAKihG,gBAAgBpE,GAAYj8F,QAAUA,EAC7D,MAETZ,KAAK0d,gBAAgB9c,EAAOi8F,GAC5B78F,KAAK2d,cAAc/c,EAAOi8F,GAC1B78F,KAAKyd,YAAY7c,EAAOi8F,GACxB78F,KAAK4d,eAAehd,EAAOi8F,GACpBA,EACR,EAED,WAAAp/E,CAAY7c,EAAUi8F,GAErB,EAED,eAAAn/E,CAAgB9c,EAAUi8F,GAEzB,EAED,aAAAl/E,CAAc/c,EAAUi8F,GAEvB,EAED,cAAAj/E,CAAehd,EAAUi8F,GAExB,EAED,WAAAjzF,CAAYlJ,EAA4BE,EAAyBqe,EAA4BlhB,GAEzF6C,EADEA,QACMZ,KAAK8d,cAEL9d,KAAK8f,cAAclf,GAE7B,IAAIi8F,EAAa78F,KAAK68F,WAOtB,OANmB,OAAfA,IACFA,EAAa78F,KAAKu9F,iBAAiB38F,IAEhBZ,KAAKihG,gBAAgBpE,GAC7Bp0F,SAAS7H,EAAOqe,EAAajf,KAAKke,UAC/Cle,KAAKk+F,iBAAiBx9F,EAAQm8F,GACvBA,CACR,EAED,WAAA3yF,CAAYtJ,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAGiB78F,KAAKihG,gBAAgBpE,GACzBj8F,QAAUA,EAHlB,MAMTi8F,EAAW/zF,SACJ+zF,EACR,EAED,WAAAx+E,CAAYzd,GACV,MAAMi8F,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,GAGiB78F,KAAKihG,gBAAgBpE,GACzBj8F,QAAUA,EAHlB,MAMTi8F,EAAW/zF,SACX9I,KAAK29F,cAAc,MACZd,EACR,EAED,WAAA/+E,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED6jD,SAAU,KAEViB,aAAc,EAEd,QAAIf,GACF,MAAMw5C,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEY78F,KAAKihG,gBAAgBpE,GACtBx5C,IACrB,EAED,OAAAgB,GACE,MAAMhB,EAAOrjD,KAAKqjD,KAClB,GAAa,OAATA,EAAe,CACjB,IAAIvuC,EAAUuuC,EAAO,IACrB,MAAMhlD,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,OACL,IAAIlX,UAAUkX,EACrB,CACD,OAAOuuC,CACR,EAED,OAAAc,CAAQd,EAA8BsC,EAA0B5nD,GACjD,OAATslD,IACFA,EAAOrjD,KAAK+/F,aAAa18C,IAE3B,MAAMw5C,EAAa78F,KAAKg+F,mBAClBmD,EAAenhG,KAAKihG,gBAAgBpE,GAI1C,gBAHI9+F,IACFA,EAAMiC,KAAKokD,SAEN+8C,EAAah9C,QAAQd,EAAMsC,EAAY5nD,EAC/C,EAED,UAAAymD,CAAWnB,EAA+BsC,GAEtCtC,EADEA,QACKrjD,KAAK+/F,aAAa18C,GAElBrjD,KAAK+jD,aAEd,MAAM84C,EAAa78F,KAAKg+F,mBAExB,OADqBh+F,KAAKihG,gBAAgBpE,GACtBr4C,WAAWnB,EAAMsC,EACtC,EAED,UAAAlB,GACE,MAAMo4C,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEY78F,KAAKihG,gBAAgBpE,GACtBp4C,YACrB,EAED,cAAIZ,GACF,OAAO,IACR,EAED,UAAAa,CAAWb,EAA0BR,EAAwBsC,EAA0B5nD,GACrF,MAAM8+F,EAAa78F,KAAKg+F,mBAClBmD,EAAenhG,KAAKihG,gBAAgBpE,GAO1C,OANIh5C,UACFA,EAAa7jD,KAAK6jD,qBAEhB9lD,IACFA,EAAMiC,KAAKokD,SAEN+8C,EAAaz8C,WAAWb,EAAYR,EAAMsC,EAAY5nD,EAC9D,EAED,UAAAmkD,GACE,MAAM26C,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEY78F,KAAKihG,gBAAgBpE,GACtB36C,YACrB,EAED,UAAAyC,GACE,MAAMk4C,EAAa78F,KAAK68F,WACxB,OAAmB,OAAfA,EACK,KAEY78F,KAAKihG,gBAAgBpE,GACtBl4C,YACrB,EAED,UAAAZ,GACE,MAAMZ,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACK,KAEFA,EAAS3zC,QACjB,EAED,YAAAuwF,CAAazgG,GACX,MAAM6jD,EAAWnjD,KAAKmjD,SACtB,OAAiB,OAAbA,EACK7jD,EAEF6jD,EAASv6C,SAAStJ,EAC1B,GAEH,CACE,SAAA0V,CAAU/Q,EAAoBsN,GAE5B,OADAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,EAEtC,EAED,MAAAmF,CAAOC,GACL5W,MAAM2W,OAAOC,GACb,MAAMC,EAAoBD,EAAc1Y,UAElCugB,EAAqBrgB,OAAOC,yBAAyBwY,EAAmB,iBAC1E4H,IAAAA,GAAiC,UAAWA,KACb,IAA7BA,EAAmBlf,OACrBkf,EAAmBlf,MAAQqX,EAActY,KACzCF,OAAOgB,eAAeyX,EAAmB,WAAY4H,KACf,IAA7BA,EAAmBlf,QAC5Bkf,EAAmBlf,WAAa,EAChCnB,OAAOgB,eAAeyX,EAAmB,WAAY4H,KAIzD,MAAMumC,EAAoB5mD,OAAOC,yBAAyBwY,EAAmB,gBACzEmuC,IAAAA,GAAgC,UAAWA,KACb,IAA5BA,EAAkBzlD,OACpBylD,EAAkBzlD,MAAQqX,EAActY,KACxCF,OAAOgB,eAAeyX,EAAmB,UAAWmuC,KACf,IAA5BA,EAAkBzlD,QAC3BylD,EAAkBzlD,WAAa,EAC/BnB,OAAOgB,eAAeyX,EAAmB,UAAWmuC,IAGzD,IC5VUq8C,GAAsK7C,GAAchrF,OAA8E,yBAA0B,CACvS,eAAA0tF,CAAgBpE,GACd,MAAM,IAAIt6F,MAAM,yBACjB,EAED6a,UAAW,KAEX,QAAA7U,CAAS3H,GACP,YAAiD,IAA1CZ,KAAK+gG,iBAAiBngG,EAAMgS,IACpC,EAED,QAAA8L,CAAS9d,EAAwBqe,EAA4BlhB,GAC3D6C,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAC9B,IAAIlE,EAAakE,EAAiBngG,EAAMgS,KACxC,YAAIiqF,EACF,OAAOA,WACE59E,IACTA,EAAc,MAEhB49E,EAAa78F,KAAKu9F,iBAAiB38F,GACnC,MAAMugG,EAAenhG,KAAKihG,gBAAgBpE,GAC1CsE,EAAa14F,SAAS7H,EAAOqe,EAAalhB,GAC1C,MAAMmhG,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EAEzF,GADA5S,KAAKy8F,cAAcI,EAAYqC,EAAkBnhG,GACvB,OAAtBojG,EAAa99C,KAAe,CAC9B,MAAMA,EAAO89C,EAAap9C,aACpB4B,OAAuC,IAA1Bu5C,EAA8Bl/F,KAAKihG,gBAAgB/B,GAAkB77C,KAAO,KAC/F89C,EAAaz8C,WAAW1kD,KAAK6jD,WAAYR,EAAMsC,EAAY5nD,EAC5D,CACD,OAAO8+F,CACR,EAED,SAAAj+E,CAAUC,EAAwD7gB,GAChE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAEtC,EAED,SAAA+gB,CAAUF,EAAwD7gB,GAChE,MAAMuN,EAAQvL,KAAKuL,MACb7K,EAAS6K,EAAQvL,KAAKq9F,iBAAmB,KACzC0D,EAAmB/gG,KAAK+gG,iBAC9B,IAAK,MAAMjiF,KAAWiiF,EACpB,YAAIliF,EAAUC,GAAqB,CACjC,MAAMi/E,EAAgB/9F,KAAKi+F,iBAAiB8C,EAAiBjiF,IACvC,OAAlBi/E,GAA0BxyF,GAAoB,OAAX7K,GAAmBq9F,EAAcr9F,SAAWA,GACjFq9F,EAAcj1F,QAEjB,CAEH,GAAiD,IAA5C9I,KAAK2B,MAAQ48F,GAActnF,aAAoB,CAClD,MAAM+H,EAAgB,IAAInH,MAC1B,IAAK,MAAMiH,KAAWD,EACpBG,EAAcngB,KAAKggB,EAAUC,IAE/B,IAAK,IAAIvgB,EAAI,EAAGwZ,EAAIiH,EAAcxgB,OAAQD,EAAIwZ,EAAGxZ,GAAK,EAAG,CACvD,MAAMu/F,EAAgB9+E,EAAczgB,GACpC,QAAmCqU,IAA/BmuF,EAAiBjD,EAAclrF,KAAiB,CAClD,MAAMqM,EAAc1gB,EAAIwZ,EAAI,EAAIiH,EAAczgB,EAAI,GAAKP,EACvDgC,KAAK0e,SAASo/E,EAAe7+E,EAC9B,CACF,CACF,MACC,IAAK,MAAMH,KAAWD,WAChBkiF,EAAiBjiF,IACnB9e,KAAK0e,SAASG,EAAUC,GAAW9gB,EAI1C,EAED,WAAAmgB,CAAYvd,EAAwBqe,EAA4B49E,GAC9Dj8F,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAO9B,YANIlE,IACFA,EAAakE,EAAiBngG,EAAMgS,eAElCqM,IACFA,EAAc,eAEZ49E,EAAuB,CACzBA,EAAa78F,KAAKu9F,mBACGv9F,KAAKihG,gBAAgBpE,GAC7Bp0F,SAAS7H,EAAOqe,GAC7B,MAAMigF,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EACzF5S,KAAKg+F,iBAAiBnB,EAAYqC,EACnC,CAQD,YAP2BtsF,IAAvBmuF,EAAiBngG,EAAMgS,OACzBmuF,EAAiBngG,EAAMgS,KAAOiqF,EAC9B78F,KAAKsd,gBAAgB1c,EAAOqe,EAAa49E,GACzC78F,KAAKud,cAAc3c,EAAOqe,EAAa49E,GACvC78F,KAAKqd,UAAUzc,EAAOi8F,GACtB78F,KAAKwd,eAAe5c,EAAOqe,EAAa49E,IAEnCA,CACR,EAED,SAAAx/E,CAAUzc,EAAUi8F,GAEnB,EAED,eAAAv/E,CAAgB1c,EAAUqe,EAA2B49E,GAEpD,EAED,aAAAt/E,CAAc3c,EAAUqe,EAA2B49E,GAElD,EAED,cAAAr/E,CAAe5c,EAAUqe,EAA2B49E,GAEnD,EAED,YAAA39E,CAAaL,EAAwD7gB,GACnE,IAAK,MAAM8gB,KAAWD,EACpB7e,KAAKme,YAAYU,EAAUC,GAAW9gB,EAEzC,EAED,WAAAogB,CAAYxd,GACV,MAAMmgG,EAAmB/gG,KAAK+gG,iBACxBlE,EAAakE,EAAiBngG,EAAMgS,KAC1C,gBAAIiqF,EACK,aAEFkE,EAAiBngG,EAAMgS,KAC9B5S,KAAK0d,gBAAgB9c,EAAOi8F,GAC5B78F,KAAK2d,cAAc/c,EAAOi8F,GAC1B78F,KAAKyd,YAAY7c,EAAOi8F,GACxB78F,KAAK4d,eAAehd,EAAOi8F,GACpBA,EACR,EAED,WAAAp/E,CAAY7c,EAAUi8F,GAErB,EAED,eAAAn/E,CAAgB9c,EAAUi8F,GAEzB,EAED,aAAAl/E,CAAc/c,EAAUi8F,GAEvB,EAED,cAAAj/E,CAAehd,EAAUi8F,GAExB,EAED,YAAA19E,CAAa3U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKoe,YAAY5T,EAAOsU,GAE3B,EAED,WAAAlV,CAAYlJ,EAAuCE,EAAwBqe,EAA4BlhB,GACrG6C,EAAQZ,KAAK8f,cAAclf,GAC3B,MAAMmgG,EAAmB/gG,KAAK+gG,iBAC9B,IAAIlE,EAAakE,EAAiBngG,EAAMgS,KACxC,YAAIiqF,EACF,OAAOA,WACE59E,IACTA,EAAc,MAEhB49E,EAAa78F,KAAKu9F,mBAClB,MAAM4D,EAAenhG,KAAKihG,gBAAgBpE,GAC1CsE,EAAa14F,SAAS7H,EAAOqe,GAC7B,MAAMigF,EAAmC,OAAhBjgF,EAAuB8hF,EAAiB9hF,EAAYrM,UAAY,EAEzF,GADA5S,KAAKk+F,iBAAiBx9F,EAAQm8F,EAAYqC,EAAkBnhG,GAClC,OAAtBojG,EAAa99C,KAAe,CAC9B,MAAMA,EAAO89C,EAAap9C,aACpB4B,OAAuC,IAA1Bu5C,EAA8Bl/F,KAAKihG,gBAAgB/B,GAAkB77C,KAAO,KAC/F89C,EAAaz8C,WAAW1kD,KAAK6jD,WAAYR,EAAMsC,EAAY5nD,EAC5D,CACD,OAAO8+F,CACR,EAED,YAAAz9E,CAAa1e,EAAuCme,EAAwDI,EAA4BlhB,GACtI,IAAK,MAAM+gB,KAAWD,EACpB7e,KAAK4J,YAAYlJ,EAAQme,EAAUC,GAAWG,EAAalhB,EAE9D,EAED,WAAAmM,CAAYtJ,GACV,MAAM69F,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GAE/B,GADqB/+F,KAAKihG,gBAAgBpE,GACzBj8F,QAAUA,EAI3B,OADAZ,KAAK08F,iBAAiBG,GACfA,CACR,CACD,OAAO,IACR,EAED,YAAAx9E,CAAa7U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKkK,YAAYM,EAAOsU,GAE3B,EAED,WAAAT,CAAYzd,GACV,MAAM69F,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GAE/B,GADqB/+F,KAAKihG,gBAAgBpE,GACzBj8F,QAAUA,EAI3B,OADAZ,KAAKm+F,iBAAiBtB,GACfA,CACR,CACD,OAAO,IACR,EAED,YAAAv9E,CAAa9U,GACX,IAAK,MAAMsU,KAAWtU,EACpBxK,KAAKqe,YAAY7T,EAAOsU,GAE3B,EAED,aAAAS,CAAc3e,EAAUqe,GACtB,MAAM49E,EAAa78F,KAAK+gG,iBAAiBngG,EAAMgS,KAC/C,YAAIiqF,EACF,OAEF,MAAMqC,EAAmC,OAAhBjgF,EAAuBjf,KAAK+gG,iBAAiB9hF,EAAYrM,UAAY,EAC9F5S,KAAKw/F,mBAAmB3C,OAAsC,IAA1BqC,EAA8BA,EAAmB,KACtF,EAED,aAAA1/E,CAAcnS,GACZ,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GACzBn+F,EAAQZ,KAAKihG,gBAAgBpE,GAAYj8F,MACjC,OAAVA,GACFA,EAAMiL,QAAQwB,EAEjB,CACF,EAED,eAAAoS,CAAgBpS,GACd,MAAMoxF,EAAcz+F,KAAKy+F,YACzB,IAAK,MAAMM,KAAgBN,EAAa,CACtC,MAAM5B,EAAa4B,EAAYM,GACzBn+F,EAAQZ,KAAKihG,gBAAgBpE,GAAYj8F,MACjC,OAAVA,GACFA,EAAMgN,UAAUP,EAEnB,CACF,EAED,WAAAyQ,GACE,IAAIld,EACJ,MAAMwc,EAAYpd,KAAKod,UAIvB,GAHkB,OAAdA,IACFxc,EAAQwc,EAAU5N,UAEhB5O,QAAoC,CACtC,IAAIkU,EAAU,oBACd,MAAMzW,EAAO2B,KAAK3B,KAAK0W,WAKvB,MAJoB,IAAhB1W,EAAKG,SACPsW,GAAWzW,EAAO,KAEpByW,GAAW,QACL,IAAIvS,MAAMuS,EACjB,CACD,OAAOlU,CACR,EAED,aAAAkf,CAAcxgB,GACZ,MAAM8d,EAAYpd,KAAKod,UACvB,OAAkB,OAAdA,EACKA,EAAUxU,SAAStJ,GAErBqJ,EAAMC,SAAStJ,EACvB,EAED,cAAIukD,GACF,OAAO,IACR,EAED,aAAAw9C,CAAcxE,GACZ,GAAgD,IAA3C78F,KAAK2B,MAAQ48F,GAAchmF,YAC9B,OAAO,KAET,MAAM+oF,EAAiBzE,EAAWp2F,YAClC,OAAuB,OAAnB66F,YAA2BthG,KAAKy+F,YAAY6C,EAAe1uF,KACtD,KAEF5S,KAAKihG,gBAAgBK,GAAqBj+C,IAClD,EAED,kBAAA05C,CAAmBF,EAAeqC,GAChC,MAAMt+F,EAAQZ,KAAKihG,gBAAgBpE,GAAYj8F,MAC/C,GAAc,OAAVA,EAAgB,CAClB,MAAMqe,EAAmC,OAArBigF,GAA6Bl/F,KAAK2+F,cAAcO,GAAoBl/F,KAAKihG,gBAAgB/B,GAAuBt+F,MAAQ,KAC5IZ,KAAKme,YAAYvd,EAAOqe,EAAa49E,EACtC,CACD98F,MAAMg9F,mBAAmBF,EAAYqC,EACtC,EAED,kBAAA/B,CAAmBN,GACjB98F,MAAMo9F,mBAAmBN,GACzB,MAAMj8F,EAAQZ,KAAKihG,gBAAgBpE,GAAYj8F,MACjC,OAAVA,GACFZ,KAAKoe,YAAYxd,EAEpB,GAEH,CACE,SAAAoU,CAAU/Q,EAAoBsN,GAG5B,OAFAtN,EAAWlE,MAAMiV,UAAU/Q,EAAUsN,IACEwvF,iBAAmB,GACnD98F,CACR,IC7ZUu4F,IAAAA,GAAe,mCAAf,OAAA58F,EAAA,MAAA48F,UAAwBr8E,UACnC,WAAArgB,GACEC,QA8BOC,KAAAqR,OAAwCjS,EAAAY,KAAAE,GAAAd,EAAAY,KAAAogB,OAAA,IAkMxCpgB,KAAAqgB,iBAAsCjhB,EAAAY,KAAAsgB,OAAA,GA/N7CtgB,KAAK0B,YAAc,EACnB1B,KAAKoG,WAAawG,YAAYC,MAC9B7M,KAAKugB,YAAci8E,EAAgBh8E,eACnCxgB,KAAKuhG,aAAe,EACpBvhG,KAAKwhG,aAAe,EAEpBxhG,KAAKyhG,eAAiBzhG,KAAKyhG,eAAel7F,KAAKvG,MAC/CA,KAAK0hG,eAAiB1hG,KAAK0hG,eAAen7F,KAAKvG,KAChD,CA2BD,cAAA6gB,CAAenf,GACZ1B,KAAuB0B,YAAcA,CACvC,CAOS,WAAA2C,CAAY3C,EAA8ByC,GAClD,OAAOzC,CACR,CAED,aAAAoB,CAAco8F,EAA8Bx9F,EAA8ByC,GACxEzC,EAAc1B,KAAKqE,YAAY3C,EAAayC,GAC5C,IAAIC,EAAmBpE,KAAK0B,aAAeA,EAAc63F,GAAW13F,WACrB,IAA1CH,EAAc63F,GAAWC,eAC5Bp1F,GAAoBm1F,GAAWI,cAEc,IAA1Cj4F,EAAc63F,GAAWK,eAC5Bx1F,GAAoBm1F,GAAWM,cAEjC75F,KAAK6gB,eAAe7gB,KAAK0B,YAAc0C,GACnCD,GAA4F,IAA9EnE,KAAK0B,aAAe63F,GAAWQ,cAAgBR,GAAW6B,iBAAyBp7F,KAAKugB,aAAei8E,EAAgBmF,mBACvI3hG,KAAK+gB,mBAEL/gB,KAAKghB,gBAER,CAES,cAAAA,GACR,MAAMrf,EAAQ3B,KAAK0B,YACwB,IAAtCC,EAAQ43F,GAAWQ,gBAA6D,IAApCp4F,EAAQ43F,GAAWC,aAClEx5F,KAAK4hG,oBAAoB5hG,KAAKugB,aACkB,IAAtC5e,EAAQ43F,GAAW6B,gBAA6D,IAApCz5F,EAAQ43F,GAAWK,cACzE55F,KAAK6hG,oBAAoBrF,EAAgBsF,mBAE5C,CAES,YAAA1gF,GACRphB,KAAK+hG,oBACL/hG,KAAKgiG,mBACN,CAES,gBAAAjhF,GAC4C,IAA/C/gB,KAAK0B,YAAc63F,GAAWC,eACjCx5F,KAAKohB,eACLphB,KAAKyhG,gBAAe,IAE8B,IAA/CzhG,KAAK0B,YAAc63F,GAAWK,cAAsB55F,KAAKugB,aAAei8E,EAAgBmF,qBAC3F3hG,KAAKohB,eACLphB,KAAK0hG,gBAAe,GAEvB,CAKS,mBAAAE,CAAoBrhF,GACF,IAAtBvgB,KAAKuhG,eACPvhG,KAAKuhG,aAAehgF,WAAWvhB,KAAKyhG,eAAgBlhF,GAEvD,CAES,iBAAAwhF,GACkB,IAAtB/hG,KAAKuhG,eACP//E,aAAaxhB,KAAKuhG,cAClBvhG,KAAKuhG,aAAe,EAEvB,CAES,cAAAE,CAAet9F,GAAqB,GACvCA,IACHnE,KAAKuhG,aAAe,GAEtBvhG,KAAK6gB,eAAe7gB,KAAK0B,aAAe63F,GAAWC,YAAcD,GAAWQ,eAC5E,IACE,MAAMt4E,EAAK7U,YAAYC,MACtB7M,KAAuBoG,WAAaqb,EAErC,MAAMwgF,EAAkBjiG,KAAKqR,MAAMotF,YACnC,IAAK,MAAMM,KAAgBkD,EAAiB,CAC1C,MAAMC,EAAiBD,EAAgBlD,GACiB,IAAnDmD,EAAevgG,MAAQ43F,GAAWC,cACrC0I,EAAezI,eAAe,EAEjC,CAED,MAAM73E,EAAKhV,YAAYC,MACvB,IAAIs1F,EAAehsF,KAAK2L,IAAI06E,EAAgB4F,mBAAoBpiG,KAAKugB,aAEnEvgB,KAAKugB,YADHqB,EAAKH,EAAK0gF,EACOhsF,KAAKC,IAAID,KAAK2L,IAAI,EAAsB,EAAnB9hB,KAAKugB,aAAkBi8E,EAAgBz6E,gBAE5D5L,KAAKC,IAAIomF,EAAgBh8E,eAAgBxgB,KAAKugB,YAAc,GAGjFvgB,KAAK+hG,oBAC+C,IAA/C/hG,KAAK0B,YAAc63F,GAAWK,aACjC55F,KAAK6hG,oBAAoBrF,EAAgBsF,oBACgB,IAA/C9hG,KAAK0B,YAAc63F,GAAWC,eACpCr1F,IACFg+F,EAAehsF,KAAK2L,IAAI06E,EAAgBmF,mBAAoBQ,IAE9DniG,KAAKgiG,oBACLhiG,KAAK4hG,oBAAoBO,GAE5B,CAAS,QACRniG,KAAK6gB,eAAe7gB,KAAK0B,aAAe63F,GAAWQ,cACpD,CACF,CAKS,mBAAA8H,CAAoBthF,GACF,IAAtBvgB,KAAKwhG,eACPxhG,KAAKwhG,aAAejgF,WAAWvhB,KAAK0hG,eAAgBnhF,GAEvD,CAES,iBAAAyhF,GACkB,IAAtBhiG,KAAKwhG,eACPhgF,aAAaxhB,KAAKwhG,cAClBxhG,KAAKwhG,aAAe,EAEvB,CAES,cAAAE,CAAev9F,GAAqB,GACvCA,IACHnE,KAAKwhG,aAAe,GAEtBxhG,KAAK6gB,eAAe7gB,KAAK0B,aAAe63F,GAAWK,YAAcL,GAAW6B,eAC5E,IACE,MAAMn5E,EAAOrV,YAAYC,MACxB7M,KAAuBoG,WAAa6b,EAErC,MAAMggF,EAAkBjiG,KAAKqR,MAAMotF,YACnC,IAAK,MAAMM,KAAgBkD,EAAiB,CAC1C,MAAMC,EAAiBD,EAAgBlD,GACiB,IAAnDmD,EAAevgG,MAAQ43F,GAAWK,cACrCsI,EAAe3G,eAAe,EAEjC,CAGD,GADAv7F,KAAKgiG,oBAC+C,IAA/ChiG,KAAK0B,YAAc63F,GAAWC,aAAoB,CACrD,IAAI2I,EAAeniG,KAAKugB,YACpBpc,IACFg+F,EAAehsF,KAAK2L,IAAI06E,EAAgBmF,mBAAoBQ,IAE9DniG,KAAK4hG,oBAAoBO,EAC1B,MAA0D,IAA/CniG,KAAK0B,YAAc63F,GAAWK,eACxC55F,KAAK+hG,oBACL/hG,KAAK6hG,oBAAoBrF,EAAgB6F,oBAE5C,CAAS,QACRriG,KAAK6gB,eAAe7gB,KAAK0B,aAAe63F,GAAW6B,cACpD,CACF,CAED,cAAIj5E,GACF,OAAO,CACR,CAED,KAAAC,GACE,MAAM6/E,EAAkBjiG,KAAKqR,MAAMotF,YACnC,IAAK,MAAMM,KAAgBkD,EAAiB,CACnBA,EAAgBlD,GACxBh8F,cAAc/C,KAAKmiB,WACnC,CACF,CAED,OAAAE,GACEriB,KAAKohB,eACLphB,KAAKugB,YAAci8E,EAAgBh8E,cACpC,GAtMA8B,EAAA,CAAAi8E,GAAc,CACb,cAAA3B,CAAesF,GACbliG,KAAKuR,MAAMzO,cAAco/F,EAAgBA,EAAevgG,MAAQ43F,GAAW13F,YAAY,EACxF,EACD,oBAAAi7F,CAAqBoF,GACnBliG,KAAKuR,MAAM5Q,cAAc,wBAAyBuhG,EAAgBliG,KAAKuR,MACxE,EACD,mBAAAyrF,CAAoBkF,GAClBliG,KAAKuR,MAAM5Q,cAAc,uBAAwBuhG,EAAgBliG,KAAKuR,MACvE,EACD,oBAAA2rF,CAAqBgF,GACnBliG,KAAKuR,MAAM5Q,cAAc,wBAAyBuhG,EAAgBliG,KAAKuR,MACxE,EACD,mBAAA6rF,CAAoB8E,GAClBliG,KAAKuR,MAAM5Q,cAAc,uBAAwBuhG,EAAgBliG,KAAKuR,MACvE,KAyLFgR,EAAA,CAAAC,EAAAA,aAAa,CACZC,UAAW,mBACXzkB,OAA4B,oBAAb0kB,SAA2BA,SAAW,KACrD,MAAAC,CAAOC,GAC4B,YAA7BF,SAASG,gBACX7iB,KAAKuR,MAAM6Q,QAEXpiB,KAAKuR,MAAM8Q,SAEd,KAhMHllB,EAAS,KAAA,KAAAmlB,EAAA,CAAAxkB,KAAA,QAAAO,KAAA,QAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,UAAAA,EAAA5T,IAAA4T,GAAAA,EAAAtB,MAAArS,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAtB,MAAwC/R,CAAAA,IAAA8gB,EAAAlgB,GAkMjD/C,EAAS,KAAA,KAAAolB,EAAA,CAAAzkB,KAAA,QAAAO,KAAA,mBAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,qBAAAA,EAAA5T,IAAA4T,GAAAA,EAAA0N,iBAAArhB,IAAA,CAAA2T,EAAArT,KAAAqT,EAAA0N,iBAAsC/gB,CAAAA,IAAAghB,EAAApgB,GAGxCN,EAAA4gB,eAAyB,EAEzB5gB,EAAAmiB,eAAyB,IAEzBniB,EAAAwiG,mBAA6B,GAE7BxiG,EAAA+hG,mBAA6B,GAE7B/hG,EAAAkiG,mBAA6B,EAE7BliG,EAAAyiG,mBAA6B,IA/OV,EAAA,GCcf,MAAAC,GAAe,CAE1BthE,MAAOpW,EAAKA,MAAA,WACV,OAAOzsB,OAAOqzC,OAAO,CACnB+wD,cAAe,EACfC,WAAY,CAAE,EACdC,YAAa,CAAE,GAEnB,IAGA,OAAAC,GACE,IACE,OAAOJ,GAAaK,QAAQ3+E,OAAO4+E,SAASC,KAC7C,CAAC,MAAO3+E,GAEP,OADA4+E,QAAQt4E,MAAMtG,GACPo+E,GAAathE,OACrB,CACF,EAGD,OAAAV,CAAQyiE,EAAyB77D,YAC3BA,IACFA,EAAQo7D,GAAaI,WAEnB,aAAcK,IAChB77D,EAAMq7D,SAAWQ,EAAMR,UAEzB,IAAK,MAAMxkG,KAAOglG,EAAMP,WAAY,CAClC,MAAMljG,EAAQyjG,EAAMP,WAAWzkG,YAC3BuB,EACF4nC,EAAMs7D,WAAWzkG,GAAOuB,SAEjB4nC,EAAMs7D,WAAWzkG,EAE3B,CACD,IAAK,MAAMA,KAAOglG,EAAMN,YAAa,CACnC,MAAMnjG,EAAQyjG,EAAMN,YAAY1kG,YAC5BuB,EACF4nC,EAAMu7D,YAAY1kG,GAAOuB,SAElB4nC,EAAMu7D,YAAY1kG,EAE5B,CACD,OAAOmpC,CACR,EAGD,MAAA87D,CAAOjmE,GACL,MAAMD,EAAgC,CACpCylE,SAAUxlE,EAASwlE,SACnBC,WAAY,CAAE,EACdC,YAAa,CAAE,GAEjB,IAAK,MAAM1kG,KAAOg/B,EAASylE,WACzB1lE,EAAS0lE,WAAWzkG,GAAOg/B,EAASylE,WAAWzkG,GAEjD,IAAK,MAAMA,KAAOg/B,EAAS0lE,YACzB3lE,EAAS2lE,YAAY1kG,GAAOg/B,EAAS0lE,YAAY1kG,GAEnD,OAAO++B,CACR,EAGD,OAAA6lE,CAAQM,GAEN,MAAMV,GADNU,EAAM9yF,MAAIvH,SAASq6F,IACEV,SACrB,OAAKA,EAAS1xF,YAGPyxF,GAAaY,gBAAgBX,GAF3BD,GAAathE,OAGvB,EAGD,eAAAkiE,CAAgBX,GAEd,IAAIY,OAAqC,KADzCZ,EAAWa,cAAYx6F,SAAS25F,IACXr0C,WACTm1C,EAAAA,SAAS15E,MAAM44E,EAASr0C,YACxBm1C,EAASviD,SAAAA,YACrB,MAAM5Z,EAA6B,CACjCq7D,cAAe,EACfC,WAAY,CAAE,EACdC,YAAa,CAAE,GAEjB,MAAQU,EAAMt2E,WAAW,CACvB,MAAM9uB,EAAMolG,EAAMplG,IACZuB,EAAQ6jG,EAAM7jG,eAChBvB,EACFmpC,EAAMs7D,WAAWzkG,GAAOuB,EAExB4nC,EAAMq7D,SAAWjjG,EAEnB6jG,EAAQA,EAAMG,MACf,CACD,OAAOp8D,CACR,EAGD,KAAAq8D,CAAMr8D,GACJ,MAAMs8D,EAAeH,WAASI,mBAC1Bv8D,EAAMq7D,UACRiB,EAAa/1F,SAAAA,EAAYy5B,EAAMq7D,UAEjC,IAAK,MAAMxkG,KAAOmpC,EAAMs7D,WAAY,CAClC,MAAMljG,EAAQ4nC,EAAMs7D,WAAWzkG,GAC/BylG,EAAa/1F,IAAI1P,EAAKuB,EACvB,CACD,OAAO6Q,EAAIoyF,IAAAA,SAASa,EAAAA,YAAY5zF,OAAOg0F,EAAaE,QAAQ3uF,YAC7D,GCrHU4uF,IAAAA,GAAc,4BAAd,OAAA/jG,EAAA,cAAuBugB,UAClC,WAAArgB,GACEC,QAOOC,KAAA4jG,kBAA2BxkG,EAAAY,KAAAE,GAuE3BF,KAAA6jG,SAA8BzkG,EAAAY,KAAA8jG,OAAA,GA7ErC9jG,KAAK4jG,aAAetB,GAAaI,SAClC,CAOD,cAAIqB,GACF,OAAOzB,GAAaiB,MAAMvjG,KAAK4jG,aAChC,CAED,WAAAI,CAAYC,GACV,MAAMlnE,EAAW/8B,KAAK4jG,aAChB9mE,EAAWwlE,GAAahiE,QAAQ2jE,EAAY3B,GAAaU,OAAOjmE,IAChEmnE,EAAS5B,GAAaiB,MAAMzmE,GAClC98B,KAAKmkG,gBAAgBrnE,EAAUC,GAC9B/8B,KAAuB4jG,aAAe9mE,EACvC9Y,OAAOogF,QAAQC,UAAUvnE,EAAS2lE,YAAa,GAAIyB,EAAOnvF,YAC1D/U,KAAKskG,cAAcxnE,EAAUC,GAC7B/8B,KAAKukG,eAAeznE,EAAUC,EAC/B,CAES,eAAAonE,CAAgBrnE,EAAwBC,GAChD/8B,KAAKW,cAAc,yBAA0Bm8B,EAAUC,EAAU/8B,KAClE,CAES,aAAAskG,CAAcxnE,EAAwBC,GAE/C,CAES,cAAAwnE,CAAeznE,EAAwBC,GAC/C/8B,KAAKW,cAAc,wBAAyBm8B,EAAUC,EAAU/8B,KACjE,CAED,cAAAwkG,CAAeP,GACb,MAAMlnE,EAAW/8B,KAAK4jG,aAChB9mE,EAAWwlE,GAAahiE,QAAQ2jE,EAAY3B,GAAaU,OAAOjmE,IACtE,GAAI7lB,UAAQyR,MAAMoU,EAAUD,GAC1B,OAEF,MAAMonE,EAAS5B,GAAaiB,MAAMzmE,GAClC98B,KAAKykG,mBAAmB3nE,EAAUC,GACjC/8B,KAAuB4jG,aAAe9mE,EACvC9Y,OAAOogF,QAAQM,aAAa5nE,EAAS2lE,YAAa,GAAIyB,EAAOnvF,YAC7D/U,KAAK2kG,iBAAiB7nE,EAAUC,GAChC/8B,KAAK4kG,kBAAkB9nE,EAAUC,EAClC,CAES,kBAAA0nE,CAAmB3nE,EAAwBC,GACnD/8B,KAAKW,cAAc,4BAA6Bm8B,EAAUC,EAAU/8B,KACrE,CAES,gBAAA2kG,CAAiB7nE,EAAwBC,GAElD,CAES,iBAAA6nE,CAAkB9nE,EAAwBC,GAClD/8B,KAAKW,cAAc,2BAA4Bm8B,EAAUC,EAAU/8B,KACpE,CAoBS,cAAA6kG,CAAe/nE,EAAwBC,GAC/C/8B,KAAKW,cAAc,wBAAyBm8B,EAAUC,EAAU/8B,KACjE,CAES,YAAA8kG,CAAahoE,EAAwBC,GAE9C,CAES,aAAAgoE,CAAcjoE,EAAwBC,GAC9C/8B,KAAKW,cAAc,uBAAwBm8B,EAAUC,EAAU/8B,KAChE,GA5BAglG,EAAA,CAAAxiF,EAAAA,aAAa,CACZC,UAAW,WACXzkB,OAA0B,oBAAXgmB,OAAyBA,OAAS,KACjD,MAAArB,CAAOC,GACL,MAAMqhF,EAA+B,CAAA,EACV,iBAAhBrhF,EAAMskB,OAAsC,OAAhBtkB,EAAMskB,QAC3C+8D,EAAWxB,YAAc7/E,EAAMskB,OAEjC,MAAMnK,EAAW/8B,KAAKuR,MAAMqyF,aACtB9mE,EAAWwlE,GAAahiE,QAAQ2jE,EAAY3B,GAAaI,WAC/D1iG,KAAKuR,MAAMszF,eAAe/nE,EAAUC,GACnC/8B,KAAKuR,MAAqCqyF,aAAe9mE,EAC1D98B,KAAKuR,MAAMuzF,aAAahoE,EAAUC,GAClC/8B,KAAKuR,MAAMwzF,cAAcjoE,EAAUC,EACpC,KAEH5/B,EAAS,KAAA,KAAA6nG,EAAA,CAAAlnG,KAAA,QAAAO,KAAA,WAAAoU,QAAA,EAAAC,SAAA,EAAA/T,OAAA,CAAA4O,IAAAoF,GAAA,aAAAA,EAAA5T,IAAA4T,GAAAA,EAAAkxF,SAAA7kG,IAAA,CAAA2T,EAAArT,KAAAqT,EAAAkxF,SAA8BvkG,CAAAA,IAAAwkG,EAAA5jG,IAhFd,EAAA,GCVL+kG,MAAAA,GAkBpB,QAAAlwF,GACE,OAAO+mB,SAAOxS,MAAMtpB,KACrB,CAED,cAAOokG,CAAQl9D,EAAyB27D,EAAeqC,GACrD,OAAO,IAAIC,GAAiBj+D,EAAO27D,EAAMqC,EAC1C,CAED,eAAAtC,CAAgBC,EAAcqC,GAC5B,OAAO,IAAIE,GAAkBvC,EAAMqC,EACpC,CAED,eAAAt8F,CAA4Dy8F,GAC1D,OAAIA,SAA8CA,aAAqBJ,GAC9DI,EACuB,iBAAdA,EACT,IAAID,GAAkBC,OAAgB,GAClC,UAAWA,GAAgB,SAAUA,EAG3CrlG,KAAK0pB,SAAS27E,GAFZ,IAAIF,GAAiBE,OAAAA,OAAwB,EAGvD,CAED,eAAA37E,CAAgBzqB,GACd,GAAI,aAAcA,GAAQ,eAAgBA,GAAQ,gBAAiBA,EAAM,CACvE,MAAMioC,EAA0B,CAAA,EAUhC,gBATIjoC,EAAKsjG,WACPr7D,EAAMq7D,SAAWtjG,EAAKsjG,mBAEpBtjG,EAAKujG,aACPt7D,EAAMs7D,WAAavjG,EAAKujG,qBAEtBvjG,EAAKwjG,cACPv7D,EAAMu7D,YAAcxjG,EAAKwjG,aAEpB,IAAI0C,GAAiBj+D,EAAOjoC,EAAK4jG,KAAM5jG,EAAKimG,MAC9C,CAAA,QAASrC,IAAL5jG,EAAK4jG,KACd,OAAO,IAAIuC,GAAkBnmG,EAAK4jG,KAAM5jG,EAAKimG,OAE/C,MAAM,IAAItnG,UAAU,oBACrB,EAUG,MAAOunG,WAAyBF,GACpC,WAAAnlG,CAAYonC,EAAmC27D,EACnCqC,GACVnlG,QACAC,KAAKknC,MAAQA,EACblnC,KAAK6iG,KAAOA,EACZ7iG,KAAKklG,MAAQA,CACd,CAQQ,QAAAI,CAAS1iF,GACZA,SACFA,EAAM4kC,iBAERm8C,GAAetxF,SAAS2xF,YAAYhkG,KAAKknC,MAC1C,CAEQ,MAAAxqB,CAAOC,GACd,OAAI3c,OAAS2c,GAEFA,aAAgBwoF,KAClBjuF,EAAAA,QAAQyR,MAAM3oB,KAAKknC,MAAOvqB,EAAKuqB,QAC/BlnC,KAAK6iG,OAASlmF,EAAKkmF,MAAQ7iG,KAAKklG,QAAUvoF,EAAKuoF,MAGzD,CAEQ,KAAA57E,CAASjC,GAUhB,OATAA,EAASA,EAAOE,MAAM,aAAaA,MAAM,IAAWA,MAAM,WAC1CA,MAAM,IAAW+B,MAAMtpB,KAAKknC,gBACxClnC,KAAK6iG,OACPx7E,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAK6iG,gBAErC7iG,KAAKklG,QACP79E,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKklG,QAEzC79E,EAASA,EAAOE,MAAM,GAEvB,EAWG,MAAO69E,WAA0BH,GACrC,WAAAnlG,CAAY+iG,EAAcqC,GACxBnlG,QACAC,KAAK6iG,KAAOA,EACZ7iG,KAAKklG,MAAQA,CACd,CAED,SAAIh+D,GACF,OAAO,IACR,CAMQ,QAAAo+D,CAAS1iF,GACZA,SACFA,EAAM4kC,iBAERxjC,OAAO4+E,SAAShe,OAAO5kF,KAAK6iG,KAC7B,CAEQ,MAAAnmF,CAAOC,GACd,OAAI3c,OAAS2c,GAEFA,aAAgByoF,KAClBplG,KAAK6iG,OAASlmF,EAAKkmF,MAAQ7iG,KAAKklG,QAAUvoF,EAAKuoF,MAGzD,CAEQ,KAAA57E,CAASjC,GAOhB,OANAA,EAASA,EAAOE,MAAM,aAAaA,MAAM,IAAWA,MAAM,YAC1CA,MAAM,IAAW+B,MAAMtpB,KAAK6iG,eACxC7iG,KAAKklG,QACP79E,EAASA,EAAOE,MAAM,MAAM+B,MAAMtpB,KAAKklG,QAEzC79E,EAASA,EAAOE,MAAM,GAEvB"}