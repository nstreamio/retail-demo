{"version":3,"file":"swim-maps.min.js","sources":["../../../../node_modules/tslib/tslib.es6.mjs","../../swim-map/main/GeoPerspective.ts","../../swim-map/main/GeoViewport.ts","../../swim-map/main/GeoView.ts","../../swim-map/main/GeoTrait.ts","../../swim-map/main/GeoController.ts","../../swim-map/main/GeoRippleView.ts","../../swim-map/main/GeoFeatureView.ts","../../swim-map/main/GeoFeatureTrait.ts","../../swim-map/main/GeoFeatureController.ts","../../swim-map/main/GeoLayerTrait.ts","../../swim-map/main/GeoTree.ts","../../swim-map/main/GeoTreeView.ts","../../swim-map/main/GeoLayerController.ts","../../swim-map/main/GeoRasterView.ts","../../swim-map/main/GeoTileView.ts","../../swim-map/main/GeoTileTrait.ts","../../swim-map/main/GeoTileController.ts","../../swim-map/main/GeoShapeView.ts","../../swim-map/main/GeoShapeTrait.ts","../../swim-map/main/GeoShapeController.ts","../../swim-map/main/GeoCircleView.ts","../../swim-map/main/GeoArcView.ts","../../swim-map/main/GeoPointView.ts","../../swim-map/main/GeoPlotView.ts","../../swim-map/main/GeoIconView.ts","../../swim-map/main/GeoIconTrait.ts","../../swim-map/main/GeoIconController.ts","../../swim-map/main/MapView.ts","../../swim-map/main/MapTrait.ts","../../swim-map/main/MapController.ts","../../swim-map/main/WorldMapViewport.ts","../../swim-map/main/WorldMapView.ts","../../swim-mapbox/main/MapboxViewport.ts","../../swim-mapbox/main/MapboxView.ts","../../swim-leaflet/main/LeafletViewport.ts","../../swim-leaflet/main/LeafletView.ts","../../swim-googlemap/main/GoogleMapViewport.ts","../../swim-googlemap/main/GoogleMapView.ts","../../swim-esrimap/main/EsriViewport.ts","../../swim-esrimap/main/EsriView.ts","../../swim-esrimap/main/EsriMapViewport.ts","../../swim-esrimap/main/EsriMapView.ts","../../swim-esrimap/main/EsriSceneViewport.ts","../../swim-esrimap/main/EsriSceneView.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uninitable} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoShape} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBoxLike} from \"@swim/geo\";\nimport {GeoBoxInit} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\n\n/** @public */\nexport type GeoPerspectiveLike = GeoPerspective | GeoShape | GeoPerspectiveInit | GeoBoxInit;\n\n/** @public */\nexport const GeoPerspectiveLike = {\n  [Symbol.hasInstance](instance: unknown): instance is GeoPerspectiveLike {\n    return GeoPerspective[Symbol.hasInstance](instance)\n        || instance instanceof GeoShape\n        || GeoPerspectiveInit[Symbol.hasInstance](instance)\n        || GeoBoxInit[Symbol.hasInstance](instance);\n  },\n};\n\n/** @public */\nexport interface GeoPerspectiveInit {\n  /** @internal */\n  readonly typeid?: \"GeoPerspectivInite\";\n  geoFrame?: GeoBoxLike | null;\n  geoCenter?: GeoPointLike | null;\n  zoom?: number;\n  heading?: number;\n  tilt?: number;\n}\n\n/** @public */\nexport const GeoPerspectiveInit = {\n  [Symbol.hasInstance](instance: unknown): instance is GeoPerspectiveInit {\n    return Objects.hasAnyKey<GeoPerspectiveInit>(instance, \"geoFrame\", \"geoCenter\");\n  },\n};\n\n/** @public */\nexport interface GeoPerspective {\n  /** @internal */\n  readonly typeid?: \"GeoPerspective\";\n\n  likeType?(like: GeoShape | GeoPerspectiveInit | GeoBoxInit): void;\n\n  readonly geoFrame: GeoBox | null;\n\n  readonly geoCenter: GeoPoint | null;\n\n  readonly zoom: number | undefined;\n\n  readonly heading: number | undefined;\n\n  readonly tilt: number | undefined;\n}\n\n/** @public */\nexport const GeoPerspective = {\n  fromLike<T extends GeoPerspectiveLike | null | undefined>(value: T): GeoPerspective | Uninitable<T> {\n    if (value === void 0 || value === null || GeoPerspective[Symbol.hasInstance](value)) {\n      return value as GeoPerspective | Uninitable<T>;\n    } else if (value instanceof GeoShape || GeoBoxLike[Symbol.hasInstance](value)) {\n      return {\n        geoFrame: GeoBox.fromLike(value),\n        geoCenter: null,\n        zoom: void 0,\n        heading: void 0,\n        tilt: void 0,\n      };\n    }\n    return {\n      geoFrame: value.geoFrame !== void 0 && value.geoFrame !== null\n              ? GeoBox.fromLike(value.geoFrame) : null,\n      geoCenter: value.geoCenter !== void 0 && value.geoCenter !== null\n               ? GeoPoint.fromLike(value.geoCenter) : null,\n      zoom: value.zoom,\n      heading: value.heading,\n      tilt: value.tilt,\n    };\n  },\n\n  [Symbol.hasInstance](instance: unknown): instance is GeoPerspective {\n    return Objects.hasAllKeys<GeoPerspective>(instance, \"geoFrame\", \"geoCenter\", \"zoom\", \"heading\", \"tilt\");\n  },\n};\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GeoProjection} from \"@swim/geo\";\nimport type {GeoPoint} from \"@swim/geo\";\nimport type {GeoBox} from \"@swim/geo\";\nimport {GeoPerspective} from \"./GeoPerspective\";\n\n/** @public */\nexport interface GeoViewport extends GeoProjection, GeoPerspective {\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n}\n\n/** @public */\nexport const GeoViewport = {\n  [Symbol.hasInstance](instance: unknown): instance is GeoViewport {\n    return GeoProjection[Symbol.hasInstance](instance)\n        && GeoPerspective[Symbol.hasInstance](instance);\n  },\n};\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport {GeoViewport} from \"./GeoViewport\";\n\n/** @public */\nexport interface GeoViewObserver<V extends GeoView = GeoView> extends GraphicsViewObserver<V> {\n  viewWillSetGeoBounds?(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, view: V): void;\n\n  viewDidSetGeoBounds?(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, view: V): void;\n}\n\n/** @public */\nexport class GeoView extends GraphicsView {\n  constructor() {\n    super();\n    this.geoBounds = GeoBox.undefined();\n  }\n\n  declare readonly observerType?: Class<GeoViewObserver>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  get geoBoundsColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  protected override didInsertChild(child: View, target: View | null): void {\n    if (child instanceof GeoView) {\n      this.onInsertChildGeoBounds(child, child.geoBounds);\n    }\n    super.didInsertChild(child, target);\n  }\n\n  protected override didRemoveChild(child: View): void {\n    if (child instanceof GeoView) {\n      this.onRemoveChildGeoBounds(child, child.geoBounds);\n    }\n    super.didRemoveChild(child);\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const outlineColor = ThemeAnimator.tryValue(this, \"geoBoundsColor\");\n    if (outlineColor !== null) {\n      this.renderGeoBounds(outlineColor, 1);\n    }\n  }\n\n  protected renderGeoBounds(outlineColor: Color, outlineWidth: number): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled && !this.unbounded) {\n      this.renderGeoOutline(this.geoBounds, renderer.context, outlineColor, outlineWidth);\n    }\n  }\n\n  protected renderGeoOutline(geoBox: GeoBox, context: PaintingContext,\n                             outlineColor: Color, outlineWidth: number): void {\n    const geoViewport = this.geoViewport.value;\n    if (!geoBox.isDefined() || geoViewport === null) {\n      return;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const southWest = geoViewport.project(geoBox.southWest.normalized());\n    const northWest = geoViewport.project(geoBox.northWest.normalized());\n    const northEast = geoViewport.project(geoBox.northEast.normalized());\n    const southEast = geoViewport.project(geoBox.southEast.normalized());\n    context.beginPath();\n    context.moveTo(southWest.x, southWest.y);\n    context.lineTo(northWest.x, northWest.y);\n    context.lineTo(northEast.x, northEast.y);\n    context.lineTo(southEast.x, southEast.y);\n    context.closePath();\n    context.lineWidth = outlineWidth;\n    context.strokeStyle = outlineColor.toString();\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override onHide(): void {\n    super.onHide();\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onHideChild(this);\n    }\n  }\n\n  protected override onUnhide(): void {\n    super.onUnhide();\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onUnhideChild(this);\n    }\n  }\n\n  protected override onSetUnbounded(unbounded: boolean): void {\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onSetChildUnbounded(this, unbounded);\n    }\n  }\n\n  cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n    this.setCulled(!geoFrame.intersects(this.geoBounds));\n  }\n\n  @Property({\n    valueType: GeoViewport,\n    value: null,\n    inherits: true,\n  })\n  readonly geoViewport!: Property<this, GeoViewport | null>;\n\n  /**\n   * The map-specified geo-coordinate bounding box in which this view should layout\n   * and render geometry.\n   */\n  get geoFrame(): GeoBox {\n    const parent = this.parent;\n    return parent instanceof GeoView ? parent.geoFrame : GeoBox.globe();\n  }\n\n  /**\n   * The self-defined geo-coordinate bounding box surrounding all geometry this\n   * view could possibly render. Views with geo bounds that don't overlap\n   * their map frames may be culled from rendering and hit testing.\n   */\n  readonly geoBounds: GeoBox;\n\n  protected setGeoBounds(newGeoBounds: GeoBox): void {\n    const oldGeoBounds = this.geoBounds;\n    if (oldGeoBounds.equals(newGeoBounds)) {\n      return;\n    }\n    this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n    (this as Mutable<this>).geoBounds = newGeoBounds;\n    this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n    this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n  }\n\n  willSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.callObservers(\"viewWillSetGeoBounds\", newGeoBounds, oldGeoBounds, this);\n  }\n\n  protected onSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    if (this.unbounded) {\n      return;\n    }\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onSetChildGeoBounds(this, newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  didSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.callObservers(\"viewDidSetGeoBounds\", newGeoBounds, oldGeoBounds, this);\n  }\n\n  protected updateGeoBounds(): void {\n    this.setGeoBounds(this.deriveGeoBounds());\n  }\n\n  protected onInsertChildGeoBounds(child: GeoView, newGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onRemoveChildGeoBounds(child: GeoView, oldGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onSetChildGeoBounds(child: GeoView, newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onHideChild(child: GeoView): void {\n    this.updateGeoBounds();\n  }\n\n  protected onUnhideChild(child: GeoView): void {\n    this.updateGeoBounds();\n  }\n\n  protected onSetChildUnbounded(child: GeoView, unbounded: boolean): void {\n    this.updateGeoBounds();\n  }\n\n  get ownGeoBounds(): GeoBox | null {\n    return null;\n  }\n\n  deriveGeoBounds(): GeoBox {\n    let geoBounds = this.ownGeoBounds;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoView && !child.hidden && !child.unbounded) {\n        const childGeoBounds = child.geoBounds;\n        if (childGeoBounds.isDefined()) {\n          if (geoBounds !== null) {\n            geoBounds = geoBounds.union(childGeoBounds);\n          } else {\n            geoBounds = childGeoBounds;\n          }\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (geoBounds === null) {\n      geoBounds = this.geoFrame;\n    }\n    return geoBounds;\n  }\n\n  static override readonly MountFlags: ViewFlags = GraphicsView.MountFlags | View.NeedsProject;\n  static override readonly UncullFlags: ViewFlags = GraphicsView.UncullFlags | View.NeedsProject;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {GeoPerspective} from \"./GeoPerspective\";\nimport {GeoController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoTraitObserver<T extends GeoTrait = GeoTrait> extends TraitObserver<T> {\n  traitDidSetGeoPerspective?(geoPerspective: GeoPerspective | null, trait: T): void;\n}\n\n/** @public */\nexport abstract class GeoTrait extends Trait {\n  declare readonly observerType?: Class<GeoTraitObserver>;\n\n  @Property({\n    valueType: GeoPerspective,\n    value: null,\n    didSetValue(geoPerspective: GeoPerspective | null): void {\n      this.owner.callObservers(\"traitDidSetGeoPerspective\", geoPerspective, this.owner);\n    },\n  })\n  readonly geoPerspective!: Property<this, GeoPerspective | null>;\n\n  createGeoController(): GeoController {\n    return new GeoController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {View} from \"@swim/view\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {GeoPerspective} from \"./GeoPerspective\";\nimport {GeoView} from \"./GeoView\";\nimport {GeoTrait} from \"./GeoTrait\";\n\n/** @public */\nexport interface GeoControllerObserver<C extends GeoController = GeoController> extends ControllerObserver<C> {\n  controllerDidSetGeoPerspective?(geoPerspective: GeoPerspective | null, controller: C): void;\n\n  controllerWillAttachGeoTrait?(geoTrait: GeoTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoTrait, controller: C): void;\n\n  controllerWillAttachGeoView?(geoView: GeoView, controller: C): void;\n\n  controllerDidDetachGeoView?(geoView: GeoView, controller: C): void;\n}\n\n/** @public */\nexport class GeoController extends Controller {\n  declare readonly observerType?: Class<GeoControllerObserver>;\n\n  @Property({\n    valueType: GeoPerspective,\n    value: null,\n    didSetValue(geoPerspective: GeoPerspective | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoPerspective\", geoPerspective, this.owner);\n    },\n  })\n  readonly geoPerspective!: Property<this, GeoPerspective | null>;\n\n  @TraitViewRef({\n    traitType: GeoTrait,\n    willAttachTrait(geoTrait: GeoTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGeoTrait\", geoTrait, this.owner);\n    },\n    initTrait(geoTrait: GeoTrait): void {\n      this.owner.geoPerspective.bindInlet(geoTrait.geoPerspective);\n    },\n    deinitTrait(geoTrait: GeoTrait): void {\n      this.owner.geoPerspective.unbindInlet(geoTrait.geoPerspective);\n    },\n    didDetachTrait(geoTrait: GeoTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGeoTrait\", geoTrait, this.owner);\n    },\n    viewType: GeoView,\n    willAttachView(geoView: GeoView): void {\n      geoView.requireUpdate(View.NeedsProject);\n      this.owner.callObservers(\"controllerWillAttachGeoView\", geoView, this.owner);\n    },\n    didDetachView(geoView: GeoView): void {\n      this.owner.callObservers(\"controllerDidDetachGeoView\", geoView, this.owner);\n    },\n  })\n  readonly geo!: TraitViewRef<this, GeoTrait, GeoView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Easing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLookLike} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\n\n/** @public */\nexport interface GeoRippleOptions {\n  source?: GeoView | null;\n  center?: GeoPointLike | null;\n  width?: LengthLike | null;\n  radius?: LengthLike | null;\n  color?: ColorOrLookLike | null;\n  opacity?: number;\n  timing?: TimingLike | number | boolean;\n}\n\n/** @public */\nexport interface GeoRippleViewObserver<V extends GeoRippleView = GeoRippleView> extends GeoViewObserver<V> {\n  viewDidSetGeoCenter?(geoCenter: GeoPoint | null, view: V): void;\n}\n\n/** @public */\nexport class GeoRippleView extends GeoView implements StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.setFlags(this.flags | View.UnboundedFlag);\n  }\n\n  declare readonly observerType?: Class<GeoRippleViewObserver>;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: null,\n    didSetState(geoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(geoCenter);\n    },\n    didSetValue(geoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(geoCenter !== null ? geoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectRipple();\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", geoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null>;\n\n  @Animator({\n    valueType: R2Point,\n    value: R2Point.undefined(),\n    updateFlags: View.NeedsRender,\n    didSetValue(viewCenter: R2Point | null): void {\n      this.owner.updateViewBounds();\n    },\n  })\n  readonly viewCenter!: Animator<this, R2Point | null>;\n\n  @ThemeAnimator({\n    valueType: Length,\n    value: Length.zero(),\n    updateFlags: View.NeedsRender,\n    didTransition() {\n      this.owner.source.setView(null);\n      this.owner.remove();\n    },\n  })\n  readonly radius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.accentColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1), inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  @ViewRef({\n    observes: true,\n    didAttachView(sourceView: GeoView): void {\n      this.owner.geoCenter.setIntrinsic(sourceView.geoBounds.center);\n    },\n    viewDidUnmount(sourceView: GeoView): void {\n      this.owner.remove();\n    },\n    viewDidSetGeoBounds(geoBounds: GeoBox): void {\n      this.owner.geoCenter.setIntrinsic(geoBounds.center);\n    },\n  })\n  readonly source!: ViewRef<this, GeoView> & Observes<GeoView>;\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectRipple();\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.mounted || geoViewport === null) {\n      return;\n    }\n    const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                     ? geoViewport.project(geoCenter)\n                     : null;\n    this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n    this.projectRipple();\n  }\n\n  protected projectRipple(): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.viewCenter.hasAffinity(Affinity.Intrinsic) || geoViewport === null) {\n      return;\n    }\n    const geoCenter = this.geoCenter.value;\n    const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                     ? geoViewport.project(geoCenter)\n                     : null;\n    this.viewCenter.setIntrinsic(viewCenter);\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderRipple(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderRipple(context: PaintingContext, frame: R2Box): void {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return;\n    }\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.getValue().pxValue(size);\n    const stroke = this.stroke.value;\n    if (stroke === null) {\n      return;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== null) {\n      context.lineWidth = strokeWidth.pxValue(size);\n    }\n    context.strokeStyle = stroke.toString();\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override renderGeoBounds(outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  protected updateViewBounds(): void {\n    (this as Mutable<GeoRippleView>).viewBounds = this.deriveViewBounds();\n  }\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return R2Box.undefined();\n    }\n    return viewCenter.bounds;\n  }\n\n  ripple(options?: GeoRippleOptions): this {\n    let source: GeoView | null;\n    if (options === void 0 || options.source === void 0) {\n      source = null;\n    } else {\n      source = options.source;\n    }\n    let center: GeoPoint | null;\n    if (options === void 0 || options.center === void 0 || options.center === null) {\n      center = null;\n    } else {\n      center = GeoPoint.fromLike(options.center);\n    }\n    let width: Length | null;\n    if (options === void 0 || options.width === void 0 || options.width === null) {\n      width = null;\n    } else {\n      width = Length.fromLike(options.width);\n    }\n    let radius: Length;\n    if (options === void 0 || options.radius === void 0 || options.radius === null) {\n      radius = Length.pct(12.5);\n    } else {\n      radius = Length.fromLike(options.radius);\n    }\n    let color: Color | null;\n    if (options === void 0 || options.color === void 0 || options.color === null) {\n      color = this.getLookOr(Look.accentColor, null);\n    } else if (options.color instanceof Look) {\n      color = this.getLookOr(options.color, null);\n    } else {\n      color = Color.fromLike(options.color);\n    }\n    let timing: Timing | boolean;\n    if (options === void 0 || options.timing === void 0 || options.timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else if (typeof options.timing === \"number\") {\n      timing = Easing.linear.withDuration(options.timing);\n    } else {\n      timing = Timing.fromLike(options.timing);\n    }\n    const opacity = options !== void 0 ? options.opacity : void 0;\n\n    if (source !== null) {\n      this.source.setView(source);\n    }\n    if (center !== null) {\n      this.geoCenter.setIntrinsic(center);\n    }\n    if (width !== null) {\n      this.strokeWidth.setIntrinsic(width);\n    }\n    this.radius.set(radius, timing);\n    if (color !== null) {\n      this.stroke.set(opacity !== void 0 ? color.alpha(opacity) : color);\n      this.stroke.set(color.alpha(0), timing);\n    }\n\n    return this;\n  }\n\n  static ripple(sourceView: GeoView, options?: GeoRippleOptions): GeoRippleView | null {\n    let geoViewport: GeoViewport | null;\n    if (document.hidden || sourceView.hidden || sourceView.culled\n        || (geoViewport = sourceView.geoViewport.value) === null\n        || !sourceView.geoBounds.intersects(geoViewport.geoFrame)) {\n      return null;\n    }\n    const rippleView = GeoRippleView.create();\n    rippleView.source.setView(sourceView);\n    let containerView = sourceView.getRoot(GeoView);\n    if (containerView === null) {\n      containerView = sourceView;\n    }\n    containerView.appendChild(rippleView);\n    rippleView.ripple(options);\n    return rippleView;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {Hyperlink} from \"@swim/controller\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\n\n/** @public */\nexport interface GeoFeatureViewObserver<V extends GeoFeatureView = GeoFeatureView> extends GeoViewObserver<V> {\n  viewDidEnter?(view: V): void;\n\n  viewDidLeave?(view: V): void;\n\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class GeoFeatureView extends GeoView {\n  declare readonly observerType?: Class<GeoFeatureViewObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      const dx = input.x - input.x0;\n      const dy = input.y - input.y0;\n      if (dx * dx + dy * dy > 4 * 4) {\n        this.cancelPress(input, event);\n      }\n    },\n    didStartHovering(): void {\n      this.owner.callObservers(\"viewDidEnter\", this.owner);\n    },\n    didStopHovering(): void {\n      this.owner.callObservers(\"viewDidLeave\", this.owner);\n    },\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.defaultPrevented) {\n        return;\n      }\n      this.owner.didPress(input, event);\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (input.defaultPrevented) {\n        return;\n      }\n      this.owner.didLongPress(input);\n    },\n  })\n  readonly gesture!: PositionGesture<this, GeoFeatureView>;\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    if (input.defaultPrevented) {\n      return;\n    }\n    this.callObservers(\"viewDidPress\", input, event, this);\n    const hyperlink = this.hyperlink.value;\n    if (hyperlink !== null && !input.defaultPrevented) {\n      input.preventDefault();\n      hyperlink.activate(event);\n    }\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    if (input.defaultPrevented) {\n      return;\n    }\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Hyperlink} from \"@swim/controller\";\nimport type {GeoTraitObserver} from \"./GeoTrait\";\nimport {GeoTrait} from \"./GeoTrait\";\nimport {GeoFeatureController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoFeatureTraitObserver<T extends GeoFeatureTrait = GeoFeatureTrait> extends GeoTraitObserver<T> {\n}\n\n/** @public */\nexport class GeoFeatureTrait extends GeoTrait {\n  declare readonly observerType?: Class<GeoFeatureTraitObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  override createGeoController(): GeoFeatureController {\n    return new GeoFeatureController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {Hyperlink} from \"@swim/controller\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport {GeoFeatureView} from \"./GeoFeatureView\";\nimport {GeoFeatureTrait} from \"./GeoFeatureTrait\";\nimport type {GeoControllerObserver} from \"./GeoController\";\nimport {GeoController} from \"./GeoController\";\n\n/** @public */\nexport interface GeoFeatureControllerObserver<C extends GeoFeatureController = GeoFeatureController> extends GeoControllerObserver<C> {\n  controllerWillAttachGeoTrait?(geoTrait: GeoFeatureTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoFeatureTrait, controller: C): void;\n\n  controllerWillAttachGeoView?(geoView: GeoFeatureView, controller: C): void;\n\n  controllerDidDetachGeoView?(geoView: GeoFeatureView, controller: C): void;\n\n  controllerDidEnterGeoView?(geoView: GeoFeatureView, controller: C): void;\n\n  controllerDidLeaveGeoView?(geoView: GeoFeatureView, controller: C): void;\n\n  controllerDidPressGeoView?(input: PositionGestureInput, event: Event | null, geoView: GeoFeatureView, controller: C): void;\n\n  controllerDidLongPressGeoView?(input: PositionGestureInput, geoView: GeoFeatureView, controller: C): void;\n}\n\n/** @public */\nexport class GeoFeatureController extends GeoController {\n  declare readonly observerType?: Class<GeoFeatureControllerObserver>;\n\n  @Property({\n    inherits: true,\n    value: [0, Infinity],\n    didSetValue(range: readonly [minZoom: number, maxZoom: number] | boolean): void {\n      this.owner.visible.decohere();\n    },\n    setMin(minZoom: number, affinity?: Affinity): void {\n      this.setValue([minZoom, this.value[1]], affinity);\n    },\n    setMax(maxZoom: number, affinity?: Affinity): void {\n      this.setValue([this.value[0], maxZoom], affinity);\n    },\n  })\n  get visibleRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & {\n    setMin(minZoom: number, affinity?: Affinity): void;\n    setMax(maxZoom: number, affinity?: Affinity): void;\n  } {\n    return Property.getter();\n  }\n\n  @Property({\n    inherits: true,\n    value: [0, Infinity],\n    didSetValue(range: readonly [minZoom: number, maxZoom: number] | boolean): void {\n      this.owner.consumable.decohere();\n    },\n    setMin(minZoom: number, affinity?: Affinity): void {\n      this.setValue([minZoom, this.value[1]], affinity);\n    },\n    setMax(maxZoom: number, affinity?: Affinity): void {\n      this.setValue([this.value[0], maxZoom], affinity);\n    },\n  })\n  get consumeRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & {\n    setMin(minZoom: number, affinity?: Affinity): void;\n    setMax(maxZoom: number, affinity?: Affinity): void;\n  } {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [],\n    deriveValue(): boolean {\n      let geoView: GeoFeatureView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      return geoViewport.geoFrame.intersects(geoView.geoBounds);\n    },\n  })\n  readonly intersectsViewport!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [\"intersectsViewport\"],\n    deriveValue(intersectsViewport: boolean): boolean {\n      let geoView: GeoFeatureView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      const [minVisibleZoom, maxVisibleZoom] = this.owner.visibleRange.value;\n      return intersectsViewport\n          && geoViewport.zoom >= minVisibleZoom\n          && geoViewport.zoom < maxVisibleZoom;\n    },\n    didSetValue(visible: boolean): void {\n      const geoView = this.owner.geo.view;\n      if (geoView !== null) {\n        geoView.setCulled(!visible);\n      }\n    }\n  })\n  readonly visible!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [\"intersectsViewport\"],\n    deriveValue(intersectsViewport: boolean): boolean {\n      let geoView: GeoFeatureView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      const [minZoom, maxZoom] = this.owner.consumeRange.value;\n      return intersectsViewport\n          && geoViewport.zoom >= minZoom\n          && geoViewport.zoom < maxZoom;\n    },\n    didSetValue(consumable: boolean): void {\n      const geoView = this.owner.geo.view;\n      if (geoView !== null) {\n        if (consumable) {\n          this.owner.consume(geoView);\n        } else {\n          this.owner.unconsume(geoView);\n        }\n      }\n    }\n  })\n  readonly consumable!: Property<this, boolean>;\n\n  @TraitViewRef({\n    extends: true,\n    traitType: GeoFeatureTrait,\n    initTrait(geoTrait: GeoFeatureTrait): void {\n      this.owner.hyperlink.bindInlet(geoTrait.hyperlink);\n    },\n    deinitTrait(geoTrait: GeoFeatureTrait): void {\n      this.owner.hyperlink.unbindInlet(geoTrait.hyperlink);\n    },\n    viewType: GeoFeatureView,\n    observesView: true,\n    willAttachView(geoView: GeoFeatureView): void {\n      geoView.setCulled(true);\n      super.willAttachView(geoView);\n    },\n    initView(geoView: GeoFeatureView): void {\n      super.initView(geoView);\n      geoView.hyperlink.bindInlet(this.owner.hyperlink);\n    },\n    deinitView(geoView: GeoFeatureView): void {\n      geoView.hyperlink.unbindInlet(this.owner.hyperlink);\n      super.deinitView(geoView);\n    },\n    viewDidProject(geoView: GeoFeatureView): void {\n      this.owner.intersectsViewport.decohere();\n      this.owner.visible.decohere();\n      this.owner.consumable.decohere();\n    },\n    viewDidEnter(geoView: GeoFeatureView): void {\n      this.owner.callObservers(\"controllerDidEnterGeoView\", geoView, this.owner);\n    },\n    viewDidLeave(geoView: GeoFeatureView): void {\n      this.owner.callObservers(\"controllerDidLeaveGeoView\", geoView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, geoView: GeoFeatureView): void {\n      this.owner.callObservers(\"controllerDidPressGeoView\", input, event, geoView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, geoView: GeoFeatureView): void {\n      this.owner.callObservers(\"controllerDidLongPressGeoView\", input, geoView, this.owner);\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoFeatureTrait, GeoFeatureView> & GeoController[\"geo\"] & Observes<GeoFeatureView>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Uri} from \"@swim/uri\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Model} from \"@swim/model\";\nimport {TraitModelSet} from \"@swim/model\";\nimport type {GeoTraitObserver} from \"./GeoTrait\";\nimport {GeoTrait} from \"./GeoTrait\";\nimport {GeoFeatureTrait} from \"./GeoFeatureTrait\";\nimport {GeoLayerController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoLayerTraitObserver<T extends GeoLayerTrait = GeoLayerTrait> extends GeoTraitObserver<T> {\n  traitDidSetGeoBounds?(geoBoubnds: GeoBox | null, trait: T): void;\n\n  traitWillAttachLayer?(layerTrait: GeoLayerTrait, trait: T): void;\n\n  traitDidDetachLayer?(layerTrait: GeoLayerTrait, trait: T): void;\n\n  traitWillAttachFeature?(featureTrait: GeoFeatureTrait, trait: T): void;\n\n  traitDidDetachFeature?(featureTrait: GeoFeatureTrait, trait: T): void;\n}\n\n/** @public */\nexport class GeoLayerTrait extends GeoTrait {\n  declare readonly observerType?: Class<GeoLayerTraitObserver>;\n\n  @Property({extends: true, inherits: false})\n  override get nodeUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: GeoBox,\n    value: null,\n    didSetValue(geoBounds: GeoBox | null): void {\n      this.owner.callObservers(\"traitDidSetGeoBounds\", geoBounds, this.owner);\n      this.owner.geoPerspective.setIntrinsic(geoBounds);\n    },\n  })\n  readonly geoBounds!: Property<this, GeoBox | null>;\n\n  @TraitModelSet({\n    get traitType(): typeof GeoLayerTrait {\n      return GeoLayerTrait;\n    },\n    traitKey: \"layer\",\n    modelType: Model,\n    binds: true,\n    willAttachTrait(layerTrait: GeoLayerTrait): void {\n      this.owner.callObservers(\"traitWillAttachLayer\", layerTrait, this.owner);\n    },\n    didDetachTrait(layerTrait: GeoLayerTrait): void {\n      this.owner.callObservers(\"traitDidDetachLayer\", layerTrait, this.owner);\n    },\n  })\n  readonly layers!: TraitModelSet<this, GeoLayerTrait, Model>;\n\n  @TraitModelSet({\n    traitType: GeoFeatureTrait,\n    traitKey: \"feature\",\n    modelType: Model,\n    binds: true,\n    willAttachTrait(featureTrait: GeoFeatureTrait): void {\n      this.owner.callObservers(\"traitWillAttachFeature\", featureTrait, this.owner);\n    },\n    didAttachTrait(featureTrait: GeoFeatureTrait): void {\n      if (this.owner.consuming) {\n        featureTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(featureTrait: GeoFeatureTrait): void {\n      if (this.owner.consuming) {\n        featureTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(featureTrait: GeoFeatureTrait): void {\n      this.owner.callObservers(\"traitDidDetachFeature\", featureTrait, this.owner);\n    },\n  })\n  readonly features!: TraitModelSet<this, GeoFeatureTrait, Model>;\n\n  consumeLayers(): void {\n    // hook\n  }\n\n  unconsumeLayers(): void {\n    // hook\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.features.consumeTraits(this);\n    this.consumeLayers();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.features.unconsumeTraits(this);\n  }\n\n  override createGeoController(): GeoLayerController {\n    return new GeoLayerController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport type {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {GeoView} from \"./GeoView\";\n\n/** @public */\nexport class GeoTree {\n  constructor(depth: number, maxDepth: number, density: number,\n              geoFrame: GeoBox, geoBounds: GeoBox, geoCenter: GeoPoint,\n              southWest: GeoTree | null, northWest: GeoTree | null,\n              southEast: GeoTree | null, northEast: GeoTree | null,\n              views: readonly GeoView[], size: number) {\n    this.depth = depth;\n    this.maxDepth = maxDepth;\n    this.density = density;\n    this.geoFrame = geoFrame;\n    this.geoBounds = geoBounds;\n    this.geoCenter = geoCenter;\n    this.southWest = southWest;\n    this.northWest = northWest;\n    this.southEast = southEast;\n    this.northEast = northEast;\n    this.views = views;\n    this.size = size;\n  }\n\n  readonly depth: number;\n\n  readonly maxDepth: number;\n\n  readonly density: number;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoBounds: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly southWest: GeoTree | null;\n\n  readonly northWest: GeoTree | null;\n\n  readonly southEast: GeoTree | null;\n\n  readonly northEast: GeoTree | null;\n\n  readonly views: readonly GeoView[];\n\n  readonly size: number;\n\n  isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  contains(bounds: GeoBox): boolean {\n    return this.geoFrame.contains(bounds);\n  }\n\n  intersects(bounds: GeoBox): boolean {\n    return this.geoFrame.intersects(bounds);\n  }\n\n  getTree(bounds: GeoBox): GeoTree {\n    if (this.depth >= this.maxDepth || this.size <= this.density) {\n      return this;\n    }\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest === inEast || inSouth === inNorth) {\n      return this;\n    } else if (inSouth && inWest) {\n      const southWest = this.southWest;\n      if (southWest !== null) {\n        return southWest.getTree(bounds);\n      }\n    } else if (inNorth && inWest) {\n      const northWest = this.northWest;\n      if (northWest !== null) {\n        return northWest.getTree(bounds);\n      }\n    } else if (inSouth && inEast) {\n      const southEast = this.southEast;\n      if (southEast !== null) {\n        return southEast.getTree(bounds);\n      }\n    } else if (inNorth && inEast) {\n      const northEast = this.northEast;\n      if (northEast !== null) {\n        return northEast.getTree(bounds);\n      }\n    }\n    return this;\n  }\n\n  has(view: GeoView, bounds: GeoBox): boolean {\n    if (this.depth < this.maxDepth && this.size > this.density) {\n      const contained = this.hasNode(view, bounds);\n      if (contained !== void 0) {\n        return contained;\n      }\n    }\n    return this.hasLeaf(view, bounds);\n  }\n\n  private hasNode(view: GeoView, bounds: GeoBox): boolean | undefined {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest === inEast || inSouth === inNorth) {\n      return void 0;\n    } else if (inSouth && inWest) {\n      const southWest = this.southWest;\n      if (southWest !== null) {\n        return southWest.has(view, bounds);\n      }\n    } else if (inNorth && inWest) {\n      const northWest = this.northWest;\n      if (northWest !== null) {\n        return northWest.has(view, bounds);\n      }\n    } else if (inSouth && inEast) {\n      const southEast = this.southEast;\n      if (southEast !== null) {\n        return southEast.has(view, bounds);\n      }\n    } else if (inNorth && inEast) {\n      const northEast = this.northEast;\n      if (northEast !== null) {\n        return northEast.has(view, bounds);\n      }\n    }\n    return void 0;\n  }\n\n  private hasLeaf(view: GeoView, bounds: GeoBox): boolean {\n    return this.views.indexOf(view) >= 0;\n  }\n\n  inserted(view: GeoView, bounds: GeoBox): GeoTree {\n    let tree: GeoTree = this;\n    if (tree.depth < tree.maxDepth && tree.size > tree.density) {\n      const newTree = tree.insertedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n        if (this !== tree && tree.size === tree.density + 1) {\n          tree = tree.reinsertedNode();\n        }\n        return tree;\n      }\n    }\n    tree = tree.insertedLeaf(view, bounds);\n    if (this !== tree && tree.depth < tree.maxDepth && tree.size === tree.density + 1) {\n      tree = tree.reinsertedNode();\n    }\n    return tree;\n  }\n\n  private insertedNode(view: GeoView, bounds: GeoBox): GeoTree | null {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest === inEast || inSouth === inNorth) {\n      return null;\n    } else if (inSouth && inWest) {\n      const oldSouthWest = this.southWest;\n      let newSouthWest = oldSouthWest;\n      if (newSouthWest === null) {\n        newSouthWest = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                       new GeoBox(this.geoFrame.lngMin, this.geoFrame.latMin,\n                                                  this.geoCenter.lng, this.geoCenter.lat));\n      }\n      newSouthWest = newSouthWest.inserted(view, bounds);\n      if (oldSouthWest === newSouthWest) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, newSouthWest, this.northWest,\n                             this.southEast, this.northEast, this.views, this.size + 1);\n    } else if (inNorth && inWest) {\n      const oldNorthWest = this.northWest;\n      let newNorthWest = oldNorthWest;\n      if (newNorthWest === null) {\n        newNorthWest = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                       new GeoBox(this.geoFrame.lngMin, this.geoCenter.lat,\n                                                  this.geoCenter.lng, this.geoFrame.latMax));\n      }\n      newNorthWest = newNorthWest.inserted(view, bounds);\n      if (oldNorthWest === newNorthWest) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, newNorthWest,\n                             this.southEast, this.northEast, this.views, this.size + 1);\n    } else if (inSouth && inEast) {\n      const oldSouthEast = this.southEast;\n      let newSouthEast = oldSouthEast;\n      if (newSouthEast === null) {\n        newSouthEast = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                       new GeoBox(this.geoCenter.lng, this.geoFrame.latMin,\n                                                  this.geoFrame.lngMax, this.geoCenter.lat));\n      }\n      newSouthEast = newSouthEast.inserted(view, bounds);\n      if (oldSouthEast === newSouthEast) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             newSouthEast, this.northEast, this.views, this.size + 1);\n    } else if (inNorth && inEast) {\n      const oldNorthEast = this.northEast;\n      let newNorthEast = oldNorthEast;\n      if (newNorthEast === null) {\n        newNorthEast = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                       new GeoBox(this.geoCenter.lng, this.geoCenter.lat,\n                                                  this.geoFrame.lngMax, this.geoFrame.latMax));\n      }\n      newNorthEast = newNorthEast.inserted(view, bounds);\n      if (oldNorthEast === newNorthEast) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             this.southEast, newNorthEast, this.views, this.size + 1);\n    }\n    return null;\n  }\n\n  private insertedLeaf(view: GeoView, bounds: GeoBox): GeoTree {\n    const oldViews = this.views;\n    if (oldViews.indexOf(view) >= 0) {\n      return this;\n    }\n    const newViews = oldViews.slice(0);\n    newViews.push(view);\n    return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                           void 0, this.geoCenter, this.southWest, this.northWest,\n                           this.southEast, this.northEast, newViews, this.size + 1);\n  }\n\n  removed(view: GeoView, bounds: GeoBox): GeoTree {\n    let tree: GeoTree = this;\n    if (tree.depth < tree.maxDepth && tree.size > tree.density) {\n      const newTree = tree.removedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n        if (this !== tree && tree.size === tree.density) {\n          tree = tree.reinsertedLeaf();\n        }\n        return tree;\n      }\n    }\n    tree = tree.removedLeaf(view, bounds);\n    if (this !== tree && tree.size === tree.density) {\n      tree = tree.reinsertedLeaf();\n    }\n    return tree;\n  }\n\n  private removedNode(view: GeoView, bounds: GeoBox): GeoTree | null {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest === inEast || inSouth === inNorth) {\n      return null;\n    } else if (inSouth && inWest) {\n      const oldSouthWest = this.southWest;\n      if (oldSouthWest === null) {\n        return this;\n      }\n      let newSouthWest: GeoTree | null = oldSouthWest.removed(view, bounds);\n      if (newSouthWest.isEmpty()) {\n        newSouthWest = null;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, newSouthWest, this.northWest,\n                             this.southEast, this.northEast, this.views, this.size - 1);\n    } else if (inNorth && inWest) {\n      const oldNorthWest = this.northWest;\n      if (oldNorthWest === null) {\n        return this;\n      }\n      let newNorthWest: GeoTree | null = oldNorthWest.removed(view, bounds);\n      if (newNorthWest.isEmpty()) {\n        newNorthWest = null;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, newNorthWest,\n                             this.southEast, this.northEast, this.views, this.size - 1);\n    } else if (inSouth && inEast) {\n      const oldSouthEast = this.southEast;\n      if (oldSouthEast === null) {\n        return this;\n      }\n      let newSouthEast: GeoTree | null = oldSouthEast.removed(view, bounds);\n      if (newSouthEast.isEmpty()) {\n        newSouthEast = null;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             newSouthEast, this.northEast, this.views, this.size - 1);\n    } else if (inNorth && inEast) {\n      const oldNorthEast = this.northEast;\n      if (oldNorthEast === null) {\n        return this;\n      }\n      let newNorthEast: GeoTree | null = oldNorthEast.removed(view, bounds);\n      if (newNorthEast.isEmpty()) {\n        newNorthEast = null;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             this.southEast, newNorthEast, this.views, this.size - 1);\n    }\n    return null;\n  }\n\n  private removedLeaf(view: GeoView, bounds: GeoBox): GeoTree {\n    const oldViews = this.views;\n    const index = oldViews.indexOf(view);\n    if (index < 0) {\n      return this;\n    }\n    const newViews = oldViews.slice(0);\n    newViews.splice(index, 1);\n    return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                           void 0, this.geoCenter, this.southWest, this.northWest,\n                           this.southEast, this.northEast, newViews, this.size - 1);\n  }\n\n  private reinsertedNode(): GeoTree {\n    let tree = this.createTree(this.depth, this.maxDepth, this.density,\n                               this.geoFrame, void 0, this.geoCenter);\n    this.forEach(function (view: GeoView): void {\n      const bounds = view.geoBounds;\n      const newTree = tree.insertedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n      } else {\n        tree = tree.insertedLeaf(view, bounds);\n      }\n    }, this);\n    return tree;\n  }\n\n  private reinsertedLeaf(): GeoTree {\n    let tree = this.createTree(this.depth, this.maxDepth, this.density,\n                               this.geoFrame, void 0, this.geoCenter);\n    this.forEach(function (view: GeoView): void {\n      tree = tree.insertedLeaf(view, view.geoBounds);\n    }, this);\n    return tree;\n  }\n\n  moved(view: GeoView, newBounds: GeoBox, oldBounds: GeoBox): GeoTree {\n    if (this.depth >= this.maxDepth || this.size <= this.density) {\n      return this;\n    }\n    const geoCenter = this.geoCenter;\n    const newInWest = newBounds.lngMin <= geoCenter.lng;\n    const newInSouth = newBounds.latMin <= geoCenter.lat;\n    const newInEast = newBounds.lngMax > geoCenter.lng;\n    const newInNorth = newBounds.latMax > geoCenter.lat;\n    const oldInWest = oldBounds.lngMin <= geoCenter.lng;\n    const oldInSouth = oldBounds.latMin <= geoCenter.lat;\n    const oldInEast = oldBounds.lngMax > geoCenter.lng;\n    const oldInNorth = oldBounds.latMax > geoCenter.lat;\n    if (newInWest !== oldInWest || newInSouth !== oldInSouth\n        || newInEast !== oldInEast || newInNorth !== oldInNorth) {\n      return this.removed(view, oldBounds).inserted(view, newBounds);\n    } else if (newInWest === newInEast || newInSouth === newInNorth) {\n      return this;\n    } else if (newInSouth && newInWest) {\n      const oldSouthWest = this.southWest!;\n      const newSouthWest = oldSouthWest.moved(view, newBounds, oldBounds);\n      if (oldSouthWest === newSouthWest) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, newSouthWest, this.northWest,\n                             this.southEast, this.northEast, this.views, this.size);\n    } else if (newInNorth && newInWest) {\n      const oldNorthWest = this.northWest!;\n      const newNorthWest = oldNorthWest.moved(view, newBounds, oldBounds);\n      if (oldNorthWest === newNorthWest) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, newNorthWest,\n                             this.southEast, this.northEast, this.views, this.size);\n    } else if (newInSouth && newInEast) {\n      const oldSouthEast = this.southEast!;\n      const newSouthEast = oldSouthEast.moved(view, newBounds, oldBounds);\n      if (oldSouthEast === newSouthEast) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             newSouthEast, this.northEast, this.views, this.size);\n    } else if (newInNorth && newInEast) {\n      const oldNorthEast = this.northEast!;\n      const newNorthEast = oldNorthEast.moved(view, newBounds, oldBounds);\n      if (oldNorthEast === newNorthEast) {\n        return this;\n      }\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             this.southEast, newNorthEast, this.views, this.size);\n    }\n    return this;\n  }\n\n  forEach<T>(callback: (view: GeoView) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (this.southWest !== null) {\n      const result = this.southWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const views = this.views;\n    for (let i = 0; i < views.length; i += 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachReverse<T>(callback: (view: GeoView) => T | void): T | undefined;\n  forEachReverse<T, S>(callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachReverse<T, S>(callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    const views = this.views;\n    for (let i = views.length - 1; i >= 0; i -= 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southWest !== null) {\n      const result = this.southWest.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachIntersecting<T>(bounds: GeoBox, callback: (view: GeoView) => T | void): T | undefined;\n  forEachIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachIntersecting<T, S>(bounds: GeoBox, callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (!this.geoFrame.intersects(bounds)) {\n      return void 0;\n    }\n    if (this.southWest !== null) {\n      const result = this.southWest.forEachIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEachIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEachIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEachIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const views = this.views;\n    for (let i = 0; i < views.length; i += 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachNonIntersecting<T>(bounds: GeoBox, callback: (view: GeoView) => T | void): T | undefined;\n  forEachNonIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachNonIntersecting<T, S>(bounds: GeoBox, callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (this.geoFrame.intersects(bounds)) {\n      return void 0;\n    }\n    if (this.southWest !== null) {\n      const result = this.southWest.forEachNonIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEachNonIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEachNonIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEachNonIntersecting(bounds, callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const views = this.views;\n    for (let i = 0; i < views.length; i += 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  protected createTree(depth: number, maxDepth: number, density: number,\n                       geoFrame: GeoBox, geoBounds?: GeoBox, geoCenter?: GeoPoint,\n                       southWest: GeoTree | null = null, northWest: GeoTree | null = null,\n                       southEast: GeoTree | null = null, northEast: GeoTree | null = null,\n                       views: readonly GeoView[] = Arrays.empty(), size: number = 0): GeoTree {\n    if (geoCenter === void 0) {\n      geoCenter = geoFrame.center;\n    }\n    if (geoBounds === void 0) {\n      if (southWest !== null) {\n        geoBounds = southWest.geoBounds;\n      }\n      if (northWest !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northWest.geoBounds) : northWest.geoBounds;\n      }\n      if (southEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(southEast.geoBounds) : southEast.geoBounds;\n      }\n      if (northEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northEast.geoBounds) : northEast.geoBounds;\n      }\n      for (let i = 0; i < views.length; i += 1) {\n        const view = views[i]!;\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(view.geoBounds) : view.geoBounds;\n      }\n      if (geoBounds === void 0) {\n        geoBounds = geoFrame;\n      }\n    }\n    return new GeoTree(depth, maxDepth, density, geoFrame, geoBounds, geoCenter,\n                       southWest, northWest, southEast, northEast, views, size);\n  }\n\n  static empty(geoFrame?: GeoBox, depth?: number, maxDepth?: number, density?: number): GeoTree {\n    if (geoFrame === void 0) {\n      geoFrame = GeoBox.globe();\n    }\n    if (depth === void 0) {\n      depth = 0;\n    }\n    if (maxDepth === void 0) {\n      maxDepth = 20;\n    }\n    maxDepth = Math.max(depth, maxDepth);\n    if (density === void 0) {\n      density = 8;\n    }\n    return new GeoTree(depth, maxDepth, density, geoFrame, geoFrame,\n                       geoFrame.center, null, null, null, null, Arrays.empty(), 0);\n  }\n}","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {GeoPoint} from \"@swim/geo\";\nimport type {GeoBox} from \"@swim/geo\";\nimport type {GeoProjection} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport {GeoView} from \"./GeoView\";\nimport {GeoTree} from \"./GeoTree\";\n\n/** @public */\nexport class GeoTreeView extends GeoView {\n  constructor(geoFrame?: GeoBox, depth?: number, maxDepth?: number, density?: number) {\n    super();\n    this.root = GeoTree.empty(geoFrame, depth, maxDepth, density);\n    this.stem = null;\n  }\n\n  /** @internal */\n  readonly root: GeoTree;\n\n  /** @internal */\n  updateRoot(newRoot: GeoTree): void {\n    (this as Mutable<this>).root = newRoot;\n    (this as Mutable<this>).stem = null;\n    this.setGeoBounds(newRoot.geoBounds);\n  }\n\n  /** @internal */\n  readonly stem: GeoTree | null;\n\n  /** @internal */\n  getStem(geoBounds: GeoBox): GeoTree {\n    let stem = this.stem;\n    if (stem === null) {\n      stem = this.root.getTree(geoBounds);\n      (this as Mutable<this>).stem = stem;\n    }\n    return stem;\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child instanceof GeoView) {\n      this.updateRoot(this.root.inserted(child, child.geoBounds));\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n    if (child instanceof GeoView) {\n      this.updateRoot(this.root.removed(child, child.geoBounds));\n    }\n  }\n\n  protected override willProject(): void {\n    super.willProject();\n    (this as Mutable<this>).stem = null;\n  }\n\n  protected override processChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    const geoFrame = geoViewport.geoFrame;\n    const stem = this.getStem(geoFrame);\n    this.processTree(stem, geoFrame, processFlags, processChild);\n  }\n\n  /** @internal */\n  protected processTree(tree: GeoTree, geoFrame: GeoBox, processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    if (tree.southWest !== null && tree.southWest.geoFrame.intersects(geoFrame)) {\n      this.processTree(tree.southWest, geoFrame, processFlags, processChild);\n    }\n    if (tree.northWest !== null && tree.northWest.geoFrame.intersects(geoFrame)) {\n      this.processTree(tree.northWest, geoFrame, processFlags, processChild);\n    }\n    if (tree.southEast !== null && tree.southEast.geoFrame.intersects(geoFrame)) {\n      this.processTree(tree.southEast, geoFrame, processFlags, processChild);\n    }\n    if (tree.northEast !== null && tree.northEast.geoFrame.intersects(geoFrame)) {\n      this.processTree(tree.northEast, geoFrame, processFlags, processChild);\n    }\n    const children = tree.views;\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i]!;\n      processChild.call(this, child, processFlags);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n      }\n    }\n  }\n\n  @ThemeAnimator({valueType: Color, value: null})\n  get geoTreeColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const outlineColor = ThemeAnimator.tryValue(this, \"geoTreeColor\");\n    if (outlineColor !== null) {\n      this.renderGeoTree(outlineColor);\n    }\n  }\n\n  protected renderGeoTree(outlineColor: Color): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderGeoTreeOutline(this.root, geoViewport, renderer.context, outlineColor);\n    }\n  }\n\n  protected renderGeoTreeOutline(tree: GeoTree, geoProjection: GeoProjection,\n                                 context: PaintingContext, outlineColor: Color): void {\n    if (tree.southWest !== null) {\n      this.renderGeoTreeOutline(tree.southWest, geoProjection, context, outlineColor);\n    }\n    if (tree.northWest !== null) {\n      this.renderGeoTreeOutline(tree.northWest, geoProjection, context, outlineColor);\n    }\n    if (tree.southEast !== null) {\n      this.renderGeoTreeOutline(tree.southEast, geoProjection, context, outlineColor);\n    }\n    if (tree.northEast !== null) {\n      this.renderGeoTreeOutline(tree.northEast, geoProjection, context, outlineColor);\n    }\n    const minDepth = 2;\n    if (tree.depth >= minDepth) {\n      const u = (tree.depth - minDepth) / (tree.maxDepth - minDepth);\n      const outlineWidth = 4 * (1 - u) + 0.5 * u;\n      this.renderGeoOutline(tree.geoFrame, context, outlineColor, outlineWidth);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    const geoFrame = geoViewport.geoFrame;\n    const stem = this.getStem(geoFrame);\n    this.displayTree(stem, geoFrame, displayFlags, displayChild);\n  }\n\n  /** @internal */\n  protected displayTree(tree: GeoTree, geoFrame: GeoBox, displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    if (tree.southWest !== null && tree.southWest.geoFrame.intersects(geoFrame)) {\n      this.displayTree(tree.southWest, geoFrame, displayFlags, displayChild);\n    }\n    if (tree.northWest !== null && tree.northWest.geoFrame.intersects(geoFrame)) {\n      this.displayTree(tree.northWest, geoFrame, displayFlags, displayChild);\n    }\n    if (tree.southEast !== null && tree.southEast.geoFrame.intersects(geoFrame)) {\n      this.displayTree(tree.southEast, geoFrame, displayFlags, displayChild);\n    }\n    if (tree.northEast !== null && tree.northEast.geoFrame.intersects(geoFrame)) {\n      this.displayTree(tree.northEast, geoFrame, displayFlags, displayChild);\n    }\n    const children = tree.views;\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i]!;\n      displayChild.call(this, child, displayFlags);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n      }\n    }\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  protected override onSetChildGeoBounds(child: GeoView, newChildViewGeoBounds: GeoBox, oldChildViewGeoBounds: GeoBox): void {\n    this.updateRoot(this.root.moved(child, newChildViewGeoBounds, oldChildViewGeoBounds));\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return null;\n    }\n    const geoPoint = geoViewport.unproject(x, y);\n    const stem = this.getStem(geoViewport.geoFrame);\n    return this.hitTestTree(stem, x, y, geoPoint);\n  }\n\n  protected hitTestTree(tree: GeoTree, x: number, y: number, geoPoint: GeoPoint): GraphicsView | null {\n    let hit: GraphicsView | null = null;\n    if (tree.southWest !== null && tree.southWest.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.southWest, x, y, geoPoint);\n    }\n    if (hit === null && tree.northWest !== null && tree.northWest.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.northWest, x, y, geoPoint);\n    }\n    if (hit === null && tree.southEast !== null && tree.southEast.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.southEast, x, y, geoPoint);\n    }\n    if (hit === null && tree.northEast !== null && tree.northEast.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.northEast, x, y, geoPoint);\n    }\n    if (hit === null) {\n      const children = tree.views;\n      for (let i = 0; i < children.length; i += 1) {\n        const child = children[i]!;\n        hit = child.cascadeHitTest(x, y);\n        if (hit !== null) {\n          break;\n        }\n      }\n    }\n    return hit;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {Uri} from \"@swim/uri\";\nimport type {Trait} from \"@swim/model\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoPerspective} from \"./GeoPerspective\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {GeoView} from \"./GeoView\";\nimport type {GeoControllerObserver} from \"./GeoController\";\nimport {GeoController} from \"./GeoController\";\nimport type {GeoFeatureView} from \"./GeoFeatureView\";\nimport type {GeoFeatureTrait} from \"./GeoFeatureTrait\";\nimport {GeoFeatureController} from \"./GeoFeatureController\";\nimport {GeoTreeView} from \"./GeoTreeView\";\nimport {GeoLayerTrait} from \"./GeoLayerTrait\";\n\n/** @public */\nexport interface GeoLayerControllerObserver<C extends GeoLayerController = GeoLayerController> extends GeoControllerObserver<C> {\n  controllerWillAttachGeoTrait?(geoTrait: GeoLayerTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoLayerTrait, controller: C): void;\n\n  controllerWillAttachLayer?(layerController: GeoLayerController, controller: C): void;\n\n  controllerDidDetachLayer?(layerController: GeoLayerController, controller: C): void;\n\n  controllerWillAttachLayerTrait?(layerTrait: GeoLayerTrait, layerController: GeoLayerController, controller: C): void;\n\n  controllerDidDetachLayerTrait?(layerTrait: GeoLayerTrait, layerController: GeoLayerController, controller: C): void;\n\n  controllerWillAttachLayerView?(layerView: GeoView, layerController: GeoLayerController, controller: C): void;\n\n  controllerDidDetachLayerView?(layerView: GeoView, layerController: GeoLayerController, controller: C): void;\n\n  controllerWillAttachFeature?(featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidDetachFeature?(featureController: GeoFeatureController, controller: C): void;\n\n  controllerWillAttachFeatureTrait?(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidDetachFeatureTrait?(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController, controller: C): void;\n\n  controllerWillAttachFeatureView?(featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidDetachFeatureView?(featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidSetFeatureGeoPerspective?(geoPerspective: GeoPerspective | null, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidEnterFeatureView?(featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidLeaveFeatureView?(featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidPressFeatureView?(input: PositionGestureInput, event: Event | null, featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n\n  controllerDidLongPressFeatureView?(input: PositionGestureInput, featureView: GeoFeatureView, featureController: GeoFeatureController, controller: C): void;\n}\n\n/** @public */\nexport class GeoLayerController extends GeoController {\n  declare readonly observerType?: Class<GeoLayerControllerObserver>;\n\n  @Property({extends: true, inherits: false})\n  override get nodeUri(): Property<this, Uri | null> {\n    return Property.getter();\n  }\n\n  @Property({\n    inherits: true,\n    value: [0, Infinity],\n    didSetValue(range: readonly [minZoom: number, maxZoom: number] | boolean): void {\n      this.owner.visible.decohere();\n    },\n    setMin(minZoom: number, affinity?: Affinity): void {\n      this.setValue([minZoom, this.value[1]], affinity);\n    },\n    setMax(maxZoom: number, affinity?: Affinity): void {\n      this.setValue([this.value[0], maxZoom], affinity);\n    },\n  })\n  get visibleRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & {\n    setMin(minZoom: number, affinity?: Affinity): void;\n    setMax(maxZoom: number, affinity?: Affinity): void;\n  } {\n    return Property.getter();\n  }\n\n  @Property({\n    inherits: true,\n    value: [0, Infinity],\n    didSetValue(range: readonly [minZoom: number, maxZoom: number] | boolean): void {\n      this.owner.consumable.decohere();\n    },\n    setMin(minZoom: number, affinity?: Affinity): void {\n      this.setValue([minZoom, this.value[1]], affinity);\n    },\n    setMax(maxZoom: number, affinity?: Affinity): void {\n      this.setValue([this.value[0], maxZoom], affinity);\n    },\n  })\n  get consumeRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & {\n    setMin(minZoom: number, affinity?: Affinity): void;\n    setMax(maxZoom: number, affinity?: Affinity): void;\n  } {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [],\n    deriveValue(): boolean {\n      let geoView: GeoView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      return geoViewport.geoFrame.intersects(geoView.geoBounds);\n    },\n  })\n  readonly intersectsViewport!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [\"intersectsViewport\"],\n    deriveValue(intersectsViewport: boolean): boolean {\n      let geoView: GeoView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      const [minVisibleZoom, ] = this.owner.visibleRange.value;\n      return intersectsViewport\n          && geoViewport.zoom >= minVisibleZoom;\n    },\n    didSetValue(visible: boolean): void {\n      const geoView = this.owner.geo.view;\n      if (geoView !== null) {\n        geoView.setCulled(!visible);\n      }\n    }\n  })\n  readonly visible!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inletKeys: [\"intersectsViewport\"],\n    deriveValue(intersectsViewport: boolean): boolean {\n      let geoView: GeoView | null;\n      let geoViewport: GeoViewport | null;\n      if (!this.owner.mounted || (geoView = this.owner.geo.view) === null\n          || (geoViewport = geoView.geoViewport.value) === null) {\n        return false;\n      }\n      const [minZoom, maxZoom] = this.owner.consumeRange.value;\n      if (intersectsViewport && geoViewport.zoom >= maxZoom) {\n        const geoTrait = this.owner.geo.trait;\n        if (geoTrait !== null) {\n          geoTrait.consumeLayers();\n        }\n        this.owner.consumeLayers();\n      } else if (!intersectsViewport || geoViewport.zoom < minZoom) {\n        const geoTrait = this.owner.geo.trait;\n        if (geoTrait !== null) {\n          geoTrait.unconsumeLayers();\n        }\n        this.owner.unconsumeLayers();\n      }\n      return intersectsViewport\n          && geoViewport.zoom >= minZoom\n          && geoViewport.zoom < maxZoom;\n    },\n    didSetValue(consumable: boolean): void {\n      const geoView = this.owner.geo.view;\n      if (geoView !== null) {\n        if (consumable) {\n          this.owner.consume(geoView);\n        } else {\n          this.owner.unconsume(geoView);\n        }\n      }\n    }\n  })\n  readonly consumable!: Property<this, boolean>;\n\n  @TraitViewRef({\n    extends: true,\n    consumed: true,\n    traitType: GeoLayerTrait,\n    observesTrait: true,\n    initTrait(geoTrait: GeoLayerTrait): void {\n      super.initTrait(geoTrait);\n      this.owner.layers.addTraits(geoTrait.layers.traits);\n      this.owner.features.addTraits(geoTrait.features.traits);\n    },\n    deinitTrait(geoTrait: GeoLayerTrait): void {\n      this.owner.features.deleteTraits(geoTrait.features.traits);\n      this.owner.layers.deleteTraits(geoTrait.layers.traits);\n      super.deinitTrait(geoTrait);\n    },\n    traitWillAttachLayer(layerTrait: GeoLayerTrait, targetTrait: Trait): void {\n      this.owner.layers.addTrait(layerTrait, targetTrait);\n    },\n    traitDidDetachLayer(layerTrait: GeoLayerTrait): void {\n      this.owner.layers.deleteTrait(layerTrait);\n    },\n    traitWillAttachFeature(featureTrait: GeoFeatureTrait, targetTrait: Trait | null): void {\n      this.owner.features.addTrait(featureTrait, targetTrait);\n    },\n    traitDidDetachFeature(featureTrait: GeoFeatureTrait): void {\n      this.owner.features.deleteTrait(featureTrait);\n    },\n    viewType: GeoTreeView,\n    observesView: true,\n    initView(geoView: GeoView): void {\n      super.initView(geoView);\n      const layerControllers = this.owner.layers.controllers;\n      for (const controllerId in layerControllers) {\n        const layerController = layerControllers[controllerId]!;\n        layerController.geo.insertView(geoView);\n      }\n      const featureControllers = this.owner.features.controllers;\n      for (const controllerId in featureControllers) {\n        const featureController = featureControllers[controllerId]!;\n        featureController.geo.insertView(geoView);\n      }\n    },\n    deinitView(geoView: GeoView): void {\n      this.owner.unconsume(geoView);\n      super.deinitView(geoView);\n    },\n    viewDidProject(geoView: GeoView): void {\n      this.owner.intersectsViewport.decohere();\n      this.owner.visible.decohere();\n      this.owner.consumable.decohere();\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoLayerTrait, GeoView> & GeoController[\"geo\"] & Observes<GeoLayerTrait> & Observes<GeoView>;\n\n  @TraitViewControllerSet({\n    get controllerType(): typeof GeoLayerController {\n      return GeoLayerController;\n    },\n    binds: true,\n    observes: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(layerController: GeoLayerController): TraitViewRef<unknown, GeoLayerTrait, GeoView> {\n      return layerController.geo;\n    },\n    willAttachController(layerController: GeoLayerController): void {\n      this.owner.callObservers(\"controllerWillAttachLayer\", layerController, this.owner);\n    },\n    didAttachController(layerController: GeoLayerController): void {\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.attachLayerTrait(layerTrait, layerController);\n      }\n      const layerView = layerController.geo.attachView();\n      this.attachLayerView(layerView, layerController);\n    },\n    willDetachController(layerController: GeoLayerController): void {\n      const layerView = layerController.geo.view;\n      if (layerView !== null) {\n        this.detachLayerView(layerView, layerController);\n      }\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.detachLayerTrait(layerTrait, layerController);\n      }\n    },\n    didDetachController(layerController: GeoLayerController): void {\n      this.owner.callObservers(\"controllerDidDetachLayer\", layerController, this.owner);\n    },\n    controllerWillAttachGeoTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerTrait\", layerTrait, layerController, this.owner);\n      this.attachLayerTrait(layerTrait, layerController);\n    },\n    controllerDidDetachGeoTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void {\n      this.detachLayerTrait(layerTrait, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerTrait\", layerTrait, layerController, this.owner);\n    },\n    attachLayerTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void {\n      // hook\n    },\n    detachLayerTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void {\n      this.deleteController(layerController);\n    },\n    controllerWillAttachGeoView(layerView: GeoView, layerController: GeoLayerController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerView\", layerView, layerController, this.owner);\n      this.attachLayerView(layerView, layerController);\n    },\n    controllerDidDetachGeoView(layerView: GeoView, layerController: GeoLayerController): void {\n      this.detachLayerView(layerView, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerView\", layerView, layerController, this.owner);\n    },\n    attachLayerView(layerView: GeoView, layerController: GeoLayerController): void {\n      const geoView = this.owner.geo.attachView();\n      layerController.geo.insertView(geoView);\n    },\n    detachLayerView(layerView: GeoView, layerController: GeoLayerController): void {\n      layerView.remove();\n    },\n    createController(layerTrait?: GeoLayerTrait): GeoLayerController {\n      if (layerTrait !== void 0) {\n        return layerTrait.createGeoController();\n      }\n      return super.createController();\n    },\n  })\n  readonly layers!: TraitViewControllerSet<this, GeoLayerTrait, GeoView, GeoLayerController> & Observes<GeoLayerController> & {\n    attachLayerTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void;\n    detachLayerTrait(layerTrait: GeoLayerTrait, layerController: GeoLayerController): void;\n    attachLayerView(layerView: GeoView, layerController: GeoLayerController): void;\n    detachLayerView(layerView: GeoView, layerController: GeoLayerController): void;\n  };\n\n  @TraitViewControllerSet({\n    controllerType: GeoFeatureController,\n    binds: true,\n    observes: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(featureController: GeoFeatureController): TraitViewRef<unknown, GeoFeatureTrait, GeoFeatureView> {\n      return featureController.geo;\n    },\n    willAttachController(featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerWillAttachFeature\", featureController, this.owner);\n    },\n    didAttachController(featureController: GeoFeatureController): void {\n      const featureTrait = featureController.geo.trait;\n      if (featureTrait !== null) {\n        this.attachFeatureTrait(featureTrait, featureController);\n      }\n      const featureView = featureController.geo.attachView();\n      this.attachFeatureView(featureView, featureController);\n    },\n    willDetachController(featureController: GeoFeatureController): void {\n      const featureView = featureController.geo.view;\n      if (featureView !== null) {\n        this.detachFeatureView(featureView, featureController);\n      }\n      const featureTrait = featureController.geo.trait;\n      if (featureTrait !== null) {\n        this.detachFeatureTrait(featureTrait, featureController);\n      }\n    },\n    didDetachController(featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidDetachFeature\", featureController, this.owner);\n    },\n    controllerWillAttachGeoTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerWillAttachFeatureTrait\", featureTrait, featureController, this.owner);\n      this.attachFeatureTrait(featureTrait, featureController);\n    },\n    controllerDidDetachGeoTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void {\n      this.detachFeatureTrait(featureTrait, featureController);\n      this.owner.callObservers(\"controllerDidDetachFeatureTrait\", featureTrait, featureController, this.owner);\n    },\n    attachFeatureTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void {\n      // hook\n    },\n    detachFeatureTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void {\n      this.deleteController(featureController);\n    },\n    controllerWillAttachGeoView(featureView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerWillAttachFeatureView\", featureView, featureController, this.owner);\n      this.attachFeatureView(featureView, featureController);\n    },\n    controllerDidDetachGeoView(featureView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.detachFeatureView(featureView, featureController);\n      this.owner.callObservers(\"controllerDidDetachFeatureView\", featureView, featureController, this.owner);\n    },\n    attachFeatureView(featureView: GeoFeatureView, featureController: GeoFeatureController): void {\n      const geoView = this.owner.geo.attachView();\n      featureController.geo.insertView(geoView);\n    },\n    detachFeatureView(featureView: GeoFeatureView, featureController: GeoFeatureController): void {\n      featureView.remove();\n    },\n    controllerDidSetGeoPerspective(geoPerspective: GeoPerspective | null, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidSetFeatureGeoPerspective\", geoPerspective, featureController, this.owner);\n    },\n    controllerDidEnterGeoView(geoView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidEnterFeatureView\", geoView, featureController, this.owner);\n    },\n    controllerDidLeaveGeoView(geoView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidLeaveFeatureView\", geoView, featureController, this.owner);\n    },\n    controllerDidPressGeoView(input: PositionGestureInput, event: Event | null, geoView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidPressFeatureView\", input, event, geoView, featureController, this.owner);\n    },\n    controllerDidLongPressGeoView(input: PositionGestureInput, geoView: GeoFeatureView, featureController: GeoFeatureController): void {\n      this.owner.callObservers(\"controllerDidLongPressFeatureView\", input, geoView, featureController, this.owner);\n    },\n    createController(featureTrait?: GeoFeatureTrait): GeoFeatureController {\n      if (featureTrait !== void 0) {\n        return featureTrait.createGeoController();\n      }\n      return super.createController();\n    },\n  })\n  readonly features!: TraitViewControllerSet<this, GeoFeatureTrait, GeoFeatureView, GeoFeatureController> & Observes<GeoFeatureController> & {\n    attachFeatureTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void,\n    detachFeatureTrait(featureTrait: GeoFeatureTrait, featureController: GeoFeatureController): void,\n    attachFeatureView(featureView: GeoFeatureView, featureController: GeoFeatureController): void,\n    detachFeatureView(featureView: GeoFeatureView, featureController: GeoFeatureController): void,\n  };\n\n  consumeLayers(): void {\n    // hook\n  }\n\n  unconsumeLayers(): void {\n    // hook\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.consumeLayers();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsRendererLike} from \"@swim/graphics\";\nimport type {GraphicsRendererType} from \"@swim/graphics\";\nimport {GraphicsRenderer} from \"@swim/graphics\";\nimport type {CanvasCompositeOperation} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {WebGLRenderer} from \"@swim/graphics\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\n\n/** @public */\nexport interface GeoRasterViewObserver<V extends GeoRasterView = GeoRasterView> extends GeoViewObserver<V> {\n  viewDidSetGeoAnchor?(geoAnchor: GeoPoint | null, view: V): void;\n}\n\n/** @public */\nexport class GeoRasterView extends GeoView {\n  constructor() {\n    super();\n    this.canvas = this.createCanvas();\n    this.ownRasterFrame = null;\n    (this.renderer as Mutable<typeof this.renderer>).value = this.createRenderer();\n  }\n\n  declare readonly observerType?: Class<GeoRasterViewObserver>;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoAnchor(newGeoCenter);\n    },\n    didSetValue(newGeoAnchor: GeoPoint | null, oldGeoAnchor: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoAnchor !== null ? newGeoAnchor.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectRaster();\n      }\n      this.owner.callObservers(\"viewDidSetGeoAnchor\", newGeoAnchor, this.owner);\n    },\n  })\n  readonly geoAnchor!: Animator<this, GeoPoint | null>;\n\n  @Animator({valueType: R2Point, value: R2Point.undefined()})\n  readonly viewAnchor!: Animator<this, R2Point | null>;\n\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsComposite})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsComposite})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsResize | View.NeedsLayout | View.NeedsRender | View.NeedsComposite})\n  readonly width!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsResize | View.NeedsLayout | View.NeedsRender | View.NeedsComposite})\n  readonly height!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1, updateFlags: View.NeedsComposite})\n  readonly opacity!: ThemeAnimator<this, number>;\n\n  @Animator({valueType: String, value: \"source-over\", updateFlags: View.NeedsComposite})\n  readonly compositeOperation!: Animator<this, CanvasCompositeOperation>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  /** @internal */\n  readonly canvas: HTMLCanvasElement;\n\n  @Property({\n    valueType: GraphicsRenderer,\n    value: null,\n    inherits: \"renderer\",\n  })\n  readonly compositor!: Property<this, GraphicsRenderer | null>;\n\n  @Property({\n    extends: true,\n    inherits: false,\n    updateFlags: View.NeedsRender | View.NeedsComposite,\n    fromLike(renderer: GraphicsRendererLike | null): GraphicsRenderer | null {\n      if (typeof renderer === \"string\") {\n        renderer = this.owner.createRenderer(renderer as GraphicsRendererType);\n      }\n      return renderer;\n    },\n  })\n  override readonly renderer!: Property<this, GraphicsRenderer | null>;\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.canvas.getContext(\"2d\");\n      if (context === null) {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n      return new CanvasRenderer(context, Transform.identity(), this.pixelRatio);\n    } else if (rendererType === \"webgl\") {\n      const context = this.canvas.getContext(\"webgl\");\n      if (context === null) {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n      return new WebGLRenderer(context, this.pixelRatio);\n    }\n    throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n  }\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    const rasterFlags = updateFlags & (View.NeedsRender | View.NeedsComposite);\n    if (rasterFlags !== 0) {\n      updateFlags |= View.NeedsComposite;\n      this.setFlags(this.flags | View.NeedsDisplay | View.NeedsComposite | rasterFlags);\n    }\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.ProcessMask) === 0 && (processFlags & (View.NeedsResize | View.NeedsProject)) === 0) {\n      processFlags = 0;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectRaster();\n  }\n\n  protected projectGeoAnchor(geoAnchor: GeoPoint | null): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.mounted || geoViewport === null) {\n      return;\n    }\n    const viewAnchor = geoAnchor !== null && geoAnchor.isDefined()\n                     ? geoViewport.project(geoAnchor)\n                     : null;\n    this.viewAnchor.setInterpolatedValue(this.viewAnchor.value, viewAnchor);\n    this.projectRaster();\n  }\n\n  protected projectRaster(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    let viewAnchor: R2Point | null;\n    if (this.viewAnchor.hasAffinity(Affinity.Intrinsic)) {\n      const geoAnchor = this.geoAnchor.value;\n      viewAnchor = geoAnchor !== null && geoAnchor.isDefined()\n                 ? geoViewport.project(geoAnchor)\n                 : null;\n      this.viewAnchor.setIntrinsic(viewAnchor);\n    } else {\n      viewAnchor = this.viewAnchor.value;\n    }\n    if (viewAnchor === null) {\n      this.setCulled(!this.viewFrame.intersects(this.rasterFrame));\n      return;\n    }\n    const viewFrame = this.viewFrame;\n    const viewWidth = viewFrame.width;\n    const viewHeight = viewFrame.height;\n    const viewSize = Math.min(viewWidth, viewHeight);\n    let width: Length | number | null = this.width.value;\n    width = width instanceof Length ? width.pxValue(viewSize) : viewWidth;\n    let height: Length | number | null = this.height.value;\n    height = height instanceof Length ? height.pxValue(viewSize) : viewHeight;\n    const x = viewAnchor.x - width * this.xAlign.getValue();\n    const y = viewAnchor.y - height * this.yAlign.getValue();\n    const rasterFrame = new R2Box(x, y, x + width, y + height);\n    this.setRasterFrame(rasterFrame);\n    this.setViewFrame(rasterFrame);\n    this.setCulled(!viewFrame.intersects(rasterFrame));\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.DisplayMask) !== 0) {\n      displayFlags |= View.NeedsComposite;\n    } else if ((displayFlags & View.NeedsComposite) !== 0) {\n      displayFlags = View.NeedsDisplay | View.NeedsComposite;\n    } else {\n      displayFlags = 0;\n    }\n    return displayFlags;\n  }\n\n  protected override onRender(): void {\n    const rasterFrame = this.rasterFrame;\n    this.resizeCanvas(this.canvas, rasterFrame);\n    this.resetRenderer(rasterFrame);\n    this.clearCanvas(rasterFrame);\n    super.onRender();\n  }\n\n  protected override didComposite(): void {\n    this.compositeImage();\n    super.didComposite();\n  }\n\n  /** @internal */\n  readonly ownRasterFrame: R2Box | null;\n\n  get rasterFrame(): R2Box {\n    let rasterFrame = this.ownRasterFrame;\n    if (rasterFrame === null) {\n      rasterFrame = this.deriveRasterFrame();\n    }\n    return rasterFrame;\n  }\n\n  /** @internal */\n  setRasterFrame(rasterFrame: R2Box | null): void {\n    (this as Mutable<this>).ownRasterFrame = rasterFrame;\n  }\n\n  protected deriveRasterFrame(): R2Box {\n    return this.deriveViewBounds();\n  }\n\n  protected createCanvas(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n  }\n\n  protected resizeCanvas(canvas: HTMLCanvasElement, rasterFrame: R2Box): void {\n    const pixelRatio = this.pixelRatio;\n    const newWidth = rasterFrame.width;\n    const newHeight = rasterFrame.height;\n    const newCanvasWidth = newWidth * pixelRatio;\n    const newCanvasHeight = newHeight * pixelRatio;\n    const oldCanvasWidth = canvas.width;\n    const oldCanvasHeight = canvas.height;\n    if (newCanvasWidth !== oldCanvasWidth || newCanvasHeight !== oldCanvasHeight) {\n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n      canvas.style.width = newWidth + \"px\";\n      canvas.style.height = newHeight + \"px\";\n    }\n  }\n\n  protected clearCanvas(rasterFrame: R2Box): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      renderer.context.clearRect(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  protected resetRenderer(rasterFrame: R2Box): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      const dx = rasterFrame.xMin * pixelRatio;\n      const dy = rasterFrame.yMin * pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, -dx, -dy);\n      renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, -dx, -dy));\n    } else if (renderer instanceof WebGLRenderer) {\n      renderer.context.viewport(rasterFrame.x, rasterFrame.y, rasterFrame.xMax, rasterFrame.yMax);\n    }\n  }\n\n  protected compositeImage(): void {\n    const compositor = this.compositor.value;\n    if (!(compositor instanceof CanvasRenderer)) {\n      return;\n    }\n    const rasterFrame = this.rasterFrame;\n    const canvas = this.canvas;\n    if (!rasterFrame.isDefined() || rasterFrame.width === 0 || rasterFrame.height === 0\n        || canvas.width === 0 || canvas.height === 0) {\n      return;\n    }\n    const context = compositor.context;\n    const globalAlpha = context.globalAlpha;\n    const globalCompositeOperation = context.globalCompositeOperation;\n    context.globalAlpha = this.opacity.getValue();\n    context.globalCompositeOperation = this.compositeOperation.getValue();\n    context.drawImage(canvas, rasterFrame.x, rasterFrame.y, rasterFrame.width, rasterFrame.height);\n    context.globalAlpha = globalAlpha;\n    context.globalCompositeOperation = globalCompositeOperation;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  static override readonly MountFlags: ViewFlags = GeoView.MountFlags | View.NeedsComposite;\n  static override readonly UncullFlags: ViewFlags = GeoView.UncullFlags | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = GeoView.UnhideFlags | View.NeedsComposite;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GeoTile} from \"@swim/geo\";\nimport type {GeoBox} from \"@swim/geo\";\nimport {GeoView} from \"./GeoView\";\n\n/** @public */\nexport class GeoTileView extends GeoView {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n    this.geoBounds = geoTile.bounds;\n  }\n\n  readonly geoTile: GeoTile;\n\n  override readonly geoBounds: GeoBox;\n\n  protected override setGeoBounds(newGeoBounds: GeoBox): void {\n    // immutable\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {GeoTile} from \"@swim/geo\";\nimport {Model} from \"@swim/model\";\nimport {TraitModelRef} from \"@swim/model\";\nimport type {GeoLayerTraitObserver} from \"./GeoLayerTrait\";\nimport {GeoLayerTrait} from \"./GeoLayerTrait\";\nimport type {GeoLayerController} from \"./GeoLayerController\";\nimport {GeoTileController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoTileTraitObserver<T extends GeoTileTrait = GeoTileTrait> extends GeoLayerTraitObserver<T> {\n}\n\n/** @public */\nexport class GeoTileTrait extends GeoLayerTrait {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n  }\n\n  declare readonly observerType?: Class<GeoTileTraitObserver>;\n\n  readonly geoTile: GeoTile;\n\n  @TraitModelRef({\n    get traitType(): typeof GeoTileTrait {\n      return GeoTileTrait;\n    },\n    traitKey: \"layer\",\n    modelType: Model,\n    modelKey: \"southWest\",\n    binds: true,\n    createTrait(): GeoTileTrait {\n      return this.owner.createTileTrait(this.owner.geoTile.southWestTile);\n    },\n  })\n  readonly southWest!: TraitModelRef<this, GeoTileTrait, Model>;\n\n  @TraitModelRef({\n    get traitType(): typeof GeoTileTrait {\n      return GeoTileTrait;\n    },\n    traitKey: \"layer\",\n    modelType: Model,\n    modelKey: \"northWest\",\n    binds: true,\n    createTrait(): GeoTileTrait {\n      return this.owner.createTileTrait(this.owner.geoTile.northWestTile);\n    },\n  })\n  readonly northWest!: TraitModelRef<this, GeoTileTrait, Model>;\n\n  @TraitModelRef({\n    get traitType(): typeof GeoTileTrait {\n      return GeoTileTrait;\n    },\n    traitKey: \"layer\",\n    modelType: Model,\n    modelKey: \"southEast\",\n    binds: true,\n    createTrait(): GeoTileTrait {\n      return this.owner.createTileTrait(this.owner.geoTile.southEastTile);\n    },\n  })\n  readonly southEast!: TraitModelRef<this, GeoTileTrait, Model>;\n\n  @TraitModelRef({\n    get traitType(): typeof GeoTileTrait {\n      return GeoTileTrait;\n    },\n    traitKey: \"layer\",\n    modelType: Model,\n    modelKey: \"northEast\",\n    binds: true,\n    createTrait(): GeoTileTrait {\n      return this.owner.createTileTrait(this.owner.geoTile.northEastTile);\n    },\n  })\n  readonly northEast!: TraitModelRef<this, GeoTileTrait, Model>;\n\n  protected createTileTrait(geoTile: GeoTile): GeoTileTrait {\n    return new (this.constructor as typeof GeoTileTrait)(geoTile);\n  }\n\n  override consumeLayers(): void {\n    this.southWest.insertModel();\n    this.northWest.insertModel();\n    this.southEast.insertModel();\n    this.northEast.insertModel();\n  }\n\n  override unconsumeLayers(): void {\n    this.southWest.deleteModel();\n    this.northWest.deleteModel();\n    this.southEast.deleteModel();\n    this.northEast.deleteModel();\n  }\n\n  override createGeoController(): GeoLayerController {\n    return new GeoTileController(this.geoTile);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {GeoTile} from \"@swim/geo\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoView} from \"./GeoView\";\nimport type {GeoLayerTrait} from \"./GeoLayerTrait\";\nimport type {GeoLayerControllerObserver} from \"./GeoLayerController\";\nimport {GeoLayerController} from \"./GeoLayerController\";\nimport {GeoTileView} from \"./GeoTileView\";\nimport {GeoTileTrait} from \"./GeoTileTrait\";\n\n/** @public */\nexport interface GeoTileControllerObserver<C extends GeoTileController = GeoTileController> extends GeoLayerControllerObserver<C> {\n  controllerWillAttachGeoTrait?(geoTrait: GeoTileTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoTileTrait, controller: C): void;\n\n  controllerWillAttachGeoView?(geoView: GeoTileView, controller: C): void;\n\n  controllerDidDetachGeoView?(geoView: GeoTileView, controller: C): void;\n}\n\n/** @public */\nexport class GeoTileController extends GeoLayerController {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n    this.visibleRange.setIntrinsic([geoTile.z, geoTile.z + 1]);\n    this.consumeRange.setIntrinsic([geoTile.z, geoTile.z + 1]);\n  }\n\n  declare readonly observerType?: Class<GeoTileControllerObserver>;\n\n  readonly geoTile: GeoTile;\n\n  @Property({extends: true, inherits: false})\n  override get visibleRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & GeoLayerController[\"visibleRange\"] {\n    return Property.getter();\n  }\n\n  @Property({extends: true, inherits: false})\n  override get consumeRange(): Property<this, readonly [minZoom: number, maxZoom: number]> & GeoLayerController[\"consumeRange\"] {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    extends: true,\n    traitType: GeoTileTrait,\n    viewType: GeoTileView,\n    createView(): GeoTileView {\n      return new GeoTileView(this.owner.geoTile);\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoTileTrait, GeoTileView> & GeoLayerController[\"geo\"] & Observes<GeoTileTrait>;\n\n  @TraitViewControllerSet({\n    extends: true,\n    createController(layerTrait?: GeoLayerTrait): GeoLayerController {\n      if (layerTrait instanceof GeoTileTrait) {\n        return this.owner.createTileController(layerTrait.geoTile, layerTrait);\n      }\n      return super.createController();\n    },\n  })\n  override readonly layers!: TraitViewControllerSet<this, GeoLayerTrait, GeoView, GeoLayerController> & GeoLayerController[\"layers\"];\n\n  @TraitViewControllerRef({\n    get controllerType(): typeof GeoTileController {\n      return GeoTileController;\n    },\n    controllerKey: true,\n    binds: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(tileController: GeoTileController): TraitViewRef<unknown, GeoTileTrait, GeoView> {\n      return tileController.geo;\n    },\n    createController(tileTrait?: GeoTileTrait): GeoTileController {\n      return this.owner.createTileController(this.owner.geoTile.southWestTile, tileTrait);\n    },\n  })\n  readonly southWest!: TraitViewControllerRef<this, GeoTileTrait, GeoView, GeoTileController>;\n\n  @TraitViewControllerRef({\n    get controllerType(): typeof GeoTileController {\n      return GeoTileController;\n    },\n    controllerKey: true,\n    binds: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(tileController: GeoTileController): TraitViewRef<unknown, GeoTileTrait, GeoView> {\n      return tileController.geo;\n    },\n    createController(tileTrait?: GeoTileTrait): GeoTileController {\n      return this.owner.createTileController(this.owner.geoTile.northWestTile, tileTrait);\n    },\n  })\n  readonly northWest!: TraitViewControllerRef<this, GeoTileTrait, GeoView, GeoTileController>;\n\n  @TraitViewControllerRef({\n    get controllerType(): typeof GeoTileController {\n      return GeoTileController;\n    },\n    controllerKey: true,\n    binds: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(tileController: GeoTileController): TraitViewRef<unknown, GeoTileTrait, GeoView> {\n      return tileController.geo;\n    },\n    createController(tileTrait?: GeoTileTrait): GeoTileController {\n      return this.owner.createTileController(this.owner.geoTile.southEastTile, tileTrait);\n    },\n  })\n  readonly southEast!: TraitViewControllerRef<this, GeoTileTrait, GeoView, GeoTileController>;\n\n  @TraitViewControllerRef({\n    get controllerType(): typeof GeoTileController {\n      return GeoTileController;\n    },\n    controllerKey: true,\n    binds: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.attachView();\n    },\n    getTraitViewRef(tileController: GeoTileController): TraitViewRef<unknown, GeoTileTrait, GeoView> {\n      return tileController.geo;\n    },\n    createController(tileTrait?: GeoTileTrait): GeoTileController {\n      return this.owner.createTileController(this.owner.geoTile.northEastTile, tileTrait);\n    },\n  })\n  readonly northEast!: TraitViewControllerRef<this, GeoTileTrait, GeoView, GeoTileController>;\n\n  protected createTileController(geoTile: GeoTile, tileTrait?: GeoTileTrait | null): GeoTileController {\n    return new (this.constructor as typeof GeoTileController)(geoTile);\n  }\n\n  override consumeLayers(): void {\n    this.southWest.insertController();\n    this.northWest.insertController();\n    this.southEast.insertController();\n    this.northEast.insertController();\n  }\n\n  override unconsumeLayers(): void {\n    this.southWest.deleteController();\n    this.northWest.deleteController();\n    this.southEast.deleteController();\n    this.northEast.deleteController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {R2Shape} from \"@swim/math\";\nimport {R2Curve} from \"@swim/math\";\nimport {R2Spline} from \"@swim/math\";\nimport {R2Path} from \"@swim/math\";\nimport {R2Group} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {GeoShape} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {FillView} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {GeoFeatureViewObserver} from \"./GeoFeatureView\";\nimport {GeoFeatureView} from \"./GeoFeatureView\";\n\n/** @public */\nexport interface GeoShapeViewObserver<V extends GeoShapeView = GeoShapeView> extends GeoFeatureViewObserver<V> {\n  viewDidSetGeoShape?(geoShape: GeoShape | null, view: V): void;\n}\n\n/** @public */\nexport class GeoShapeView extends GeoFeatureView implements FillView, StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  declare readonly observerType?: Class<GeoShapeViewObserver>;\n\n  @Animator({\n    valueType: GeoShape,\n    value: null,\n    didSetValue(geoShape: GeoShape | null): void {\n      if (geoShape !== null) {\n        this.owner.setGeoBounds(geoShape.bounds);\n        this.owner.geoCentroid.setIntrinsic(geoShape.bounds.center);\n      } else {\n        this.owner.setGeoBounds(GeoBox.undefined());\n        this.owner.geoCentroid.setIntrinsic(null);\n      }\n      if (this.mounted) {\n        this.owner.projectShape();\n      }\n      this.owner.callObservers(\"viewDidSetGeoShape\", geoShape, this.owner);\n    },\n  })\n  readonly geoShape!: Animator<this, GeoShape | null>;\n\n  @Animator({valueType: R2Shape, value: null})\n  readonly viewShape!: Animator<this, R2Shape | null>;\n\n  @Animator({valueType: GeoPoint, value: null})\n  readonly geoCentroid!: Animator<this, GeoPoint | null>;\n\n  @Animator({valueType: R2Point, value: null})\n  readonly viewCentroid!: Animator<this, R2Point | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, updateFlags: View.NeedsRender})\n  readonly fillOpacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({valueType: Color, value: null, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, updateFlags: View.NeedsRender})\n  readonly strokeOpacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  @Property({valueType: Number})\n  readonly strokeHitWidth!: Property<this, number | undefined>;\n\n  //@Property({valueType: Boolean, value: true})\n  //readonly clipViewport!: Property<this, boolean>;\n\n  //override cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n  //  if (!geoFrame.intersects(this.geoBounds)) {\n  //    this.setCulled(true);\n  //    return;\n  //  }\n  //  const viewFrame = this.viewFrame;\n  //  const bounds = this.viewBounds;\n  //  // Check if 9x9 view frame fully contains view bounds.\n  //  const contained = !this.clipViewport.value\n  //                 || viewFrame.xMin - 4 * viewFrame.width <= bounds.xMin\n  //                 && bounds.xMax <= viewFrame.xMax + 4 * viewFrame.width\n  //                 && viewFrame.yMin - 4 * viewFrame.height <= bounds.yMin\n  //                 && bounds.yMax <= viewFrame.yMax + 4 * viewFrame.height;\n  //  this.setCulled(!contained || !viewFrame.intersects(bounds));\n  //}\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectShape();\n  }\n\n  protected projectShape(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    let viewShape: R2Shape | null;\n    if (this.viewShape.hasAffinity(Affinity.Intrinsic)) {\n      const geoShape = this.geoShape.value;\n      viewShape = geoShape !== null && geoShape.isDefined() ? geoShape.project(geoViewport) : null;\n      this.viewShape.setIntrinsic(viewShape);\n    } else {\n      viewShape = this.viewShape.value;\n    }\n\n    if (this.viewCentroid.hasAffinity(Affinity.Intrinsic)) {\n      const geoCentroid = this.geoCentroid.value;\n      const viewCentroid = geoCentroid !== null && geoCentroid.isDefined()\n                         ? geoViewport.project(geoCentroid)\n                         : null;\n      this.viewCentroid.setIntrinsic(viewCentroid);\n    }\n\n    (this as Mutable<this>).viewBounds = viewShape !== null ? viewShape.bounds : this.viewFrame;\n\n    //this.cullGeoFrame(geoViewport.geoFrame);\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      const viewShape = this.viewShape.value;\n      if (viewShape !== null && viewShape.isDefined()) {\n        this.renderShape(viewShape, renderer.context, this.viewFrame);\n      }\n    }\n  }\n\n  protected renderShape(shape: R2Shape, context: PaintingContext, frame: R2Box): void {\n    if (shape instanceof R2Group) {\n      this.renderGroup(shape, context, frame);\n    } else if (shape instanceof R2Path) {\n      this.renderPath(shape, context, frame);\n    } else if (shape instanceof R2Spline) {\n      this.renderPath(R2Path.of(shape), context, frame);\n    } else if (shape instanceof R2Curve) {\n      this.renderPath(R2Path.open(shape), context, frame);\n    }\n  }\n\n  protected renderGroup(group: R2Group, context: PaintingContext, frame: R2Box): void {\n    const shapes = group.shapes;\n    for (let i = 0; i < shapes.length; i += 1) {\n      const shape = shapes[i]!;\n      if (shape.isDefined()) {\n        this.renderShape(shape, context, frame);\n      }\n    }\n  }\n\n  protected renderPath(path: R2Path, context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    path.draw(context);\n\n    let fill = this.fill.value;\n    if (fill !== null) {\n      const fillOpacity = this.fillOpacity.value;\n      if (fillOpacity !== void 0) {\n        fill = fill.alpha(fillOpacity);\n      }\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    let stroke = this.stroke.value;\n    const strokeWidth = this.strokeWidth.value;\n    if (stroke !== null && strokeWidth !== null) {\n      const strokeOpacity = this.strokeOpacity.value;\n      if (strokeOpacity !== void 0) {\n        stroke = stroke.alpha(strokeOpacity);\n      }\n      const size = Math.min(frame.width, frame.height);\n      context.lineWidth = strokeWidth.pxValue(size);\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const viewShape = this.viewShape.value;\n      if (viewShape !== null && viewShape.isDefined()) {\n        const p = renderer.transform.transform(x, y);\n        return this.hitTestShape(p.x, p.y, viewShape, renderer.context, this.viewFrame);\n      }\n    }\n    return null;\n  }\n\n  protected hitTestShape(x: number, y: number, shape: R2Shape,\n                         context: CanvasContext, frame: R2Box): GraphicsView | null {\n    if (shape instanceof R2Group) {\n      return this.hitTestGroup(x, y, shape, context, frame);\n    } else if (shape instanceof R2Path) {\n      return this.hitTestPath(x, y, shape, context, frame);\n    } else if (shape instanceof R2Spline) {\n      return this.hitTestPath(x, y, R2Path.of(shape), context, frame);\n    } else if (shape instanceof R2Curve) {\n      return this.hitTestPath(x, y, R2Path.open(shape), context, frame);\n    }\n    return null;\n  }\n\n  protected hitTestGroup(x: number, y: number, group: R2Group,\n                         context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const shapes = group.shapes;\n    for (let i = 0; i < shapes.length; i += 1) {\n      const shape = shapes[i]!;\n      if (shape.isDefined()) {\n        const hit = this.hitTestShape(x, y, shape, context, frame);\n        if (hit !== null) {\n          return hit;\n        }\n      }\n    }\n    return null;\n  }\n\n  protected hitTestPath(x: number, y: number, path: R2Path,\n                        context: CanvasContext, frame: R2Box): GraphicsView | null {\n    context.beginPath();\n    path.draw(context);\n\n    if (this.fill.value !== null && context.isPointInPath(x, y)) {\n      return this;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    let pointInStroke = false;\n    const strokeWidth = this.strokeWidth.value;\n    if (this.stroke.value !== null && strokeWidth !== null) {\n      const size = Math.min(frame.width, frame.height);\n      const hitWidth = Math.max(this.strokeHitWidth.getValueOr(0), strokeWidth.pxValue(size));\n      if (hitWidth !== 0) {\n        context.lineWidth = hitWidth;\n        pointInStroke = context.isPointInStroke(x, y);\n      }\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override get popoverFrame(): R2Box {\n    const inversePageTransform = this.pageTransform.inverse();\n    const viewCentroid = this.viewCentroid.value;\n    if (viewCentroid === null || !viewCentroid.isDefined()) {\n      return this.viewBounds.transform(inversePageTransform);\n    }\n    const px = inversePageTransform.transformX(viewCentroid.x, viewCentroid.y);\n    const py = inversePageTransform.transformY(viewCentroid.x, viewCentroid.y);\n    return new R2Box(px, py, px, py);\n  }\n\n  override readonly viewBounds!: R2Box;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {GeoShape} from \"@swim/geo\";\nimport type {NumberOrLook} from \"@swim/theme\";\nimport {NumberLook} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport type {GeoFeatureTraitObserver} from \"./GeoFeatureTrait\";\nimport {GeoFeatureTrait} from \"./GeoFeatureTrait\";\nimport type {GeoFeatureController} from \"./GeoFeatureController\";\nimport {GeoShapeController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoShapeTraitObserver<T extends GeoShapeTrait = GeoShapeTrait> extends GeoFeatureTraitObserver<T> {\n  traitDidSetGeoShape?(geoShape: GeoShape | null, trait: T): void;\n}\n\n/** @public */\nexport class GeoShapeTrait extends GeoFeatureTrait {\n  declare readonly observerType?: Class<GeoShapeTraitObserver>;\n\n  @Property({\n    valueType: GeoShape,\n    value: null,\n    didSetValue(geoShape: GeoShape | null): void {\n      this.owner.callObservers(\"traitDidSetGeoShape\", geoShape, this.owner);\n      this.owner.geoPerspective.setIntrinsic(geoShape);\n    },\n  })\n  readonly geoShape!: Property<this, GeoShape | null>;\n\n  @Property({valueType: ColorLook, value: null})\n  readonly fill!: Property<this, ColorOrLook | null>;\n\n  @Property({valueType: NumberLook})\n  readonly fillOpacity!: Property<this, NumberOrLook | undefined>;\n\n  @Property({valueType: ColorLook, value: null})\n  readonly stroke!: Property<this, ColorOrLook | null>;\n\n  @Property({valueType: NumberLook})\n  readonly strokeOpacity!: Property<this, NumberOrLook | undefined>;\n\n  @Property({valueType: Length, value: null})\n  readonly strokeWidth!: Property<this, Length | null>;\n\n  override createGeoController(): GeoFeatureController {\n    return new GeoShapeController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {GeoShape} from \"@swim/geo\";\nimport type {NumberOrLook} from \"@swim/theme\";\nimport {NumberLook} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {GeoShapeView} from \"./GeoShapeView\";\nimport {GeoShapeTrait} from \"./GeoShapeTrait\";\nimport type {GeoFeatureControllerObserver} from \"./GeoFeatureController\";\nimport {GeoFeatureController} from \"./GeoFeatureController\";\n\n/** @public */\nexport interface GeoShapeControllerObserver<C extends GeoShapeController = GeoShapeController> extends GeoFeatureControllerObserver<C> {\n  controllerWillAttachGeoTrait?(geoTrait: GeoShapeTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoShapeTrait, controller: C): void;\n\n  controllerWillAttachGeoView?(geoView: GeoShapeView, controller: C): void;\n\n  controllerDidDetachGeoView?(geoView: GeoShapeView, controller: C): void;\n\n  controllerDidSetGeoShape?(geoShape: GeoShape | null, controller: C): void;\n}\n\n/** @public */\nexport class GeoShapeController extends GeoFeatureController {\n  declare readonly observerType?: Class<GeoShapeControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    traitType: GeoShapeTrait,\n    initTrait(geoTrait: GeoShapeTrait): void {\n      super.initTrait(geoTrait);\n      this.owner.geoShape.bindInlet(geoTrait.geoShape);\n      this.owner.fill.bindInlet(geoTrait.fill);\n      this.owner.fillOpacity.bindInlet(geoTrait.fillOpacity);\n      this.owner.stroke.bindInlet(geoTrait.stroke);\n      this.owner.strokeOpacity.bindInlet(geoTrait.strokeOpacity);\n      this.owner.strokeWidth.bindInlet(geoTrait.strokeWidth);\n    },\n    deinitTrait(geoTrait: GeoShapeTrait): void {\n      this.owner.geoShape.unbindInlet(geoTrait.geoShape);\n      this.owner.fill.unbindInlet(geoTrait.fill);\n      this.owner.fillOpacity.unbindInlet(geoTrait.fillOpacity);\n      this.owner.stroke.unbindInlet(geoTrait.stroke);\n      this.owner.strokeOpacity.unbindInlet(geoTrait.strokeOpacity);\n      this.owner.strokeWidth.unbindInlet(geoTrait.strokeWidth);\n      super.deinitTrait(geoTrait);\n    },\n    viewType: GeoShapeView,\n    initView(geoView: GeoShapeView): void {\n      super.initView(geoView);\n      geoView.geoShape.bindInlet(this.owner.geoShape);\n      geoView.fill.bindInlet(this.owner.fill);\n      geoView.fillOpacity.bindInlet(this.owner.fillOpacity);\n      geoView.stroke.bindInlet(this.owner.stroke);\n      geoView.strokeOpacity.bindInlet(this.owner.strokeOpacity);\n      geoView.strokeWidth.bindInlet(this.owner.strokeWidth);\n    },\n    deinitView(geoView: GeoShapeView): void {\n      geoView.geoShape.unbindInlet(this.owner.geoShape);\n      geoView.fill.unbindInlet(this.owner.fill);\n      geoView.fillOpacity.unbindInlet(this.owner.fillOpacity);\n      geoView.stroke.unbindInlet(this.owner.stroke);\n      geoView.strokeOpacity.unbindInlet(this.owner.strokeOpacity);\n      geoView.strokeWidth.unbindInlet(this.owner.strokeWidth);\n      super.deinitView(geoView);\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoShapeTrait, GeoShapeView> & GeoFeatureController[\"geo\"];\n\n  @Property({\n    valueType: GeoShape,\n    value: null,\n    didSetValue(geoShape: GeoShape | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoShape\", geoShape, this.owner);\n      this.owner.geoPerspective.setIntrinsic(geoShape);\n    },\n  })\n  readonly geoShape!: Property<this, GeoShape | null>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    transition: true,\n  })\n  readonly fill!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: NumberLook,\n    transition: true,\n  })\n  readonly fillOpacity!: Property<this, NumberOrLook | undefined>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    transition: true,\n  })\n  readonly stroke!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: NumberLook,\n    transition: true,\n  })\n  readonly strokeOpacity!: Property<this, NumberOrLook | undefined>;\n\n  @Property({\n    valueType: Length,\n    value: null,\n    transition: true,\n  })\n  readonly strokeWidth!: Property<this, Length | null>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Segment} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {R2Circle} from \"@swim/math\";\nimport type {Transform} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {FillView} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\n\n/** @public */\nexport interface GeoCircleViewObserver<V extends GeoCircleView = GeoCircleView> extends GeoViewObserver<V> {\n  viewDidSetGeoCenter?(geoCenter: GeoPoint | null, view: V): void;\n}\n\n/** @public */\nexport class GeoCircleView extends GeoView implements FillView, StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  declare readonly observerType?: Class<GeoCircleViewObserver>;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectCircle();\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null>;\n\n  @Animator({valueType: R2Point, value: R2Point.undefined(), updateFlags: View.NeedsRender})\n  readonly viewCenter!: Animator<this, R2Point | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly radius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  @Property({valueType: Number})\n  readonly hitRadius!: Property<this, number | undefined>;\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectCircle();\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.mounted || geoViewport === null) {\n      return;\n    }\n    const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                     ? geoViewport.project(geoCenter)\n                     : null;\n    this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n    this.projectCircle();\n  }\n\n  protected projectCircle(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setIntrinsic(viewCenter);\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const r = this.radius.getValue().pxValue(size);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsCircle(new R2Circle(p0.x, p0.y, r)) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderCircle(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderCircle(context: PaintingContext, frame: R2Box): void {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return;\n    }\n\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.getValue().pxValue(size);\n\n    context.beginPath();\n    context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override renderGeoBounds(outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return R2Box.undefined();\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const radius = this.radius.getValue().pxValue(size);\n    return new R2Box(viewCenter.x - radius, viewCenter.y - radius,\n                     viewCenter.x + radius, viewCenter.y + radius);\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return this.pageBounds;\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n    const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n    const radius = this.radius.getValue().pxValue(size);\n    return new R2Box(px - radius, py - radius, px + radius, py + radius);\n  }\n\n  override get hitBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return this.viewBounds;\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const radius = this.radius.getValue().pxValue(size);\n    const hitRadius = Math.max(this.hitRadius.getValueOr(radius), radius);\n    return new R2Box(viewCenter.x - hitRadius, viewCenter.y - hitRadius,\n                     viewCenter.x + hitRadius, viewCenter.y + hitRadius);\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestCircle(x, y, renderer.context, this.viewFrame, renderer.transform);\n    }\n    return null;\n  }\n\n  protected hitTestCircle(x: number, y: number, context: CanvasContext,\n                          frame: R2Box, transform: Transform): GraphicsView | null {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return null;\n    }\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.getValue().pxValue(size);\n\n    if (this.fill.value !== null) {\n      const hitRadius = Math.max(this.hitRadius.getValueOr(radius), radius);\n      const dx = viewCenter.x - x;\n      const dy = viewCenter.y - y;\n      if (dx * dx + dy * dy < hitRadius * hitRadius) {\n        return this;\n      }\n    }\n\n    let strokeWidth: Length | null;\n    if (this.stroke.value === null || (strokeWidth = this.strokeWidth.value) === null) {\n      return null;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    const p = transform.transform(x, y);\n    context.beginPath();\n    context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n    context.lineWidth = strokeWidth.pxValue(size);\n    const pointInStroke = context.isPointInStroke(p.x, p.y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Segment} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {R2Circle} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {FillView} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {Arc} from \"@swim/graphics\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\n\n/** @public */\nexport interface GeoArcViewObserver<V extends GeoArcView = GeoArcView> extends GeoViewObserver<V> {\n  viewDidSetGeoCenter?(geoCenter: GeoPoint | null, view: V): void;\n}\n\n/** @public */\nexport class GeoArcView extends GeoView implements FillView, StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  declare readonly observerType?: Class<GeoArcViewObserver>;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectArc();\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null>;\n\n  @Animator({valueType: R2Point, value: R2Point.undefined(), updateFlags: View.NeedsRender})\n  readonly viewCenter!: Animator<this, R2Point | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  get value(): Arc | null {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return null;\n    }\n    return new Arc(viewCenter, this.innerRadius.value, this.outerRadius.value,\n                   this.startAngle.value, this.sweepAngle.value, this.padAngle.value,\n                   this.padRadius.value, this.cornerRadius.value);\n  }\n\n  get state(): Arc | null {\n    const viewCenter = this.viewCenter.state;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return null;\n    }\n    return new Arc(viewCenter, this.innerRadius.state, this.outerRadius.state,\n                   this.startAngle.state, this.sweepAngle.state, this.padAngle.state,\n                   this.padRadius.state, this.cornerRadius.state);\n  }\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectArc();\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.mounted || geoViewport === null) {\n      return;\n    }\n    const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                     ? geoViewport.project(geoCenter)\n                     : null;\n    this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n    this.projectArc();\n  }\n\n  protected projectArc(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setIntrinsic(viewCenter);\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const r = this.outerRadius.getValue().pxValue(size);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsCircle(new R2Circle(p0.x, p0.y, r)) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderArc(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderArc(context: PaintingContext, frame: R2Box): void {\n    const arc = this.value;\n    if (arc === null || !frame.isDefined()) {\n      return;\n    }\n\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    arc.draw(context, frame);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override renderGeoBounds(outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return R2Box.undefined();\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const radius = this.outerRadius.getValue().pxValue(size);\n    return new R2Box(viewCenter.x - radius, viewCenter.y - radius,\n                     viewCenter.x + radius, viewCenter.y + radius);\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return this.pageBounds;\n    }\n    const viewFrame = this.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n    const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n    const r = (this.innerRadius.getValue().pxValue(size) + this.outerRadius.getValue().pxValue(size)) / 2;\n    const a = this.startAngle.getValue().radValue() + this.sweepAngle.getValue().radValue() / 2;\n    const x = px + r * Math.cos(a);\n    const y = py + r * Math.sin(a);\n    return new R2Box(x, y, x, y);\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestArc(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestArc(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const arc = this.value;\n    if (arc === null) {\n      return null;\n    }\n    context.beginPath();\n    arc.draw(context, frame);\n    if (this.fill.value !== null && context.isPointInPath(x, y)) {\n      return this;\n    }\n    let strokeWidth: Length | null;\n    if (this.stroke.value === null || (strokeWidth = this.strokeWidth.value) === null) {\n      return null;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    const size = Math.min(frame.width, frame.height);\n    context.lineWidth = strokeWidth.pxValue(size);\n    const pointInStroke = context.isPointInStroke(x, y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\n\n/** @public */\nexport type GeoPointLabelPlacement = \"auto\" | \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport interface GeoPointViewObserver<V extends GeoPointView = GeoPointView> extends GeoViewObserver<V> {\n  viewDidSetGeoPoint?(geoPoint: GeoPoint, view: V): void;\n\n  viewWillAttachGeoLabel?(labelView: GraphicsView, view: V): void;\n\n  viewDidDetachGeoLabel?(labelView: GraphicsView, view: V): void;\n}\n\n/** @public */\nexport class GeoPointView extends GeoView {\n  declare readonly observerType?: Class<GeoPointViewObserver>;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: GeoPoint.origin(),\n    updateFlags: View.NeedsProject,\n    didSetValue(newGeoPoint: GeoPoint, oldGeoPoint: GeoPoint): void {\n      this.owner.setGeoBounds(newGeoPoint.bounds);\n      this.owner.callObservers(\"viewDidSetGeoPoint\", newGeoPoint, this.owner);\n    },\n  })\n  readonly geoPoint!: Animator<this, GeoPoint>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin()})\n  readonly viewPoint!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Length, value: null})\n  readonly radius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Color, value: null})\n  readonly color!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number})\n  readonly opacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({valueType: Length, value: null})\n  readonly labelPadding!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @Property({valueType: Number})\n  readonly hitRadius!: Property<this, number | undefined>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachGeoLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachGeoLabel\", labelView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly label!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @Property({valueType: String, value: \"auto\"})\n  readonly labelPlacement!: Property<this, GeoPointLabelPlacement>;\n\n  isGradientStop(): boolean {\n    return this.color.value !== null || this.opacity.value !== void 0;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.NeedsProject) !== 0 && this.label.view !== null) {\n      this.requireUpdate(View.NeedsLayout);\n    }\n    return processFlags;\n  }\n\n  protected override onProject(): void {\n    super.onProject();\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    if (this.viewPoint.hasAffinity(Affinity.Intrinsic)) {\n      const viewPoint = geoViewport.project(this.geoPoint.getValue());\n      this.viewPoint.setInterpolatedValue(viewPoint, viewPoint);\n    }\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      this.layoutLabel(labelView, this.viewFrame);\n    }\n  }\n\n  protected layoutLabel(labelView: GraphicsView, frame: R2Box): void {\n    const placement = this.labelPlacement.value;\n    // TODO: auto placement\n\n    const size = Math.min(frame.width, frame.height);\n    const padding = this.labelPadding.getValue().pxValue(size);\n    const {x, y} = this.viewPoint.getValue();\n    let y1 = y;\n    if (placement === \"top\") {\n      y1 -= padding;\n    } else if (placement === \"bottom\") {\n      y1 += padding;\n    }\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.setIntrinsic({\n        textAlign: \"center\",\n        textBaseline: \"bottom\",\n        textOrigin: new R2Point(x, y1),\n      });\n    }\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  override get hitBounds(): R2Box {\n    const {x, y} = this.viewPoint.getValue();\n    const hitRadius = this.hitRadius.getValueOr(0);\n    return new R2Box(x - hitRadius, y - hitRadius, x + hitRadius, y + hitRadius);\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestPoint(x, y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPoint(hx: number, hy: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const {x, y} = this.viewPoint.getValue();\n    const radius = this.radius.value;\n\n    let hitRadius = this.hitRadius.getValueOr(0);\n    if (radius !== null) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = x - hx;\n    const dy = y - hy;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n}\nObject.defineProperty(GeoPointView.prototype, \"viewBounds\", {\n  get(this: GeoPointView): R2Box {\n    const {x, y} = this.viewPoint.getValue();\n    return new R2Box(x, y, x, y);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\nimport type {GeoRippleOptions} from \"./GeoRippleView\";\nimport {GeoRippleView} from \"./GeoRippleView\";\nimport {GeoPointView} from \"./GeoPointView\";\n\n/** @public */\nexport interface GeoPlotViewObserver<V extends GeoPlotView = GeoPlotView> extends GeoViewObserver<V> {\n}\n\n/** @public */\nexport class GeoPlotView extends GeoView implements StrokeView {\n  constructor() {\n    super();\n    this.gradientStops = 0;\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  declare readonly observerType?: Class<GeoPlotViewObserver>;\n\n  points(): readonly GeoPointView[] {\n    const points: GeoPointView[] = [];\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        points.push(child);\n      }\n      child = child.nextSibling;\n    }\n    return points;\n  }\n\n  appendPoint(point: GeoPointView, key?: string): GeoPointView {\n    this.appendChild(point, key);\n    return point;\n  }\n\n  setPoint(key: string, point: GeoPointView): GeoPointView {\n    this.setChild(key, point);\n    return point;\n  }\n\n  @Property({valueType: GeoPoint, value: GeoPoint.origin()})\n  readonly geoCentroid!: Property<this, GeoPoint>;\n\n  @Property({valueType: R2Point, value: R2Point.origin()})\n  readonly viewCentroid!: Property<this, R2Point>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @Property({valueType: Number})\n  readonly hitWidth!: Property<this, number | undefined>;\n\n  /** @internal */\n  readonly gradientStops: number;\n\n  protected override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    if (childView instanceof GeoPointView) {\n      this.onInsertPoint(childView);\n    }\n  }\n\n  protected onInsertPoint(childView: GeoPointView): void {\n    childView.requireUpdate(View.NeedsAnimate | View.NeedsProject);\n  }\n\n  protected override didProject(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    const oldGeoBounds = this.geoBounds;\n    let lngMin = Infinity;\n    let latMin = Infinity;\n    let lngMax = -Infinity;\n    let latMax = -Infinity;\n    let lngMid = 0;\n    let latMid = 0;\n    let xMin = Infinity;\n    let yMin = Infinity;\n    let xMax = -Infinity;\n    let yMax = -Infinity;\n    let xMid = 0;\n    let yMid = 0;\n    let invalid = false;\n    let gradientStops = 0;\n    let pointCount = 0;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        const {lng, lat} = child.geoPoint.getValue();\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        const {x, y} = child.viewPoint.getValue();\n        xMin = Math.min(xMin, x);\n        yMin = Math.min(yMin, y);\n        xMax = Math.max(x, xMax);\n        yMax = Math.max(y, yMax);\n        xMid += x;\n        yMid += y;\n        invalid = invalid || !isFinite(x) || !isFinite(y);\n        if (child.isGradientStop()) {\n          gradientStops += 1;\n        }\n        pointCount += 1;\n      }\n      child = child.nextSibling;\n    }\n    if (invalid || pointCount === 0) {\n      this.geoCentroid.setIntrinsic(GeoPoint.origin());\n      (this as Mutable<this>).geoBounds = GeoBox.undefined();\n      this.viewCentroid.setIntrinsic(R2Point.origin());\n      (this as Mutable<this>).viewBounds = R2Box.undefined();\n      this.setCulled(true);\n    } else {\n      lngMid /= pointCount;\n      latMid /= pointCount;\n      this.geoCentroid.setIntrinsic(new GeoPoint(lngMid, latMid));\n      (this as Mutable<this>).geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      xMid /= pointCount;\n      yMid /= pointCount;\n      this.viewCentroid.setIntrinsic(new R2Point(xMid, yMid));\n      (this as Mutable<this>).viewBounds = new R2Box(xMin, yMin, xMax, yMax);\n      this.cullGeoFrame(geoViewport.geoFrame);\n    }\n    (this as Mutable<this>).gradientStops = gradientStops;\n    const newGeoBounds = this.geoBounds;\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    super.didProject();\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      if (this.gradientStops !== 0 && renderer instanceof CanvasRenderer) {\n        this.renderPlotGradient(renderer.context, this.viewFrame);\n      } else {\n        this.renderPlotStroke(renderer.context, this.viewFrame);\n      }\n    }\n  }\n\n  protected renderPlotStroke(context: PaintingContext, frame: R2Box): void {\n    const stroke = this.stroke.value;\n    if (stroke === null) {\n      return;\n    }\n\n    let pointCount = 0;\n    context.beginPath();\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        const {x, y} = child.viewPoint.getValue();\n        if (pointCount === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n      child = child.nextSibling;\n    }\n    if (pointCount === 0) {\n      return;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const size = Math.min(frame.width, frame.height);\n    const strokeWidth = this.strokeWidth.getValue().pxValue(size);\n    context.lineWidth = strokeWidth;\n    context.strokeStyle = stroke.toString();\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected renderPlotGradient(context: CanvasContext, frame: R2Box): void {\n    const stroke = this.stroke.getValue();\n    const size = Math.min(frame.width, frame.height);\n    const strokeWidth = this.strokeWidth.getValue().pxValue(size);\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    let p0: GeoPointView | undefined;\n    let p1 = this.firstChild;\n    while (p1 !== null) {\n      if (p1 instanceof GeoPointView) {\n        if (p0 !== void 0) {\n          const x0 = p0.viewPoint.getValue().x;\n          const y0 = p0.viewPoint.getValue().y;\n          const x1 = p1.viewPoint.getValue().x;\n          const y1 = p1.viewPoint.getValue().y;\n          const gradient = context.createLinearGradient(x0, y0, x1, y1);\n\n          let color = p0.color.getValueOr(stroke);\n          let opacity = p0.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n\n          color = p1.color.getValueOr(stroke);\n          opacity = p1.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(1, color.toString());\n\n          context.beginPath();\n          context.moveTo(x0, y0);\n          context.lineTo(x1, y1);\n          context.lineWidth = strokeWidth;\n          context.strokeStyle = gradient;\n          context.stroke();\n        }\n        p0 = p1;\n      }\n      p1 = p1.nextSibling;\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCentroid = this.viewCentroid.value;\n    const inversePageTransform = this.pageTransform.inverse();\n    const px = inversePageTransform.transformX(viewCentroid.x, viewCentroid.y);\n    const py = inversePageTransform.transformY(viewCentroid.x, viewCentroid.y);\n    return new R2Box(px, py, px, py);\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestPlot(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPlot(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    let pointCount = 0;\n\n    context.beginPath();\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        const {x, y} = child.viewPoint.getValue();\n        if (pointCount === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n      child = child.nextSibling;\n    }\n    if (pointCount === 0) {\n      return null;\n    }\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    let hitWidth = this.hitWidth.getValueOr(0);\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== null) {\n      const size = Math.min(frame.width, frame.height);\n      hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n    }\n    context.lineWidth = hitWidth;\n    const pointInStroke = context.isPointInStroke(x, y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    return pointInStroke ? this : null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {Fastener} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Segment} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {Sprite} from \"@swim/graphics\";\nimport {Graphics} from \"@swim/graphics\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {Icon} from \"@swim/graphics\";\nimport type {IconView} from \"@swim/graphics\";\nimport {IconGraphicsAnimator} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {GeoFeatureViewObserver} from \"./GeoFeatureView\";\nimport {GeoFeatureView} from \"./GeoFeatureView\";\n\n/** @public */\nexport interface GeoIconViewObserver<V extends GeoIconView = GeoIconView> extends GeoFeatureViewObserver<V> {\n  viewDidSetGeoCenter?(geoCenter: GeoPoint | null, view: V): void;\n\n  viewDidSetGraphics?(graphics: Graphics | null, view: V): void;\n}\n\n/** @public */\nexport class GeoIconView extends GeoFeatureView implements IconView {\n  constructor() {\n    super();\n    this.sprite = null;\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  declare readonly observerType?: Class<GeoIconViewObserver>;\n\n  /** @internal */\n  sprite: Sprite | null;\n\n  @Animator({\n    valueType: GeoPoint,\n    value: null,\n    didSetState(geoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(geoCenter);\n    },\n    didSetValue(geoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(geoCenter !== null ? geoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectIcon();\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", geoCenter, this.owner);\n    },\n    decohere(inlet?: Fastener<any, any, any>): void {\n      if (this.owner.culled) {\n        this.recohere(performance.now());\n      } else {\n        super.decohere(inlet);\n      }\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null>;\n\n  @Animator({valueType: R2Point, value: R2Point.undefined(), updateFlags: View.NeedsComposite})\n  readonly viewCenter!: Animator<this, R2Point | null>;\n\n  /** @override */\n  @Animator({\n    valueType: IconLayout,\n    value: null,\n    updateFlags: View.NeedsProject | View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n  })\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n    didSetValue(graphics: Graphics | null): void {\n      this.owner.callObservers(\"viewDidSetGraphics\", graphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.graphics.derived) {\n      return;\n    }\n    const oldGraphics = this.graphics.value;\n    if (!(oldGraphics instanceof Icon)) {\n      return;\n    }\n    const newGraphics = oldGraphics.withTheme(theme, mood);\n    this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n  }\n\n  protected override onProject(): void {\n    super.onProject();\n    this.projectIcon();\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    const geoViewport = this.geoViewport.value;\n    if (!this.mounted || geoViewport === null) {\n      return;\n    }\n    const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                     ? geoViewport.project(geoCenter)\n                     : null;\n    this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n    this.projectIcon();\n  }\n\n  protected projectIcon(): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setIntrinsic(viewCenter);\n    }\n    const viewFrame = this.viewFrame;\n    (this as Mutable<GeoIconView>).viewBounds = this.deriveViewBounds(viewFrame);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsBox(this.viewBounds) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRasterize(): void {\n    super.onRasterize();\n    if (!this.hidden && !this.culled) {\n      this.rasterizeIcon(this.viewBounds);\n    }\n  }\n\n  protected rasterizeIcon(frame: R2Box): void {\n    let sprite = this.sprite;\n    const graphics = this.graphics.value;\n    if (graphics !== null && frame.isDefined()) {\n      const width = frame.width;\n      const height = frame.height;\n      if (sprite !== null && (sprite.width < width || sprite.height < height ||\n                             (width < sprite.width / 2 && height < sprite.height / 2))) {\n        this.sprite = null;\n        sprite.release();\n        sprite = null;\n      }\n      if (sprite === null) {\n        sprite = this.sprites.getService().acquireSprite(width, height);\n        this.sprite = sprite;\n      }\n\n      const renderer = sprite.getRenderer();\n      const context = renderer.context;\n      context.clearRect(0, 0, sprite.width, sprite.height);\n\n      context.beginPath();\n      graphics.render(renderer, new R2Box(0, 0, width, height));\n    } else if (sprite !== null) {\n      this.sprite = null;\n      sprite.release();\n    }\n  }\n\n  protected override onComposite(): void {\n    super.onComposite();\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.compositeIcon(renderer, this.viewBounds);\n    }\n  }\n\n  protected compositeIcon(renderer: CanvasRenderer, frame: R2Box): void {\n    const sprite = this.sprite;\n    if (sprite !== null) {\n      sprite.draw(renderer.context, frame);\n    }\n  }\n\n  protected override renderGeoBounds(outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(viewFrame?: R2Box): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return R2Box.undefined();\n    } else if (viewFrame === void 0) {\n      viewFrame = this.viewFrame;\n    }\n    const viewSize = Math.min(viewFrame.width, viewFrame.height);\n    const iconLayout = this.iconLayout.value;\n    const iconWidth = iconLayout !== null ? iconLayout.width.pxValue(viewSize) : viewSize;\n    const iconHeight = iconLayout !== null ? iconLayout.height.pxValue(viewSize) : viewSize;\n    const xAlign = iconLayout !== null ? iconLayout.xAlign : 0.5;\n    const yAlign = iconLayout !== null ? iconLayout.yAlign : 0.5;\n    const x = viewCenter.x - iconWidth * xAlign;\n    const y = viewCenter.y - iconHeight * yAlign;\n    return new R2Box(x, y, x + iconWidth, y + iconHeight);\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter === null || !viewCenter.isDefined()) {\n      return this.pageBounds;\n    }\n    const viewFrame = this.viewFrame;\n    const viewSize = Math.min(viewFrame.width, viewFrame.height);\n    const iconLayout = this.iconLayout.value;\n    const iconWidth = iconLayout !== null ? iconLayout.width.pxValue(viewSize) : viewSize;\n    const iconHeight = iconLayout !== null ? iconLayout.height.pxValue(viewSize) : viewSize;\n    const xAlign = iconLayout !== null ? iconLayout.xAlign : 0.5;\n    const yAlign = iconLayout !== null ? iconLayout.yAlign : 0.5;\n    const inversePageTransform = this.pageTransform.inverse();\n    const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n    const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n    const x = px - iconWidth * xAlign;\n    const y = py - iconHeight * yAlign;\n    return new R2Box(x, y, x + iconWidth, y + iconHeight);\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestIcon(x, y, renderer, this.viewBounds);\n    }\n    return null;\n  }\n\n  protected hitTestIcon(x: number, y: number, renderer: CanvasRenderer, frame: R2Box): GraphicsView | null {\n    // TODO: icon hit test mode\n    if (this.hitBounds.contains(x, y)) {\n      return this;\n    }\n    //const graphics = this.graphics.value;\n    //if (graphics === null) {\n    //  return null;\n    //}\n    //const context = renderer.context;\n    //context.beginPath();\n    //graphics.render(renderer, frame);\n    //if (context.isPointInPath(x * renderer.pixelRatio, y * renderer.pixelRatio)) {\n    //  return this;\n    //}\n    return null;\n  }\n\n  protected override onUnmount(): void {\n    super.onUnmount();\n    const sprite = this.sprite;\n    if (sprite !== null) {\n      this.sprite = null;\n      sprite.release();\n    }\n  }\n\n  static override readonly MountFlags: ViewFlags = GeoFeatureView.MountFlags | View.NeedsRasterize;\n  static override readonly UncullFlags: ViewFlags = GeoFeatureView.UncullFlags | View.NeedsRasterize;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport type {GeoFeatureTraitObserver} from \"./GeoFeatureTrait\";\nimport {GeoFeatureTrait} from \"./GeoFeatureTrait\";\nimport type {GeoFeatureController} from \"./GeoFeatureController\";\nimport {GeoIconController} from \"./\"; // forward import\n\n/** @public */\nexport interface GeoIconTraitObserver<T extends GeoIconTrait = GeoIconTrait> extends GeoFeatureTraitObserver<T> {\n  traitDidSetGeoCenter?(geoCenter: GeoPoint | null, trait: T): void;\n\n  traitDidSetIconLayout?(iconLayout: IconLayout | null, trait: T): void;\n\n  traitDidSetGraphics?(graphics: Graphics | null, trait: T): void;\n}\n\n/** @public */\nexport class GeoIconTrait extends GeoFeatureTrait {\n  declare readonly observerType?: Class<GeoIconTraitObserver>;\n\n  @Property({\n    valueType: GeoPoint,\n    value: null,\n    didSetValue(geoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"traitDidSetGeoCenter\", geoCenter, this.owner);\n      this.owner.geoPerspective.setIntrinsic(geoCenter);\n    },\n  })\n  readonly geoCenter!: Property<this, GeoPoint | null>;\n\n  @Property({\n    valueType: IconLayout,\n    value: null,\n    didSetValue(iconLayout: IconLayout | null): void {\n      this.owner.callObservers(\"traitDidSetIconLayout\", iconLayout, this.owner);\n    },\n  })\n  readonly iconLayout!: Property<this, IconLayout | null>;\n\n  @Property({valueType: ColorLook, value: null})\n  readonly iconColor!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n    didSetValue(graphics: Graphics | null): void {\n      this.owner.callObservers(\"traitDidSetGraphics\", graphics, this.owner);\n    },\n  })\n  readonly graphics!: Property<this, Graphics | null>;\n\n  override createGeoController(): GeoFeatureController {\n    return new GeoIconController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {GeoFeatureControllerObserver} from \"./GeoFeatureController\";\nimport {GeoFeatureController} from \"./GeoFeatureController\";\nimport {GeoIconView} from \"./GeoIconView\";\nimport {GeoIconTrait} from \"./GeoIconTrait\";\n\n/** @public */\nexport interface GeoIconControllerObserver<C extends GeoIconController = GeoIconController> extends GeoFeatureControllerObserver<C> {\n  controllerWillAttachGeoTrait?(geoTrait: GeoIconTrait, controller: C): void;\n\n  controllerDidDetachGeoTrait?(geoTrait: GeoIconTrait, controller: C): void;\n\n  controllerWillAttachGeoView?(geoView: GeoIconView, controller: C): void;\n\n  controllerDidDetachGeoView?(geoView: GeoIconView, controller: C): void;\n\n  controllerDidSetGeoCenter?(geoCenter: GeoPoint | null, controller: C): void;\n}\n\n/** @public */\nexport class GeoIconController extends GeoFeatureController {\n  declare readonly observerType?: Class<GeoIconControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    traitType: GeoIconTrait,\n    initTrait(geoTrait: GeoIconTrait): void {\n      super.initTrait(geoTrait);\n      this.owner.geoPerspective.bindInlet(geoTrait.geoPerspective);\n      this.owner.geoCenter.bindInlet(geoTrait.geoCenter);\n      this.owner.iconLayout.bindInlet(geoTrait.iconLayout);\n      this.owner.iconColor.bindInlet(geoTrait.iconColor);\n      this.owner.graphics.bindInlet(geoTrait.graphics);\n    },\n    deinitTrait(geoTrait: GeoIconTrait): void {\n      this.owner.geoPerspective.unbindInlet(geoTrait.geoPerspective);\n      this.owner.geoCenter.unbindInlet(geoTrait.geoCenter);\n      this.owner.iconLayout.unbindInlet(geoTrait.iconLayout);\n      this.owner.iconColor.unbindInlet(geoTrait.iconColor);\n      this.owner.graphics.unbindInlet(geoTrait.graphics);\n      super.deinitTrait(geoTrait);\n    },\n    viewType: GeoIconView,\n    initView(geoView: GeoIconView): void {\n      super.initView(geoView);\n      geoView.geoCenter.bindInlet(this.owner.geoCenter);\n      geoView.iconLayout.bindInlet(this.owner.iconLayout);\n      geoView.iconColor.bindInlet(this.owner.iconColor);\n      geoView.graphics.bindInlet(this.owner.graphics);\n    },\n    deinitView(geoView: GeoIconView): void {\n      geoView.geoCenter.unbindInlet(this.owner.geoCenter);\n      geoView.iconLayout.unbindInlet(this.owner.iconLayout);\n      geoView.iconColor.unbindInlet(this.owner.iconColor);\n      geoView.graphics.unbindInlet(this.owner.graphics);\n      super.deinitView(geoView);\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoIconTrait, GeoIconView> & GeoFeatureController[\"geo\"];\n\n  @Property({\n    valueType: GeoPoint,\n    value: null,\n    transition: true,\n    didSetValue(geoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoCenter\", geoCenter, this.owner);\n      this.owner.geoPerspective.setIntrinsic(geoCenter);\n    },\n  })\n  readonly geoCenter!: Property<this, GeoPoint | null>;\n\n  @Property({\n    valueType: IconLayout,\n    value: null,\n  })\n  readonly iconLayout!: Property<this, IconLayout | null>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    transition: true,\n  })\n  readonly iconColor!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n  })\n  readonly graphics!: Property<this, Graphics | null>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"./GeoPerspective\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {GeoViewObserver} from \"./GeoView\";\nimport {GeoView} from \"./GeoView\";\n\n/** @public */\nexport interface MapViewObserver<V extends MapView = MapView> extends GeoViewObserver<V> {\n  viewWillSetGeoViewport?(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null, view: V): void;\n\n  viewDidSetGeoViewport?(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null, view: V): void;\n\n  viewWillAttachMapCanvas?(mapCanvasView: CanvasView, view: V): void;\n\n  viewDidDetachMapCanvas?(mapCanvasView: CanvasView, view: V): void;\n\n  viewWillAttachMapContainer?(mapContainerView: HtmlView, view: V): void;\n\n  viewDidDetachMapContainer?(mapContainerView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport abstract class MapView extends GeoView {\n  declare readonly observerType?: Class<MapViewObserver>;\n\n  @Property({\n    extends: true,\n    inherits: false,\n    willSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      this.owner.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      this.owner.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & GeoView[\"geoViewport\"];\n\n  abstract moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void;\n\n  @ViewRef({\n    viewType: CanvasView,\n    willAttachView(canvasView: CanvasView): void {\n      this.owner.callObservers(\"viewWillAttachMapCanvas\", canvasView, this.owner);\n    },\n    didDetachView(canvasView: CanvasView): void {\n      this.owner.callObservers(\"viewDidDetachMapCanvas\", canvasView, this.owner);\n    },\n  })\n  readonly canvas!: ViewRef<this, CanvasView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(containerView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachMapContainer\", containerView, this.owner);\n    },\n    didDetachView(containerView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachMapContainer\", containerView, this.owner);\n    },\n  })\n  readonly container!: ViewRef<this, HtmlView>;\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsProject;\n    }\n    return processFlags;\n  }\n\n  override get geoFrame(): GeoBox {\n    const geoViewport = this.geoViewport.value;\n    return geoViewport !== null ? geoViewport.geoFrame : GeoBox.globe();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {GeoTrait} from \"./GeoTrait\";\nimport {GeoPerspective} from \"./GeoPerspective\";\n\n/** @public */\nexport interface MapTraitObserver<T extends MapTrait = MapTrait> extends TraitObserver<T> {\n  traitDidSetGeoPerspective?(geoPerspective: GeoPerspective | null, trait: T): void;\n\n  traitWillAttachLayer?(layerTrait: GeoTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachLayer?(layerTrait: GeoTrait, trait: T): void;\n}\n\n/** @public */\nexport class MapTrait extends Trait {\n  declare readonly observerType?: Class<MapTraitObserver>;\n\n  @Property({\n    valueType: GeoPerspective,\n    value: null,\n    didSetValue(geoPerspective: GeoPerspective | null): void {\n      this.owner.callObservers(\"traitDidSetGeoPerspective\", geoPerspective, this.owner);\n    },\n  })\n  readonly geoPerspective!: Property<this, GeoPerspective | null>;\n\n  @TraitSet({\n    traitType: GeoTrait,\n    binds: true,\n    willAttachTrait(newLayerTrait: GeoTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachLayer\", newLayerTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(layerTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        layerTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(layerTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        layerTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(newLayerTrait: GeoTrait): void {\n      this.owner.callObservers(\"traitDidDetachLayer\", newLayerTrait, this.owner);\n    },\n    detectModel(model: Model): GeoTrait | null {\n      return model.getTrait(GeoTrait);\n    },\n    detectTrait(trait: Trait): GeoTrait | null {\n      return null;\n    },\n  })\n  readonly layers!: TraitSet<this, GeoTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.layers.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.layers.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {CanvasView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoPerspective} from \"./GeoPerspective\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {GeoView} from \"./GeoView\";\nimport type {GeoTrait} from \"./GeoTrait\";\nimport {GeoController} from \"./GeoController\";\nimport {MapView} from \"./MapView\";\nimport {MapTrait} from \"./MapTrait\";\n\n/** @public */\nexport interface MapControllerObserver<C extends MapController = MapController> extends ControllerObserver<C> {\n  controllerWillAttachMapTrait?(mapTrait: MapTrait, controller: C): void;\n\n  controllerDidDetachMapTrait?(mapTrait: MapTrait, controller: C): void;\n\n  controllerWillAttachMapView?(mapView: MapView, controller: C): void;\n\n  controllerDidDetachMapView?(mapView: MapView, controller: C): void;\n\n  controllerWillAttachMapCanvasView?(mapCanvasView: CanvasView, controller: C): void;\n\n  controllerDidDetachMapCanvasView?(mapCanvasView: CanvasView, controller: C): void;\n\n  controllerWillAttachMapContainerView?(mapContainerView: HtmlView, controller: C): void;\n\n  controllerDidDetachMapContainerView?(mapContainerView: HtmlView, controller: C): void;\n\n  controllerWillSetGeoViewport?(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport, controller: C): void;\n\n  controllerDidSetGeoViewport?(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport, controller: C): void;\n\n  controllerWillAttachLayer?(layerController: GeoController, controller: C): void;\n\n  controllerDidDetachLayer?(layerController: GeoController, controller: C): void;\n\n  controllerWillAttachLayerTrait?(layerTrait: GeoTrait, layerController: GeoController, controller: C): void;\n\n  controllerDidDetachLayerTrait?(layerTrait: GeoTrait, layerController: GeoController, controller: C): void;\n\n  controllerWillAttachLayerView?(layerView: GeoView, layerController: GeoController, controller: C): void;\n\n  controllerDidDetachLayerView?(layerView: GeoView, layerController: GeoController, controller: C): void;\n\n  controllerDidSetLayerGeoPerspective?(geoPerspective: GeoPerspective | null, layerController: GeoController, controller: C): void;\n}\n\n/** @public */\nexport class MapController extends Controller {\n  declare readonly observerType?: Class<MapControllerObserver>;\n\n  protected createMapView(containerView: HtmlView): MapView | null {\n    return null;\n  }\n\n  protected setGeoPerspective(geoPerspective: GeoPerspective | null): void {\n    if (geoPerspective === null) {\n      return;\n    }\n    const mapView = this.map.view;\n    if (mapView !== null) {\n      mapView.moveTo(geoPerspective);\n    }\n  }\n\n  @TraitViewRef({\n    consumed: true,\n    traitType: MapTrait,\n    observesTrait: true,\n    willAttachTrait(mapTrait: MapTrait): void {\n      this.owner.callObservers(\"controllerWillAttachMapTrait\", mapTrait, this.owner);\n    },\n    initTrait(mapTrait: MapTrait): void {\n      const mapView = this.view;\n      if (mapView !== null) {\n        this.owner.setGeoPerspective(mapTrait.geoPerspective.value);\n      }\n      this.owner.layers.addTraits(mapTrait.layers.traits);\n    },\n    deinitTrait(mapTrait: MapTrait): void {\n      this.owner.layers.deleteTraits(mapTrait.layers.traits);\n    },\n    didDetachTrait(mapTrait: MapTrait): void {\n      this.owner.callObservers(\"controllerDidDetachMapTrait\", mapTrait, this.owner);\n    },\n    traitDidSetGeoPerspective(geoPerspective: GeoPerspective | null): void {\n      this.owner.setGeoPerspective(geoPerspective);\n    },\n    traitWillAttachLayer(layerTrait: GeoTrait, targetTrait: Trait): void {\n      this.owner.layers.addTrait(layerTrait, targetTrait);\n    },\n    traitDidDetachLayer(layerTrait: GeoTrait): void {\n      this.owner.layers.deleteTrait(layerTrait);\n    },\n    viewType: MapView,\n    observesView: true,\n    initView(mapView: MapView): void {\n      const mapTrait = this.trait;\n      if (mapTrait !== null) {\n        this.owner.setGeoPerspective(mapTrait.geoPerspective.value);\n      }\n      const layerControllers = this.owner.layers.controllers;\n      for (const controllerId in layerControllers) {\n        const layerController = layerControllers[controllerId]!;\n        const layerView = layerController.geo.view;\n        if (layerView !== null && layerView.parent === null) {\n          layerController.geo.insertView(mapView);\n        }\n      }\n    },\n    willAttachView(mapView: MapView): void {\n      this.owner.callObservers(\"controllerWillAttachMapView\", mapView, this.owner);\n    },\n    didAttachView(mapView: MapView): void {\n      this.owner.canvas.setView(mapView.canvas.view);\n      this.owner.container.setView(mapView.container.view);\n    },\n    willDetachView(mapView: MapView): void {\n      this.owner.canvas.setView(null);\n      this.owner.container.setView(null);\n    },\n    didDetachView(mapView: MapView): void {\n      this.owner.callObservers(\"controllerDidDetachMapView\", mapView, this.owner);\n    },\n    viewWillSetGeoViewport(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport): void {\n      this.owner.callObservers(\"controllerWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n    viewDidSetGeoViewport(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport): void {\n      this.owner.callObservers(\"controllerDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n    viewWillAttachMapCanvas(mapCanvasView: CanvasView): void {\n      this.owner.canvas.setView(mapCanvasView);\n    },\n    viewDidDetachMapCanvas(mapCanvasView: CanvasView): void {\n      this.owner.canvas.setView(null);\n    },\n    viewWillAttachMapContainer(mapContainerView: HtmlView): void {\n      this.owner.container.setView(mapContainerView);\n    },\n    viewDidDetachMapContainer(mapContainerView: HtmlView): void {\n      this.owner.container.setView(null);\n    },\n  })\n  readonly map!: TraitViewRef<this, MapTrait, MapView> & Observes<MapTrait> & Observes<MapView>;\n\n  @ViewRef({\n    viewType: CanvasView,\n    willAttachView(mapCanvasView: CanvasView): void {\n      this.owner.callObservers(\"controllerWillAttachMapCanvasView\", mapCanvasView, this.owner);\n    },\n    didDetachView(mapCanvasView: CanvasView): void {\n      this.owner.callObservers(\"controllerDidDetachMapCanvasView\", mapCanvasView, this.owner);\n    },\n  })\n  readonly canvas!: ViewRef<this, CanvasView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(mapContainerView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachMapContainerView\", mapContainerView, this.owner);\n    },\n    didAttachView(containerView: HtmlView): void {\n      let mapView = this.owner.map.view;\n      if (mapView === null) {\n        mapView = this.owner.createMapView(containerView);\n        this.owner.map.setView(mapView);\n      }\n      if (mapView !== null) {\n        mapView.container.setView(containerView);\n      }\n    },\n    didDetachView(mapContainerView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachMapContainerView\", mapContainerView, this.owner);\n    },\n  })\n  readonly container!: ViewRef<this, HtmlView>;\n\n  @TraitViewControllerSet({\n    controllerType: GeoController,\n    binds: true,\n    observes: true,\n    get parentView(): MapView | null {\n      return this.owner.map.view;\n    },\n    getTraitViewRef(layerController: GeoController): TraitViewRef<unknown, GeoTrait, GeoView> {\n      return layerController.geo;\n    },\n    willAttachController(layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayer\", layerController, this.owner);\n    },\n    didAttachController(layerController: GeoController): void {\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.attachLayerTrait(layerTrait, layerController);\n      }\n      const layerView = layerController.geo.view;\n      if (layerView !== null) {\n        this.attachLayerView(layerView, layerController);\n      }\n    },\n    willDetachController(layerController: GeoController): void {\n      const layerView = layerController.geo.view;\n      if (layerView !== null) {\n        this.detachLayerView(layerView, layerController);\n      }\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.detachLayerTrait(layerTrait, layerController);\n      }\n    },\n    didDetachController(layerController: GeoController): void {\n      this.owner.callObservers(\"controllerDidDetachLayer\", layerController, this.owner);\n    },\n    controllerWillAttachGeoTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerTrait\", layerTrait, layerController, this.owner);\n      this.attachLayerTrait(layerTrait, layerController);\n    },\n    controllerDidDetachGeoTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      this.detachLayerTrait(layerTrait, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerTrait\", layerTrait, layerController, this.owner);\n    },\n    attachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      // hook\n    },\n    detachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      this.deleteController(layerController);\n    },\n    controllerWillAttachGeoView(layerView: GeoView, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerView\", layerView, layerController, this.owner);\n      this.attachLayerView(layerView, layerController);\n    },\n    controllerDidDetachGeoView(layerView: GeoView, layerController: GeoController): void {\n      this.detachLayerView(layerView, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerView\", layerView, layerController, this.owner);\n    },\n    attachLayerView(layerView: GeoView, layerController: GeoController): void {\n      const mapView = this.owner.map.view;\n      if (mapView !== null && layerView.parent === null) {\n        layerController.geo.insertView(mapView);\n      }\n    },\n    detachLayerView(layerView: GeoView, layerController: GeoController): void {\n      layerView.remove();\n    },\n    controllerDidSetGeoPerspective(geoPerspective: GeoPerspective | null, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerDidSetLayerGeoPerspective\", geoPerspective, layerController, this.owner);\n    },\n    createController(layerTrait?: GeoTrait): GeoController {\n      if (layerTrait !== void 0) {\n        return layerTrait.createGeoController();\n      }\n      return super.createController();\n    },\n  })\n  readonly layers!: TraitViewControllerSet<this, GeoTrait, GeoView, GeoController> & Observes<GeoController> & {\n    attachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void,\n    detachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void,\n    attachLayerView(layerView: GeoView, layerController: GeoController): void,\n    detachLayerView(layerView: GeoView, layerController: GeoController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2PointLike} from \"@swim/math\";\nimport type {R2PointInit} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport type {GeoPointInit} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"./GeoViewport\";\n\n/** @public */\nexport abstract class WorldMapViewport implements GeoViewport, Equals {\n  get geoFrame(): GeoBox {\n    return GeoBox.globe();\n  }\n\n  get geoCenter(): GeoPoint {\n    return GeoPoint.origin();\n  }\n\n  get zoom(): number {\n    return 0;\n  }\n\n  get heading(): number {\n    return 0;\n  }\n\n  get tilt(): number {\n    return 0;\n  }\n\n  abstract readonly viewFrame: R2Box;\n\n  abstract withViewFrame(viewFrame: R2Box): WorldMapViewport;\n\n  abstract project(geoPoint: GeoPointLike): R2Point;\n  abstract project(lng: number, lat: number): R2Point;\n\n  abstract unproject(viewPoint: R2PointLike): GeoPoint;\n  abstract unproject(x: number, y: number): GeoPoint;\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof WorldMapViewport\n        && this.constructor === that.constructor;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof WorldMapViewport) {\n      return that.canEqual(this)\n          && this.viewFrame.equals(that.viewFrame);\n    }\n    return false;\n  }\n}\n\n/** @public */\nexport class EquirectangularMapViewport extends WorldMapViewport {\n  constructor(viewFrame: R2Box) {\n    super();\n    this.viewFrame = viewFrame;\n  }\n\n  override readonly viewFrame: R2Box;\n\n  override withViewFrame(viewFrame: R2Box): WorldMapViewport {\n    let xMin = viewFrame.xMin;\n    let yMin = viewFrame.yMin;\n    let xMax = viewFrame.xMax;\n    let yMax = viewFrame.yMax;\n    const width = xMax - xMin;\n    const height = yMax - yMin;\n    const frameRatio = width / height;\n    const mapRatio = 2;\n    if (frameRatio < mapRatio) { // shrink y\n      const dy = (height - width / mapRatio) / 2;\n      yMin += dy;\n      yMax -= dy;\n      viewFrame = new R2Box(xMin, yMin, xMax, yMax);\n    } else if (frameRatio > mapRatio) { // shrink x\n      const dx = (width - height * mapRatio) / 2;\n      xMin += dx;\n      xMax -= dx;\n      viewFrame = new R2Box(xMin, yMin, xMax, yMax);\n    }\n    return new EquirectangularMapViewport(viewFrame);\n  }\n\n  override project(geoPoint: GeoPointLike): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: GeoPointLike | number, lat?: number): R2Point {\n    if (arguments.length === 1) {\n      if (Array.isArray(lng)) {\n        lat = lng[1];\n        lng = lng[0];\n      } else {\n        lat = (lng as GeoPointInit | GeoPoint).lat;\n        lng = (lng as GeoPointInit | GeoPoint).lng;\n      }\n    }\n    const viewFrame = this.viewFrame;\n    const x = viewFrame.xMin + ((180 + (lng as number)) / 360) * viewFrame.width;\n    const y = viewFrame.yMax - ((90 + (lat as number)) / 180) * viewFrame.height;\n    return new R2Point(x, y);\n  }\n\n  override unproject(viewPoint: R2PointLike): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    if (arguments.length === 1) {\n      if (Array.isArray(x)) {\n        y = x[1];\n        x = x[0];\n      } else {\n        y = (x as R2PointInit | R2Point).y;\n        x = (x as R2PointInit | R2Point).x;\n      }\n    }\n    const viewFrame = this.viewFrame;\n    const lng = 360 * ((x as number) - viewFrame.xMin) / viewFrame.width - 180;\n    const lat = 180 * (viewFrame.yMax - (y as number)) / viewFrame.height - 90;\n    return new GeoPoint(lng, lat);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"./GeoPerspective\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {MapViewObserver} from \"./MapView\";\nimport {MapView} from \"./MapView\";\nimport {WorldMapViewport} from \"./WorldMapViewport\";\nimport {EquirectangularMapViewport} from \"./WorldMapViewport\";\n\n/** @public */\nexport interface WorldMapViewObserver<V extends WorldMapView = WorldMapView> extends MapViewObserver<V> {\n  viewWillSetGeoViewport?(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null, view: V): void;\n\n  viewDidSetGeoViewport?(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null, view: V): void;\n}\n\n/** @public */\nexport class WorldMapView extends MapView {\n  constructor(geoViewport: WorldMapViewport) {\n    super();\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value = geoViewport;\n  }\n\n  declare readonly observerType?: Class<WorldMapViewObserver>;\n\n  @Property({\n    extends: true,\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic) && this.value instanceof WorldMapViewport) {\n        this.setIntrinsic(this.value.withViewFrame(this.owner.viewFrame));\n      }\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & MapView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected override willProcess(processFlags: ViewFlags): void {\n    if ((processFlags & View.NeedsProject) !== 0) {\n      this.geoViewport.update();\n    }\n    super.willProcess(processFlags);\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    // nop\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & MapView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      this.owner.canvas.insertView(containerView);\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      if (canvasView !== null && canvasView.parent === containerView) {\n        containerView.removeChild(canvasView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & MapView[\"container\"];\n\n  static override create(geoViewport?: WorldMapViewport): WorldMapView;\n  static override create(): WorldMapView;\n  static override create(geoViewport?: WorldMapViewport): WorldMapView {\n    if (geoViewport === void 0) {\n      geoViewport = new EquirectangularMapViewport(R2Box.undefined());\n    }\n    return new WorldMapView(geoViewport);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class MapboxViewport implements GeoViewport, Equals {\n  constructor(map: mapboxgl.Map, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: mapboxgl.Map;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: GeoPointLike): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: GeoPointLike | number, lat?: number): R2Point {\n    let geoPoint: mapboxgl.LngLatLike;\n    if (typeof lng === \"number\") {\n      geoPoint = new mapboxgl.LngLat(lng, lat!);\n    } else {\n      geoPoint = lng;\n    }\n    const point = this.map.project(geoPoint);\n    return new R2Point(point.x, point.y);\n  }\n\n  unproject(viewPoint: R2PointLike): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    let viewPoint: mapboxgl.PointLike;\n    if (typeof x === \"number\") {\n      viewPoint = new mapboxgl.Point(x, y!);\n    } else if (Array.isArray(x)) {\n      viewPoint = x;\n    } else {\n      viewPoint = new mapboxgl.Point(x.x, x.y);\n    }\n    const point = this.map.unproject(viewPoint);\n    return new GeoPoint(point.lng, point.lat);\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MapboxViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: mapboxgl.Map): MapboxViewport {\n    const mapFrame = map.getBounds();\n    const geoFrame = new GeoBox(mapFrame.getWest(), mapFrame.getSouth(),\n                                mapFrame.getEast(), mapFrame.getNorth());\n    const mapCenter = map.getCenter();\n    const geoCenter = new GeoPoint(mapCenter.lng, mapCenter.lat);\n    const zoom = map.getZoom();\n    const heading = map.getBearing();\n    const tilt = map.getPitch();\n    return new MapboxViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ViewInsets} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {ViewportColorScheme} from \"@swim/view\";\nimport type {ViewportService} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"@swim/map\";\nimport {GeoPerspective} from \"@swim/map\";\nimport type {GeoViewport} from \"@swim/map\";\nimport type {MapViewObserver} from \"@swim/map\";\nimport {MapView} from \"@swim/map\";\nimport {MapboxViewport} from \"./MapboxViewport\";\n\n/** @public */\nexport interface MapboxViewObserver<V extends MapboxView = MapboxView> extends MapViewObserver<V> {\n  viewWillSetGeoViewport?(newGeoViewport: MapboxViewport | null, oldGeoViewport: MapboxViewport | null, view: V): void;\n\n  viewDidSetGeoViewport?(newGeoViewport: MapboxViewport | null, oldGeoViewport: MapboxViewport | null, view: V): void;\n\n  viewWillMoveMap?(view: V): void;\n\n  viewDidMoveMap?(view: V): void;\n}\n\n/** @public */\nexport class MapboxView extends MapView {\n  constructor(map: mapboxgl.Map) {\n    super();\n    this.map = map;\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value = MapboxViewport.create(map);\n\n    this.onMapRender = this.onMapRender.bind(this);\n    this.onMoveStart = this.onMoveStart.bind(this);\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n    this.initMap(map);\n  }\n\n  declare readonly observerType?: Class<MapboxViewObserver>;\n\n  readonly map: mapboxgl.Map;\n\n  protected initMap(map: mapboxgl.Map): void {\n    map.on(\"render\", this.onMapRender);\n    map.on(\"movestart\", this.onMoveStart);\n    map.on(\"moveend\", this.onMoveEnd);\n    if ((map as any).style === void 0) {\n      this.mapStyle.update();\n    } else {\n      this.mapStyle.setAffinity(Affinity.Extrinsic);\n    }\n  }\n\n  @Property({\n    extends: true,\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      super.didSetValue(newGeoViewport, oldGeoViewport);\n      const immediate = !this.owner.hidden && !this.owner.culled;\n      this.owner.requireUpdate(View.NeedsProject, immediate);\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        this.setIntrinsic(MapboxViewport.create(this.owner.map));\n      }\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & MapView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected onMapRender(): void {\n    this.geoViewport.update();\n  }\n\n  protected onMoveStart(): void {\n    this.willMoveMap();\n  }\n\n  protected onMoveEnd(): void {\n    this.didMoveMap();\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    geoPerspective = GeoPerspective.fromLike(geoPerspective);\n    let bounds: mapboxgl.LngLatBoundsLike | undefined;\n    const options: mapboxgl.FitBoundsOptions = {};\n\n    const geoFrame = geoPerspective.geoFrame;\n    if (geoFrame !== null) {\n      bounds = [geoFrame.west, geoFrame.south, geoFrame.east, geoFrame.north];\n    }\n\n    const geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== null && !geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n      options.center = geoCenter;\n    }\n\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      options.zoom = zoom;\n    }\n\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      options.bearing = heading;\n    }\n\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      options.pitch = tilt;\n    }\n\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    } else {\n      options.duration = 0;\n    }\n\n    options.padding = this.edgeInsets.padding;\n\n    if (bounds !== void 0) {\n      this.map.fitBounds(bounds, options);\n    } else {\n      this.map.flyTo(options);\n    }\n\n    if (options.duration === 0) {\n      setTimeout(this.requireUpdate.bind(this, View.NeedsProject));\n    }\n  }\n\n  protected willMoveMap(): void {\n    this.callObservers(\"viewWillMoveMap\", this);\n  }\n\n  protected didMoveMap(): void {\n    this.callObservers(\"viewDidMoveMap\", this);\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventTarget(this.owner.map.getCanvasContainer());\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & MapView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      HtmlView.fromNode(this.owner.map.getContainer());\n      const canvasContainerView =  HtmlView.fromNode(this.owner.map.getCanvasContainer());\n      this.owner.canvas.insertView(canvasContainerView);\n      const controlContainerNode = containerView.node.querySelector(\".mapboxgl-control-container\") as HTMLElement | null;\n      if (controlContainerNode !== null) {\n        this.owner.controlContainer.setView(HtmlView.fromNode(controlContainerNode));\n        const topLeftControlsNode = controlContainerNode.querySelector(\".mapboxgl-ctrl-top-left\") as HTMLElement | null;\n        if (topLeftControlsNode !== null) {\n          this.owner.topLeftControls.setView(HtmlView.fromNode(topLeftControlsNode));\n        }\n        const topRightControlsNode = controlContainerNode.querySelector(\".mapboxgl-ctrl-top-right\") as HTMLElement | null;\n        if (topRightControlsNode !== null) {\n          this.owner.topRightControls.setView(HtmlView.fromNode(topRightControlsNode));\n        }\n        const bottomLeftControlsNode = controlContainerNode.querySelector(\".mapboxgl-ctrl-bottom-left\") as HTMLElement | null;\n        if (bottomLeftControlsNode !== null) {\n          this.owner.bottomLeftControls.setView(HtmlView.fromNode(bottomLeftControlsNode));\n        }\n        const bottomRightControlsNode = controlContainerNode.querySelector(\".mapboxgl-ctrl-bottom-right\") as HTMLElement | null;\n        if (bottomRightControlsNode !== null) {\n          this.owner.bottomRightControls.setView(HtmlView.fromNode(bottomRightControlsNode));\n        }\n      }\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      const canvasContainerView = HtmlView.fromNode(this.owner.map.getCanvasContainer());\n      if (canvasView !== null && canvasView.parent === canvasContainerView) {\n        canvasContainerView.removeChild(containerView);\n      }\n      this.owner.controlContainer.setView(null);\n      this.owner.topLeftControls.setView(null);\n      this.owner.topRightControls.setView(null);\n      this.owner.bottomLeftControls.setView(null);\n      this.owner.bottomRightControls.setView(null);\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & MapView[\"container\"];\n\n  @ViewRef({viewType: HtmlView})\n  readonly controlContainer!: ViewRef<this, HtmlView>;\n\n  @ViewRef({viewType: HtmlView})\n  readonly topLeftControls!: ViewRef<this, HtmlView>;\n\n  @ViewRef({viewType: HtmlView})\n  readonly topRightControls!: ViewRef<this, HtmlView>;\n\n  @ViewRef({viewType: HtmlView})\n  readonly bottomLeftControls!: ViewRef<this, HtmlView>;\n\n  @ViewRef({viewType: HtmlView})\n  readonly bottomRightControls!: ViewRef<this, HtmlView>;\n\n  @Property({\n    extends: true,\n    get padding(): mapboxgl.PaddingOptions {\n      const edgeInsets = this.value;\n      let top = edgeInsets.insetTop;\n      let right = edgeInsets.insetRight;\n      let bottom = edgeInsets.insetBottom;\n      let left = edgeInsets.insetLeft;\n      const containerView = this.owner.container.view;\n      if (containerView !== null) {\n        top = Math.max(containerView.style.paddingTop.pxState(), top);\n        right = Math.max(containerView.style.paddingRight.pxState(), right);\n        bottom = Math.max(containerView.style.paddingBottom.pxState(), bottom);\n        left = Math.max(containerView.style.paddingLeft.pxState(), left);\n      }\n      return {top, right, bottom, left};\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> & {\n    get padding(): mapboxgl.PaddingOptions;\n  } {\n    return Property.getter();\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.map.resize();\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutControls();\n  }\n\n  protected layoutControls(): void {\n    const containerView = this.container.view;\n    if (containerView === null) {\n      return;\n    }\n    const edgeInsets = containerView.edgeInsets.value;\n    const top = Math.max(containerView.style.paddingTop.pxState(), edgeInsets.insetTop);\n    const right = Math.max(containerView.style.paddingRight.pxState(), edgeInsets.insetRight);\n    const bottom = Math.max(containerView.style.paddingBottom.pxState(), edgeInsets.insetBottom);\n    const left = Math.max(containerView.style.paddingLeft.pxState(), edgeInsets.insetLeft);\n    const topLeftControlsView = this.topLeftControls.view;\n    if (topLeftControlsView !== null) {\n      topLeftControlsView.style.top.setIntrinsic(top);\n      topLeftControlsView.style.left.setIntrinsic(left);\n    }\n    const topRightControlsView = this.topRightControls.view;\n    if (topRightControlsView !== null) {\n      topRightControlsView.style.top.setIntrinsic(top);\n      topRightControlsView.style.right.setIntrinsic(right);\n    }\n    const bottomLeftControlsView = this.bottomLeftControls.view;\n    if (bottomLeftControlsView !== null) {\n      bottomLeftControlsView.style.bottom.setIntrinsic(bottom);\n      bottomLeftControlsView.style.left.setIntrinsic(left);\n    }\n    const bottomRightControlsView = this.bottomRightControls.view;\n    if (bottomRightControlsView !== null) {\n      bottomRightControlsView.style.bottom.setIntrinsic(bottom);\n      bottomRightControlsView.style.right.setIntrinsic(right);\n    }\n  }\n\n  @Provider({\n    extends: true,\n    observes: true,\n    serviceDidSetViewportColorScheme(colorScheme: ViewportColorScheme): void {\n      this.owner.mapStyle.update();\n    },\n  })\n  override get viewport(): Provider<this, ViewportService> & MapView[\"viewport\"] & Observes<ViewportService> {\n    return Provider.getter();\n  }\n\n  @Property({\n    value: null,\n    init(): void {\n      this.dark = \"mapbox://styles/mapbox/dark-v10\";\n      this.light = \"mapbox://styles/mapbox/light-v10\";\n    },\n    didSetValue(mapStyle: mapboxgl.Style | string | null) {\n      if (mapStyle !== null) {\n        this.owner.map.setStyle(mapStyle);\n      }\n    },\n    update(): void {\n      if (!this.hasAffinity(Affinity.Intrinsic)) {\n        return;\n      }\n      const viewportService = this.owner.viewport.service;\n      if (viewportService === null) {\n        return;\n      }\n      const colorScheme = viewportService.colorScheme.value;\n      if (colorScheme === \"dark\") {\n        this.setIntrinsic(this.dark);\n      } else {\n        this.setIntrinsic(this.light);\n      }\n    },\n  })\n  readonly mapStyle!: Property<this, mapboxgl.Style | string | null> & {\n    dark: mapboxgl.Style | string | null,\n    light: mapboxgl.Style | string | null,\n    update(): void,\n  };\n\n  protected override onMount(): void {\n    super.onMount();\n    this.mapStyle.update();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {TranslateTransform} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class LeafletViewport implements GeoViewport, Equals {\n  constructor(map: L.Map, geoFrame: GeoBox, geoCenter: GeoPoint, viewOrigin: R2Point,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.viewOrigin = viewOrigin;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: L.Map;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly viewOrigin: R2Point;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: GeoPointLike): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: GeoPointLike | number, lat?: number): R2Point {\n    const origin = this.viewOrigin;\n    let geoPoint: L.LatLngExpression;\n    if (typeof lng === \"number\") {\n      geoPoint = new L.LatLng(lat!, lng);\n    } else if (Array.isArray(lng)) {\n      geoPoint = new L.LatLng(lng[1], lng[0]);\n    } else {\n      geoPoint = lng;\n    }\n    const point = this.map.project(geoPoint, this.zoom);\n    return new R2Point(point.x - origin.x, point.y - origin.y);\n  }\n\n  unproject(viewPoint: R2PointLike): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    const origin = this.viewOrigin;\n    let viewPoint: L.PointExpression;\n    if (typeof x === \"number\") {\n      viewPoint = new L.Point(x + origin.x, y! + origin.y);\n    } else if (Array.isArray(x)) {\n      viewPoint = new L.Point(x[0] + origin.x, x[1] + origin.y);\n    } else {\n      viewPoint = new L.Point(x.x + origin.x, x.y + origin.y);\n    }\n    const point = this.map.unproject(viewPoint, this.zoom);\n    return new GeoPoint(point.lng, point.lat);\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeafletViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.viewOrigin.equals(that.viewOrigin)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: L.Map): LeafletViewport {\n    const mapFrame = map.getBounds();\n    const geoFrame = new GeoBox(mapFrame.getWest(), mapFrame.getSouth(),\n                                mapFrame.getEast(), mapFrame.getNorth());\n    const mapCenter = map.getCenter();\n    const geoCenter = new GeoPoint(mapCenter.lng, mapCenter.lat);\n    let {x, y} = map.getPixelOrigin();\n    try {\n      const mapTransform = Transform.parse(map.getPane(\"mapPane\")!.style.transform);\n      if (mapTransform instanceof TranslateTransform) {\n        x -= mapTransform.x.pxValue();\n        y -= mapTransform.y.pxValue();\n      }\n    } catch (e) {\n      // swallow\n    }\n    const viewOrigin = new R2Point(x, y);\n    const zoom = map.getZoom();\n    const heading = 0;\n    const tilt = 0;\n    return new LeafletViewport(map, geoFrame, geoCenter, viewOrigin, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"@swim/map\";\nimport {GeoPerspective} from \"@swim/map\";\nimport type {GeoViewport} from \"@swim/map\";\nimport type {MapViewObserver} from \"@swim/map\";\nimport {MapView} from \"@swim/map\";\nimport {LeafletViewport} from \"./LeafletViewport\";\n\n/** @public */\nexport interface LeafletViewObserver<V extends LeafletView = LeafletView> extends MapViewObserver<V> {\n  viewWillMoveMap?(view: V): void;\n\n  viewDidMoveMap?(view: V): void;\n}\n\n/** @public */\nexport class LeafletView extends MapView {\n  constructor(map: L.Map) {\n    super();\n    this.map = map;\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value = LeafletViewport.create(map);\n\n    this.onMapRender = this.onMapRender.bind(this);\n    this.onMoveStart = this.onMoveStart.bind(this);\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n    this.initMap(map);\n  }\n\n  declare readonly observerType?: Class<LeafletViewObserver>;\n\n  readonly map: L.Map;\n\n  protected initMap(map: L.Map): void {\n    map.on(\"move\", this.onMapRender);\n    map.on(\"movestart\", this.onMoveStart);\n    map.on(\"moveend\", this.onMoveEnd);\n  }\n\n  @Property({\n    extends: true,\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      super.didSetValue(newGeoViewport, oldGeoViewport);\n      const immediate = !this.owner.hidden && !this.owner.culled;\n      this.owner.requireUpdate(View.NeedsProject, immediate);\n    },\n    update(): void {\n      if (this.hasAffinity(Affinity.Intrinsic)) {\n        this.setIntrinsic(LeafletViewport.create(this.owner.map));\n      }\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & MapView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected onMapRender(): void {\n    this.geoViewport.update();\n  }\n\n  protected onMoveStart(): void {\n    this.willMoveMap();\n  }\n\n  protected onMoveEnd(): void {\n    this.didMoveMap();\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    geoPerspective = GeoPerspective.fromLike(geoPerspective);\n    const options: L.ZoomPanOptions = {};\n\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter === null) {\n      geoCenter = geoViewport.geoCenter;\n    }\n\n    const zoom = geoPerspective.zoom;\n\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing instanceof Timing) {\n      options.animate = true;\n      options.duration = timing.duration;\n    } else {\n      options.duration = 0;\n    }\n\n    this.map.flyTo(geoCenter, zoom, options);\n  }\n\n  protected willMoveMap(): void {\n    this.callObservers(\"viewWillMoveMap\", this);\n  }\n\n  protected didMoveMap(): void {\n    this.callObservers(\"viewDidMoveMap\", this);\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & MapView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const controlContainerView = HtmlView.fromNode(containerView.node.querySelector(\".leaflet-control-container\") as HTMLDivElement);\n      const canvasView = this.owner.canvas.insertView(containerView, void 0, controlContainerView);\n      if (canvasView !== null) {\n        canvasView.style.zIndex.setIntrinsic(500);\n      }\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      if (canvasView !== null && canvasView.parent === containerView) {\n        containerView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & MapView[\"container\"];\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class GoogleMapViewport implements GeoViewport, Equals {\n  constructor(projection: google.maps.MapCanvasProjection | null, geoFrame: GeoBox,\n              geoCenter: GeoPoint, zoom: number, heading: number, tilt: number) {\n    this.projection = projection;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly projection: google.maps.MapCanvasProjection | null;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: GeoPointLike): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: GeoPointLike | number, lat?: number): R2Point {\n    const projection = this.projection;\n    if (projection === null) {\n      return R2Point.undefined();\n    }\n    let geoPoint: google.maps.LatLng;\n    if (typeof lng === \"number\") {\n      geoPoint = new google.maps.LatLng(lat!, lng);\n    } else if (Array.isArray(lng)) {\n      geoPoint = new google.maps.LatLng(lng[1], lng[0]);\n    } else {\n      geoPoint = new google.maps.LatLng(lng.lat, lng.lng);\n    }\n    const point = projection.fromLatLngToContainerPixel(geoPoint);\n    if (point === null) {\n      return R2Point.undefined();\n    }\n    return new R2Point(point.x, point.y);\n  }\n\n  unproject(viewPoint: R2PointLike): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    const projection = this.projection;\n    if (projection === null) {\n      return GeoPoint.undefined();\n    }\n    let viewPoint: google.maps.Point;\n    if (typeof x === \"number\") {\n      viewPoint = new google.maps.Point(x, y!);\n    } else if (Array.isArray(x)) {\n      viewPoint = new google.maps.Point(x[0], x[1]);\n    } else {\n      viewPoint = new google.maps.Point(x.x, x.y);\n    }\n    const point = projection.fromContainerPixelToLatLng(viewPoint);\n    if (point === null) {\n      return GeoPoint.undefined();\n    }\n    return new GeoPoint(point.lng(), point.lat());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GoogleMapViewport) {\n      return this.projection === that.projection\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: google.maps.Map, projection: google.maps.MapCanvasProjection | null | undefined): GoogleMapViewport {\n    if (projection === void 0) {\n      projection = null;\n    }\n    const mapFrame = map.getBounds();\n    let geoFrame: GeoBox;\n    if (mapFrame !== void 0 && mapFrame !== null) {\n      const sw = mapFrame.getSouthWest();\n      const ne = mapFrame.getNorthEast();\n      geoFrame = new GeoBox(sw.lng(), sw.lat(), ne.lng(), ne.lat());\n    } else {\n      geoFrame = GeoBox.undefined();\n    }\n    const mapCenter = map.getCenter();\n    const geoCenter = mapCenter !== void 0 ? new GeoPoint(mapCenter.lng(), mapCenter.lat()) : GeoPoint.origin();\n    let zoom = map.getZoom();\n    if (zoom === void 0) {\n      zoom = 0;\n    }\n    let heading = map.getHeading();\n    if (heading === void 0) {\n      heading = 0;\n    }\n    let tilt = map.getTilt();\n    if (tilt === void 0) {\n      tilt = 0;\n    }\n    return new GoogleMapViewport(projection, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Lazy} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoViewport} from \"@swim/map\";\nimport type {GeoPerspectiveLike} from \"@swim/map\";\nimport {GeoPerspective} from \"@swim/map\";\nimport type {MapViewObserver} from \"@swim/map\";\nimport {MapView} from \"@swim/map\";\nimport {GoogleMapViewport} from \"./GoogleMapViewport\";\n\n/** @public */\nexport interface GoogleMapViewObserver<V extends GoogleMapView = GoogleMapView> extends MapViewObserver<V> {\n}\n\n/** @public */\nexport class GoogleMapView extends MapView {\n  constructor(map: google.maps.Map) {\n    super();\n    this.map = map;\n    this.mapOverlay = this.createMapOverlay(map);\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value =\n        GoogleMapViewport.create(map, this.mapOverlay.getProjection());\n\n    this.onMapDraw = this.onMapDraw.bind(this);\n    this.onMapIdle = this.onMapIdle.bind(this);\n    this.initMap(map);\n  }\n\n  declare readonly observerType?: Class<GoogleMapViewObserver>;\n\n  readonly map: google.maps.Map;\n\n  protected initMap(map: google.maps.Map): void {\n    map.addListener(\"idle\", this.onMapIdle);\n  }\n\n  readonly mapOverlay: google.maps.OverlayView;\n\n  protected createMapOverlay(map: google.maps.Map): google.maps.OverlayView {\n    const mapOverlay = new GoogleMapView.MapOverlay(this);\n    mapOverlay.setMap(map);\n    return mapOverlay;\n  }\n\n  /** @internal */\n  @Lazy\n  static get MapOverlay(): {new(owner: GoogleMapView): google.maps.OverlayView} {\n    return class GoogleMapOverlayView extends google.maps.OverlayView {\n      constructor(owner: GoogleMapView) {\n        super();\n        this.owner = owner;\n      }\n      readonly owner: GoogleMapView;\n      override onAdd(): void {\n        const containerView = this.owner.container.view;\n        if (containerView !== null) {\n          this.owner.container.materializeView(containerView);\n        }\n      }\n      override onRemove(): void {\n        this.owner.canvas.removeView();\n      }\n      override draw(): void {\n        this.owner.onMapDraw();\n      }\n    };\n  }\n\n  @Property({\n    extends: true,\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      super.didSetValue(newGeoViewport, oldGeoViewport);\n      const immediate = !this.owner.hidden && !this.owner.culled;\n      this.owner.requireUpdate(View.NeedsProject, immediate);\n    },\n    update(): void {\n      if (!this.hasAffinity(Affinity.Intrinsic)) {\n        return;\n      }\n      this.setIntrinsic(GoogleMapViewport.create(this.owner.map, this.owner.mapOverlay.getProjection()));\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & MapView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected override willProcess(processFlags: ViewFlags): void {\n    this.geoViewport.update();\n    super.willProcess(processFlags);\n  }\n\n  protected onMapDraw(): void {\n    this.geoViewport.update();\n  }\n\n  protected onMapIdle(): void {\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    geoPerspective = GeoPerspective.fromLike(geoPerspective);\n\n    const geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== null && !geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n      this.map.panTo(geoCenter);\n    }\n\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      this.map.setZoom(zoom);\n    }\n\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      this.map.setHeading(heading);\n    }\n\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      this.map.setTilt(tilt);\n    }\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & MapView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      this.materializeView(containerView);\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      const mapPanes = this.owner.mapOverlay.getPanes();\n      if (canvasView === null || mapPanes === void 0 || mapPanes === null) {\n        return;\n      }\n      const overlayMouseTargetView = HtmlView.get(mapPanes.overlayMouseTarget);\n      const overlayContainerView = overlayMouseTargetView !== null ? overlayMouseTargetView.parent : null;\n      const canvasContainerView = overlayContainerView !== null ? overlayContainerView.parent : null;\n      if (canvasContainerView !== null && canvasView.parent === canvasContainerView) {\n        canvasContainerView.removeChild(containerView);\n      }\n    },\n    materializeView(containerView: HtmlView): void {\n      function materializeAncestors(node: HTMLElement): HtmlView {\n        const parentNode = node.parentNode;\n        if (parentNode instanceof HTMLElement && HtmlView.get(parentNode) === null) {\n          materializeAncestors(parentNode);\n        }\n        return HtmlView.fromNode(node);\n      }\n      const mapPanes = this.owner.mapOverlay.getPanes();\n      if (mapPanes !== void 0 && mapPanes !== null) {\n        materializeAncestors(mapPanes.overlayMouseTarget as HTMLElement);\n        const overlayMouseTargetView = HtmlView.get(mapPanes.overlayMouseTarget);\n        const overlayContainerView = overlayMouseTargetView !== null ? overlayMouseTargetView.parent : null;\n        const canvasContainerView = overlayContainerView !== null ? overlayContainerView.parent : null;\n        this.owner.canvas.insertView(canvasContainerView);\n      } else if (this.owner.canvas.view === null) {\n        this.owner.canvas.attachView();\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & MapView[\"container\"] & {\n    materializeView(containerView: HtmlView): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2PointLike} from \"@swim/math\";\nimport type {R2Point} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport type {GeoPoint} from \"@swim/geo\";\nimport type {GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport abstract class EsriViewport implements GeoViewport, Equals {\n  constructor(map: __esri.View, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: __esri.View;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  abstract project(geoPoint: GeoPointLike): R2Point;\n  abstract project(lng: number, lat: number): R2Point;\n\n  abstract unproject(viewPoint: R2PointLike): GeoPoint;\n  abstract unproject(x: number, y: number): GeoPoint;\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EsriViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static webMercatorUtils: __esri.webMercatorUtils | undefined = void 0;\n\n  /** @internal */\n  static init(): void {\n    if (EsriViewport.webMercatorUtils === void 0) {\n      (window as any).require([\"esri/geometry/support/webMercatorUtils\"], function (webMercatorUtils: __esri.webMercatorUtils): void {\n        EsriViewport.webMercatorUtils = webMercatorUtils;\n      });\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MapViewObserver} from \"@swim/map\";\nimport {MapView} from \"@swim/map\";\nimport {EsriViewport} from \"./EsriViewport\";\n\n/** @public */\nexport interface EsriViewObserver<V extends EsriView = EsriView> extends MapViewObserver<V> {\n}\n\n/** @public */\nexport abstract class EsriView extends MapView {\n  constructor() {\n    super();\n    EsriViewport.init();\n  }\n\n  declare readonly observerType?: Class<EsriViewObserver>;\n\n  abstract readonly map: __esri.View;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {EsriViewport} from \"./EsriViewport\";\n\n/** @public */\nexport class EsriMapViewport extends EsriViewport {\n  constructor(map: __esri.MapView, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    super(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n\n  override readonly map!: __esri.MapView;\n\n  override project(geoPoint: GeoPointLike): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: GeoPointLike | number, lat?: number): R2Point {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this.map.toScreen(geoPoint);\n    return point !== null ? new R2Point(point.x, point.y) : R2Point.origin();\n  }\n\n  override unproject(viewPoint: R2PointLike): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this.map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n\n  static create(map: __esri.MapView): EsriMapViewport {\n    let mapFrame = map.extent;\n    let geoFrame: GeoBox;\n    if (mapFrame === null) {\n      geoFrame = GeoBox.undefined();\n    } else {\n      mapFrame = EsriViewport.webMercatorUtils!.webMercatorToGeographic(mapFrame, false) as __esri.Extent;\n      geoFrame = new GeoBox(mapFrame.xmin, mapFrame.ymin, mapFrame.xmax, mapFrame.ymax);\n    }\n    const mapCenter = map.center;\n    const geoCenter = new GeoPoint(mapCenter.longitude, mapCenter.latitude);\n    const zoom = map.zoom;\n    const heading = map.rotation;\n    const tilt = 0;\n    return new EsriMapViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"@swim/map\";\nimport {GeoPerspective} from \"@swim/map\";\nimport type {GeoViewport} from \"@swim/map\";\nimport type {EsriViewObserver} from \"./EsriView\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriMapViewport} from \"./EsriMapViewport\";\n\n/** @public */\nexport interface EsriMapViewObserver<V extends EsriMapView = EsriMapView> extends EsriViewObserver<V> {\n}\n\n/** @public */\nexport class EsriMapView extends EsriView {\n  constructor(map: __esri.MapView) {\n    super();\n    this.map = map;\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value = EsriMapViewport.create(map);\n\n    this.onMapRender = this.onMapRender.bind(this);\n    this.initMap(map);\n  }\n\n  declare readonly observerType?: Class<EsriMapViewObserver>;\n\n  override readonly map: __esri.MapView;\n\n  protected initMap(map: __esri.MapView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  @Property({\n    extends: true,\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      super.didSetValue(newGeoViewport, oldGeoViewport);\n      const immediate = !this.owner.hidden && !this.owner.culled;\n      this.owner.requireUpdate(View.NeedsProject, immediate);\n    },\n    update(): void {\n      if (!this.hasAffinity(Affinity.Intrinsic)) {\n        return;\n      }\n      this.setIntrinsic(EsriMapViewport.create(this.owner.map));\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & EsriView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected onMapRender(): void {\n    this.geoViewport.update();\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    geoPerspective = GeoPerspective.fromLike(geoPerspective);\n    const target: __esri.GoToTarget2D = {};\n    const options: __esri.GoToOptions2D = {};\n\n    const geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== null && !geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n      target.center = [geoCenter.lng, geoCenter.lat];\n    }\n\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      target.zoom = zoom;\n    }\n\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      target.heading = heading;\n    }\n\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      target.tilt = tilt;\n    }\n\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    } else {\n      options.duration = 0;\n    }\n\n    this.map.goTo(target, options);\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventTarget(this.owner.map.container.querySelector(\".esri-view-root\") as HTMLElement);\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & EsriView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-overlay-surface\") as HTMLDivElement);\n      this.owner.canvas.insertView(esriSurfaceView);\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-overlay-surface\") as HTMLDivElement);\n      if (canvasView !== null && canvasView.parent === esriSurfaceView) {\n        esriSurfaceView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & EsriView[\"container\"];\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2PointLike} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {GeoPointLike} from \"@swim/geo\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {GeoBox} from \"@swim/geo\";\nimport {EsriViewport} from \"./EsriViewport\";\n\n/** @public */\nexport class EsriSceneViewport extends EsriViewport {\n  constructor(map: __esri.SceneView, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    super(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n\n  override readonly map!: __esri.SceneView;\n\n  override project(geoPoint: GeoPointLike): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: GeoPointLike | number, lat?: number): R2Point {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this.map.toScreen(geoPoint);\n    return point !== null ? new R2Point(point.x, point.y) : R2Point.origin();\n  }\n\n  override unproject(viewPoint: R2PointLike): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: R2PointLike | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this.map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n\n  static create(map: __esri.SceneView): EsriSceneViewport {\n    let mapFrame = map.extent;\n    let geoFrame: GeoBox;\n    if (mapFrame === null) {\n      geoFrame = GeoBox.undefined();\n    } else {\n      mapFrame = EsriViewport.webMercatorUtils!.webMercatorToGeographic(mapFrame, false) as __esri.Extent;\n      geoFrame = new GeoBox(mapFrame.xmin, mapFrame.ymin, mapFrame.xmax, mapFrame.ymax);\n    }\n    const mapCenter = map.center;\n    const geoCenter = new GeoPoint(mapCenter.longitude, mapCenter.latitude);\n    const zoom = map.zoom;\n    const heading = map.camera.heading;\n    const tilt = map.camera.tilt;\n    return new EsriSceneViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {GeoPerspectiveLike} from \"@swim/map\";\nimport {GeoPerspective} from \"@swim/map\";\nimport type {GeoViewport} from \"@swim/map\";\nimport type {EsriViewObserver} from \"./EsriView\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriSceneViewport} from \"./EsriSceneViewport\";\n\n/** @public */\nexport interface EsriSceneViewObserver<V extends EsriSceneView = EsriSceneView> extends EsriViewObserver<V> {\n}\n\n/** @public */\nexport class EsriSceneView extends EsriView {\n  constructor(map: __esri.SceneView) {\n    super();\n    this.map = map;\n    (this.geoViewport as Mutable<typeof this.geoViewport>).value = EsriSceneViewport.create(map);\n\n    this.onMapRender = this.onMapRender.bind(this);\n    this.initMap(map);\n  }\n\n  declare readonly observerType?: Class<EsriSceneViewObserver>;\n\n  override readonly map!: __esri.SceneView;\n\n  protected initMap(map: __esri.SceneView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  @Property({\n    extends: true,\n    didSetValue(newGeoViewport: GeoViewport | null, oldGeoViewport: GeoViewport | null): void {\n      super.didSetValue(newGeoViewport, oldGeoViewport);\n      const immediate = !this.owner.hidden && !this.owner.culled;\n      this.owner.requireUpdate(View.NeedsProject, immediate);\n    },\n    update(): void {\n      if (!this.hasAffinity(Affinity.Intrinsic)) {\n        return;\n      }\n      this.setIntrinsic(EsriSceneViewport.create(this.owner.map));\n    },\n  })\n  override readonly geoViewport!: Property<this, GeoViewport | null> & EsriView[\"geoViewport\"] & {\n    /** @internal */\n    update(): void;\n  };\n\n  protected onMapRender(): void {\n    this.geoViewport.update();\n  }\n\n  override moveTo(geoPerspective: GeoPerspectiveLike, timing?: TimingLike | boolean): void {\n    const geoViewport = this.geoViewport.value;\n    if (geoViewport === null) {\n      return;\n    }\n\n    geoPerspective = GeoPerspective.fromLike(geoPerspective);\n    const target: __esri.GoToTarget3D = {};\n    const options: __esri.GoToOptions3D = {};\n\n    const geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== null && !geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n      target.center = [geoCenter.lng, geoCenter.lat];\n    }\n\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      target.zoom = zoom;\n    }\n\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      target.heading = heading;\n    }\n\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      target.tilt = tilt;\n    }\n\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    } else {\n      options.duration = 0;\n    }\n\n    this.map.goTo(target, options);\n  }\n\n  @ViewRef({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventTarget(this.owner.map.container.querySelector(\".esri-view-root\") as HTMLElement);\n      }\n      super.didAttachView(canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      super.willDetachView(canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView> & EsriView[\"canvas\"];\n\n  @ViewRef({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriOverlayView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-view-surface\") as HTMLDivElement);\n      this.owner.canvas.insertView(esriOverlayView);\n      super.didAttachView(containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      super.willDetachView(containerView);\n      const canvasView = this.owner.canvas.view;\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-view-surface\") as HTMLDivElement);\n      if (canvasView !== null && canvasView.parent === esriSurfaceView) {\n        esriSurfaceView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & EsriView[\"container\"];\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","GeoPerspectiveLike","Symbol","hasInstance","instance","GeoPerspective","GeoShape","GeoPerspectiveInit","GeoBoxInit","Objects","hasAnyKey","fromLike","GeoBoxLike","geoFrame","GeoBox","geoCenter","zoom","heading","tilt","GeoPoint","hasAllKeys","GeoViewport","GeoProjection","GeoView","GraphicsView","_a","_classSuper","constructor","super","this","geoViewport","_instanceExtraInitializers","_geoViewport_initializers","geoBounds","undefined","geoBoundsColor","ThemeAnimator","getter","didInsertChild","child","onInsertChildGeoBounds","didRemoveChild","onRemoveChildGeoBounds","onRender","outlineColor","tryValue","renderGeoBounds","outlineWidth","renderer","PaintingRenderer","hidden","culled","unbounded","renderGeoOutline","geoBox","isDefined","contextLineWidth","lineWidth","contextStrokeStyle","strokeStyle","southWest","project","normalized","northWest","northEast","southEast","beginPath","moveTo","x","y","lineTo","closePath","toString","stroke","onHide","parent","onHideChild","onUnhide","onUnhideChild","onSetUnbounded","onSetChildUnbounded","cullGeoFrame","setCulled","intersects","globe","setGeoBounds","newGeoBounds","oldGeoBounds","equals","willSetGeoBounds","onSetGeoBounds","didSetGeoBounds","callObservers","onSetChildGeoBounds","updateGeoBounds","deriveGeoBounds","ownGeoBounds","firstChild","childGeoBounds","union","nextSibling","_get_geoBoundsColor_decorators","valueType","Color","inherits","_geoViewport_decorators","Property","static","private","has","obj","metadata","_metadata","MountFlags","View","NeedsProject","UncullFlags","GeoTrait","Trait","geoPerspective","_geoPerspective_initializers","createGeoController","GeoController","_geoPerspective_decorators","didSetValue","owner","Controller","geo","_geo_initializers","_geo_decorators","TraitViewRef","traitType","willAttachTrait","geoTrait","initTrait","bindInlet","deinitTrait","unbindInlet","didDetachTrait","viewType","willAttachView","geoView","requireUpdate","didDetachView","GeoRippleView","_geoCenter_initializers","viewCenter","_viewCenter_initializers","radius","_radius_initializers","_stroke_initializers","strokeWidth","_strokeWidth_initializers","source","_source_initializers","R2Box","writable","enumerable","configurable","setFlags","flags","UnboundedFlag","onProject","projectRipple","projectGeoCenter","mounted","setInterpolatedValue","hasAffinity","Affinity","Intrinsic","setIntrinsic","renderRipple","viewFrame","frame","size","Math","min","width","height","getValue","pxValue","arc","PI","updateViewBounds","viewBounds","deriveViewBounds","bounds","ripple","options","center","color","timing","Length","pct","getLookOr","Look","accentColor","Mood","ambient","Easing","linear","withDuration","Timing","opacity","setView","alpha","sourceView","document","rippleView","create","containerView","getRoot","appendChild","_geoCenter_decorators","Animator","didSetState","_viewCenter_decorators","R2Point","updateFlags","NeedsRender","_radius_decorators","zero","didTransition","remove","look","px","_source_decorators","ViewRef","observes","didAttachView","viewDidUnmount","viewDidSetGeoBounds","_stroke_decorators","_strokeWidth_decorators","GeoFeatureView","gesture","_gesture_initializers","hyperlink","didPress","input","event","defaultPrevented","preventDefault","activate","didLongPress","Hyperlink","_gesture_decorators","PositionGesture","bindsOwner","didMovePress","dx","x0","dy","y0","cancelPress","didStartHovering","didStopHovering","_get_hyperlink_decorators","GeoFeatureTrait","GeoFeatureController","intersectsViewport","_intersectsViewport_initializers","visible","_visible_initializers","consumable","_consumable_initializers","visibleRange","consumeRange","_get_visibleRange_decorators","Infinity","range","decohere","setMin","minZoom","affinity","setValue","setMax","maxZoom","_get_consumeRange_decorators","_intersectsViewport_decorators","Boolean","inletKeys","deriveValue","view","_visible_decorators","minVisibleZoom","maxVisibleZoom","_consumable_decorators","consume","unconsume","extends","observesView","initView","deinitView","viewDidProject","viewDidEnter","viewDidLeave","viewDidPress","viewDidLongPress","GeoLayerTrait","_geoBounds_initializers","layers","_layers_initializers","features","_features_initializers","nodeUri","consumeLayers","unconsumeLayers","onStartConsuming","consumeTraits","onStopConsuming","unconsumeTraits","GeoLayerController","_geoBounds_decorators","_layers_decorators","TraitModelSet","traitKey","modelType","Model","binds","layerTrait","_features_decorators","featureTrait","didAttachTrait","consuming","willDetachTrait","_get_nodeUri_decorators","GeoTree","depth","maxDepth","density","views","isEmpty","contains","getTree","inWest","lngMin","lng","inSouth","latMin","lat","inEast","lngMax","inNorth","latMax","contained","hasNode","hasLeaf","indexOf","inserted","tree","newTree","insertedNode","reinsertedNode","insertedLeaf","oldSouthWest","newSouthWest","createTree","oldNorthWest","newNorthWest","oldSouthEast","newSouthEast","oldNorthEast","newNorthEast","oldViews","newViews","slice","removed","removedNode","reinsertedLeaf","removedLeaf","index","splice","forEach","moved","newBounds","oldBounds","newInWest","newInSouth","newInEast","newInNorth","oldInWest","oldInSouth","oldInEast","oldInNorth","callback","forEachReverse","forEachIntersecting","forEachNonIntersecting","Arrays","empty","max","GeoTreeView","root","stem","updateRoot","newRoot","getStem","onInsertChild","onRemoveChild","willProject","processChildren","processFlags","processChild","processTree","children","RemovingFlag","removeChild","geoTreeColor","renderGeoTree","renderGeoTreeOutline","geoProjection","u","displayChildren","displayFlags","displayChild","displayTree","newChildViewGeoBounds","oldChildViewGeoBounds","hitTest","geoPoint","unproject","hitTestTree","hit","cascadeHitTest","_get_geoTreeColor_decorators","trait","consumed","observesTrait","addTraits","traits","deleteTraits","traitWillAttachLayer","targetTrait","addTrait","traitDidDetachLayer","deleteTrait","traitWillAttachFeature","traitDidDetachFeature","layerControllers","controllers","controllerId","insertView","featureControllers","TraitViewControllerSet","controllerType","parentView","attachView","getTraitViewRef","layerController","willAttachController","didAttachController","attachLayerTrait","layerView","attachLayerView","willDetachController","detachLayerView","detachLayerTrait","didDetachController","controllerWillAttachGeoTrait","controllerDidDetachGeoTrait","deleteController","controllerWillAttachGeoView","controllerDidDetachGeoView","createController","featureController","attachFeatureTrait","featureView","attachFeatureView","detachFeatureView","detachFeatureTrait","controllerDidSetGeoPerspective","controllerDidEnterGeoView","controllerDidLeaveGeoView","controllerDidPressGeoView","controllerDidLongPressGeoView","GeoRasterView","geoAnchor","_geoAnchor_initializers","viewAnchor","_viewAnchor_initializers","xAlign","_xAlign_initializers","yAlign","_yAlign_initializers","_width_initializers","_height_initializers","_opacity_initializers","compositeOperation","_compositeOperation_initializers","compositor","_compositor_initializers","_renderer_initializers","canvas","createCanvas","ownRasterFrame","createRenderer","pixelRatio","window","devicePixelRatio","rendererType","getContext","Error","CanvasRenderer","Transform","identity","WebGLRenderer","needsUpdate","immediate","rasterFlags","NeedsComposite","NeedsDisplay","needsProcess","ProcessMask","NeedsResize","onResize","projectRaster","projectGeoAnchor","rasterFrame","viewWidth","viewHeight","viewSize","setRasterFrame","setViewFrame","needsDisplay","DisplayMask","resizeCanvas","resetRenderer","clearCanvas","didComposite","compositeImage","deriveRasterFrame","createElement","newWidth","newHeight","newCanvasWidth","newCanvasHeight","oldCanvasWidth","oldCanvasHeight","style","clearRect","xMax","yMax","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","xMin","yMin","setTransform","affine","viewport","globalAlpha","globalCompositeOperation","drawImage","_geoAnchor_decorators","newGeoCenter","oldGeoCenter","newGeoAnchor","oldGeoAnchor","_viewAnchor_decorators","_xAlign_decorators","Number","_yAlign_decorators","_width_decorators","NeedsLayout","_height_decorators","_opacity_decorators","_compositeOperation_decorators","String","_compositor_decorators","GraphicsRenderer","_renderer_decorators","UnhideFlags","GeoTileView","geoTile","GeoTileTrait","_southWest_initializers","_northWest_initializers","_southEast_initializers","_northEast_initializers","createTileTrait","insertModel","deleteModel","GeoTileController","_southWest_decorators","TraitModelRef","modelKey","createTrait","southWestTile","_northWest_decorators","northWestTile","_southEast_decorators","southEastTile","_northEast_decorators","northEastTile","z","createTileController","tileTrait","insertController","createView","TraitViewControllerRef","controllerKey","tileController","GeoShapeView","geoShape","_geoShape_initializers","viewShape","_viewShape_initializers","geoCentroid","_geoCentroid_initializers","viewCentroid","_viewCentroid_initializers","fill","_fill_initializers","fillOpacity","_fillOpacity_initializers","strokeOpacity","_strokeOpacity_initializers","strokeHitWidth","_strokeHitWidth_initializers","projectShape","renderShape","shape","R2Group","renderGroup","R2Path","renderPath","R2Spline","of","R2Curve","open","group","shapes","path","contextFillStyle","fillStyle","draw","transform","hitTestShape","hitTestGroup","hitTestPath","isPointInPath","pointInStroke","hitWidth","getValueOr","isPointInStroke","popoverFrame","inversePageTransform","pageTransform","inverse","transformX","py","transformY","_geoShape_decorators","R2Shape","_fill_decorators","_fillOpacity_decorators","_strokeOpacity_decorators","_strokeHitWidth_decorators","_viewShape_decorators","_geoCentroid_decorators","_viewCentroid_decorators","GeoShapeTrait","GeoShapeController","ColorLook","NumberLook","transition","GeoCircleView","hitRadius","_hitRadius_initializers","projectCircle","Mask","r","p0","p1","state","intersectsCircle","R2Circle","intersectsSegment","R2Segment","renderCircle","pageBounds","hitBounds","hitTestCircle","_hitRadius_decorators","GeoArcView","innerRadius","_innerRadius_initializers","outerRadius","_outerRadius_initializers","startAngle","_startAngle_initializers","sweepAngle","_sweepAngle_initializers","padAngle","_padAngle_initializers","padRadius","_padRadius_initializers","cornerRadius","_cornerRadius_initializers","Arc","projectArc","renderArc","a","radValue","cos","sin","hitTestArc","_innerRadius_decorators","_outerRadius_decorators","_startAngle_decorators","Angle","_sweepAngle_decorators","_padAngle_decorators","_padRadius_decorators","_cornerRadius_decorators","GeoPointView","_geoPoint_initializers","viewPoint","_viewPoint_initializers","_color_initializers","labelPadding","_labelPadding_initializers","font","_font_initializers","textColor","_textColor_initializers","label","_label_initializers","labelPlacement","_labelPlacement_initializers","isGradientStop","onLayout","labelView","layoutLabel","placement","padding","y1","TypesetView","textAlign","textBaseline","textOrigin","hitTestPoint","hx","hy","_geoPoint_decorators","origin","newGeoPoint","oldGeoPoint","_viewPoint_decorators","_font_decorators","Font","_textColor_decorators","_label_decorators","TextRunView","viewKey","text","setState","_color_decorators","_labelPadding_decorators","_labelPlacement_decorators","GeoPlotView","_hitWidth_initializers","gradientStops","points","appendPoint","point","setPoint","setChild","childView","targetView","onInsertPoint","NeedsAnimate","didProject","lngMid","latMid","xMid","yMid","invalid","pointCount","isFinite","renderPlotGradient","renderPlotStroke","x1","gradient","createLinearGradient","addColorStop","hitTestPlot","_hitWidth_decorators","GeoIconView","sprite","iconLayout","_iconLayout_initializers","graphics","_graphics_initializers","iconColor","onApplyTheme","theme","mood","derived","oldGraphics","Icon","newGraphics","withTheme","isThemed","Reflexive","projectIcon","intersectsBox","onRasterize","rasterizeIcon","release","sprites","getService","acquireSprite","getRenderer","render","onComposite","compositeIcon","iconWidth","iconHeight","hitTestIcon","onUnmount","inlet","recohere","performance","now","_iconLayout_decorators","IconLayout","NeedsRasterize","_get_iconColor_decorators","_graphics_decorators","IconGraphicsAnimator","Graphics","GeoIconTrait","_iconColor_initializers","GeoIconController","_iconColor_decorators","MapView","_canvas_initializers","container","_container_initializers","willSetValue","newGeoViewport","oldGeoViewport","_canvas_decorators","CanvasView","canvasView","_container_decorators","HtmlView","MapTrait","TraitSet","newLayerTrait","detectModel","model","getTrait","detectTrait","MapController","map","_map_initializers","createMapView","setGeoPerspective","mapView","_map_decorators","mapTrait","traitDidSetGeoPerspective","willDetachView","viewWillSetGeoViewport","viewDidSetGeoViewport","viewWillAttachMapCanvas","mapCanvasView","viewDidDetachMapCanvas","viewWillAttachMapContainer","mapContainerView","viewDidDetachMapContainer","WorldMapViewport","canEqual","that","EquirectangularMapViewport","withViewFrame","frameRatio","Array","isArray","WorldMapView","willProcess","update","MapboxViewport","mapboxgl","LngLat","Point","mapFrame","getBounds","getWest","getSouth","getEast","getNorth","mapCenter","getCenter","getZoom","getBearing","getPitch","MapboxView","controlContainer","_controlContainer_initializers","topLeftControls","_topLeftControls_initializers","topRightControls","_topRightControls_initializers","bottomLeftControls","_bottomLeftControls_initializers","bottomRightControls","_bottomRightControls_initializers","mapStyle","_mapStyle_initializers","onMapRender","bind","onMoveStart","onMoveEnd","initMap","on","setAffinity","Extrinsic","willMoveMap","didMoveMap","west","south","east","north","equivalentTo","Equivalent","bearing","pitch","duration","edgeInsets","fitBounds","flyTo","setTimeout","resize","layoutControls","top","paddingTop","pxState","insetTop","right","paddingRight","insetRight","bottom","paddingBottom","insetBottom","left","paddingLeft","insetLeft","topLeftControlsView","topRightControlsView","bottomLeftControlsView","bottomRightControlsView","Provider","onMount","setEventTarget","getCanvasContainer","fromNode","getContainer","canvasContainerView","controlContainerNode","node","querySelector","topLeftControlsNode","topRightControlsNode","bottomLeftControlsNode","bottomRightControlsNode","_controlContainer_decorators","_topLeftControls_decorators","_topRightControls_decorators","_bottomLeftControls_decorators","_bottomRightControls_decorators","_get_edgeInsets_decorators","_get_viewport_decorators","serviceDidSetViewportColorScheme","colorScheme","_mapStyle_decorators","dark","light","setStyle","viewportService","service","LeafletViewport","viewOrigin","L","LatLng","getPixelOrigin","mapTransform","parse","getPane","TranslateTransform","e","LeafletView","animate","controlContainerView","zIndex","GoogleMapViewport","projection","google","maps","fromLatLngToContainerPixel","fromContainerPixelToLatLng","sw","getSouthWest","ne","getNorthEast","getHeading","getTilt","GoogleMapView","mapOverlay","createMapOverlay","getProjection","onMapDraw","onMapIdle","addListener","MapOverlay","setMap","OverlayView","onAdd","materializeView","onRemove","removeView","panTo","setZoom","setHeading","setTilt","Lazy","mapPanes","getPanes","overlayMouseTargetView","overlayMouseTarget","overlayContainerView","materializeAncestors","parentNode","HTMLElement","_static_get_MapOverlay_decorators","_staticExtraInitializers","EsriViewport","webMercatorUtils","require","EsriView","EsriMapViewport","spatialReference","wkid","toScreen","toMap","longitude","latitude","extent","webMercatorToGeographic","xmin","ymin","xmax","ymax","rotation","EsriMapView","watch","goTo","esriContainerView","esriRootView","esriSurfaceView","EsriSceneViewport","camera","EsriSceneView","esriOverlayView"],"mappings":"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","x_google_ignoreList":[0]}