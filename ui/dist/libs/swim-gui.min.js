// @swim/gui v4.0.0-dev.20220527.3 (c) 2015-2022 Swim.inc
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@swim/core"),require("@swim/core"),require("@swim/ui"),require("@swim/core"),require("@swim/ui"),require("@swim/ui"),require("@swim/core"),require("@swim/core"),require("@swim/ui"),require("@swim/ui"),require("@swim/ux"),require("@swim/ux"),require("@swim/ux"),require("@swim/ui"),require("@swim/ux"),require("@swim/maps"),require("@swim/maps"),require("@swim/core"),require("@swim/core"),require("@swim/vis"),require("@swim/vis"),require("@swim/vis")):"function"==typeof define&&define.amd?define(["exports","@swim/core","@swim/core","@swim/ui","@swim/core","@swim/ui","@swim/ui","@swim/core","@swim/core","@swim/ui","@swim/ui","@swim/ux","@swim/ux","@swim/ux","@swim/ui","@swim/ux","@swim/maps","@swim/maps","@swim/core","@swim/core","@swim/vis","@swim/vis","@swim/vis"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).swim=e.swim||{},e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim,e.swim)}(this,(function(e,t,i,n,r,s,l,a,o,c,h,w,d,u,v,p,g,V,m,f,T,y,b){"use strict";function C(e,t,i,n,r,s){function l(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var a,o=n.kind,c="getter"===o?"get":"setter"===o?"set":"value",h=!t&&e?n.static?e:e.prototype:null,w=t||(h?Object.getOwnPropertyDescriptor(h,n.name):{}),d=!1,u=i.length-1;u>=0;u--){var v={};for(var p in n)v[p]="access"===p?{}:n[p];for(var p in n.access)v.access[p]=n.access[p];v.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");s.push(l(e||null))};var g=(0,i[u])("accessor"===o?{get:w.get,set:w.set}:w[c],v);if("accessor"===o){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(a=l(g.get))&&(w.get=a),(a=l(g.set))&&(w.set=a),(a=l(g.init))&&r.unshift(a)}else(a=l(g))&&("field"===o?r.unshift(a):w[c]=a)}h&&Object.defineProperty(h,n.name,w),d=!0}function k(e,t,i){for(var n=arguments.length>2,r=0;r<t.length;r++)i=n?t[r].call(e,i):t[r].call(e);return n?i:void 0}"function"==typeof SuppressedError&&SuppressedError;class D{constructor(e,t,i){this.unknown=e,this.warning=t,this.alert=i}withUnknown(e){if(void 0===e)e=1;else{if(!isFinite(e))throw new Error("invalid unknown level: "+e);e=Math.min(Math.max(0,e),1)}return new D(e,this.warning,this.alert)}withWarning(e){if(void 0===e)e=1;else{if(!isFinite(e))throw new Error("invalid warning level: "+e);e=Math.min(Math.max(0,e),1)}return new D(this.unknown,e,this.alert)}withAlert(e){if(void 0===e)e=1;else{if(!isFinite(e))throw new Error("invalid alert level: "+e);e=Math.min(Math.max(0,e),1)}return new D(this.unknown,this.warning,e)}get moodModifier(){return[[n.Feel.primary,1],[n.Feel.inactive,0!==this.unknown?this.unknown:void 0],[n.Feel.warning,0!==this.warning?this.warning:void 0],[n.Feel.alert,0!==this.alert?this.alert:void 0]]}interpolateTo(e){return e instanceof D?S(this,e):null}equivalentTo(e,i){return this===e||e instanceof D&&(t.Numbers.equivalent(this.unknown,e.unknown,i)&&t.Numbers.equivalent(this.warning,e.warning,i)&&t.Numbers.equivalent(this.alert,e.alert,i))}canEqual(e){return e instanceof D}equals(e){return this===e||e instanceof D&&(e.canEqual(this)&&this.unknown===e.unknown&&this.warning===e.warning&&this.alert===e.alert)}hashCode(){return t.Murmur3.mash(t.Murmur3.mix(t.Murmur3.mix(t.Murmur3.mix(t.Constructors.hash(D),t.Numbers.hash(this.unknown)),t.Numbers.hash(this.warning)),t.Numbers.hash(this.alert)))}debug(e){const t=this.unknown,i=this.warning,n=this.alert;return e=e.write("Status").write(46),0!==t?(e=e.write("unknown").write(40),1!==t&&(e=e.debug(t)),e=e.write(41),0!==i&&(e=e.write(46).write("withWarning").write(40),1!==i&&(e=e.debug(i)),e=e.write(41)),0!==n&&(e=e.write(46).write("withAlert").write(40),1!==n&&(e=e.debug(n)),e=e.write(41))):0!==i?(e=e.write("warning").write(40),1!==i&&(e=e.debug(i)),e=e.write(41),0!==n&&(e=e.write(46).write("withAlert").write(40),1!==n&&(e=e.debug(n)),e=e.write(41))):0!==n?(e=e.write("alert").write(40),1!==n&&(e=e.debug(n)),e=e.write(41)):e=e.write("normal").write(40).write(41),e}toString(){return i.Format.debug(this)}static normal(){let e=D.Normal;return null===e&&(e=new D(0,0,0),D.Normal=e),e}static unknown(e){let t;if(void 0===e||1===e)t=D.Unknown,null===t&&(t=new D(1,0,0),D.Unknown=t);else{if(!isFinite(e))throw new Error("invalid unknown level: "+e);e=Math.min(Math.max(0,e),1),t=new D(e,0,0)}return t}static warning(e){let t;if(void 0===e||1===e)t=D.Warning,null===t&&(t=new D(0,1,0),D.Warning=t);else{if(!isFinite(e))throw new Error("invalid warning level: "+e);e=Math.min(Math.max(0,e),1),t=new D(0,e,0)}return t}static alert(e){let t;if(void 0===e||1===e)t=D.Alert,null===t&&(t=new D(0,1,1),D.Alert=t);else{if(!isFinite(e))throw new Error("invalid alert level: "+e);e=Math.min(Math.max(0,e),1),t=new D(0,1,e)}return t}static normalRange(){let e=D.NormalRange;return null===e&&(e=t.Constant(D.normal()),D.NormalRange=e),e}static warningRange(e,t){if(void 0===e)e=0;else{if(!isFinite(e))throw new Error("invalid warning level: "+e);e=Math.min(Math.max(0,e),1)}if(void 0===t)t=1;else{if(!isFinite(t))throw new Error("invalid warning level: "+t);t=Math.min(Math.max(0,t),1)}let i;return 0===e&&1===t?(i=D.WarningAscending,null===i&&(i=D.normal().interpolateTo(D.warning()),D.WarningAscending=i)):1===e&&0===t?(i=D.WarningDescending,null===i&&(i=D.warning().interpolateTo(D.normal()),D.WarningDescending=i)):i=new D(0,e,0).interpolateTo(new D(0,t,0)),i}static alertRange(e,t){if(void 0===e)e=0;else{if(!isFinite(e))throw new Error("invalid alert level: "+e);e=Math.min(Math.max(0,e),1)}if(void 0===t)t=1;else{if(!isFinite(t))throw new Error("invalid alert level: "+t);t=Math.min(Math.max(0,t),1)}let i;return 0===e&&1===t?(i=D.AlertAscending,null===i&&(i=D.warning().interpolateTo(D.alert()),D.AlertAscending=i)):1===e&&0===t?(i=D.AlertDescending,null===i&&(i=D.alert().interpolateTo(D.warning()),D.AlertDescending=i)):i=new D(0,1,e).interpolateTo(new D(0,1,t)),i}static panicRange(){let e=D.PanicRange;return null===e&&(e=t.Constant(D.alert()),D.PanicRange=e),e}static worsening(e,i,n,r,s){const l=t.Mapping(t.LinearDomain(e,i),this.normalRange()),a=t.Mapping(t.LinearDomain(i,n),this.warningRange(0,1)),o=t.Mapping(t.LinearDomain(n,r),this.alertRange(0,1)),c=t.Mapping(t.LinearDomain(r,s),this.panicRange());return t.Piecewise(l,a,o,c)}static improving(e,i,n,r,s){const l=t.Mapping(t.LinearDomain(e,i),this.panicRange()),a=t.Mapping(t.LinearDomain(i,n),this.alertRange(1,0)),o=t.Mapping(t.LinearDomain(n,r),this.warningRange(1,0)),c=t.Mapping(t.LinearDomain(r,s),this.normalRange());return t.Piecewise(l,a,o,c)}}D.Normal=null,D.Unknown=null,D.Warning=null,D.Alert=null,D.NormalRange=null,D.WarningAscending=null,D.WarningDescending=null,D.AlertAscending=null,D.AlertDescending=null,D.PanicRange=null;const S=function(e){const t=function(e,i){const n=function(e){const t=n[0],i=n[1],r=t.unknown+e*(i.unknown-t.unknown),s=t.warning+e*(i.warning-t.warning),l=t.alert+e*(i.alert-t.alert);return new D(r,s,l)};return Object.setPrototypeOf(n,t.prototype),n[0]=e,n[1]=i,n};return t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t}(t.Interpolator);let P=(()=>{var e;let t,i,n,a,o,c=[],h=[],w=[],d=[],u=[],v=[];return e=class extends s.Trait{constructor(){super(...arguments),this.id=(k(this,c),k(this,h,void 0)),this.entity=k(this,w,void 0),this.title=k(this,d,void 0),this.icon=k(this,u,void 0),this.status=k(this,v,void 0)}createTabController(){return null}onAttachModel(e){super.onAttachModel(e),null===e.getTrait(s.SelectableTrait)&&e.appendTrait(s.SelectableTrait,"selectable")}},t=[r.Property({valueType:String})],i=[s.TraitRef({get traitType(){return L},willAttachTrait(e,t){this.owner.callObservers("traitWillAttachEntity",e,t,this.owner)},initTrait(e){this.owner.status.bindInlet(e.status)},deinitTrait(e){this.owner.status.unbindInlet(e.status)},didDetachTrait(e){this.owner.callObservers("traitDidDetachEntity",e,this.owner)}})],n=[r.Property({valueType:String,value:"",didSetValue(e,t){this.owner.callObservers("traitDidSetTitle",e,this.owner)},equalValues:(e,t)=>e===t})],a=[r.Property({valueType:l.Graphics,value:null,didSetValue(e){this.owner.callObservers("traitDidSetIcon",e,this.owner)},equalValues:(e,t)=>e===t})],o=[r.Property({valueType:D,value:D.normal(),didSetValue(e){this.owner.callObservers("traitDidSetStatus",e,this.owner)}})],C(null,null,t,{kind:"field",name:"id",static:!1,private:!1,access:{has:e=>"id"in e,get:e=>e.id,set:(e,t)=>{e.id=t}}},h,c),C(null,null,i,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},w,c),C(null,null,n,{kind:"field",name:"title",static:!1,private:!1,access:{has:e=>"title"in e,get:e=>e.title,set:(e,t)=>{e.title=t}}},d,c),C(null,null,a,{kind:"field",name:"icon",static:!1,private:!1,access:{has:e=>"icon"in e,get:e=>e.icon,set:(e,t)=>{e.icon=t}}},u,c),C(null,null,o,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},v,c),e})(),L=(()=>{var e;let t,i,n,o,c,h,w,d,u,v,p,g,V=[],m=[],f=[],T=[],y=[],b=[],S=[],L=[],R=[],I=[],x=[],E=[];return e=class extends s.Trait{constructor(){super(...arguments),this.id=(k(this,V),k(this,m,void 0)),this.path=k(this,f,void 0),this.title=k(this,T,void 0),this.icon=k(this,y,void 0),this.status=k(this,b,void 0),this.aspect=k(this,S,void 0),this.aspects=k(this,L,void 0),this.relations=k(this,R,void 0),this.relatable=k(this,I,void 0),this.searchable=k(this,x,void 0),this.searching=k(this,E,void 0)}get nodeUri(){return r.Property.getter()}onStartSearching(){}onStopSearching(){}updateSearch(e){}submitSearch(e){}createNavController(){return null}onAttachModel(e){super.onAttachModel(e),null===e.getTrait(s.SelectableTrait)&&e.appendTrait(s.SelectableTrait,"selectable")}},t=[r.Property({extends:!0,inherits:!1})],i=[r.Property({valueType:String})],n=[r.Property({valueType:a.UriPath,value:null,inherits:!0,get parentType(){return A},deriveValue(e){const t=this.owner.id.value;if(void 0===t)return null;const i=new a.UriPathBuilder;return null!==e&&i.addPath(e),i.addSegment(t),i.build()},didSetValue(e,t){this.owner.callObservers("traitDidSetPath",e,this.owner)},onMount(){super.onMount(),this.inherits&&!this.derived&&this.setValue(a.UriPath.slash(),r.Affinity.Reflexive)}})],o=[r.Property({valueType:String,value:"",didSetValue(e,t){this.owner.callObservers("traitDidSetTitle",e,this.owner)},equalValues:(e,t)=>e===t})],c=[r.Property({valueType:l.Graphics,value:null,didSetValue(e){this.owner.callObservers("traitDidSetIcon",e,this.owner)},equalValues:(e,t)=>e===t})],h=[r.Property({valueType:D,value:D.normal(),didSetValue(e){this.owner.callObservers("traitDidSetStatus",e,this.owner)}})],w=[s.TraitRef({traitType:P})],d=[s.TraitModelSet({traitType:P,traitKey:"aspect",modelType:s.Model,binds:!0,observes:!0,init(){this.ids={}},willAttachTrait(e){void 0!==e.id.value&&(this.ids[e.id.value]=e),e.entity.attachTrait(this.owner),this.owner.callObservers("traitWillAttachAspect",e,this.owner),null===this.owner.aspect.trait&&this.owner.aspect.attachTrait(e)},didDetachTrait(e){this.owner.aspect.trait===e&&this.owner.aspect.detachTrait(),this.owner.callObservers("traitDidDetachAspect",e,this.owner),e.entity.detachTrait(),void 0!==e.id.value&&delete this.ids[e.id.value]},modelDidAttachParent(e,t){const i=this.detectModelTrait(t),n=t.nextSibling,r=null!==n?this.detectModelTrait(n):null;null!==i&&this.owner.callObservers("traitDidReinsertAspect",i,r,this.owner)},createTrait(e){const t=super.createTrait();return void 0!==e&&t.id.setIntrinsic(e),this.createModel(t),t},get(e){if(0===arguments.length)return null;const t=this.ids[e];return void 0!==t?t:null}})],u=[s.TraitModelSet({get traitType(){return A},traitKey:"entity",modelType:s.Model,binds:!0,observes:!0,observesTrait:!0,init(){this.ids={}},willAttachTrait(e){void 0!==e.id.value&&(this.ids[e.id.value]=e),this.owner.callObservers("traitWillAttachRelation",e,this.owner)},didDetachTrait(e){this.owner.callObservers("traitDidDetachRelation",e,this.owner),void 0!==e.id.value&&delete this.ids[e.id.value]},traitWillAttachEntity(e,t){this.owner.callObservers("traitWillAttachRelatedEntity",e,t,this.owner)},traitDidDetachEntity(e,t){this.owner.callObservers("traitDidDetachRelatedEntity",e,t,this.owner)},traitDidSetHidden(e,t){this.owner.callObservers("traitDidSetRelationHidden",e,t,this.owner)},traitDidSetDisclosed(e,t){this.owner.callObservers("traitDidSetRelationDisclosed",e,t,this.owner)},modelDidAttachParent(e,t){const i=this.detectModelTrait(t),n=t.nextSibling,r=null!==n?this.detectModelTrait(n):null;null!==i&&this.owner.callObservers("traitDidReinsertRelation",i,r,this.owner)},createTrait(e){const t=super.createTrait();return void 0!==e&&t.id.setIntrinsic(e),this.createModel(t),t},get(e){if(0===arguments.length)return null;const t=this.ids[e];return void 0!==t?t:null}})],v=[r.Property({valueType:Boolean,value:!0,didSetValue(e){this.owner.callObservers("traitDidSetRelatable",e,this.owner)}})],p=[r.Property({valueType:Boolean,value:!1,didSetValue(e){this.owner.callObservers("traitDidSetSearchable",e,this.owner)}})],g=[r.Property({valueType:Boolean,value:!1,didSetValue(e){e?this.owner.onStartSearching():this.owner.onStopSearching(),this.owner.callObservers("traitDidSetSearching",e,this.owner)}})],C(e,null,t,{kind:"getter",name:"nodeUri",static:!1,private:!1,access:{has:e=>"nodeUri"in e,get:e=>e.nodeUri}},null,V),C(null,null,i,{kind:"field",name:"id",static:!1,private:!1,access:{has:e=>"id"in e,get:e=>e.id,set:(e,t)=>{e.id=t}}},m,V),C(null,null,n,{kind:"field",name:"path",static:!1,private:!1,access:{has:e=>"path"in e,get:e=>e.path,set:(e,t)=>{e.path=t}}},f,V),C(null,null,o,{kind:"field",name:"title",static:!1,private:!1,access:{has:e=>"title"in e,get:e=>e.title,set:(e,t)=>{e.title=t}}},T,V),C(null,null,c,{kind:"field",name:"icon",static:!1,private:!1,access:{has:e=>"icon"in e,get:e=>e.icon,set:(e,t)=>{e.icon=t}}},y,V),C(null,null,h,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},b,V),C(null,null,w,{kind:"field",name:"aspect",static:!1,private:!1,access:{has:e=>"aspect"in e,get:e=>e.aspect,set:(e,t)=>{e.aspect=t}}},S,V),C(null,null,d,{kind:"field",name:"aspects",static:!1,private:!1,access:{has:e=>"aspects"in e,get:e=>e.aspects,set:(e,t)=>{e.aspects=t}}},L,V),C(null,null,u,{kind:"field",name:"relations",static:!1,private:!1,access:{has:e=>"relations"in e,get:e=>e.relations,set:(e,t)=>{e.relations=t}}},R,V),C(null,null,v,{kind:"field",name:"relatable",static:!1,private:!1,access:{has:e=>"relatable"in e,get:e=>e.relatable,set:(e,t)=>{e.relatable=t}}},I,V),C(null,null,p,{kind:"field",name:"searchable",static:!1,private:!1,access:{has:e=>"searchable"in e,get:e=>e.searchable,set:(e,t)=>{e.searchable=t}}},x,V),C(null,null,g,{kind:"field",name:"searching",static:!1,private:!1,access:{has:e=>"searching"in e,get:e=>e.searching,set:(e,t)=>{e.searching=t}}},E,V),e})(),A=(()=>{var e;let t,i,n,l,o,c,h,w=[],d=[],u=[],v=[],p=[],g=[],V=[],m=[];return e=class extends s.Trait{constructor(){super(...arguments),this.id=(k(this,w),k(this,d,void 0)),this.path=k(this,u,void 0),this.title=k(this,v,void 0),this.status=k(this,p,void 0),this.hidden=k(this,g,void 0),this.disclosed=k(this,V,void 0),this.entities=k(this,m,void 0)}},t=[r.Property({valueType:String})],i=[r.Property({valueType:a.UriPath,value:null,inherits:!0,parentType:L,deriveValue(e){const t=this.owner.id.value;if(void 0===t)return null;const i=new a.UriPathBuilder;return null!==e&&i.addPath(e),i.addSegment(t),i.build()},didSetValue(e,t){this.owner.callObservers("traitDidSetPath",e,this.owner)}})],n=[r.Property({valueType:String,value:"",didSetValue(e,t){this.owner.callObservers("traitDidSetTitle",e,this.owner)},equalValues:(e,t)=>e===t})],l=[r.Property({valueType:D,value:D.normal(),didSetValue(e){this.owner.callObservers("traitDidSetStatus",e,this.owner)}})],o=[r.Property({valueType:Boolean,value:!1,didSetValue(e){this.owner.callObservers("traitDidSetHidden",e,this.owner)}})],c=[r.Property({valueType:Boolean,value:!0,didSetValue(e){this.owner.callObservers("traitDidSetDisclosed",e,this.owner)}})],h=[s.TraitModelSet({traitType:L,traitKey:"entity",modelType:s.Model,binds:!0,observes:!0,init(){this.ids={}},willAttachTrait(e){void 0!==e.id.value&&(this.ids[e.id.value]=e),this.owner.callObservers("traitWillAttachEntity",e,this.owner)},didDetachTrait(e){this.owner.callObservers("traitDidDetachEntity",e,this.owner),void 0!==e.id.value&&delete this.ids[e.id.value]},modelDidAttachParent(e,t){const i=this.detectModelTrait(t),n=t.nextSibling,r=null!==n?this.detectModelTrait(n):null;null!==i&&this.owner.callObservers("traitDidReinsertEntity",i,r,this.owner)},createTrait(e){const t=super.createTrait();return void 0!==e&&t.id.setIntrinsic(e),this.createModel(t),t},get(e){if(0===arguments.length)return null;const t=this.ids[e];return void 0!==t?t:null},getOrInsert(e){let t=this.get(e);return null===t&&(t=this.createTrait(e),this.addTrait(t)),t}})],C(null,null,t,{kind:"field",name:"id",static:!1,private:!1,access:{has:e=>"id"in e,get:e=>e.id,set:(e,t)=>{e.id=t}}},d,w),C(null,null,i,{kind:"field",name:"path",static:!1,private:!1,access:{has:e=>"path"in e,get:e=>e.path,set:(e,t)=>{e.path=t}}},u,w),C(null,null,n,{kind:"field",name:"title",static:!1,private:!1,access:{has:e=>"title"in e,get:e=>e.title,set:(e,t)=>{e.title=t}}},v,w),C(null,null,l,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},p,w),C(null,null,o,{kind:"field",name:"hidden",static:!1,private:!1,access:{has:e=>"hidden"in e,get:e=>e.hidden,set:(e,t)=>{e.hidden=t}}},g,w),C(null,null,c,{kind:"field",name:"disclosed",static:!1,private:!1,access:{has:e=>"disclosed"in e,get:e=>e.disclosed,set:(e,t)=>{e.disclosed=t}}},V,w),C(null,null,h,{kind:"field",name:"entities",static:!1,private:!1,access:{has:e=>"entities"in e,get:e=>e.entities,set:(e,t)=>{e.entities=t}}},m,w),e})(),R=(()=>{var e;let t,i,n=[],s=[],l=[];return e=class extends r.Service{constructor(){super(...arguments),this.timeZone=(k(this,n),k(this,s,void 0)),this.scrubTime=k(this,l,void 0)}},t=[r.Property({valueType:o.TimeZone,value:o.TimeZone.local(),didSetValue(e){this.owner.callObservers("serviceDidSetTimeZone",e,this.owner)}})],i=[r.Property({valueType:o.DateTime,value:null,didSetValue(e){this.owner.callObservers("serviceDidSetScrubTime",e,this.owner)}})],C(null,null,t,{kind:"field",name:"timeZone",static:!1,private:!1,access:{has:e=>"timeZone"in e,get:e=>e.timeZone,set:(e,t)=>{e.timeZone=t}}},s,n),C(null,null,i,{kind:"field",name:"scrubTime",static:!1,private:!1,access:{has:e=>"scrubTime"in e,get:e=>e.scrubTime,set:(e,t)=>{e.scrubTime=t}}},l,n),e})();class I extends c.Controller{}class x extends c.Controller{}let E=(()=>{var e;let t,i,l,a,o,d,u=[],v=[],p=[],g=[],V=[],m=[],f=[];return e=class extends w.RowController{constructor(){super(...arguments),this.status=(k(this,u),k(this,v,void 0)),this.aspect=k(this,p,void 0),this.selectable=k(this,g,void 0),this.leaf=k(this,V,void 0),this.iconCell=k(this,m,void 0),this.titleCell=k(this,f,void 0)}},t=[r.Property({valueType:D,value:D.unknown(),didSetValue(e){this.owner.leaf.updateStatus(e)}})],i=[s.TraitRef({traitType:P,consumed:!0,observes:!0,initTrait(e){this.owner.status.setIntrinsic(e.status.value)},willAttachTrait(e){this.owner.callObservers("controllerWillAttachAspectTrait",e,this.owner)},didAttachTrait(e){this.owner.selectable.setTrait(e.getTrait(s.SelectableTrait));const t=this.owner.row.attachView().leaf.insertView();this.owner.iconCell.insertView(t).setIntrinsic({graphics:e.icon.value}),this.owner.titleCell.insertView(t).setIntrinsic({content:e.title.value})},deinitTrait(e){this.owner.status.setIntrinsic(D.unknown())},willDetachTrait(e){this.owner.selectable.setTrait(null)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachAspectTrait",e,this.owner)},traitDidInsertTrait(e,t){e instanceof s.SelectableTrait&&this.owner.selectable.setTrait(e)},traitDidSetTitle(e){const t=this.owner.titleCell.view;null!==t&&t.content.setIntrinsic(e)},traitDidSetIcon(e){const t=this.owner.iconCell.view;null!==t&&t.graphics.setIntrinsic(e)},traitDidSetStatus(e){this.owner.status.setIntrinsic(e)}})],l=[s.TraitRef({traitType:s.SelectableTrait,observes:!0,initTrait(e){const t=this.owner.leaf.view;null!==t&&t.highlight.setIntrinsic(e.selected)},traitDidSelect(e){const t=this.owner.leaf.view;null!==t&&t.highlight.focus()},traitWillUnselect(){const e=this.owner.leaf.view;null!==e&&e.highlight.unfocus()}})],a=[c.TraitViewRef({extends:!0,initView(e){super.initView(e),this.updateStatus(this.owner.status.value),e.style.cursor.setIntrinsic("pointer"),this.owner.iconCell.insertView(e),this.owner.titleCell.insertView(e);const t=this.owner.selectable.trait;null!==t&&e.highlight.setIntrinsic(t.selected)},didAttachView(e,t){super.didAttachView(e,t),e.mounted&&!e.culled&&this.owner.consume(e)},viewDidMount(e){e.culled||this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)},viewDidCull(e){this.owner.unconsume(e)},viewWillUncull(e){this.owner.consume(e)},updateStatus(e){const t=this.view;null!==t&&t.modifyMood(n.Feel.default,e.moodModifier)}})],o=[h.ViewRef({viewType:w.IconCellView,viewKey:"icon",get parentView(){return this.owner.leaf.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachIconCellView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachIconCellView",e,this.owner)},createView(){return super.createView().setIntrinsic({iconLayout:{width:32,height:32},iconColor:n.Look.accentColor})}})],d=[h.ViewRef({viewType:w.TextCellView,viewKey:"title",get parentView(){return this.owner.leaf.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachTitleCellView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachTitleCellView",e,this.owner)}})],C(null,null,t,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},v,u),C(null,null,i,{kind:"field",name:"aspect",static:!1,private:!1,access:{has:e=>"aspect"in e,get:e=>e.aspect,set:(e,t)=>{e.aspect=t}}},p,u),C(null,null,l,{kind:"field",name:"selectable",static:!1,private:!1,access:{has:e=>"selectable"in e,get:e=>e.selectable,set:(e,t)=>{e.selectable=t}}},g,u),C(null,null,a,{kind:"field",name:"leaf",static:!1,private:!1,access:{has:e=>"leaf"in e,get:e=>e.leaf,set:(e,t)=>{e.leaf=t}}},V,u),C(null,null,o,{kind:"field",name:"iconCell",static:!1,private:!1,access:{has:e=>"iconCell"in e,get:e=>e.iconCell,set:(e,t)=>{e.iconCell=t}}},m,u),C(null,null,d,{kind:"field",name:"titleCell",static:!1,private:!1,access:{has:e=>"titleCell"in e,get:e=>e.titleCell,set:(e,t)=>{e.titleCell=t}}},f,u),e})(),M=(()=>{var e;let t,i,l,a,o,h,w,v,p=[],g=[],V=[],m=[],f=[],T=[],y=[],b=[],D=[];return e=class extends u.BinderController{constructor(){super(...arguments),this.sheet=(k(this,p),k(this,g,void 0)),this.entity=k(this,V,void 0),this.aspect=k(this,m,void 0),this.binder=k(this,f,void 0),this.tabBar=k(this,T,void 0),this.tabs=k(this,y,void 0),this.active=k(this,b,void 0),this.history=k(this,D,void 0)}didPressTabHandle(e,t,i){super.didPressTabHandle(e,t,i);const n=i.sheet.trait;let r;n instanceof P&&void 0!==(r=n.id.value)&&this.history.getService().pushHistory({parameters:{aspect:r},environment:{aspect:r}})}updateNavigationState(){const e=this.history.getService().historyState;let t=e.parameters.aspect;if(void 0!==t&&0!==t.length||(t=e.environment.aspect),void 0===t||0===t.length){const e=this.entity.trait,i=null!==e?e.aspect.trait:null;t=null!==i?i.id.value:void 0}if(void 0===t||0===t.length)return;const i=this.getChild(t,u.SheetController);null!==i&&this.active.setController(i)}onResolve(){super.onResolve(),this.updateNavigationState()}},t=[c.TraitViewRef({extends:!0,didAttachTrait(e){e instanceof L&&this.owner.entity.setTrait(e)},willDetachTrait(e){this.owner.entity.trait===e&&this.owner.entity.setTrait(null)}})],i=[s.TraitRef({traitType:L,willAttachTrait(e){this.owner.callObservers("controllerWillAttachEntityTrait",e,this.owner)},didAttachTrait(e){this.owner.tabs.sort(e.aspects.sorted);const t=e.aspects.traits,i={};for(const e in t){const n=t[e],r=n.id.value;if(void 0===r)continue;const s=this.owner.tabs.createController(n);s.sheet.setTrait(n),s!==this.owner.getChild(r)&&this.owner.setTab(r,s),i[r]=s}const n=this.owner.tabs.controllers;for(const e in n){const t=n[e],r=t.sheet.trait;let s;r instanceof P&&void 0!==(s=r.id.value)&&!(s in i)&&this.owner.tabs.deleteController(t)}const r=this.owner.binder.view;null!==r&&r.mounted&&this.mountBinder(r,e)},willDetachTrait(e){const t=this.owner.binder.view;null!==t&&t.mounted&&this.unmountBinder(t,e)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachEntityTrait",e,this.owner)},traitWillAttachAspect(e){this.owner.tabs.insertTrait(void 0,e)},traitDidDetachAspect(e){this.owner.tabs.deleteTrait(e)},traitDidReinsertAspect(e,t){this.owner.tabs.reinsertTrait(e,t)},mountBinder(e,t){t.consume(this.owner)},unmountBinder(e,t){t.unconsume(this.owner)}})],l=[s.TraitRef({traitType:P,observes:!0,initTrait(e){this.owner.title.set(e.title.value)},deinitTrait(e){this.owner.title.set(void 0)},traitDidSetTitle(e){const t=this.owner.title.attachController().tool.attachView();t instanceof d.TitleToolView&&t.content.set(e)}})],a=[c.TraitViewRef({extends:!0,observesView:!0,initView(e){super.initView(e)},didAttachView(e,t){const i=this.owner.entity.trait;e.mounted&&null!==i&&this.owner.entity.mountBinder(e,i),super.didAttachView(e,t)},willDetachView(e){super.willDetachView(e);const t=this.owner.entity.trait;e.mounted&&null!==t&&this.owner.entity.unmountBinder(e,t)},viewDidMount(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.mountBinder(e,t)},viewWillUnmount(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.unmountBinder(e,t)}})],o=[c.TraitViewControllerRef({extends:!0,initController(e){super.initController(e)},attachTabBarView(e,t){super.attachTabBarView(e,t),e.setIntrinsic({style:{backgroundColor:n.Look.backgroundColor,backdropFilter:"blur(2px)"},barHeight:48}),e.modifyMood(n.Feel.default,[[n.Feel.transparent,0],[n.Feel.translucent,1]])}})],h=[c.TraitViewControllerSet({extends:!0,controllerKey(e){const t=e.sheet.trait;if(t instanceof P)return t.id.value},initController(e){super.initController(e);const t=e.handle.attachController().tool.attachView();if(null===t.graphics.value){const i=e.sheet.trait;i instanceof P&&t.graphics.setIntrinsic(i.icon.value)}},createController(e){if(e instanceof P){const t=e.createTabController();if(null!==t)return t}return super.createController(e)},compare(e,t){const i=this.owner.entity.trait,n=e.sheet.trait,r=t.sheet.trait;return null!==i&&n instanceof P&&r instanceof P?i.aspects.compareTraits(n,r):0}})],w=[c.TraitViewControllerRef({extends:!0,attachActiveTrait(e,t){super.attachActiveTrait(e,t),e instanceof P&&this.owner.aspect.setTrait(e)},detachActiveTrait(e,t){this.owner.aspect.setTrait(null),super.detachActiveTrait(e,t)}})],v=[r.Provider({serviceType:c.HistoryService,observes:!0,updateHistory(e,t){this.owner.requireUpdate(c.Controller.NeedsResolve)},serviceDidPushHistory(e,t){this.updateHistory(e,t)},serviceDidPopHistory(e,t){this.updateHistory(e,t)}})],C(null,null,t,{kind:"field",name:"sheet",static:!1,private:!1,access:{has:e=>"sheet"in e,get:e=>e.sheet,set:(e,t)=>{e.sheet=t}}},g,p),C(null,null,i,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},V,p),C(null,null,l,{kind:"field",name:"aspect",static:!1,private:!1,access:{has:e=>"aspect"in e,get:e=>e.aspect,set:(e,t)=>{e.aspect=t}}},m,p),C(null,null,a,{kind:"field",name:"binder",static:!1,private:!1,access:{has:e=>"binder"in e,get:e=>e.binder,set:(e,t)=>{e.binder=t}}},f,p),C(null,null,o,{kind:"field",name:"tabBar",static:!1,private:!1,access:{has:e=>"tabBar"in e,get:e=>e.tabBar,set:(e,t)=>{e.tabBar=t}}},T,p),C(null,null,h,{kind:"field",name:"tabs",static:!1,private:!1,access:{has:e=>"tabs"in e,get:e=>e.tabs,set:(e,t)=>{e.tabs=t}}},y,p),C(null,null,w,{kind:"field",name:"active",static:!1,private:!1,access:{has:e=>"active"in e,get:e=>e.active,set:(e,t)=>{e.active=t}}},b,p),C(null,null,v,{kind:"field",name:"history",static:!1,private:!1,access:{has:e=>"history"in e,get:e=>e.history,set:(e,t)=>{e.history=t}}},D,p),e.MountFlags=u.BinderController.MountFlags|c.Controller.NeedsResolve,e})(),O=(()=>{var e;let i,a,o,d,u,v,p,g,V=[],m=[],f=[],T=[],y=[],b=[],S=[],P=[],A=[];return e=class extends w.RowController{constructor(){super(...arguments),this.status=(k(this,m),k(this,f,void 0)),this.entity=k(this,T,void 0),this.selectable=k(this,y,void 0),this.leaf=k(this,b,void 0),this.iconCell=k(this,S,void 0),this.titleCell=k(this,P,void 0),this.moreCell=k(this,A,void 0)}static get moreIcon(){return l.VectorIcon.create(24,24,"M9.59,8.92 L12.67,12 L9.59,15.08 L11,16.5 L15.5,12 L11,7.5 L9.59,8.92 Z M2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 C6.48,2 2,6.48 2,12 Z M20,12 C20,16.42 16.42,20 12,20 C7.58,20 4,16.42 4,12 C4,7.58 7.58,4 12,4 C16.42,4 20,7.58 20,12 Z")}},a=[r.Property({valueType:D,value:D.unknown(),didSetValue(e){this.owner.leaf.updateStatus(e)}})],o=[s.TraitRef({traitType:L,consumed:!0,observes:!0,initTrait(e){this.owner.status.setIntrinsic(e.status.value)},willAttachTrait(e){this.owner.callObservers("controllerWillAttachEntityTrait",e,this.owner)},didAttachTrait(e){this.owner.selectable.setTrait(e.getTrait(s.SelectableTrait));const t=this.owner.row.attachView().leaf.insertView();this.owner.iconCell.insertView(t).setIntrinsic({graphics:e.icon.value}),this.owner.titleCell.insertView(t).setIntrinsic({content:e.title.value}),e.relatable.value&&this.owner.moreCell.enabled&&this.owner.moreCell.insertView(t)},deinitTrait(e){this.owner.status.setIntrinsic(D.unknown())},willDetachTrait(e){this.owner.selectable.setTrait(null)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachEntityTrait",e,this.owner)},traitDidInsertTrait(e,t){e instanceof s.SelectableTrait&&this.owner.selectable.setTrait(e)},traitDidSetTitle(e){const t=this.owner.titleCell.view;null!==t&&t.content.setIntrinsic(e)},traitDidSetIcon(e){const t=this.owner.iconCell.view;null!==t&&t.graphics.setIntrinsic(e)},traitDidSetStatus(e){this.owner.status.setIntrinsic(e)},traitDidSetRelatable(e){this.owner.moreCell.enabled&&(e?this.owner.moreCell.insertView():this.owner.moreCell.removeView())}})],d=[s.TraitRef({traitType:s.SelectableTrait,observes:!0,initTrait(e){const t=this.owner.leaf.view;null!==t&&t.highlight.setIntrinsic(e.selected)},traitDidSelect(e){const t=this.owner.leaf.view;null!==t&&t.highlight.focus()},traitWillUnselect(){const e=this.owner.leaf.view;null!==e&&e.highlight.unfocus()}})],u=[c.TraitViewRef({extends:!0,initView(e){super.initView(e),this.updateStatus(this.owner.status.value),e.style.cursor.setIntrinsic("pointer"),this.owner.iconCell.insertView(e),this.owner.titleCell.insertView(e);const t=this.owner.entity.trait;null!==t&&t.relatable.value&&this.owner.moreCell.enabled&&this.owner.moreCell.insertView(e);const i=this.owner.selectable.trait;null!==i&&e.highlight.setIntrinsic(i.selected)},didAttachView(e,t){super.didAttachView(e,t),e.mounted&&!e.culled&&this.owner.consume(e)},viewDidMount(e){e.culled||this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)},viewDidCull(e){this.owner.unconsume(e)},viewWillUncull(e){this.owner.consume(e)},updateStatus(e){const t=this.view;null!==t&&t.modifyMood(n.Feel.default,e.moodModifier)}})],v=[h.ViewRef({viewType:w.IconCellView,viewKey:"icon",get parentView(){return this.owner.leaf.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachIconCellView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachIconCellView",e,this.owner)},createView(){return super.createView().setIntrinsic({iconLayout:{width:32,height:32},iconColor:n.Look.accentColor})}})],p=[h.ViewRef({viewType:w.TextCellView,viewKey:"title",get parentView(){return this.owner.leaf.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachTitleCellView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachTitleCellView",e,this.owner)}})],g=[h.ViewRef({viewType:w.IconCellView,viewKey:"more",observes:!0,init(){this.enabled=!0},get parentView(){return this.owner.leaf.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachMoreCellView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachMoreCellView",e,this.owner)},viewDidPress(e,t){this.owner.callObservers("controllerDidPressMoreCellView",e,t,this.owner)},createView(){return super.createView().setIntrinsic({iconLayout:{width:24,height:24},iconColor:n.Look.legendColor,graphics:O.moreIcon})}})],i=[t.Lazy],C(e,null,i,{kind:"getter",name:"moreIcon",static:!0,private:!1,access:{has:e=>"moreIcon"in e,get:e=>e.moreIcon}},null,V),C(null,null,a,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},f,m),C(null,null,o,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},T,m),C(null,null,d,{kind:"field",name:"selectable",static:!1,private:!1,access:{has:e=>"selectable"in e,get:e=>e.selectable,set:(e,t)=>{e.selectable=t}}},y,m),C(null,null,u,{kind:"field",name:"leaf",static:!1,private:!1,access:{has:e=>"leaf"in e,get:e=>e.leaf,set:(e,t)=>{e.leaf=t}}},b,m),C(null,null,v,{kind:"field",name:"iconCell",static:!1,private:!1,access:{has:e=>"iconCell"in e,get:e=>e.iconCell,set:(e,t)=>{e.iconCell=t}}},S,m),C(null,null,p,{kind:"field",name:"titleCell",static:!1,private:!1,access:{has:e=>"titleCell"in e,get:e=>e.titleCell,set:(e,t)=>{e.titleCell=t}}},P,m),C(null,null,g,{kind:"field",name:"moreCell",static:!1,private:!1,access:{has:e=>"moreCell"in e,get:e=>e.moreCell,set:(e,t)=>{e.moreCell=t}}},A,m),k(e,V),e})(),W=(()=>{var e;let t,i,n,r,l=[],a=[],o=[],h=[],d=[];return e=class extends w.TableController{constructor(){super(...arguments),this.entity=(k(this,l),k(this,a,void 0)),this.table=k(this,o,void 0),this.rows=k(this,h,void 0),this.entityRow=k(this,d,void 0)}compareRowControllers(e,t){const i=this.entity.trait;if(null!==i&&e instanceof E&&t instanceof E){const n=e.aspect.trait,r=t.aspect.trait;if(null!==n&&null!==r)return i.aspects.compareTraits(n,r)}return 0}},t=[s.TraitRef({traitType:L,observes:!0,willAttachTrait(e){this.owner.callObservers("controllerWillAttachEntityTrait",e,this.owner)},didAttachTrait(e){this.owner.entityRow.insertTrait(void 0,e);const t=this.owner.table.view;null!==t&&t.mounted&&this.mountTable(t,e)},willDetachTrait(e){const t=this.owner.table.view;null!==t&&t.mounted&&this.unmountTable(t,e),this.owner.entityRow.deleteTrait(e)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachEntityTrait",e,this.owner)},mountTable(e,t){t.consume(this.owner)},unmountTable(e,t){t.unconsume(this.owner)}})],i=[c.TraitViewRef({extends:!0,observesView:!0,initView(e){super.initView(e),e.style.backgroundColor.set(null),e.style.userSelect.setIntrinsic("none"),e.rowHeight.setIntrinsic("mobile"===e.viewIdiom?48:36);const t=w.ColLayout.create("icon",0,0,48),i=w.ColLayout.create("title",1,0),n=w.ColLayout.create("more",0,0,48),r=w.TableLayout.create([t,i,n]);e.layout.setIntrinsic(r)},didAttachView(e,t){const i=this.owner.entity.trait;e.mounted&&null!==i&&this.owner.entity.mountTable(e,i),super.didAttachView(e,t)},willDetachView(e){super.willDetachView(e);const t=this.owner.entity.trait;e.mounted&&null!==t&&this.owner.entity.unmountTable(e,t)},viewWillExpand(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.mountTable(e,t)},viewDidCollapse(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.unmountTable(e,t)},viewWillResize(e){e.rowHeight.setIntrinsic("mobile"===e.viewIdiom?48:36)},viewDidMount(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.mountTable(e,t)},viewWillUnmount(e){const t=this.owner.entity.trait;null!==t&&this.owner.entity.unmountTable(e,t)}})],n=[c.TraitViewControllerSet({extends:!0,compare(e,t){return this.owner.compareRowControllers(e,t)}})],r=[c.TraitControllerRef({controllerType:O,binds:!1,observes:!0,getTraitRef:e=>e.entity,willAttachController(e){this.owner.callObservers("controllerWillAttachEntityRow",e,this.owner)},didAttachController(e){const t=this.owner.rows.getTargetView(e);e.row.insertView(this.owner.table.view,void 0,t)},didDetachController(e){this.owner.callObservers("controllerDidDetachEntityRow",e,this.owner)},controllerDidPressLeafView(e,t,i,n){this.owner.callObservers("controllerDidPressEntityRow",e,t,n,this.owner)},controllerDidLongPressLeafView(e,t,i){this.owner.callObservers("controllerDidLongPressEntityRow",e,i,this.owner)},createController(e){const t=super.createController(e);return t.moreCell.enabled=!1,t}})],C(null,null,t,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},a,l),C(null,null,i,{kind:"field",name:"table",static:!1,private:!1,access:{has:e=>"table"in e,get:e=>e.table,set:(e,t)=>{e.table=t}}},o,l),C(null,null,n,{kind:"field",name:"rows",static:!1,private:!1,access:{has:e=>"rows"in e,get:e=>e.rows,set:(e,t)=>{e.rows=t}}},h,l),C(null,null,r,{kind:"field",name:"entityRow",static:!1,private:!1,access:{has:e=>"entityRow"in e,get:e=>e.entityRow,set:(e,t)=>{e.entityRow=t}}},d,l),e})(),B=(()=>{var e;let t,i,r,l,a,o,d,u=[],v=[],p=[],g=[],V=[],m=[],f=[],T=[];return e=class extends w.TableController{constructor(){super(...arguments),this.relation=(k(this,u),k(this,v,void 0)),this.table=k(this,p,void 0),this.header=k(this,g,void 0),this.disclosureCol=k(this,V,void 0),this.titleCol=k(this,m,void 0),this.rows=k(this,f,void 0),this.entityRows=k(this,T,void 0)}compareRowControllers(e,t){const i=this.relation.trait;if(null!==i&&e instanceof O&&t instanceof O){const n=e.entity.trait,r=t.entity.trait;if(null!==n&&null!==r)return i.entities.compareTraits(n,r)}return 0}},t=[s.TraitRef({traitType:A,observes:!0,willAttachTrait(e){this.owner.callObservers("controllerWillAttachRelationTrait",e,this.owner)},didAttachTrait(e){this.owner.rows.sort(e.entities.sorted),this.owner.entityRows.sort(e.entities.sorted),this.owner.entityRows.insertTraits(void 0,e.entities.traits),this.owner.titleCol.attachView().setIntrinsic({label:e.title.value});const t=this.owner.table.view;null!==t&&(t.expansion.set(e.disclosed.value),t.mounted&&this.mountTable(t,e))},willDetachTrait(e){const t=this.owner.table.view;null!==t&&t.mounted&&this.unmountTable(t,e),this.owner.entityRows.deleteTraits(e.entities.traits)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachRelationTrait",e,this.owner)},traitDidSetTitle(e){this.owner.titleCol.attachView().setIntrinsic({label:e})},traitDidSetDisclosed(e){const t=this.owner.table.view;null!==t&&t.expansion.set(e)},traitWillAttachEntity(e){this.owner.entityRows.insertTrait(void 0,e)},traitDidDetachEntity(e){this.owner.entityRows.deleteTrait(e)},traitDidReinsertEntity(e,t){this.owner.entityRows.reinsertTrait(e,t)},mountTable(e,t){e.expansion.collapsed||t.consume(this.owner)},unmountTable(e,t){t.unconsume(this.owner)}})],i=[c.TraitViewRef({extends:!0,observesView:!0,initView(e){super.initView(e),e.header.setView(this.owner.header.attachView()),e.set({style:{backgroundColor:null,userSelect:"none"},rowHeight:"mobile"===e.viewIdiom?48:36});const t=w.ColLayout.create("icon",0,0,48),i=w.ColLayout.create("title",1,0),n=w.ColLayout.create("more",0,0,48),r=w.TableLayout.create([t,i,n]);e.layout.setIntrinsic(r);const s=this.owner.relation.trait;null!==s&&e.expansion.set(s.disclosed.value)},didAttachView(e,t){const i=this.owner.relation.trait;e.mounted&&null!==i&&this.owner.relation.mountTable(e,i),super.didAttachView(e,t)},willDetachView(e){super.willDetachView(e);const t=this.owner.relation.trait;e.mounted&&null!==t&&this.owner.relation.unmountTable(e,t)},viewWillExpand(e){const t=this.owner.relation.trait;null!==t&&this.owner.relation.mountTable(e,t)},viewDidCollapse(e){const t=this.owner.relation.trait;null!==t&&this.owner.relation.unmountTable(e,t)},viewWillResize(e){e.rowHeight.setIntrinsic("mobile"===e.viewIdiom?48:36)},viewDidMount(e){const t=this.owner.relation.trait;null!==t&&this.owner.relation.mountTable(e,t)},viewWillUnmount(e){const t=this.owner.relation.trait;null!==t&&this.owner.relation.unmountTable(e,t)}})],r=[c.TraitViewControllerRef({extends:!0,attachHeaderView(e,t){super.attachHeaderView(e,t),this.initHeaderView(e,t)},initHeaderView(e,t){this.owner.disclosureCol.insertView(e),this.owner.titleCol.insertView(e)}})],l=[h.ViewRef({viewType:w.DisclosureColView,viewKey:"icon",get parentView(){return this.owner.header.attachView()},initView(e){const t=e.button.view;null!==t&&t.set({collapsedColor:n.Look.legendColor,expandedColor:n.Look.legendColor})},willAttachView(e){this.owner.callObservers("controllerWillAttachDisclosureColView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachDisclosureColView",e,this.owner)}})],a=[h.ViewRef({viewType:w.TextColView,viewKey:"title",get parentView(){return this.owner.header.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachTitleColView",e,this.owner)},didDetachView(e){this.owner.callObservers("controllerDidDetachTitleColView",e,this.owner)}})],o=[c.TraitViewControllerSet({extends:!0,compare(e,t){return this.owner.compareRowControllers(e,t)}})],d=[c.TraitControllerSet({controllerType:O,binds:!1,observes:!0,getTraitRef:e=>e.entity,willAttachController(e){this.owner.callObservers("controllerWillAttachEntityRow",e,this.owner)},didAttachController(e){const t=this.owner.rows.getTargetView(e);e.row.insertView(this.owner.table.view,void 0,t)},didDetachController(e){this.owner.callObservers("controllerDidDetachEntityRow",e,this.owner)},controllerDidPressLeafView(e,t,i,n){this.owner.callObservers("controllerDidPressEntityRow",e,t,n,this.owner)},controllerDidLongPressLeafView(e,t,i){this.owner.callObservers("controllerDidLongPressEntityRow",e,i,this.owner)},controllerDidPressMoreCellView(e,t,i){this.owner.callObservers("controllerDidPressEntityMore",e,t,i,this.owner)},compare(e,t){return this.owner.compareRowControllers(e,t)}})],C(null,null,t,{kind:"field",name:"relation",static:!1,private:!1,access:{has:e=>"relation"in e,get:e=>e.relation,set:(e,t)=>{e.relation=t}}},v,u),C(null,null,i,{kind:"field",name:"table",static:!1,private:!1,access:{has:e=>"table"in e,get:e=>e.table,set:(e,t)=>{e.table=t}}},p,u),C(null,null,r,{kind:"field",name:"header",static:!1,private:!1,access:{has:e=>"header"in e,get:e=>e.header,set:(e,t)=>{e.header=t}}},g,u),C(null,null,l,{kind:"field",name:"disclosureCol",static:!1,private:!1,access:{has:e=>"disclosureCol"in e,get:e=>e.disclosureCol,set:(e,t)=>{e.disclosureCol=t}}},V,u),C(null,null,a,{kind:"field",name:"titleCol",static:!1,private:!1,access:{has:e=>"titleCol"in e,get:e=>e.titleCol,set:(e,t)=>{e.titleCol=t}}},m,u),C(null,null,o,{kind:"field",name:"rows",static:!1,private:!1,access:{has:e=>"rows"in e,get:e=>e.rows,set:(e,t)=>{e.rows=t}}},f,u),C(null,null,d,{kind:"field",name:"entityRows",static:!1,private:!1,access:{has:e=>"entityRows"in e,get:e=>e.entityRows,set:(e,t)=>{e.entityRows=t}}},T,u),e})(),F=(()=>{var e;let t,i,n,l,a,o=[],h=[],w=[],v=[],p=[],g=[];return e=class extends u.SheetController{constructor(){super(...arguments),this.entity=(k(this,o),k(this,h,void 0)),this.sheet=k(this,w,void 0),this.searching=k(this,v,void 0),this.entityTable=k(this,p,void 0),this.relationTables=k(this,g,void 0)}updateSearch(e,t){const i=this.entity.trait;null!==i&&i.updateSearch(e)}submitSearch(e,t){const i=this.entity.trait;null!==i&&i.submitSearch(e)}},t=[s.TraitRef({traitType:L,observes:!0,willAttachTrait(e){this.owner.callObservers("controllerWillAttachEntityTrait",e,this.owner)},didAttachTrait(e){this.owner.sheet.attachView(),this.owner.title.set(e.title.value),this.owner.searchable.set(e.searchable.value),this.owner.entityTable.attachTrait(e);const t=e.relations.traits;for(const e in t){const i=t[e];i.hidden.value||this.owner.relationTables.addTrait(i)}},willDetachTrait(e){this.owner.relationTables.deleteTraits(e.relations.traits),this.owner.entityTable.deleteTrait(e)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachEntityTrait",e,this.owner)},traitDidSetTitle(e){const t=this.owner.title.attachController().tool.attachView();t instanceof d.TitleToolView&&t.content.set(e)},traitDidSetSearchable(e){this.owner.searchable.setIntrinsic(e)},traitWillAttachRelation(e,t){e.hidden.value||this.owner.relationTables.addTrait(e,t)},traitDidDetachRelation(e){this.owner.relationTables.deleteTrait(e)},traitDidSetRelationHidden(e,t){e?this.owner.relationTables.deleteTrait(t):this.owner.relationTables.addTrait(t)}})],i=[c.TraitViewRef({extends:!0})],n=[r.Property({extends:!0,didSetValue(e,t){super.didSetValue(e,t);const i=this.owner.entity.trait;null!==i&&i.searching.setIntrinsic(e)}})],l=[c.TraitControllerRef({controllerType:W,binds:!0,observes:!0,getTraitRef:e=>e.entity,willAttachController(e){this.owner.callObservers("controllerWillAttachEntityTable",e,this.owner)},didAttachController(e){e.table.insertView(this.owner.sheet.view)},didDetachController(e){this.owner.callObservers("controllerDidDetachEntityTable",e,this.owner)},controllerDidPressEntityRow(e,t,i){this.owner.callObservers("controllerDidPressEntityRow",e,t,i,this.owner)},controllerDidLongPressEntityRow(e,t){this.owner.callObservers("controllerDidLongPressEntityRow",e,t,this.owner)},controllerDidPressAspectRow(e,t,i){this.owner.callObservers("controllerDidPressAspectRow",e,t,i,this.owner)},controllerDidLongPressAspectRow(e,t){this.owner.callObservers("controllerDidLongPressAspectRow",e,t,this.owner)}})],a=[c.TraitControllerSet({controllerType:B,binds:!0,observes:!0,getTraitRef:e=>e.relation,willAttachController(e){this.owner.callObservers("controllerWillAttachRelationTable",e,this.owner)},didAttachController(e){e.table.insertView(this.owner.sheet.view)},didDetachController(e){this.owner.callObservers("controllerDidDetachRelationTable",e,this.owner)},controllerDidPressEntityRow(e,t,i){this.owner.callObservers("controllerDidPressRelatedEntityRow",e,t,i,this.owner)},controllerDidLongPressEntityRow(e,t){this.owner.callObservers("controllerDidLongPressRelatedEntityRow",e,t,this.owner)},controllerDidPressEntityMore(e,t,i){this.owner.callObservers("controllerDidPressRelatedEntityMore",e,t,i,this.owner)}})],C(null,null,t,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},h,o),C(null,null,i,{kind:"field",name:"sheet",static:!1,private:!1,access:{has:e=>"sheet"in e,get:e=>e.sheet,set:(e,t)=>{e.sheet=t}}},w,o),C(null,null,n,{kind:"field",name:"searching",static:!1,private:!1,access:{has:e=>"searching"in e,get:e=>e.searching,set:(e,t)=>{e.searching=t}}},v,o),C(null,null,l,{kind:"field",name:"entityTable",static:!1,private:!1,access:{has:e=>"entityTable"in e,get:e=>e.entityTable,set:(e,t)=>{e.entityTable=t}}},p,o),C(null,null,a,{kind:"field",name:"relationTables",static:!1,private:!1,access:{has:e=>"relationTables"in e,get:e=>e.relationTables,set:(e,t)=>{e.relationTables=t}}},g,o),e})(),H=(()=>{var e;let t,i,l,o,w,v,p,g,V,m,f,T,y,b,S,P,A,R,I=[],x=[],E=[],O=[],W=[],B=[],H=[],G=[],K=[],N=[],U=[],q=[],z=[],Z=[],j=[],X=[],Y=[],_=[],J=[];return e=class extends u.FolioController{constructor(){super(...arguments),this.rootEntity=(k(this,I),k(this,x,void 0)),this.drawer=k(this,E,void 0),this.stack=k(this,O,void 0),this.sheets=k(this,W,void 0),this.front=k(this,B,void 0),this.frontNav=k(this,H,void 0),this.frontEntity=k(this,G,void 0),this.frontStatus=k(this,K,void 0),this.folio=k(this,N,void 0),this.navBar=k(this,U,void 0),this.appBar=k(this,q,void 0),this.cover=k(this,z,void 0),this.coverEntity=k(this,Z,void 0),this.tabBar=k(this,j,void 0),this.binder=k(this,X,void 0),this.active=k(this,Y,void 0),this.selection=k(this,_,void 0),this.history=k(this,J,void 0)}createEntityNav(e){let t=e.createNavController();return null===t&&(t=new F,t.entity.setTrait(e)),t}showEntityNav(e,t){const i=this.createEntityNav(e);i.sheet.setTrait(e);const n=i.sheet.attachView();n.dismiss(),this.appendChild(i),this.sheets.addController(i),n.present(t)}showEntityBinder(e,t){const i=this.binder.insertController();i.sheet.setTrait(e),i.sheet.attachView().dismiss(),this.cover.setController(i),this.cover.present(t)}didPressBackButton(e,t){if(this.callObservers("controllerDidPressBackButton",e,t,this),e.defaultPrevented)return;const i=this.frontEntity.trait;let n;if(null===i||null===(n=i.path.value))return;const r=this.coverEntity.trait,s=null!==r?r.path.value:null,l=this.history.getService(),o=l.historyState;let c;const h={},w={};if("unstacked"===this.folioStyle.value)c=n.toString();else if(null===s||n.equals(a.UriPath.slash())){let e=n.parent().parent();e.isEmpty()&&(e=a.UriPath.slash()),c=e.toString(),h.aspect=void 0}else c=n.appendedSlash().toString(),h.aspect=void 0;void 0!==o.parameters.aspect&&(w.aspect=o.parameters.aspect),l.pushHistory({fragment:c,parameters:h,environment:w})}updateNavigationState(){let e=this.rootEntity.trait;if(null===e)return;null===this.root.controller&&this.showEntityNav(e);let t=this.root.controller;if(!(t instanceof F))return;const i=this.history.getService().historyState;let n;try{n=void 0!==i.fragment?a.UriPath.parse(i.fragment):a.UriPath.empty()}catch(e){return}let r=n;for(r.isAbsolute()&&(r=r.tail());r.isSegment();){let i=r;const n=i.head(),s=e.relations.get(n);if(null===s)break;i=i.tail(),i.isAbsolute()&&(i=i.tail());const l=i.head(),a=s.entities.get(l);if(null===a)break;i=i.tail();const o=t.forward.controller;if(!(o instanceof F))break;const c=o.entity.trait;if(null===c)return;if(a!==c)break;if(!i.isAbsolute())break;i=i.tail(),e=c,t=o,r=i}let s=t.forward.controller;if(null!==s){do{if(null===s.forward.controller)break;s=s.forward.controller}while(null!==s);for(;null!==s&&s!==t;){const e=s.back.controller,t=s.sheet.view;null!==t&&t.dismiss(),s=e}}for(;r.isSegment();){const t=r.head(),i=e.relations.get(t);if(null===i)return;if(r=r.tail(),!r.isAbsolute())return;r=r.tail();const n=r.head(),s=i.entities.getOrInsert(n);if(null===s)return;r=r.tail(),r.isAbsolute()&&(this.showEntityNav(s),r=r.tail()),e=s}"unstacked"===this.folioStyle.value||void 0!==i.parameters.aspect||n.isEmpty()||!n.foot().isAbsolute()?(this.showEntityBinder(e),this.selection.getService().select(e.model)):this.selection.getService().unselectAll()}onResolve(){super.onResolve(),this.updateNavigationState()}},t=[s.TraitRef({traitType:L,didAttachTrait(e){this.owner.mounted&&this.owner.requireUpdate(c.Controller.NeedsResolve)}})],i=[h.ViewRef({extends:!0,initView(e){super.initView(e),e.style.backgroundColor.setIntrinsic(n.Look.backgroundColor)},updateFullBleed(e,t){super.updateFullBleed(e,t),t.style.backdropFilter.setIntrinsic(e?"blur(2px)":"none"),t.modifyMood(n.Feel.default,[[n.Feel.translucent,e?1:0]],!1)}})],l=[c.TraitViewRef({extends:!0,updateFolioStyle(e,t){const i=this.owner.fullBleed.value;this.owner.backAlign.setIntrinsic(i&&"unstacked"===e?-1:-1/3)},updateFullBleed(e,t){super.updateFullBleed(e,t);const i=this.owner.folioStyle.value;this.owner.backAlign.setIntrinsic(e&&"unstacked"===i?-1:-1/3),this.owner.navBar.updateFrontScroll(this.owner.front.view)}})],o=[c.TraitViewControllerSet({extends:!0,updateFolioStyle(e,t,i){super.updateFolioStyle(e,t,i);const r=this.owner.fullBleed.value;t.modifyMood(n.Feel.default,[[n.Feel.transparent,r&&"unstacked"===e?1:0]],!1)},updateFullBleed(e,t,i){super.updateFullBleed(e,t,i);const r=this.owner.folioStyle.value;t.modifyMood(n.Feel.default,[[n.Feel.transparent,e&&"unstacked"===r?1:0]],!1)}})],w=[c.TraitViewControllerRef({extends:!0,didAttachController(e,t){if(super.didAttachController(e,t),!(e instanceof F))return;const i=e.entity.trait;this.owner.frontEntity.setTrait(i),this.owner.frontNav.setController(e)},willDetachController(e){super.willDetachController(e),e instanceof F&&this.owner.frontNav.setController(null)},controllerWillAttachTitle(e,t){const i=e.tool.view;null!==i&&i.style.cursor.setIntrinsic("pointer")}})],v=[c.ControllerRef({controllerType:F,observes:!0,controllerDidPressEntityRow(e,t,i){if(e.defaultPrevented)return;const n=i.entity.trait;let r;if(null===n||null===(r=n.path.value))return;const s=this.owner.history.getService(),l=s.historyState;let a;r.isAbsolute()&&!r.tail().isEmpty()&&(a=r.appendedSlash().toString());const o={};if("stacked"===this.owner.folioStyle.value){let e=l.parameters.aspect;if(void 0!==e&&0!==e.length||(e=l.environment.aspect),void 0===e||0===e.length){const t=n.aspect.trait;e=null!==t?t.id.value:void 0}o.aspect=e}a===l.fragment&&o.aspect===l.parameters.aspect||s.pushHistory({fragment:a,parameters:o})},controllerDidLongPressEntityRow(e,t){e.defaultPrevented||e.preventDefault()},controllerDidPressRelatedEntityRow(e,t,i){if(e.defaultPrevented)return;const n=i.entity.trait;let r;if(null===n||null===(r=n.path.value))return;const s=this.owner.history.getService(),l=s.historyState,a=r.toString(),o={};if("stacked"===this.owner.folioStyle.value){let e=l.parameters.aspect;if(void 0!==e&&0!==e.length||(e=l.environment.aspect),void 0===e||0===e.length){const t=n.aspect.trait;e=null!==t?t.id.value:void 0}o.aspect=e}a===l.fragment&&o.aspect===l.parameters.aspect||s.pushHistory({fragment:a,parameters:o})},controllerDidLongPressRelatedEntityRow(e,t){e.defaultPrevented||e.preventDefault()},controllerDidPressRelatedEntityMore(e,t,i){if(e.defaultPrevented)return;e.preventDefault();const n=i.entity.trait;let r;if(null===n||null===(r=n.path.value))return;const s=this.owner.history.getService(),l=s.historyState;let a;r.isAbsolute()&&!r.tail().isEmpty()&&(a=r.appendedSlash().toString()),a!==l.fragment&&s.pushHistory({fragment:a})}})],p=[s.TraitRef({traitType:L,observes:!0,initTrait(e){this.owner.frontStatus.setIntrinsic(e.status.value)},traitDidSetStatus(e){this.owner.frontStatus.setIntrinsic(e)}})],g=[r.Property({valueType:D,value:D.unknown(),didSetValue(e){this.owner.navBar.updateStatus(e)}})],V=[c.TraitViewRef({extends:!0,initView(e){super.initView(e);const t=e.drawer.attachView();t.expandedWidth.set(280),t.modifyTheme(n.Feel.default,[[n.Feel.raised,1]])},viewDidSetFolioStyle(e,t){super.viewDidSetFolioStyle(e,t),this.owner.requireUpdate(c.Controller.NeedsResolve)}})],m=[c.TraitViewControllerRef({extends:!0,initController(e){super.initController(e),e instanceof u.NavBarController&&(e.closeButton.insertController().tool.setView(null),e.backButton.insertController(),e.searchButton.insertController(),e.searchInput.insertController(),e.cancelSearch.insertController())},attachNavBarView(e,t){super.attachNavBarView(e,t),e.modifyMood(n.Feel.default,[[n.Feel.translucent,0],[n.Feel.transparent,1]]),e.style.backgroundColor.setIntrinsic(n.Look.backgroundColor),e.barHeight.setIntrinsic(48),this.updateFrontScroll(this.owner.front.view)},updateFolioStyle(e,t){super.updateFolioStyle(e,t),t instanceof u.NavBarController&&t.showBackTitle.setIntrinsic("stacked"===e)},frontViewDidScroll(e,t){super.frontViewDidScroll(e,t),this.updateFrontScroll(e)},updateFrontScroll(e){const t=this.view;if(null===t)return;const i=null!==e?e.node.scrollTop:0,r=this.owner.folioStyle.value,s=this.owner.fullBleed.value,l=0===i&&(!s||"stacked"!==r),a=t.getLook(n.Look.timing);t.style.backgroundColor.setIntrinsic(n.Look.backgroundColor,a),t.style.backdropFilter.setIntrinsic(l?"none":"blur(2px)"),t.modifyMood(n.Feel.default,[[n.Feel.translucent,1],[n.Feel.transparent,l?1:0]],a)},updateStatus(e){const t=this.view;null!==t&&t.modifyMood(n.Feel.default,e.moodModifier)}})],f=[c.TraitViewControllerRef({extends:!0,initController(e){super.initController(e),e instanceof u.AppBarController&&e.menuButton.insertController()},attachAppBarView(e,t){super.attachAppBarView(e,t),e.modifyMood(n.Feel.default,[[n.Feel.translucent,1],[n.Feel.transparent,1]]),e.style.backgroundColor.setIntrinsic(n.Look.backgroundColor),e.barHeight.setIntrinsic(48)},coverViewDidScroll(e,t){super.coverViewDidScroll(e,t);const i=t.bar.view;null!==i&&(0===e.node.scrollTop?(i.style.backdropFilter.setIntrinsic("none"),i.modifyMood(n.Feel.default,[[n.Feel.transparent,1]])):(i.style.backdropFilter.setIntrinsic("blur(2px)"),i.modifyMood(n.Feel.default,[[n.Feel.transparent,0]])))}})],T=[c.TraitViewControllerRef({extends:!0,attachCoverTrait(e,t){super.attachCoverTrait(e,t),e instanceof L&&this.owner.coverEntity.setTrait(e)},detachCoverTrait(e,t){e instanceof L&&this.owner.coverEntity.setTrait(null),super.detachCoverTrait(e,t)},controllerWillPresentSheetView(e,t){const i=t.sheet.trait;i instanceof L&&this.owner.coverEntity.setTrait(i)},controllerWillDismissSheetView(e,t){t.sheet.trait instanceof L&&this.owner.coverEntity.setTrait(null)}})],y=[s.TraitRef({traitType:L})],b=[c.TraitViewControllerRef({controllerType:d.BarController,observes:!0,getTraitViewRef:e=>e.bar,didAttachController(e){const t=e.bar.view;null!==t&&this.attachTabBarView(t,e)},willDetachController(e){const t=e.bar.view;null!==t&&this.detachTabBarView(t,e)},controllerWillAttachBarView(e,t){this.attachTabBarView(e,t)},controllerDidDetachBarView(e,t){this.detachTabBarView(e,t)},attachTabBarView(e,t){},detachTabBarView(e,t){},controllerDidPressTabHandle(e,t,i){},controllerDidLongPressTabHandle(e,t){}})],S=[c.TraitViewControllerRef({controllerType:M,observes:!0,getTraitViewRef:e=>e.binder,initController(e){e.binder.attachView(),e.tabBar.insertController()},didAttachController(e){const t=e.binder.trait;null!==t&&this.attachBinderTrait(t,e);const i=e.binder.view;null!==i&&this.attachBinderView(i,e),this.owner.tabBar.bindInlet(e.tabBar),this.owner.active.bindInlet(e.active)},willDetachController(e){this.owner.active.unbindInlet(e.active),this.owner.tabBar.unbindInlet(e.tabBar);const t=e.binder.view;null!==t&&this.detachBinderView(t,e);const i=e.binder.trait;null!==i&&this.detachBinderTrait(i,e)},controllerWillAttachBinderTrait(e,t){this.attachBinderTrait(e,t)},controllerDidDetachBinderTrait(e,t){this.detachBinderTrait(e,t)},attachBinderTrait(e,t){},detachBinderTrait(e,t){},controllerWillAttachBinderView(e,t){this.attachBinderView(e,t)},controllerDidDetachBinderView(e,t){this.detachBinderView(e,t)},attachBinderView(e,t){},detachBinderView(e,t){this.detachController()}})],P=[c.TraitViewControllerRef({controllerType:u.SheetController,observes:!0,getTraitViewRef:e=>e.sheet,didAttachController(e){const t=e.sheet.trait;null!==t&&this.attachActiveTrait(t,e);const i=e.sheet.attachView();this.attachActiveView(i,e)},willDetachController(e){const t=e.sheet.view;null!==t&&this.detachActiveView(t,e);const i=e.sheet.trait;null!==i&&this.detachActiveTrait(i,e)},controllerWillAttachSheetTrait(e,t){this.attachActiveTrait(e,t)},controllerDidDetachSheetTrait(e,t){this.detachActiveTrait(e,t)},attachActiveTrait(e,t){},detachActiveTrait(e,t){},controllerWillAttachSheetView(e,t){this.attachActiveView(e,t)},controllerDidDetachSheetView(e,t){this.detachActiveView(e,t)},attachActiveView(e,t){},detachActiveView(e,t){}})],A=[r.Provider({serviceType:s.SelectionService})],R=[r.Provider({serviceType:c.HistoryService,observes:!0,updateHistory(e,t){null!==t&&e.fragment===t.fragment&&e.parameters.aspect===t.parameters.aspect||this.owner.requireUpdate(c.Controller.NeedsResolve)},serviceDidPushHistory(e,t){this.updateHistory(e,t)},serviceDidPopHistory(e,t){this.updateHistory(e,t)}})],C(null,null,t,{kind:"field",name:"rootEntity",static:!1,private:!1,access:{has:e=>"rootEntity"in e,get:e=>e.rootEntity,set:(e,t)=>{e.rootEntity=t}}},x,I),C(null,null,i,{kind:"field",name:"drawer",static:!1,private:!1,access:{has:e=>"drawer"in e,get:e=>e.drawer,set:(e,t)=>{e.drawer=t}}},E,I),C(null,null,l,{kind:"field",name:"stack",static:!1,private:!1,access:{has:e=>"stack"in e,get:e=>e.stack,set:(e,t)=>{e.stack=t}}},O,I),C(null,null,o,{kind:"field",name:"sheets",static:!1,private:!1,access:{has:e=>"sheets"in e,get:e=>e.sheets,set:(e,t)=>{e.sheets=t}}},W,I),C(null,null,w,{kind:"field",name:"front",static:!1,private:!1,access:{has:e=>"front"in e,get:e=>e.front,set:(e,t)=>{e.front=t}}},B,I),C(null,null,v,{kind:"field",name:"frontNav",static:!1,private:!1,access:{has:e=>"frontNav"in e,get:e=>e.frontNav,set:(e,t)=>{e.frontNav=t}}},H,I),C(null,null,p,{kind:"field",name:"frontEntity",static:!1,private:!1,access:{has:e=>"frontEntity"in e,get:e=>e.frontEntity,set:(e,t)=>{e.frontEntity=t}}},G,I),C(null,null,g,{kind:"field",name:"frontStatus",static:!1,private:!1,access:{has:e=>"frontStatus"in e,get:e=>e.frontStatus,set:(e,t)=>{e.frontStatus=t}}},K,I),C(null,null,V,{kind:"field",name:"folio",static:!1,private:!1,access:{has:e=>"folio"in e,get:e=>e.folio,set:(e,t)=>{e.folio=t}}},N,I),C(null,null,m,{kind:"field",name:"navBar",static:!1,private:!1,access:{has:e=>"navBar"in e,get:e=>e.navBar,set:(e,t)=>{e.navBar=t}}},U,I),C(null,null,f,{kind:"field",name:"appBar",static:!1,private:!1,access:{has:e=>"appBar"in e,get:e=>e.appBar,set:(e,t)=>{e.appBar=t}}},q,I),C(null,null,T,{kind:"field",name:"cover",static:!1,private:!1,access:{has:e=>"cover"in e,get:e=>e.cover,set:(e,t)=>{e.cover=t}}},z,I),C(null,null,y,{kind:"field",name:"coverEntity",static:!1,private:!1,access:{has:e=>"coverEntity"in e,get:e=>e.coverEntity,set:(e,t)=>{e.coverEntity=t}}},Z,I),C(null,null,b,{kind:"field",name:"tabBar",static:!1,private:!1,access:{has:e=>"tabBar"in e,get:e=>e.tabBar,set:(e,t)=>{e.tabBar=t}}},j,I),C(null,null,S,{kind:"field",name:"binder",static:!1,private:!1,access:{has:e=>"binder"in e,get:e=>e.binder,set:(e,t)=>{e.binder=t}}},X,I),C(null,null,P,{kind:"field",name:"active",static:!1,private:!1,access:{has:e=>"active"in e,get:e=>e.active,set:(e,t)=>{e.active=t}}},Y,I),C(null,null,A,{kind:"field",name:"selection",static:!1,private:!1,access:{has:e=>"selection"in e,get:e=>e.selection,set:(e,t)=>{e.selection=t}}},_,I),C(null,null,R,{kind:"field",name:"history",static:!1,private:!1,access:{has:e=>"history"in e,get:e=>e.history,set:(e,t)=>{e.history=t}}},J,I),e.MountFlags=u.FolioController.MountFlags|c.Controller.NeedsResolve,e})(),G=(()=>{var e;let t,i,n,l,a,o,w,d,m,f,T=[],y=[],b=[],D=[],S=[],P=[],A=[],R=[],I=[],x=[],E=[];return e=class extends u.SheetController{constructor(){super(...arguments),this.entity=(k(this,T),k(this,y,void 0)),this.location=k(this,b,void 0),this.locationTracking=k(this,D,void 0),this.map=k(this,S,void 0),this.sheet=k(this,P,void 0),this.mapPanel=k(this,A,void 0),this.panel=k(this,R,void 0),this.panelHeader=k(this,I,void 0),this.panelTitle=k(this,x,void 0),this.panelSubtitle=k(this,E,void 0)}createMapView(e){const t=new mapboxgl.Map({container:e.node,boxZoom:!1,center:{lng:0,lat:0},zoom:1});return new V.MapboxView(t)}},t=[s.TraitRef({traitType:L,inherits:!0,observes:!0,willAttachTrait(e){e.consume(this)},didAttachTrait(e){this.owner.hostUri.bindInlet(e.hostUri);const t=e.getTrait(g.GeoTrait);null!==t&&this.owner.location.insertTrait(void 0,t)},willDetachTrait(e){e.getTrait(g.GeoTrait)===this.owner.location.trait&&this.owner.location.setTrait(null),this.owner.hostUri.unbindInlet(e.hostUri)},didDetachTrait(e){e.unconsume(this)},traitDidInsertTrait(e,t){e instanceof g.GeoTrait&&this.owner.location.setTrait(e)}})],i=[c.TraitViewControllerRef({controllerType:g.GeoController,observes:!0,getTraitViewRef:e=>e.geo,init(){this.located=!1},didAttachController(e){const t=e.geo.trait;null!==t&&this.attachGeoTrait(t,e);const i=e.geo.attachView();this.attachGeoView(i,e),this.owner.map.attachController().layers.addController(e)},willDetachController(e){const t=this.owner.map.controller;null!==t&&t.layers.deleteController(e);const i=e.geo.view;null!==i&&this.detachGeoView(i,e);const n=e.geo.trait;null!==n&&this.detachGeoTrait(n,e)},controllerWillAttachGeoTrait(e,t){this.attachGeoTrait(e,t)},controllerDidDetachGeoTrait(e,t){this.detachGeoTrait(e,t)},attachGeoTrait(e,t){e.consume(this);const i=e.geoPerspective.value;let n;null!==i&&null!==(n=this.owner.map.view)?(n.moveTo(i,this.located),this.located=!0):this.owner.locationTracking.setIntrinsic(!0)},detachGeoTrait(e,t){this.owner.locationTracking.setIntrinsic(!1),e.unconsume(this),this.deleteController()},controllerWillAttachGeoView(e,t){this.attachGeoView(e,t)},controllerDidDetachGeoView(e,t){this.detachGeoView(e,t)},attachGeoView(e,t){},detachGeoView(e,t){},controllerDidSetGeoPerspective(e){let t;null!==e&&this.owner.locationTracking.value&&null!==(t=this.owner.map.view)&&(t.moveTo(e,this.located),this.located=!0,this.owner.locationTracking.setIntrinsic(!1))},createController(e){return void 0!==e?e.createGeoController():super.createController(e)}})],n=[r.Property({valueType:Boolean,value:!1})],l=[c.TraitViewControllerRef({controllerType:g.MapController,consumed:!0,observes:!0,get parentView(){return this.owner.sheet.view},getTraitViewRef:e=>e.map,initController(e){const t=this.owner.sheet.view;null!==t&&this.attachContainerView(t,e)},deinitController(e){const t=this.owner.sheet.view;null!==t&&this.detachContainerView(t,e)},willAttachController(e){this.owner.callObservers("controllerWillAttachMap",e,this.owner)},didDetachController(e){this.owner.callObservers("controllerDidDetachMap",e,this.owner)},controllerWillAttachMapView(e,t){e.canvas.attachView().setIntrinsic({pointerEvents:!0})},attachContainerView(e,t){let i=t.map.view;null===i&&(i=this.owner.createMapView(e),t.map.setView(i)),t.container.setView(e)},detachContainerView(e,t){const i=t.map.view;null!==i&&i.container.setView(null)}})],a=[c.TraitViewRef({extends:!0,initView(e){super.initView(e),e.fullBleed.setIntrinsic(!0);const t=this.owner.map.attachController();this.owner.map.attachContainerView(e,t)},deinitView(e){const t=this.owner.map.controller;null!==t&&this.owner.map.detachContainerView(e,t),super.deinitView(e)}})],o=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},initView(e){super.initView(e);const t=this.owner.map.attachController();this.owner.map.attachContainerView(e,t)},deinitView(e){const t=this.owner.map.controller;null!==t&&this.owner.map.detachContainerView(e,t),super.deinitView(e)},createView(){return super.createView().setIntrinsic({classList:["map-panel"],unitWidth:1,unitHeight:1,minPanelHeight:0})}})],w=[h.ViewRef({viewType:p.PanelView,observes:!0,initView(e){this.owner.mapPanel.insertView(e)},didAttachView(e,t){this.owner.panelHeader.setView(e.header.view),this.owner.panelTitle.setView(e.headerTitle.view),this.owner.panelSubtitle.setView(e.headerSubtitle.view)},willDetachView(e){this.owner.panelHeader.setView(null),this.owner.panelTitle.setView(null),this.owner.panelSubtitle.setView(null)},viewWillAttachHeader(e){this.owner.panelHeader.setView(e)},viewDidDetachHeader(e){this.owner.panelHeader.setView(null)},viewWillAttachHeaderTitle(e){this.owner.panelTitle.setView(e)},viewDidDetachHeaderTitle(e){this.owner.panelTitle.setView(null)},viewWillAttachHeaderSubtitle(e){this.owner.panelSubtitle.setView(e)},viewDidDetachHeaderSubtitle(e){this.owner.panelSubtitle.setView(null)},viewDidMount(e){this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)}})],d=[h.ViewRef({viewType:v.HtmlView,viewKey:!0,get parentView(){return this.owner.panel.attachView().header.parentView},initView(e){e.style.pointerEvents.setIntrinsic("none"),this.owner.panel.attachView().header.setView(e)},createView(){return this.owner.panel.attachView().header.createView()}})],m=[h.ViewRef({viewType:v.HtmlView,viewKey:!0,get parentView(){return this.owner.panel.attachView().headerTitle.parentView},initView(e){this.owner.panel.attachView().headerTitle.setView(e)},setText(e){return this.owner.panel.attachView().headerTitle.set(e)},createView(){return this.owner.panel.attachView().headerTitle.createView()}})],f=[h.ViewRef({viewType:v.HtmlView,viewKey:!0,get parentView(){return this.owner.panel.attachView().headerSubtitle.parentView},initView(e){this.owner.panel.attachView().headerSubtitle.setView(e)},setText(e){return this.owner.panel.attachView().headerSubtitle.set(e)},createView(){return this.owner.panel.attachView().headerSubtitle.createView()}})],C(null,null,t,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},y,T),C(null,null,i,{kind:"field",name:"location",static:!1,private:!1,access:{has:e=>"location"in e,get:e=>e.location,set:(e,t)=>{e.location=t}}},b,T),C(null,null,n,{kind:"field",name:"locationTracking",static:!1,private:!1,access:{has:e=>"locationTracking"in e,get:e=>e.locationTracking,set:(e,t)=>{e.locationTracking=t}}},D,T),C(null,null,l,{kind:"field",name:"map",static:!1,private:!1,access:{has:e=>"map"in e,get:e=>e.map,set:(e,t)=>{e.map=t}}},S,T),C(null,null,a,{kind:"field",name:"sheet",static:!1,private:!1,access:{has:e=>"sheet"in e,get:e=>e.sheet,set:(e,t)=>{e.sheet=t}}},P,T),C(null,null,o,{kind:"field",name:"mapPanel",static:!1,private:!1,access:{has:e=>"mapPanel"in e,get:e=>e.mapPanel,set:(e,t)=>{e.mapPanel=t}}},A,T),C(null,null,w,{kind:"field",name:"panel",static:!1,private:!1,access:{has:e=>"panel"in e,get:e=>e.panel,set:(e,t)=>{e.panel=t}}},R,T),C(null,null,d,{kind:"field",name:"panelHeader",static:!1,private:!1,access:{has:e=>"panelHeader"in e,get:e=>e.panelHeader,set:(e,t)=>{e.panelHeader=t}}},I,T),C(null,null,m,{kind:"field",name:"panelTitle",static:!1,private:!1,access:{has:e=>"panelTitle"in e,get:e=>e.panelTitle,set:(e,t)=>{e.panelTitle=t}}},x,T),C(null,null,f,{kind:"field",name:"panelSubtitle",static:!1,private:!1,access:{has:e=>"panelSubtitle"in e,get:e=>e.panelSubtitle,set:(e,t)=>{e.panelSubtitle=t}}},E,T),e})(),K=(()=>{var e;let i,n=[];return e=class e extends P{constructor(){super(),this.id.setIntrinsic("atlas"),this.title.setIntrinsic("Atlas"),this.icon.setIntrinsic(e.icon)}createTabController(){return this.constructor.sharedController()}static sharedController(){let e;return Object.hasOwnProperty.call(this,"SharedController")&&(e=this.SharedController),void 0===e&&(e=this.createSharedController(),Object.defineProperty(this,"SharedController",{value:e,enumerable:!0,configurable:!0})),e}static createSharedController(){return new G}static get icon(){return l.VectorIcon.create(24,24,"M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM10 5.47l4 1.4v11.66l-4-1.4V5.47zm-5 .99l3-1.01v11.7l-3 1.16V6.46zm14 11.08l-3 1.01V6.86l3-1.16v11.84z")}},i=[t.Lazy],C(e,null,i,{kind:"getter",name:"icon",static:!0,private:!1,access:{has:e=>"icon"in e,get:e=>e.icon}},null,n),k(e,n),e.SharedController=void 0,e})(),N=(()=>{var e;let t,i,n,s,a=[],o=[],h=[],w=[];return e=class extends g.GeoLayerTrait{constructor(){super(...arguments),this.geoShape=(k(this,a),k(this,o,void 0)),this.geoCenter=k(this,h,void 0),this.geoIcon=k(this,w,void 0)}get hyperlink(){return r.Property.getter()}createGeoController(){return new U}},t=[r.Property({valueType:m.GeoShape,value:null,didSetValue(e){this.owner.callObservers("traitDidSetGeoShape",e,this.owner),this.owner.geoPerspective.setIntrinsic(e),null!==e&&this.owner.geoCenter.setIntrinsic(e.bounds.center)}})],i=[r.Property({valueType:m.GeoPoint,value:null,didSetValue(e){this.owner.callObservers("traitDidSetGeoCenter",e,this.owner)}})],n=[r.Property({valueType:l.Graphics,value:null,didSetValue(e){this.owner.callObservers("traitDidSetGeoIcon",e,this.owner)}})],s=[r.Property({valueType:c.Hyperlink,value:null})],C(e,null,s,{kind:"getter",name:"hyperlink",static:!1,private:!1,access:{has:e=>"hyperlink"in e,get:e=>e.hyperlink}},null,a),C(null,null,t,{kind:"field",name:"geoShape",static:!1,private:!1,access:{has:e=>"geoShape"in e,get:e=>e.geoShape,set:(e,t)=>{e.geoShape=t}}},o,a),C(null,null,i,{kind:"field",name:"geoCenter",static:!1,private:!1,access:{has:e=>"geoCenter"in e,get:e=>e.geoCenter,set:(e,t)=>{e.geoCenter=t}}},h,a),C(null,null,n,{kind:"field",name:"geoIcon",static:!1,private:!1,access:{has:e=>"geoIcon"in e,get:e=>e.geoIcon,set:(e,t)=>{e.geoIcon=t}}},w,a),e})(),U=(()=>{var e;let t,i,a,o,w,d,u,v,p,V,T,y,b,S,P,A,R,I=[],x=[],E=[],M=[],O=[],W=[],B=[],F=[],H=[],G=[];return e=class extends g.GeoLayerController{constructor(){super(...arguments),this.status=(k(this,I),k(this,x,void 0)),this.entity=k(this,E,void 0),this.selectable=k(this,M,void 0),this.geo=k(this,O,void 0),this.shape=k(this,W,void 0),this.geoShape=k(this,B,void 0),this.icon=k(this,F,void 0),this.geoIcon=k(this,H,void 0),this.geoCenter=k(this,G,void 0)}get fill(){return r.Property.getter()}get fillOpacity(){return r.Property.getter()}get stroke(){return r.Property.getter()}get strokeOpacity(){return r.Property.getter()}get strokeWidth(){return r.Property.getter()}get iconLayout(){return r.Property.getter()}get iconColor(){return r.Property.getter()}get hyperlink(){return r.Property.getter()}},t=[r.Property({valueType:D,value:D.unknown(),didSetValue(e){this.owner.geo.updateStatus(e)}})],i=[s.TraitRef({traitType:L,consumed:!0,observes:!0,willAttachTrait(e){this.owner.callObservers("controllerWillAttachEntityTrait",e,this.owner)},didAttachTrait(e){this.owner.selectable.setTrait(e.getTrait(s.SelectableTrait))},initTrait(e){this.owner.status.bindInlet(e.status),this.owner.selectable.setTrait(e.getTrait(s.SelectableTrait))},deinitTrait(e){this.owner.selectable.setTrait(null),this.owner.status.unbindInlet(e.status)},willDetachTrait(e){this.owner.selectable.setTrait(null)},didDetachTrait(e){this.owner.callObservers("controllerDidDetachEntityTrait",e,this.owner)},traitDidInsertTrait(e,t){e instanceof s.SelectableTrait&&this.owner.selectable.setTrait(e)}})],a=[s.TraitRef({traitType:s.SelectableTrait,observes:!0,initTrait(e){this.updateSelected(e.selected)},traitDidSelect(e){this.updateSelected(!0)},traitWillUnselect(){this.updateSelected(!1)},updateSelected(e){this.owner.fillOpacity.setIntrinsic(e?.25:.1),this.owner.strokeOpacity.setIntrinsic(e?.5:.2)}})],o=[c.TraitViewRef({extends:!0,traitType:N,initTrait(e){null===this.owner.entity.trait&&this.owner.entity.setTrait(e.getTrait(L)),this.owner.geoPerspective.bindInlet(e.geoPerspective),this.owner.geoShape.bindInlet(e.geoShape),this.owner.geoCenter.bindInlet(e.geoCenter),this.owner.geoIcon.bindInlet(e.geoIcon),this.owner.hyperlink.bindInlet(e.hyperlink)},deinitTrait(e){this.owner.geoPerspective.unbindInlet(e.geoPerspective),this.owner.geoShape.unbindInlet(e.geoShape),this.owner.geoCenter.unbindInlet(e.geoCenter),this.owner.geoIcon.unbindInlet(e.geoIcon),this.owner.hyperlink.unbindInlet(e.hyperlink),this.owner.entity.trait===e.getTrait(L)&&this.owner.entity.setTrait(null)},viewType:g.GeoView,initView(e){super.initView(e),this.updateStatus(this.owner.status.value)},updateStatus(e){const t=this.view;null!==t&&t.modifyMood(n.Feel.default,e.moodModifier)}})],w=[h.ViewRef({viewType:g.GeoShapeView,observes:!0,get parentView(){return this.owner.geo.attachView()},insertChild(e,t,i,n){null===i&&(i=this.owner.icon.view),e.insertChild(t,i,n)},initView(e){super.initView(e),e.geoShape.bindInlet(this.owner.geoShape),e.fill.bindInlet(this.owner.fill),e.fillOpacity.bindInlet(this.owner.fillOpacity),e.stroke.bindInlet(this.owner.stroke),e.strokeOpacity.bindInlet(this.owner.strokeOpacity),e.strokeWidth.bindInlet(this.owner.strokeWidth),e.hyperlink.bindInlet(this.owner.hyperlink)},deinitView(e){e.geoShape.unbindInlet(this.owner.geoShape),e.fill.unbindInlet(this.owner.fill),e.fillOpacity.unbindInlet(this.owner.fillOpacity),e.stroke.unbindInlet(this.owner.stroke),e.strokeOpacity.unbindInlet(this.owner.strokeOpacity),e.strokeWidth.unbindInlet(this.owner.strokeWidth),e.hyperlink.unbindInlet(this.owner.hyperlink),super.deinitView(e)},viewDidEnter(e){},viewDidLeave(e){},viewDidPress(e,t,i){},viewDidLongPress(e,t){}})],d=[r.Property({valueType:m.GeoShape,value:null,didSetValue(e){this.owner.geoPerspective.setIntrinsic(e),null!==e?this.owner.shape.insertView():this.owner.shape.deleteView()}})],u=[r.Property({valueType:n.ColorLook,value:n.Look.accentColor,transition:!0})],v=[r.Property({valueType:n.NumberLook,value:.1,transition:!0})],p=[r.Property({valueType:n.ColorLook,value:n.Look.accentColor,transition:!0})],V=[r.Property({valueType:n.NumberLook,value:.2,transition:!0})],T=[r.Property({valueType:f.Length,value:1,transition:!0})],y=[h.ViewRef({viewType:g.GeoIconView,observes:!0,get parentView(){return this.owner.geo.attachView()},initView(e){super.initView(e),e.geoCenter.bindInlet(this.owner.geoCenter),e.iconLayout.bindInlet(this.owner.iconLayout),e.iconColor.bindInlet(this.owner.iconColor),e.graphics.bindInlet(this.owner.geoIcon),e.hyperlink.bindInlet(this.owner.hyperlink)},deinitView(e){e.geoCenter.unbindInlet(this.owner.geoCenter),e.iconLayout.unbindInlet(this.owner.iconLayout),e.iconColor.unbindInlet(this.owner.iconColor),e.graphics.unbindInlet(this.owner.geoIcon),e.hyperlink.unbindInlet(this.owner.hyperlink),super.deinitView(e)},viewDidEnter(e){},viewDidLeave(e){},viewDidPress(e,t,i){},viewDidLongPress(e,t){}})],b=[r.Property({valueType:l.Graphics,value:null,didSetValue(e){null!==e?this.owner.icon.insertView():this.owner.icon.deleteView()}})],S=[r.Property({valueType:m.GeoPoint,value:null,transition:!0})],P=[r.Property({valueType:l.IconLayout,value:l.IconLayout.of(16,16)})],A=[r.Property({valueType:n.ColorLook,value:n.Look.accentColor,transition:!0})],R=[r.Property({valueType:c.Hyperlink,value:null})],C(e,null,u,{kind:"getter",name:"fill",static:!1,private:!1,access:{has:e=>"fill"in e,get:e=>e.fill}},null,I),C(e,null,v,{kind:"getter",name:"fillOpacity",static:!1,private:!1,access:{has:e=>"fillOpacity"in e,get:e=>e.fillOpacity}},null,I),C(e,null,p,{kind:"getter",name:"stroke",static:!1,private:!1,access:{has:e=>"stroke"in e,get:e=>e.stroke}},null,I),C(e,null,V,{kind:"getter",name:"strokeOpacity",static:!1,private:!1,access:{has:e=>"strokeOpacity"in e,get:e=>e.strokeOpacity}},null,I),C(e,null,T,{kind:"getter",name:"strokeWidth",static:!1,private:!1,access:{has:e=>"strokeWidth"in e,get:e=>e.strokeWidth}},null,I),C(e,null,P,{kind:"getter",name:"iconLayout",static:!1,private:!1,access:{has:e=>"iconLayout"in e,get:e=>e.iconLayout}},null,I),C(e,null,A,{kind:"getter",name:"iconColor",static:!1,private:!1,access:{has:e=>"iconColor"in e,get:e=>e.iconColor}},null,I),C(e,null,R,{kind:"getter",name:"hyperlink",static:!1,private:!1,access:{has:e=>"hyperlink"in e,get:e=>e.hyperlink}},null,I),C(null,null,t,{kind:"field",name:"status",static:!1,private:!1,access:{has:e=>"status"in e,get:e=>e.status,set:(e,t)=>{e.status=t}}},x,I),C(null,null,i,{kind:"field",name:"entity",static:!1,private:!1,access:{has:e=>"entity"in e,get:e=>e.entity,set:(e,t)=>{e.entity=t}}},E,I),C(null,null,a,{kind:"field",name:"selectable",static:!1,private:!1,access:{has:e=>"selectable"in e,get:e=>e.selectable,set:(e,t)=>{e.selectable=t}}},M,I),C(null,null,o,{kind:"field",name:"geo",static:!1,private:!1,access:{has:e=>"geo"in e,get:e=>e.geo,set:(e,t)=>{e.geo=t}}},O,I),C(null,null,w,{kind:"field",name:"shape",static:!1,private:!1,access:{has:e=>"shape"in e,get:e=>e.shape,set:(e,t)=>{e.shape=t}}},W,I),C(null,null,d,{kind:"field",name:"geoShape",static:!1,private:!1,access:{has:e=>"geoShape"in e,get:e=>e.geoShape,set:(e,t)=>{e.geoShape=t}}},B,I),C(null,null,y,{kind:"field",name:"icon",static:!1,private:!1,access:{has:e=>"icon"in e,get:e=>e.icon,set:(e,t)=>{e.icon=t}}},F,I),C(null,null,b,{kind:"field",name:"geoIcon",static:!1,private:!1,access:{has:e=>"geoIcon"in e,get:e=>e.geoIcon,set:(e,t)=>{e.geoIcon=t}}},H,I),C(null,null,S,{kind:"field",name:"geoCenter",static:!1,private:!1,access:{has:e=>"geoCenter"in e,get:e=>e.geoCenter,set:(e,t)=>{e.geoCenter=t}}},G,I),e})(),q=(()=>{var e;let t,s,a,w,d,u,v,g,V,m,b,D,S,P,L,A,I,x,E,M,O,W=[],B=[],F=[],H=[],G=[],K=[],N=[],U=[],q=[],z=[],Z=[],j=[],X=[],Y=[],_=[],J=[],Q=[],$=[],ee=[],te=[],ie=[],ne=[];return e=class extends p.PanelController{constructor(){super(...arguments),this.panel=(k(this,W),k(this,B,void 0)),this.panelTitle=k(this,F,void 0),this.panelSubtitle=k(this,H,void 0),this.gaugePanel=k(this,G,void 0),this.gaugeCanvas=k(this,K,void 0),this.gauge=k(this,N,void 0),this.gaugeTitle=k(this,U,void 0),this.dial=k(this,q,void 0),this.dialLabel=k(this,z,void 0),this.dialLegend=k(this,Z,void 0),this.chartPanel=k(this,j,void 0),this.chartCanvas=k(this,X,void 0),this.chart=k(this,Y,void 0),this.tickAxis=k(this,_,void 0),this.currentTick=k(this,J,void 0),this.graph=k(this,Q,void 0),this.plot=k(this,$,void 0),this.dataPoints=k(this,ee,void 0),this.latest=k(this,te,void 0),this.current=k(this,ie,void 0),this.calendar=k(this,ne,void 0)}formatPanelTitle(e){}formatPanelSubtitle(e){const t=e.x.getValue();return this.formatDate(t)}formatDialLabel(e,t){}formatDialLegend(e,t){}formatGaugeTitle(e,t){return i.Format.prefix(e,1)}formatDate(e){return this.constructor.dateFormat.format(e)}},t=[c.TraitViewRef({extends:!0,viewDidMount(e){this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)},createView(){return super.createView().setIntrinsic({classList:["time-gauge"],style:{userSelect:"none"},panelStyle:"card"})}})],s=[h.ViewRef({extends:!0,setCurrent(e){const t=this.owner.formatPanelTitle(e);void 0!==t&&this.set(t)}})],a=[h.ViewRef({extends:!0,setCurrent(e){const t=this.owner.formatPanelSubtitle(e);void 0!==t&&this.set(t)},updateScrubTime(e){const t=this.view;null!==t&&(null!==e?t.style.color.setIntrinsic(n.Look.textColor,!0):t.style.color.setIntrinsic(n.Look.labelColor,!0))}})],w=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},insertChild(e,t,i,n){null===i&&(i=this.owner.chartPanel.view),e.insertChild(t,i,n)},createView(){return super.createView().setIntrinsic({style:{marginTop:24},unitWidth:1,unitHeight:.8,minPanelHeight:0})}})],d=[h.ViewRef({viewType:l.CanvasView,viewKey:!0,get parentView(){return this.owner.gaugePanel.insertView()}})],u=[h.ViewRef({viewType:T.GaugeView,viewKey:!0,observes:!0,get parentView(){return this.owner.gaugeCanvas.insertView()},didAttachView(e){this.owner.gaugeTitle.setView(e.title.view)},willDetachView(e){this.owner.gaugeTitle.setView(null)},viewWillAttachTitle(e){this.owner.gaugeTitle.setView(e)},viewDidDetachTitle(e){this.owner.gaugeTitle.setView(null)},createView:()=>(new T.GaugeView).setIntrinsic({innerRadius:f.Length.pct(35),outerRadius:f.Length.pct(45),startAngle:f.Angle.rad(5*Math.PI/8),sweepAngle:f.Angle.rad(11*Math.PI/8),cornerRadius:f.Length.zero(),tickAlign:.5,tickRadius:f.Length.pct(50),tickLength:f.Length.pct(45),font:n.Look.font})})],v=[h.ViewRef({viewType:l.GraphicsView,viewKey:"title",get parentView(){return this.owner.gauge.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.largeFont),e.textColor.setIntrinsic(n.Look.textColor))},setText(e){return this.owner.gauge.attachView().title.set(e)}})],g=[h.ViewRef({viewType:T.DialView,viewKey:!0,observes:!0,get parentView(){return this.owner.gauge.insertView()},initView(e){this.updateValue(e.value.value,e.limit.value)},didAttachView(e){this.owner.dialLabel.setView(e.label.view),this.owner.dialLegend.setView(e.legend.view)},willDetachView(e){this.owner.dialLabel.setView(null),this.owner.dialLegend.setView(null)},viewWillAttachLabel(e){this.owner.dialLabel.setView(e)},viewDidDetachLabel(e){this.owner.dialLabel.setView(null)},viewWillAttachLegend(e){this.owner.dialLegend.setView(e)},viewDidDetachLegend(e){this.owner.dialLegend.setView(null)},viewDidSetValue(e,t){this.updateValue(e,t.limit.value)},viewDidSetLimit(e,t){this.updateValue(t.value.value,e)},updateValue(e,t){const i=this.owner.formatGaugeTitle(e,t);void 0!==i&&this.owner.gaugeTitle.setText(i);const n=this.owner.formatDialLabel(e,t);void 0!==n&&this.owner.dialLabel.setText(n);const r=this.owner.formatDialLegend(e,t);void 0!==r&&this.owner.dialLegend.setText(r)},setCurrent(e){const t=this.attachView();let i;i=t.value.tweening?void 0:t.getLookOr(n.Look.timing,void 0);const r=e.y.getValue();t.value.setIntrinsic(r,i),null!==e.color.look?(t.meterColor.setIntrinsic(e.color.look,i),t.moodModifier.setIntrinsic(e.moodModifier.value),null!==t.theme.value&&null!==t.mood.value&&t.applyTheme(t.theme.value,t.mood.value,i)):null!==e.color.value?(t.meterColor.setIntrinsic(e.color.value,i),t.moodModifier.setIntrinsic(null)):(t.meterColor.setIntrinsic(n.Look.accentColor,i),t.moodModifier.setIntrinsic(null),null!==t.theme.value&&null!==t.mood.value&&t.applyTheme(t.theme.value,t.mood.value,i))}})],V=[h.ViewRef({viewType:l.GraphicsView,viewKey:"label",get parentView(){return this.owner.dial.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.smallFont),e.textColor.setIntrinsic(n.Look.labelColor))},setText(e){return this.owner.dial.attachView().label.set(e)}})],m=[h.ViewRef({viewType:l.GraphicsView,viewKey:"legend",get parentView(){return this.owner.dial.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.smallFont),e.textColor.setIntrinsic(n.Look.labelColor))},setText(e){return this.owner.dial.attachView().legend.set(e)}})],b=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},createView(){return super.createView().setIntrinsic({unitWidth:1,unitHeight:.2,minPanelHeight:0})}})],D=[h.ViewRef({viewType:l.CanvasView,viewKey:!0,get parentView(){return this.owner.chartPanel.insertView()},createView(){return super.createView().setIntrinsic({pointerEvents:!0})}})],S=[h.ViewRef({viewType:y.ChartView,viewKey:!0,observes:!0,get parentView(){return this.owner.chartCanvas.insertView()},didAttachView(e){this.owner.graph.setView(e.graph.view)},willDetachView(e){this.owner.graph.setView(null)},viewWillAttachGraph(e){this.owner.graph.setView(e)},viewDidDetachGraph(e){this.owner.graph.setView(null)},viewDidSetYScale(e){null!==e&&this.owner.dial.attachView().setIntrinsic({limit:e.domain[1]})},createView(){const e=super.createView();return e.domainTracking(!0),e.setIntrinsic({gutterTop:6,gutterRight:12,gutterBottom:12,gutterLeft:12})}})],P=[h.ViewRef({viewType:y.AxisView,viewKey:!0,get parentView(){return this.owner.chart.insertView()},initView(e){const t=this.owner.calendar.getService().scrubTime.value;this.owner.currentTick.updateScrubTime(t)},createView:()=>(new y.TopAxisView).setIntrinsic({tickGenerator:null,tickMarkWidth:2,tickMarkLength:6,tickMarkColor:n.Look.textColor,gridLineWidth:2,gridLineColor:n.Look.textColor,borderWidth:0})})],L=[h.ViewRef({viewType:y.TickView,viewKey:!0,get parentView(){return this.owner.tickAxis.view},updateScrubTime(e){if(null===e)return void this.deleteView();const t=new y.TopTickView(e).setIntrinsic({gridLineWidth:1});t.setIntangible(!0),this.insertView(null,t)}})],A=[h.ViewRef({viewType:y.GraphView,viewKey:!0,init(){this.onPointerMove=this.onPointerMove.bind(this),this.onPointerEnter=this.onPointerEnter.bind(this),this.onPointerLeave=this.onPointerLeave.bind(this)},get parentView(){return this.owner.chart.insertView()},initView(e){e.addEventListener("pointermove",this.onPointerMove),e.addEventListener("pointerenter",this.onPointerEnter),e.addEventListener("pointerleave",this.onPointerLeave)},deinitView(e){e.removeEventListener("pointermove",this.onPointerMove),e.removeEventListener("pointerenter",this.onPointerEnter),e.removeEventListener("pointerleave",this.onPointerLeave)},updatePointer(e){const t=this.view,i=null!==t?t.xScale.value:null;if(null!==i){const n=t.clientBounds,r=e.clientX-n.x,s=i.inverse(r);this.owner.calendar.getService().scrubTime.setIntrinsic(s)}},onPointerMove(e){this.updatePointer(e)},onPointerEnter(e){this.updatePointer(e)},onPointerLeave(e){this.owner.calendar.getService().scrubTime.setIntrinsic(null)}})],I=[h.ViewRef({viewType:y.SeriesPlotView,viewKey:!0,observes:!0,get parentView(){return this.owner.graph.insertView()},didAttachView(e,t){this.owner.dataPoints.setViews(e.dataPoints.views)},willDetachView(e){this.owner.dataPoints.deleteViews()},viewWillAttachDataPoint(e,t){this.owner.dataPoints.addView(e,t)},viewDidDetachDataPoint(e){this.owner.dataPoints.removeView(e)},createView:()=>(new y.LinePlotView).setIntrinsic({hitMode:"none",strokeWidth:1})})],x=[h.ViewSet({viewType:y.DataPointView,get parentView(){return this.owner.plot.attachView()}})],E=[h.ViewRef({viewType:y.DataPointView,get parentView(){return this.owner.plot.attachView()},didAttachView(e){null===this.owner.calendar.getService().scrubTime.value&&this.owner.current.setView(e)},didDetachView(e){e.remove()}})],M=[h.ViewRef({viewType:y.DataPointView,didAttachView(e){this.owner.panelTitle.setCurrent(e),this.owner.panelSubtitle.setCurrent(e),this.owner.dial.setCurrent(e)}})],O=[r.Provider({serviceType:R,observes:!0,serviceDidSetScrubTime(e){let t=null;if(null!==e){const i=this.owner.plot.view;null!==i&&(t=i.dataPointViews.get(e),void 0===t&&(t=i.dataPointViews.previousValue(e),void 0===t&&(t=null)))}else t=this.owner.latest.view;this.owner.current.setView(t),this.owner.currentTick.updateScrubTime(e),this.owner.panelSubtitle.updateScrubTime(e)}})],C(null,null,t,{kind:"field",name:"panel",static:!1,private:!1,access:{has:e=>"panel"in e,get:e=>e.panel,set:(e,t)=>{e.panel=t}}},B,W),C(null,null,s,{kind:"field",name:"panelTitle",static:!1,private:!1,access:{has:e=>"panelTitle"in e,get:e=>e.panelTitle,set:(e,t)=>{e.panelTitle=t}}},F,W),C(null,null,a,{kind:"field",name:"panelSubtitle",static:!1,private:!1,access:{has:e=>"panelSubtitle"in e,get:e=>e.panelSubtitle,set:(e,t)=>{e.panelSubtitle=t}}},H,W),C(null,null,w,{kind:"field",name:"gaugePanel",static:!1,private:!1,access:{has:e=>"gaugePanel"in e,get:e=>e.gaugePanel,set:(e,t)=>{e.gaugePanel=t}}},G,W),C(null,null,d,{kind:"field",name:"gaugeCanvas",static:!1,private:!1,access:{has:e=>"gaugeCanvas"in e,get:e=>e.gaugeCanvas,set:(e,t)=>{e.gaugeCanvas=t}}},K,W),C(null,null,u,{kind:"field",name:"gauge",static:!1,private:!1,access:{has:e=>"gauge"in e,get:e=>e.gauge,set:(e,t)=>{e.gauge=t}}},N,W),C(null,null,v,{kind:"field",name:"gaugeTitle",static:!1,private:!1,access:{has:e=>"gaugeTitle"in e,get:e=>e.gaugeTitle,set:(e,t)=>{e.gaugeTitle=t}}},U,W),C(null,null,g,{kind:"field",name:"dial",static:!1,private:!1,access:{has:e=>"dial"in e,get:e=>e.dial,set:(e,t)=>{e.dial=t}}},q,W),C(null,null,V,{kind:"field",name:"dialLabel",static:!1,private:!1,access:{has:e=>"dialLabel"in e,get:e=>e.dialLabel,set:(e,t)=>{e.dialLabel=t}}},z,W),C(null,null,m,{kind:"field",name:"dialLegend",static:!1,private:!1,access:{has:e=>"dialLegend"in e,get:e=>e.dialLegend,set:(e,t)=>{e.dialLegend=t}}},Z,W),C(null,null,b,{kind:"field",name:"chartPanel",static:!1,private:!1,access:{has:e=>"chartPanel"in e,get:e=>e.chartPanel,set:(e,t)=>{e.chartPanel=t}}},j,W),C(null,null,D,{kind:"field",name:"chartCanvas",static:!1,private:!1,access:{has:e=>"chartCanvas"in e,get:e=>e.chartCanvas,set:(e,t)=>{e.chartCanvas=t}}},X,W),C(null,null,S,{kind:"field",name:"chart",static:!1,private:!1,access:{has:e=>"chart"in e,get:e=>e.chart,set:(e,t)=>{e.chart=t}}},Y,W),C(null,null,P,{kind:"field",name:"tickAxis",static:!1,private:!1,access:{has:e=>"tickAxis"in e,get:e=>e.tickAxis,set:(e,t)=>{e.tickAxis=t}}},_,W),C(null,null,L,{kind:"field",name:"currentTick",static:!1,private:!1,access:{has:e=>"currentTick"in e,get:e=>e.currentTick,set:(e,t)=>{e.currentTick=t}}},J,W),C(null,null,A,{kind:"field",name:"graph",static:!1,private:!1,access:{has:e=>"graph"in e,get:e=>e.graph,set:(e,t)=>{e.graph=t}}},Q,W),C(null,null,I,{kind:"field",name:"plot",static:!1,private:!1,access:{has:e=>"plot"in e,get:e=>e.plot,set:(e,t)=>{e.plot=t}}},$,W),C(null,null,x,{kind:"field",name:"dataPoints",static:!1,private:!1,access:{has:e=>"dataPoints"in e,get:e=>e.dataPoints,set:(e,t)=>{e.dataPoints=t}}},ee,W),C(null,null,E,{kind:"field",name:"latest",static:!1,private:!1,access:{has:e=>"latest"in e,get:e=>e.latest,set:(e,t)=>{e.latest=t}}},te,W),C(null,null,M,{kind:"field",name:"current",static:!1,private:!1,access:{has:e=>"current"in e,get:e=>e.current,set:(e,t)=>{e.current=t}}},ie,W),C(null,null,O,{kind:"field",name:"calendar",static:!1,private:!1,access:{has:e=>"calendar"in e,get:e=>e.calendar,set:(e,t)=>{e.calendar=t}}},ne,W),e.dateFormat=o.DateTimeFormat.pattern("%b %d @ %H:%M"),e})(),z=(()=>{var e;let t,s,a,o,d,u,v,p,g,V,m,f,T,D,S,P,L,A,I=[],x=[],E=[],M=[],O=[],W=[],B=[],F=[],H=[],G=[],K=[],N=[],U=[],q=[],z=[],Z=[],j=[],X=[],Y=[];return e=class extends c.Controller{constructor(){super(...arguments),this.title=(k(this,I),k(this,x,void 0)),this.focused=k(this,E,void 0),this.defocused=k(this,M,void 0),this.pinned=k(this,O,void 0),this.plot=k(this,W,void 0),this.dataPoints=k(this,B,void 0),this.latest=k(this,F,void 0),this.current=k(this,H,void 0),this.slice=k(this,G,void 0),this.sliceLabel=k(this,K,void 0),this.sliceLegend=k(this,N,void 0),this.row=k(this,U,void 0),this.leaf=k(this,q,void 0),this.cells=k(this,z,void 0),this.nameCell=k(this,Z,void 0),this.latestCell=k(this,j,void 0),this.currentCell=k(this,X,void 0),this.calendar=k(this,Y,void 0)}formatLatestCell(e){return this.formatCell(e)}formatCurrentCell(e){return this.formatCell(e)}formatCell(e){const t=e.y.getValue();return i.Format.prefix(t,1)}formatSliceLabel(e,t){}formatSliceLegend(e,t){}applySliceStatus(e,t,i){null!==t.color.look?(e.sliceColor.setIntrinsic(t.color.look,i),e.moodModifier.setIntrinsic(t.moodModifier.value),null!==e.theme.value&&null!==e.mood.value&&e.applyTheme(e.theme.value,e.mood.value,i)):null!==t.color.value?(e.sliceColor.setIntrinsic(t.color.value,i),e.moodModifier.setIntrinsic(null)):(e.sliceColor.setIntrinsic(n.Look.accentColor,i),e.moodModifier.setIntrinsic(null),null!==e.theme.value&&null!==e.mood.value&&e.applyTheme(e.theme.value,e.mood.value,i))}},t=[r.Property({valueType:String,value:"",didSetValue(e){this.owner.callObservers("controllerDidSetTitle",e,this.owner)}})],s=[r.Property({valueType:Boolean,value:!1,didSetValue(e){this.owner.callObservers("controllerDidSetFocused",e,this.owner)}})],a=[r.Property({valueType:Boolean,value:!1,didSetValue(e){const t=this.owner.plot.view;if(null!==t){const i=t.getLook(n.Look.timing);e&&!this.owner.focused.value?t.opacity.setIntrinsic(.5,i):t.opacity.setIntrinsic(1,i)}const i=this.owner.leaf.view;if(null!==i){const t=i.getLook(n.Look.timing);e&&!this.owner.focused.value?i.style.opacity.setIntrinsic(.5,t):i.style.opacity.setIntrinsic(1,t)}}})],o=[r.Property({valueType:Boolean,value:!1,didSetValue(e){this.owner.callObservers("controllerDidSetPinned",e,this.owner)},update(){const e=this.owner.leaf.view,t=null!==e&&e.hover.state.focused,i=null!==e&&e.highlight.state.focused,n=t||i;this.setIntrinsic(n)}})],d=[h.ViewRef({viewType:y.SeriesPlotView,observes:!0,init(){this.onPointerEnter=this.onPointerEnter.bind(this),this.onPointerLeave=this.onPointerLeave.bind(this)},willAttachView(e,t){this.owner.callObservers("controllerWillAttachPlot",e,t,this.owner)},didAttachView(e,t){this.owner.dataPoints.setViews(e.dataPoints.views),e.addEventListener("pointerenter",this.onPointerEnter),e.addEventListener("pointerleave",this.onPointerLeave)},willDetachView(e){e.removeEventListener("pointerenter",this.onPointerEnter),e.removeEventListener("pointerleave",this.onPointerLeave),this.owner.dataPoints.deleteViews()},didDetachView(e){this.owner.callObservers("controllerDidDetachPlot",e,this.owner)},viewWillAttachDataPoint(e,t){this.owner.dataPoints.addView(e,t)},viewDidDetachDataPoint(e){this.owner.dataPoints.removeView(e)},onPointerEnter(e){this.owner.focused.setIntrinsic(!0)},onPointerLeave(e){this.owner.focused.setIntrinsic(!1)},createView:()=>(new y.LinePlotView).setIntrinsic({hitMode:"plot",strokeWidth:1})})],u=[h.ViewSet({viewType:y.DataPointView,get parentView(){return this.owner.plot.attachView()}})],v=[h.ViewRef({viewType:y.DataPointView,get parentView(){return this.owner.plot.attachView()},willAttachView(e){this.owner.callObservers("controllerWillAttachLatest",e,this.owner)},didAttachView(e){this.owner.latestCell.setLatest(e),null===this.owner.calendar.getService().scrubTime.value&&this.owner.current.setView(e)},didDetachView(e){e.remove(),this.owner.callObservers("controllerDidDetachLatest",e,this.owner)}})],p=[h.ViewRef({viewType:y.DataPointView,willAttachView(e){this.owner.callObservers("controllerWillAttachCurrent",e,this.owner)},didAttachView(e){this.owner.slice.setCurrent(e),this.owner.currentCell.setCurrent(e)},didDetachView(e){this.owner.callObservers("controllerDidDetachCurrent",e,this.owner)}})],g=[h.ViewRef({viewType:b.SliceView,observes:!0,init(){this.onPointerEnter=this.onPointerEnter.bind(this),this.onPointerLeave=this.onPointerLeave.bind(this)},initView(e){this.updateValue(e.value.value,e.total.value)},willAttachView(e,t){this.owner.callObservers("controllerWillAttachSlice",e,t,this.owner)},didAttachView(e,t){this.owner.sliceLabel.setView(e.label.view),this.owner.sliceLegend.setView(e.legend.view),e.addEventListener("pointerenter",this.onPointerEnter),e.addEventListener("pointerleave",this.onPointerLeave)},willDetachView(e){e.removeEventListener("pointerenter",this.onPointerEnter),e.removeEventListener("pointerleave",this.onPointerLeave),this.owner.sliceLabel.setView(null),this.owner.sliceLegend.setView(null)},didDetachView(e){this.owner.callObservers("controllerDidDetachSlice",e,this.owner)},viewWillAttachLabel(e){this.owner.sliceLabel.setView(e)},viewDidDetachLabel(e){this.owner.sliceLabel.setView(null)},viewWillAttachLegend(e){this.owner.sliceLegend.setView(e)},viewDidDetachLegend(e){this.owner.sliceLegend.setView(null)},onPointerEnter(e){this.owner.focused.setIntrinsic(!0)},onPointerLeave(e){this.owner.focused.setIntrinsic(!1)},viewDidSetValue(e,t){this.updateValue(e,t.total.value)},viewDidSetTotal(e,t){this.updateValue(t.value.value,e)},updateValue(e,t){const i=this.owner.formatSliceLabel(e,t);void 0!==i&&this.owner.sliceLabel.setText(i);const n=this.owner.formatSliceLegend(e,t);void 0!==n&&(null!==n?this.owner.sliceLegend.setText(n):this.owner.sliceLegend.deleteView())},setCurrent(e){const t=this.view;if(null===t)return;let i;i=t.value.tweening?void 0:t.getLookOr(n.Look.timing,void 0);const r=e.y.getValue();t.value.setIntrinsic(r,i),this.owner.applySliceStatus(t,e,i)}})],V=[h.ViewRef({viewType:l.GraphicsView,viewKey:"label",get parentView(){return this.owner.slice.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.smallFont),e.textColor.setIntrinsic(n.Look.backgroundColor))},setText(e){return this.owner.slice.attachView().label.set(e)}})],m=[h.ViewRef({viewType:l.GraphicsView,viewKey:"legend",get parentView(){return this.owner.slice.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.smallFont),e.textColor.setIntrinsic(n.Look.labelColor))},setText(e){return this.owner.slice.attachView().legend.set(e)}})],f=[h.ViewRef({viewType:w.RowView,observes:!0,willAttachView(e,t){this.owner.callObservers("controllerWillAttachRow",e,t,this.owner)},didAttachView(e,t){this.owner.leaf.setView(e.leaf.view,t)},willDetachView(e){this.owner.leaf.setView(null)},didDetachView(e){this.owner.callObservers("controllerDidDetachRow",e,this.owner)},viewWillAttachLeaf(e,t){this.owner.leaf.setView(e,t)},viewDidDetachLeaf(e){this.owner.leaf.setView(null)}})],T=[h.ViewRef({viewType:w.LeafView,viewKey:!0,observes:!0,get parentView(){return this.owner.row.attachView()},didAttachView(e,t){this.owner.cells.setViews(e.cells.views)},willDetachView(e){this.owner.cells.deleteViews()},viewWillAttachCell(e,t){this.owner.cells.addView(e,t)},viewDidDetachCell(e){this.owner.cells.removeView(e)},viewDidEnter(e){e.hovers.value&&(this.owner.focused.setIntrinsic(!0),this.owner.pinned.update())},viewDidLeave(e){e.hovers.value&&(this.owner.focused.setIntrinsic(!1),this.owner.pinned.update())},viewWillHighlight(e){this.owner.pinned.update()},viewWillUnhighlight(e){this.owner.pinned.update()},viewDidPress(e,t,i){i.highlight.toggle(),this.owner.pinned.update()},createView(){return super.createView().setIntrinsic({})}})],D=[h.ViewSet({viewType:w.CellView,get parentView(){return this.owner.leaf.insertView()}})],S=[h.ViewRef({viewType:w.CellView,viewKey:"name",get parentView(){return this.owner.leaf.insertView()},createView:()=>w.TextCellView.create()})],P=[h.ViewRef({viewType:w.CellView,viewKey:"latest",get parentView(){return this.owner.leaf.insertView()},initView(e){const t=this.owner.latest.view;null!==t&&this.setLatest(t)},setLatest(e){const t=this.view;if(t instanceof w.TextCellView){const i=this.owner.formatLatestCell(e);void 0!==i&&t.content.set(i)}},createView:()=>w.TextCellView.create()})],L=[h.ViewRef({viewType:w.CellView,viewKey:"current",get parentView(){return this.owner.leaf.insertView()},initView(e){const t=this.owner.latest.view;null!==t&&this.setCurrent(t)},setCurrent(e){const t=this.view;if(t instanceof w.TextCellView){const i=this.owner.formatCurrentCell(e);void 0!==i&&t.content.set(i)}},createView:()=>w.TextCellView.create()})],A=[r.Provider({serviceType:R,observes:!0,serviceDidSetScrubTime(e){let t=null;if(null!==e){const i=this.owner.plot.view;null!==i&&(t=i.dataPointViews.get(e),void 0===t&&(t=i.dataPointViews.previousValue(e),void 0===t&&(t=null)))}this.setReferenceDataPoint(t)},setReferenceDataPoint(e){null!==e?this.owner.current.setView(e):this.owner.current.setView(this.owner.latest.view)}})],C(null,null,t,{kind:"field",name:"title",static:!1,private:!1,access:{has:e=>"title"in e,get:e=>e.title,set:(e,t)=>{e.title=t}}},x,I),C(null,null,s,{kind:"field",name:"focused",static:!1,private:!1,access:{has:e=>"focused"in e,get:e=>e.focused,set:(e,t)=>{e.focused=t}}},E,I),C(null,null,a,{kind:"field",name:"defocused",static:!1,private:!1,access:{has:e=>"defocused"in e,get:e=>e.defocused,set:(e,t)=>{e.defocused=t}}},M,I),C(null,null,o,{kind:"field",name:"pinned",static:!1,private:!1,access:{has:e=>"pinned"in e,get:e=>e.pinned,set:(e,t)=>{e.pinned=t}}},O,I),C(null,null,d,{kind:"field",name:"plot",static:!1,private:!1,access:{has:e=>"plot"in e,get:e=>e.plot,set:(e,t)=>{e.plot=t}}},W,I),C(null,null,u,{kind:"field",name:"dataPoints",static:!1,private:!1,access:{has:e=>"dataPoints"in e,get:e=>e.dataPoints,set:(e,t)=>{e.dataPoints=t}}},B,I),C(null,null,v,{kind:"field",name:"latest",static:!1,private:!1,access:{has:e=>"latest"in e,get:e=>e.latest,set:(e,t)=>{e.latest=t}}},F,I),C(null,null,p,{kind:"field",name:"current",static:!1,private:!1,access:{has:e=>"current"in e,get:e=>e.current,set:(e,t)=>{e.current=t}}},H,I),C(null,null,g,{kind:"field",name:"slice",static:!1,private:!1,access:{has:e=>"slice"in e,get:e=>e.slice,set:(e,t)=>{e.slice=t}}},G,I),C(null,null,V,{kind:"field",name:"sliceLabel",static:!1,private:!1,access:{has:e=>"sliceLabel"in e,get:e=>e.sliceLabel,set:(e,t)=>{e.sliceLabel=t}}},K,I),C(null,null,m,{kind:"field",name:"sliceLegend",static:!1,private:!1,access:{has:e=>"sliceLegend"in e,get:e=>e.sliceLegend,set:(e,t)=>{e.sliceLegend=t}}},N,I),C(null,null,f,{kind:"field",name:"row",static:!1,private:!1,access:{has:e=>"row"in e,get:e=>e.row,set:(e,t)=>{e.row=t}}},U,I),C(null,null,T,{kind:"field",name:"leaf",static:!1,private:!1,access:{has:e=>"leaf"in e,get:e=>e.leaf,set:(e,t)=>{e.leaf=t}}},q,I),C(null,null,D,{kind:"field",name:"cells",static:!1,private:!1,access:{has:e=>"cells"in e,get:e=>e.cells,set:(e,t)=>{e.cells=t}}},z,I),C(null,null,S,{kind:"field",name:"nameCell",static:!1,private:!1,access:{has:e=>"nameCell"in e,get:e=>e.nameCell,set:(e,t)=>{e.nameCell=t}}},Z,I),C(null,null,P,{kind:"field",name:"latestCell",static:!1,private:!1,access:{has:e=>"latestCell"in e,get:e=>e.latestCell,set:(e,t)=>{e.latestCell=t}}},j,I),C(null,null,L,{kind:"field",name:"currentCell",static:!1,private:!1,access:{has:e=>"currentCell"in e,get:e=>e.currentCell,set:(e,t)=>{e.currentCell=t}}},X,I),C(null,null,A,{kind:"field",name:"calendar",static:!1,private:!1,access:{has:e=>"calendar"in e,get:e=>e.calendar,set:(e,t)=>{e.calendar=t}}},Y,I),e})(),Z=(()=>{var e;let t,s,a,d,u,v,g,V,m,T,b,D,S,P,L,A,I,x,E,M,O,W,B=[],F=[],H=[],G=[],K=[],N=[],U=[],q=[],Z=[],j=[],X=[],Y=[],_=[],J=[],Q=[],$=[],ee=[],te=[],ie=[],ne=[],re=[],se=[],le=[];return e=class extends p.PanelController{constructor(){super(...arguments),this.panel=(k(this,B),k(this,F,void 0)),this.chartPanel=k(this,H,void 0),this.chartCanvas=k(this,G,void 0),this.chart=k(this,K,void 0),this.tickAxis=k(this,N,void 0),this.currentTick=k(this,U,void 0),this.timeAxis=k(this,q,void 0),this.valueAxis=k(this,Z,void 0),this.graph=k(this,j,void 0),this.plots=k(this,X,void 0),this.tablePanel=k(this,Y,void 0),this.table=k(this,_,void 0),this.header=k(this,J,void 0),this.cols=k(this,Q,void 0),this.nameCol=k(this,$,void 0),this.latestCol=k(this,ee,void 0),this.currentCol=k(this,te,void 0),this.rows=k(this,ie,void 0),this.series=k(this,ne,void 0),this.pinned=k(this,re,void 0),this.focused=k(this,se,void 0),this.calendar=k(this,le,void 0)}formatDate(e){return this.constructor.dateFormat.format(e)}formatDateTickLabel(e){}formatValueTickLabel(e){return i.Format.prefix(e.value,1)}onReinsertChild(e,t){super.onReinsertChild(e,t),this.series.pinTop()}onStartConsuming(){super.onStartConsuming(),this.pinned.consumeControllers(this)}onStopConsuming(){super.onStopConsuming(),this.pinned.unconsumeControllers(this)}},t=[c.TraitViewRef({extends:!0,viewDidMount(e){this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)},createView(){return super.createView().setIntrinsic({classList:["time-table"],style:{userSelect:"none"},panelStyle:"card"})}})],s=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},createView(){return super.createView().setIntrinsic({style:{marginTop:24},unitWidth:1,unitHeight:.5,minPanelHeight:0})}})],a=[h.ViewRef({viewType:l.CanvasView,viewKey:!0,get parentView(){return this.owner.chartPanel.insertView()},createView(){return super.createView().setIntrinsic({style:{touchAction:"manipulation"},wheelEvents:!0,pointerEvents:!0})}})],d=[h.ViewRef({viewType:y.ChartView,viewKey:!0,observes:!0,get parentView(){return this.owner.chartCanvas.insertView()},didAttachView(e){this.owner.graph.setView(e.graph.view)},willDetachView(e){this.owner.graph.setView(null)},viewWillAttachGraph(e){this.owner.graph.setView(e)},viewDidDetachGraph(e){this.owner.graph.setView(null)},createView(){const e=super.createView();return e.setIntrinsic({gutterTop:12,gutterRight:60,gutterBottom:32,gutterLeft:60}),e.domainTracking(!0),e.xScaleGestures(!0),e.graph.insertView(),e}})],u=[h.ViewRef({viewType:y.AxisView,viewKey:!0,get parentView(){return this.owner.chart.insertView()},initView(e){const t=this.owner.calendar.getService().scrubTime.value;this.owner.currentTick.updateScrubTime(t)},createView:()=>(new y.TopAxisView).setIntrinsic({tickGenerator:null,tickMarkWidth:2,tickMarkLength:6,tickMarkColor:n.Look.textColor,gridLineWidth:2,gridLineColor:n.Look.textColor,borderWidth:0})})],v=[h.ViewRef({viewType:y.TickView,viewKey:!0,get parentView(){return this.owner.tickAxis.view},updateScrubTime(e){if(null===e)return void this.deleteView();const t=new y.TopTickView(e).setIntrinsic({gridLineWidth:1});t.setIntangible(!0),this.insertView(null,t)}})],g=[h.ViewRef({viewType:y.AxisView,viewKey:!0,observes:!0,get parentView(){return this.owner.chart.attachView()},formatTickLabel(e,t){return this.owner.formatDateTickLabel(t)},createView:()=>new y.BottomAxisView})],V=[h.ViewRef({viewType:y.AxisView,viewKey:!0,observes:!0,get parentView(){return this.owner.chart.attachView()},formatTickLabel(e,t){return this.owner.formatValueTickLabel(t)},createView:()=>new y.LeftAxisView})],m=[h.ViewRef({viewType:y.GraphView,viewKey:!0,init(){this.onPointerMove=this.onPointerMove.bind(this),this.onPointerEnter=this.onPointerEnter.bind(this),this.onPointerLeave=this.onPointerLeave.bind(this)},get parentView(){return this.owner.chart.insertView()},initView(e){e.addEventListener("pointermove",this.onPointerMove),e.addEventListener("pointerenter",this.onPointerEnter),e.addEventListener("pointerleave",this.onPointerLeave)},deinitView(e){e.removeEventListener("pointermove",this.onPointerMove),e.removeEventListener("pointerenter",this.onPointerEnter),e.removeEventListener("pointerleave",this.onPointerLeave)},updatePointer(e){const t=this.view,i=null!==t?t.xScale.value:null;if(null!==i){const n=t.clientBounds,r=e.clientX-n.x,s=i.inverse(r);this.owner.calendar.getService().scrubTime.setIntrinsic(s)}},onPointerMove(e){this.updatePointer(e)},onPointerEnter(e){this.updatePointer(e)},onPointerLeave(e){this.owner.calendar.getService().scrubTime.setIntrinsic(null)}})],T=[h.ViewSet({viewType:y.SeriesPlotView,get parentView(){return this.owner.graph.attachView()}})],b=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},createView(){return super.createView().setIntrinsic({style:{marginBottom:12,overflowX:"hidden",overflowY:"auto"},unitWidth:1,unitHeight:.5,minPanelHeight:0})}})],D=[h.ViewRef({viewType:w.TableView,viewKey:!0,observes:!0,get parentView(){return this.owner.tablePanel.insertView()},initView(e){this.updateLayout()},didAttachView(e){this.owner.header.setView(e.header.view),this.owner.rows.setViews(e.rows.views)},willDetachView(e){this.owner.rows.deleteViews(),this.owner.header.setView(null)},viewWillAttachHeader(e){this.owner.header.setView(e)},viewDidDetachHeader(e){this.owner.header.setView(null)},viewWillAttachRow(e){this.owner.rows.addView(e)},viewDidDetachRow(e){this.owner.rows.deleteView(e)},updateLayout(){const e=this.view;if(null!==e){const t=this.createLayout();e.layout.setIntrinsic(t)}},createLayout(){const e=new Array,t=this.owner.nameCol.layout;null!==t&&e.push(t);const i=this.owner.cols.views;for(const t in i){const n=i[t];if("name"!==n.key){const t=this.owner.cols.getLayout(n);null!==t&&e.push(t)}}return new w.TableLayout(null,null,null,f.Length.px(12),e)},createView(){return super.createView().style.setIntrinsic({paddingLeft:12,paddingRight:12})}})],S=[h.ViewRef({viewType:w.HeaderView,viewKey:!0,observes:!0,get parentView(){return this.owner.table.attachView()},insertChild(e,t,i,n){e.prependChild(t,n)},didAttachView(e){this.owner.cols.setViews(e.cols.views)},willDetachView(e){this.owner.cols.deleteViews()},viewWillAttachCol(e){this.owner.cols.addView(e)},viewDidDetachCol(e){this.owner.cols.removeView(e)}})],P=[h.ViewSet({viewType:w.ColView,get parentView(){return this.owner.header.attachView()},didAttachView(e){this.owner.table.updateLayout()},willDetachView(e){this.owner.table.updateLayout()},getLayout(e){const t=e.key;return void 0===t?null:w.ColLayout.create(t,1,0,0,!1,!1,n.Look.textColor)}})],L=[h.ViewRef({viewType:w.ColView,viewKey:"name",init(){this.layout=w.ColLayout.create(this.viewKey,2,0,0,!1,!1,n.Look.labelColor)},get parentView(){return this.owner.header.attachView()},createView:()=>w.TextColView.create().setIntrinsic({label:"Name"})})],A=[h.ViewRef({viewType:w.ColView,viewKey:"latest",get parentView(){return this.owner.header.attachView()},createView:()=>w.TextColView.create().setIntrinsic({label:"Latest"})})],I=[h.ViewRef({viewType:w.ColView,viewKey:"current",get parentView(){return this.owner.header.attachView()},createView:()=>w.TextColView.create().setIntrinsic({label:"Current"})})],x=[h.ViewSet({viewType:w.RowView,get parentView(){return this.owner.table.attachView()}})],E=[c.ControllerSet({controllerType:z,binds:!0,observes:!0,didAttachController(e,t){const i=e.row.view;if(null!==i){let n=null;t instanceof z&&(n=t.row.view),this.owner.rows.insertView(null,i,n,e.key)}this.pinTop()},willDetachController(e){this.owner.pinned.detachController(e);const t=e.row.view;null!==t&&this.owner.rows.deleteView(t)},didDetachController(e){e.remove(),this.pinTop()},controllerDidSetPinned(e,t){e?(this.owner.pinned.attachController(t),this.unpinTop()):(this.owner.pinned.detachController(t),this.pinTop())},controllerWillAttachRow(e,t,i){this.owner.rows.insertView(null,e,t,i.key)},controllerDidDetachRow(e,t){this.owner.rows.deleteView(e)},controllerDidSetFocused(e,t){e?this.owner.focused.attachController(t):this.owner.focused.detachController(t);const i=this.owner.focused.controllerCount,n=this.controllers;for(const e in n){const t=n[e];0===i||this.owner.focused.hasController(t)?t.defocused.setIntrinsic(!1):t.defocused.setIntrinsic(!0)}},pinTop(){if(this.owner.pinned.controllerCount>1)return;const e=this.owner.getFirstChild(z);let t=null;const i=this.owner.pinned.controllers;for(const e in i){t=i[e];break}null===e||e===t||null!==t&&t.pinned.value||(null!==t&&this.owner.pinned.detachController(t),this.owner.pinned.attachController(e))},unpinTop(){if(this.owner.pinned.controllerCount<=1)return;const e=this.owner.pinned.controllers;for(const t in e){const i=e[t];if(!i.pinned.value){this.owner.pinned.detachController(i);break}}}})],M=[c.ControllerSet({controllerType:z,observes:!0,didAttachController(e,t){this.owner.consuming&&e.consume(this.owner);const i=e.plot.view;if(null!==i){let n=null;t instanceof z&&(n=t.plot.view),this.owner.plots.insertView(null,i,n,e.key)}},willDetachController(e){const t=e.plot.view;null!==t&&this.owner.plots.deleteView(t),this.owner.consuming&&e.unconsume(this.owner)},controllerWillAttachPlot(e,t,i){this.owner.plots.insertView(null,e,t,i.key)},controllerDidDetachPlot(e,t){this.owner.plots.deleteView(e)}})],O=[c.ControllerSet({controllerType:z})],W=[r.Provider({serviceType:R,observes:!0,serviceDidSetScrubTime(e){this.owner.currentTick.updateScrubTime(e)}})],C(null,null,t,{kind:"field",name:"panel",static:!1,private:!1,access:{has:e=>"panel"in e,get:e=>e.panel,set:(e,t)=>{e.panel=t}}},F,B),C(null,null,s,{kind:"field",name:"chartPanel",static:!1,private:!1,access:{has:e=>"chartPanel"in e,get:e=>e.chartPanel,set:(e,t)=>{e.chartPanel=t}}},H,B),C(null,null,a,{kind:"field",name:"chartCanvas",static:!1,private:!1,access:{has:e=>"chartCanvas"in e,get:e=>e.chartCanvas,set:(e,t)=>{e.chartCanvas=t}}},G,B),C(null,null,d,{kind:"field",name:"chart",static:!1,private:!1,access:{has:e=>"chart"in e,get:e=>e.chart,set:(e,t)=>{e.chart=t}}},K,B),C(null,null,u,{kind:"field",name:"tickAxis",static:!1,private:!1,access:{has:e=>"tickAxis"in e,get:e=>e.tickAxis,set:(e,t)=>{e.tickAxis=t}}},N,B),C(null,null,v,{kind:"field",name:"currentTick",static:!1,private:!1,access:{has:e=>"currentTick"in e,get:e=>e.currentTick,set:(e,t)=>{e.currentTick=t}}},U,B),C(null,null,g,{kind:"field",name:"timeAxis",static:!1,private:!1,access:{has:e=>"timeAxis"in e,get:e=>e.timeAxis,set:(e,t)=>{e.timeAxis=t}}},q,B),C(null,null,V,{kind:"field",name:"valueAxis",static:!1,private:!1,access:{has:e=>"valueAxis"in e,get:e=>e.valueAxis,set:(e,t)=>{e.valueAxis=t}}},Z,B),C(null,null,m,{kind:"field",name:"graph",static:!1,private:!1,access:{has:e=>"graph"in e,get:e=>e.graph,set:(e,t)=>{e.graph=t}}},j,B),C(null,null,T,{kind:"field",name:"plots",static:!1,private:!1,access:{has:e=>"plots"in e,get:e=>e.plots,set:(e,t)=>{e.plots=t}}},X,B),C(null,null,b,{kind:"field",name:"tablePanel",static:!1,private:!1,access:{has:e=>"tablePanel"in e,get:e=>e.tablePanel,set:(e,t)=>{e.tablePanel=t}}},Y,B),C(null,null,D,{kind:"field",name:"table",static:!1,private:!1,access:{has:e=>"table"in e,get:e=>e.table,set:(e,t)=>{e.table=t}}},_,B),C(null,null,S,{kind:"field",name:"header",static:!1,private:!1,access:{has:e=>"header"in e,get:e=>e.header,set:(e,t)=>{e.header=t}}},J,B),C(null,null,P,{kind:"field",name:"cols",static:!1,private:!1,access:{has:e=>"cols"in e,get:e=>e.cols,set:(e,t)=>{e.cols=t}}},Q,B),C(null,null,L,{kind:"field",name:"nameCol",static:!1,private:!1,access:{has:e=>"nameCol"in e,get:e=>e.nameCol,set:(e,t)=>{e.nameCol=t}}},$,B),C(null,null,A,{kind:"field",name:"latestCol",static:!1,private:!1,access:{has:e=>"latestCol"in e,get:e=>e.latestCol,set:(e,t)=>{e.latestCol=t}}},ee,B),C(null,null,I,{kind:"field",name:"currentCol",static:!1,private:!1,access:{has:e=>"currentCol"in e,get:e=>e.currentCol,set:(e,t)=>{e.currentCol=t}}},te,B),C(null,null,x,{kind:"field",name:"rows",static:!1,private:!1,access:{has:e=>"rows"in e,get:e=>e.rows,set:(e,t)=>{e.rows=t}}},ie,B),C(null,null,E,{kind:"field",name:"series",static:!1,private:!1,access:{has:e=>"series"in e,get:e=>e.series,set:(e,t)=>{e.series=t}}},ne,B),C(null,null,M,{kind:"field",name:"pinned",static:!1,private:!1,access:{has:e=>"pinned"in e,get:e=>e.pinned,set:(e,t)=>{e.pinned=t}}},re,B),C(null,null,O,{kind:"field",name:"focused",static:!1,private:!1,access:{has:e=>"focused"in e,get:e=>e.focused,set:(e,t)=>{e.focused=t}}},se,B),C(null,null,W,{kind:"field",name:"calendar",static:!1,private:!1,access:{has:e=>"calendar"in e,get:e=>e.calendar,set:(e,t)=>{e.calendar=t}}},le,B),e.dateFormat=o.DateTimeFormat.pattern("%b %d @ %H:%M"),e})(),j=(()=>{var e;let t,s,a,w,d,u,v,g,V,m,T,D,S,P,L,A,I,x=[],E=[],M=[],O=[],W=[],B=[],F=[],H=[],G=[],K=[],N=[],U=[],q=[],Z=[],j=[],X=[],Y=[],_=[];return e=class extends p.PanelController{constructor(){super(...arguments),this.panel=(k(this,x),k(this,E,void 0)),this.piePanel=k(this,M,void 0),this.pieCanvas=k(this,O,void 0),this.pie=k(this,W,void 0),this.pieTitle=k(this,B,void 0),this.slices=k(this,F,void 0),this.chartPanel=k(this,H,void 0),this.chartCanvas=k(this,G,void 0),this.chart=k(this,K,void 0),this.tickAxis=k(this,N,void 0),this.currentTick=k(this,U,void 0),this.graph=k(this,q,void 0),this.plots=k(this,Z,void 0),this.series=k(this,j,void 0),this.pinned=k(this,X,void 0),this.focused=k(this,Y,void 0),this.calendar=k(this,_,void 0)}formatDate(e){return this.constructor.dateFormat.format(e)}formatDateTickLabel(e){}formatValueTickLabel(e){return i.Format.prefix(e.value,1)}onReinsertChild(e,t){super.onReinsertChild(e,t),this.series.pinTop()}onStartConsuming(){super.onStartConsuming(),this.pinned.consumeControllers(this)}onStopConsuming(){super.onStopConsuming(),this.pinned.unconsumeControllers(this)}},t=[c.TraitViewRef({extends:!0,viewDidMount(e){this.owner.consume(e)},viewWillUnmount(e){this.owner.unconsume(e)},createView(){return super.createView().setIntrinsic({classList:["time-pie"],style:{userSelect:"none"},panelStyle:"card"})}})],s=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},insertChild(e,t,i,n){null===i&&(i=this.owner.chartPanel.view),e.insertChild(t,i,n)},createView(){return super.createView().setIntrinsic({style:{marginTop:24},unitWidth:1,unitHeight:.8,minPanelHeight:0})}})],a=[h.ViewRef({viewType:l.CanvasView,viewKey:!0,get parentView(){return this.owner.piePanel.insertView()}})],w=[h.ViewRef({viewType:b.PieView,viewKey:!0,observes:!0,get parentView(){return this.owner.pieCanvas.insertView()},didAttachView(e){this.owner.pieTitle.setView(e.title.view),this.owner.slices.setViews(e.slices.views)},willDetachView(e){this.owner.slices.deleteViews(),this.owner.pieTitle.setView(null)},viewWillAttachTitle(e){this.owner.pieTitle.setView(e)},viewDidDetachTitle(e){this.owner.pieTitle.setView(null)},viewWillAttachSlice(e){this.owner.slices.addView(e)},viewDidDetachSlice(e){this.owner.slices.deleteView(e)},createView:()=>(new b.PieView).setIntrinsic({innerRadius:f.Length.pct(5),outerRadius:f.Length.pct(35),tickRadius:f.Length.pct(40),tickLength:f.Length.pct(45),font:n.Look.font})})],d=[h.ViewRef({viewType:l.GraphicsView,viewKey:!0,get parentView(){return this.owner.pie.attachView()},initView(e){e instanceof l.TextRunView&&(e.font.setInherits(!1),e.font.setIntrinsic(n.Look.largeFont),e.textColor.setIntrinsic(n.Look.textColor))},setText(e){return this.owner.pie.attachView().title.set(e)}})],u=[h.ViewSet({viewType:b.SliceView,observes:!0,get parentView(){return this.owner.pie.attachView()}})],v=[h.ViewRef({viewType:p.PanelView,viewKey:!0,get parentView(){return this.owner.panel.attachView()},createView(){return super.createView().setIntrinsic({unitWidth:1,unitHeight:.2,minPanelHeight:0})}})],g=[h.ViewRef({viewType:l.CanvasView,viewKey:!0,get parentView(){return this.owner.chartPanel.insertView()},createView(){return super.createView().setIntrinsic({style:{touchAction:"manipulation"},wheelEvents:!0,pointerEvents:!0})}})],V=[h.ViewRef({viewType:y.ChartView,viewKey:!0,observes:!0,get parentView(){return this.owner.chartCanvas.insertView()},didAttachView(e){this.owner.graph.setView(e.graph.view)},willDetachView(e){this.owner.graph.setView(null)},viewWillAttachGraph(e){this.owner.graph.setView(e)},viewDidDetachGraph(e){this.owner.graph.setView(null)},createView(){const e=super.createView().setIntrinsic({gutterTop:12,gutterRight:60,gutterBottom:32,gutterLeft:60});return e.domainTracking(!0),e.xScaleGestures(!0),e.graph.insertView(),e}})],m=[h.ViewRef({viewType:y.AxisView,viewKey:!0,get parentView(){return this.owner.chart.insertView()},initView(e){const t=this.owner.calendar.getService().scrubTime.value;this.owner.currentTick.updateScrubTime(t)},createView:()=>(new y.TopAxisView).setIntrinsic({tickGenerator:null,tickMarkWidth:2,tickMarkLength:6,tickMarkColor:n.Look.textColor,gridLineWidth:2,gridLineColor:n.Look.textColor,borderWidth:0})})],T=[h.ViewRef({viewType:y.TickView,viewKey:!0,get parentView(){return this.owner.tickAxis.view},updateScrubTime(e){if(null===e)return void this.deleteView();const t=new y.TopTickView(e).setIntrinsic({gridLineWidth:1});t.setIntangible(!0),this.insertView(null,t)}})],D=[h.ViewRef({viewType:y.GraphView,viewKey:!0,init(){this.onPointerMove=this.onPointerMove.bind(this),this.onPointerEnter=this.onPointerEnter.bind(this),this.onPointerLeave=this.onPointerLeave.bind(this)},get parentView(){return this.owner.chart.insertView()},initView(e){e.addEventListener("pointermove",this.onPointerMove),e.addEventListener("pointerenter",this.onPointerEnter),e.addEventListener("pointerleave",this.onPointerLeave)},deinitView(e){e.removeEventListener("pointermove",this.onPointerMove),e.removeEventListener("pointerenter",this.onPointerEnter),e.removeEventListener("pointerleave",this.onPointerLeave)},updatePointer(e){const t=this.view,i=null!==t?t.xScale.value:null;if(null!==i){const n=t.clientBounds,r=e.clientX-n.x,s=i.inverse(r);this.owner.calendar.getService().scrubTime.setIntrinsic(s)}},onPointerMove(e){this.updatePointer(e)},onPointerEnter(e){this.updatePointer(e)},onPointerLeave(e){this.owner.calendar.getService().scrubTime.setIntrinsic(null)}})],S=[h.ViewSet({viewType:y.SeriesPlotView,get parentView(){return this.owner.graph.attachView()}})],P=[c.ControllerSet({controllerType:z,binds:!0,observes:!0,didAttachController(e,t){const i=e.slice.view;if(null!==i){let n=null;t instanceof z&&(n=t.slice.view),this.owner.slices.insertView(null,i,n,e.key)}this.pinTop()},willDetachController(e){this.owner.pinned.detachController(e);const t=e.slice.view;null!==t&&this.owner.slices.deleteView(t)},didDetachController(e){e.remove(),this.pinTop()},controllerDidSetPinned(e,t){e?(this.owner.pinned.attachController(t),this.unpinTop()):(this.owner.pinned.detachController(t),this.pinTop())},controllerWillAttachSlice(e,t,i){this.owner.slices.insertView(null,e,t,i.key)},controllerDidDetachSlice(e,t){this.owner.slices.deleteView(e)},controllerDidSetFocused(e,t){e?this.owner.focused.attachController(t):this.owner.focused.detachController(t);const i=this.owner.focused.controllerCount,n=this.controllers;for(const e in n){const t=n[e];0===i||this.owner.focused.hasController(t)?t.defocused.setIntrinsic(!1):t.defocused.setIntrinsic(!0)}},pinTop(){if(this.owner.pinned.controllerCount<=1){const e=this.owner.getFirstChild(z);let t=null;const i=this.owner.pinned.controllers;for(const e in i){t=i[e];break}null===e||e===t||null!==t&&t.pinned.value||(null!==t&&this.owner.pinned.detachController(t),this.owner.pinned.attachController(e))}},unpinTop(){if(this.owner.pinned.controllerCount>1){const e=this.owner.pinned.controllers;for(const t in e){const i=e[t];if(!i.pinned.value){this.owner.pinned.detachController(i);break}}}}})],L=[c.ControllerSet({controllerType:z,observes:!0,didAttachController(e,t){this.owner.consuming&&e.consume(this.owner);const i=e.plot.view;if(null!==i){let n=null;t instanceof z&&(n=t.plot.view),this.owner.plots.insertView(null,i,n,e.key)}},willDetachController(e){const t=e.plot.view;null!==t&&this.owner.plots.deleteView(t),this.owner.consuming&&e.unconsume(this.owner)},controllerWillAttachPlot(e,t,i){this.owner.plots.insertView(null,e,t,i.key)},controllerDidDetachPlot(e,t){this.owner.plots.deleteView(e)}})],A=[c.ControllerSet({controllerType:z})],I=[r.Provider({serviceType:R,observes:!0,serviceDidSetScrubTime(e){this.owner.currentTick.updateScrubTime(e)}})],C(null,null,t,{kind:"field",name:"panel",static:!1,private:!1,access:{has:e=>"panel"in e,get:e=>e.panel,set:(e,t)=>{e.panel=t}}},E,x),C(null,null,s,{kind:"field",name:"piePanel",static:!1,private:!1,access:{has:e=>"piePanel"in e,get:e=>e.piePanel,set:(e,t)=>{e.piePanel=t}}},M,x),C(null,null,a,{kind:"field",name:"pieCanvas",static:!1,private:!1,access:{has:e=>"pieCanvas"in e,get:e=>e.pieCanvas,set:(e,t)=>{e.pieCanvas=t}}},O,x),C(null,null,w,{kind:"field",name:"pie",static:!1,private:!1,access:{has:e=>"pie"in e,get:e=>e.pie,set:(e,t)=>{e.pie=t}}},W,x),C(null,null,d,{kind:"field",name:"pieTitle",static:!1,private:!1,access:{has:e=>"pieTitle"in e,get:e=>e.pieTitle,set:(e,t)=>{e.pieTitle=t}}},B,x),C(null,null,u,{kind:"field",name:"slices",static:!1,private:!1,access:{has:e=>"slices"in e,get:e=>e.slices,set:(e,t)=>{e.slices=t}}},F,x),C(null,null,v,{kind:"field",name:"chartPanel",static:!1,private:!1,access:{has:e=>"chartPanel"in e,get:e=>e.chartPanel,set:(e,t)=>{e.chartPanel=t}}},H,x),C(null,null,g,{kind:"field",name:"chartCanvas",static:!1,private:!1,access:{has:e=>"chartCanvas"in e,get:e=>e.chartCanvas,set:(e,t)=>{e.chartCanvas=t}}},G,x),C(null,null,V,{kind:"field",name:"chart",static:!1,private:!1,access:{has:e=>"chart"in e,get:e=>e.chart,set:(e,t)=>{e.chart=t}}},K,x),C(null,null,m,{kind:"field",name:"tickAxis",static:!1,private:!1,access:{has:e=>"tickAxis"in e,get:e=>e.tickAxis,set:(e,t)=>{e.tickAxis=t}}},N,x),C(null,null,T,{kind:"field",name:"currentTick",static:!1,private:!1,access:{has:e=>"currentTick"in e,get:e=>e.currentTick,set:(e,t)=>{e.currentTick=t}}},U,x),C(null,null,D,{kind:"field",name:"graph",static:!1,private:!1,access:{has:e=>"graph"in e,get:e=>e.graph,set:(e,t)=>{e.graph=t}}},q,x),C(null,null,S,{kind:"field",name:"plots",static:!1,private:!1,access:{has:e=>"plots"in e,get:e=>e.plots,set:(e,t)=>{e.plots=t}}},Z,x),C(null,null,P,{kind:"field",name:"series",static:!1,private:!1,access:{has:e=>"series"in e,get:e=>e.series,set:(e,t)=>{e.series=t}}},j,x),C(null,null,L,{kind:"field",name:"pinned",static:!1,private:!1,access:{has:e=>"pinned"in e,get:e=>e.pinned,set:(e,t)=>{e.pinned=t}}},X,x),C(null,null,A,{kind:"field",name:"focused",static:!1,private:!1,access:{has:e=>"focused"in e,get:e=>e.focused,set:(e,t)=>{e.focused=t}}},Y,x),C(null,null,I,{kind:"field",name:"calendar",static:!1,private:!1,access:{has:e=>"calendar"in e,get:e=>e.calendar,set:(e,t)=>{e.calendar=t}}},_,x),e.dateFormat=o.DateTimeFormat.pattern("%b %d @ %H:%M"),e})();e.AspectBinderController=M,e.AspectRowController=E,e.AspectTrait=P,e.AtlasAspectTrait=K,e.AtlasController=G,e.AtlasEntityController=U,e.AtlasEntityTrait=N,e.CalendarService=R,e.EntityFolioController=H,e.EntityNavController=F,e.EntityRowController=O,e.EntityTableController=W,e.EntityTrait=L,e.LoginController=I,e.RelationTableController=B,e.RelationTrait=A,e.SessionController=x,e.Status=D,e.StatusInterpolator=S,e.TimeGaugeController=q,e.TimePieController=j,e.TimeSeriesController=z,e.TimeTableController=Z,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
//# sourceMappingURL=swim-gui.min.js.map
