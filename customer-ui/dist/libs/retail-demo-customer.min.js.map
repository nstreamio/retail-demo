{"version":3,"file":"retail-demo-customer.min.js","sources":["../../node_modules/tslib/tslib.es6.mjs","../../src/order/OrderController.ts","../../src/types.ts","../../src/customer/OrderListController.ts","../../src/customer/MainController.ts","../../src/customer/CustomerController.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { TimeSeriesController } from \"@swim/widget\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { LeafView, RowView, TextCellView } from \"@swim/table\";\nimport { Look } from \"@swim/theme\";\nimport { OrderType } from \"../types\";\nimport { Observes } from \"@swim/util\";\n\n/** @public */\nexport class OrderController extends TimeSeriesController {\n  readonly orderId: string;\n  readonly orderType: OrderType;\n\n  constructor(orderId: string, orderType: OrderType) {\n    console.log('OrderController constructor');\n    super();\n    this.setKey(orderId);\n    this.orderId = orderId;\n    this.orderType = orderType;\n  }\n\n  @ViewRef({\n    viewType: RowView,\n    extends: true,\n    initView(rowView: RowView): void {\n      rowView.set({\n        style: {\n          height: '72px',\n        },\n      });\n    }\n  })\n  override readonly row!: ViewRef<this, RowView>;\n\n  @ViewRef({\n    viewType: LeafView,\n    extends: true,\n    initView(leafView: LeafView): void {\n      leafView.set({\n        style: {\n          height: '40px',\n          marginTop: '16px',\n          marginBottom: '16px',\n        }\n      });\n    },\n    viewDidPress(): void {\n      // disable default press action\n      return;\n    },\n    viewDidLongPress(): void {\n      // disable default long press action\n      return;\n    }\n  })\n  override readonly leaf!: ViewRef<this, LeafView> & Observes<LeafView>;\n\n  @ViewRef({\n    viewType: TextCellView,\n    viewKey: \"order\",\n    extends: true,\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): TextCellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        }\n      });\n    }\n  })\n  readonly orderTypeCell!: ViewRef<this, TextCellView>;\n\n  @ViewRef({\n    viewType: TextCellView,\n    viewKey: \"status\",\n    extends: true,\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): TextCellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        }\n      });\n    }\n  })\n  readonly statusCell!: ViewRef<this, TextCellView>;\n}\n","export enum OrderType {\n  OrderA = \"A\",\n  OrderB = \"B\",\n  OrderC = \"C\",\n  Unknown = \"Unknown\",\n}\n\nexport enum OrderStatus {\n  orderPlaced = 'orderPlaced',\n  orderProcessed = 'orderProcessed',\n  readyForPickup = 'readyForPickup',\n  pickupCompleted = 'pickupCompleted',\n}\n\nexport type StoreStatus = Record<OrderStatus, Record<OrderType | 'total', { count: number, value: number}>>;\n","import { MapDownlink } from \"@swim/client\";\nimport { Property } from \"@swim/component\";\nimport { Value } from \"@swim/structure\";\nimport { Uri } from \"@swim/uri\";\nimport { TimeTableController } from \"@swim/widget\";\nimport { OrderController } from \"../order\";\nimport { HtmlView } from \"@swim/dom\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { ColLayout, ColView, HeaderView, LeafView, TableLayout, TableView, TextCellView, TextColView } from \"@swim/table\";\nimport { TraitViewRef } from \"@swim/controller\";\nimport { PanelView } from \"@swim/panel\";\nimport { Trait } from \"@swim/model\";\nimport { Feel, Look } from \"@swim/theme\";\nimport { Length } from \"@swim/math\";\nimport { Status } from \"@swim/domain\";\nimport { OrderStatus, OrderType } from \"../types\";\n\nexport class OrderListController extends TimeTableController {\n  readonly listTitle: string;\n\n  constructor(title: string) {\n    super();\n    this.listTitle = title;\n\n    // set customerId\n    const customerId = (/(?<=\\/customer\\/)[^\\s!?\\/.*#|]+(?=\\/|$|\\?)/gm.exec(\n      window.location.href\n    ) ?? [\"\"])[0];\n    this.customerId.set(customerId);\n\n    // set up and open orders downlink\n    this.ordersDownlink.setHostUri(\"warp://localhost:9001\");\n    this.ordersDownlink.setNodeUri(`/customer/${this.customerId.value}`);\n    this.ordersDownlink.open();\n  }\n\n  // repeated from CustomerController; not very DRY; there's probably a way to connect these values\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly customerId!: Property<this, string>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView(): HtmlView {\n      const containerEl = document.createElement(\"div\");\n      const containerView = HtmlView.fromNode(containerEl).set({\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          margin: \"0px\",\n          marginTop: \"80px\",\n        },\n      });\n\n      // iconOuterContainer for holding SVGs\n      containerView.appendChild(\"div\").set({\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          margin: \"0px\",\n        },\n      });\n\n      containerView.appendChild(\"p\").set({\n        style: {\n          margin: \"0px\",\n          fontSize: \"20px\",\n          fontWeight: \"400\",\n          maxWidth: \"400px\",\n          color: \"yellow\",\n        },\n      });\n      containerView.node.innerText =\n        \"Tap the (+) button below to add an order!\";\n\n      return containerView;\n    },\n  })\n  readonly emptyState!: ViewRef<this, HtmlView>;\n\n  @TraitViewRef({\n    extends: true,\n    initView(parentPanelView: PanelView): void {\n      parentPanelView.node.classList.add(\"order-list-controller__panel\");\n      parentPanelView.style.set({\n        margin: \"0px\",\n      });\n\n      // init OrderListController's panel\n      super.initView(parentPanelView);\n      this.owner.table.insertView(); // Insert the table when we insert this panel\n      this.owner.header.insertView(); // Insert the table's header when we insert this panel\n    },\n  })\n  override readonly panel!: TraitViewRef<this, Trait, PanelView> &\n    TimeTableController[\"panel\"];\n\n  @ViewRef({\n    extends: true,\n    initView(panelView: PanelView): void {\n      super.initView(panelView);\n      panelView.node.classList.add(\"order-list-controller__panel-view\");\n      panelView.set({\n        style: {\n          marginTop: 50,\n        },\n        unitHeight: 1,\n      });\n    },\n  })\n  override readonly tablePanel!: ViewRef<this, PanelView> &\n    TimeTableController[\"tablePanel\"];\n\n  @ViewRef({\n    extends: true,\n    createView(): HeaderView {\n      const headerView = super.createView() as HeaderView;\n      // this.owner.shapeCol.insertView(headerView);\n      this.owner.orderTypeCol.insertView(headerView);\n      this.owner.statusCol.insertView(headerView);\n      return headerView;\n    }\n  })\n  override readonly header!: ViewRef<this, HeaderView> & TimeTableController[\"header\"];\n\n  @ViewRef({\n    extends: true,\n    createLayout(): TableLayout {\n      const cols = new Array<ColLayout>();\n      // cols.push(ColLayout.create(\"shape\", 1, 0, 0, false, false, Look.accentColor));\n      cols.push(ColLayout.create(\"order\", 2, 0, 0, false, false, Look.accentColor));\n      cols.push(ColLayout.create(\"status\", 4, 0, 0, false, false, Look.accentColor));\n      return new TableLayout(null, null, null, Length.px(8), cols);\n    },\n    initView(tableView: TableView): void {\n      tableView.set({\n        style: {\n          marginLeft: '16px',\n        }\n      })\n    }\n  })\n  override readonly table!: ViewRef<this, TableView> &\n    TimeTableController[\"table\"];\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"order\",\n    extends: true,\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"Order Type\",\n      });\n    }\n  })\n  readonly orderTypeCol!: ViewRef<this, ColView>;\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"status\",\n    extends: true,\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"Status\",\n      });\n    }\n  })\n  readonly statusCol!: ViewRef<this, ColView>;\n\n  @MapDownlink({\n    hostUri: \"warp://localhost:9001\",\n    laneUri: \"orders\",\n    consumed: true,\n    keyForm: Uri.form(),\n    didUpdate(nodeUri: Uri, value: Value): void {\n      let orderController = this.owner.getChild(\n        nodeUri.pathName,\n        OrderController\n      );\n      console.log('!!orderController: ', !!orderController);\n\n      const status: OrderStatus = (value.get(\"status\").stringValue() ?? \"unknown\") as OrderStatus;\n      console.log('status: ', status);\n      let orderType: OrderType = OrderType.Unknown;\n      if (value.get(\"products\").get(\"A\").numberValue() ?? 0) {\n        orderType = OrderType.OrderA;\n      } else if (value.get(\"products\").get(\"B\").numberValue() ?? 0) {\n        orderType = OrderType.OrderB;\n      } else if (value.get(\"products\").get(\"C\").numberValue() ?? 0) {\n        orderType = OrderType.OrderC;\n      }\n      console.log('orderType: ', orderType);\n\n      if (status === \"pickupCompleted\") {\n        console.log('status was pickupCompleted');\n        if (orderController) {\n          console.log('removing child 1');\n          this.owner.removeChild(nodeUri.pathName);\n        }\n\n      // If there is a new order, and the order is the same status that his controller is managing then add it to the list\n      } else if (orderController) {\n        console.log('existing orderController found');\n        let moodStatus = OrderListController.orderStatusMood.get(status);\n\n        const orderTypeCell = orderController.orderTypeCell.attachView() as TextCellView;\n        orderTypeCell.modifyMood(Feel.default, moodStatus!.moodModifier);\n\n        const statusCell = orderController.statusCell.attachView() as TextCellView;\n        statusCell.content.set(\n          OrderListController.orderStatusDescription.get(status)\n        );\n        statusCell.modifyMood(Feel.default, moodStatus!.moodModifier);\n\n        // If no OrderController is found, create and insert a new one\n      } else if (orderController === null) {\n        console.log('no existing orderController found');\n        orderController = new OrderController(nodeUri.pathName, orderType);\n        orderController.title.setValue(nodeUri.pathName);\n\n        let moodStatus = OrderListController.orderStatusMood.get(\n          status || \"orderPlaced\"\n        );\n\n        // set orderTypeCell of row\n        const orderTypeCell = orderController.orderTypeCell.attachView() as TextCellView;\n        orderTypeCell.set({\n          style: {\n            height: '40px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n          }\n        })\n        .modifyMood(Feel.default, moodStatus!.moodModifier);\n        orderTypeCell.content.set(orderType);\n        (orderTypeCell.node.firstChild as HTMLElement).style.alignSelf = 'unset';\n\n        // set statusCell of row\n        const statusCell = orderController.statusCell.attachView() as TextCellView;\n        statusCell.set({\n          style: {\n            height: '40px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n          }\n        })\n        .modifyMood(Feel.default, moodStatus!.moodModifier);\n        statusCell.content.set(OrderListController.orderStatusDescription.get(status));\n        (statusCell.node.firstChild as HTMLElement).style.alignSelf = 'unset';\n\n        // insert the name cell and current cell for each order into the table\n        // orderController.shapeCell.insertView();\n        orderController.orderTypeCell.insertView();\n        orderController.statusCell.insertView();\n\n        // add the OrderController into the series\n        console.log('adding the new orderController to the series');\n        this.owner.series.addController(\n          orderController,\n          void 0,\n          nodeUri.pathName\n        );\n      }\n    },\n  })\n  readonly ordersDownlink!: MapDownlink<this, Uri, Value>;\n\n  private static getColorFromStatus(status: OrderStatus): string {\n    if (status === OrderStatus.orderPlaced) {\n      return \"orange\";\n    } else if (status === OrderStatus.orderProcessed) {\n      return \"yellow\";\n    }\n    return \"teal\";\n  }\n\n  private static orderStatusMood: Map<OrderStatus, Status> = new Map<OrderStatus, Status>(\n    [\n      [OrderStatus.orderPlaced, Status.improving(0, 1, 2, 3, 4)(1.4)],\n      [OrderStatus.orderProcessed, Status.improving(0, 1, 2, 3, 4)(2)],\n      [OrderStatus.readyForPickup, Status.improving(0, 1, 2, 3, 4)(3)],\n      [OrderStatus.pickupCompleted, Status.unknown()],\n    ]\n  );\n\n  private static orderStatusDescription: Map<OrderStatus, string> = new Map<\n    OrderStatus,\n    string\n  >([\n    [OrderStatus.orderPlaced, \"Received by store\"],\n    [OrderStatus.orderProcessed, \"Store is processing order\"],\n    [OrderStatus.readyForPickup, \"Order is ready for pickup!\"],\n    [OrderStatus.pickupCompleted, \"Unknown status\"],\n  ]);\n}\n","import { Property } from \"@swim/component\";\nimport { BoardController, BoardView } from \"@swim/panel\";\nimport { ControllerRef, TraitViewRef } from \"@swim/controller\";\nimport { Trait } from \"@swim/model\";\nimport { ViewRef } from \"@swim/view\";\nimport { HtmlView } from \"@swim/dom\";\nimport { PanelView } from \"@swim/panel\";\nimport { OrderListController } from \"./OrderListController\";\nimport { ButtonItem, ButtonStack, ButtonStackObserver, FloatingButton } from \"@swim/button\";\nimport {\n  HtmlIconView,\n  PolygonIcon,\n  VectorIcon,\n} from \"@swim/graphics\";\nimport { MapDownlink, ValueDownlink } from \"@swim/client\";\nimport { Uri } from \"@swim/uri\";\nimport { Value } from \"@swim/structure\";\nimport { Transform } from \"@swim/math\";\nimport { OrderStatus, OrderType, StoreStatus } from \"../types\";\nimport { TimeSeriesController } from \"@swim/widget\";\nimport { Observes } from \"@swim/util\";\n\nexport class MainController extends BoardController {\n  static readonly MAIN_PANEL_KEY: string = \"mainPanelView\";\n  static readonly ORDER_LIST_CONTROLLER_KEY: string = \"orderListController\";\n\n  constructor() {\n    super();\n\n    const boardView = this.sheet.attachView();\n    boardView.appendChild(PanelView, MainController.MAIN_PANEL_KEY);\n\n    // set customerId\n    const customerId = (/(?<=\\/customer\\/)[^\\s!?\\/.*#|]+(?=\\/|$|\\?)/gm.exec(\n      window.location.href\n    ) ?? [\"\"])[0];\n    this.customerId.set(customerId);\n\n    const hostUri = 'warp://localhost:9001';\n    const nodeUri = `/customer/${this.customerId.value}`;\n\n    // set up and open orders downlink\n    this.placeOrderDownlink.setHostUri(hostUri);\n    this.placeOrderDownlink.setNodeUri(nodeUri);\n    this.placeOrderDownlink.open();\n\n    // set up and open status downlink\n    this.statusDownlink.setHostUri(hostUri);\n    this.statusDownlink.setNodeUri(nodeUri);\n    this.statusDownlink.open();\n\n    // attach controller but don't insert any of its views\n    this.orderListController.attachController(new OrderListController(MainController.ORDER_LIST_CONTROLLER_KEY));\n  }\n\n  // repeated from CustomerController; not very DRY; there's probably a way to connect these values\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly customerId!: Property<this, string>;\n\n  @Property({\n    valueType: Number,\n    value: void 0,\n    extends: true,\n    binds: true,\n    didSetValue(newValue = 0, oldValue) {\n      const panelView = this.owner.sheet.attachView().getChild(MainController.MAIN_PANEL_KEY);\n\n      if (newValue > 0 && (oldValue === void 0 || oldValue === 0) && panelView) {\n        // remove empty state\n        this.owner.emptyState.removeView();\n\n        // insert orders table\n        this.owner.orderListController.controller?.panel.insertView(\n          panelView,\n          void 0,\n          void 0,\n          MainController.ORDER_LIST_CONTROLLER_KEY\n        ).set({\n          unitWidth: 1,\n          unitHeight: 1,\n        });\n      } else if (newValue === 0 && (oldValue === void 0 || oldValue > 0) && panelView) {\n        // remove orders table\n        panelView.removeChild(MainController.ORDER_LIST_CONTROLLER_KEY);\n\n        // insert empty state\n        this.owner.emptyState.insertView(panelView).set({\n          classList: ['empty-state-view']\n        });\n      }\n    }\n  })\n  readonly inFlightCount!: Property<this, number | undefined>;\n\n  @Property({\n    valueType: Boolean,\n    value: undefined,\n    binds: true,\n    extends: true,\n    didSetValue(value: Boolean, oldValue: Boolean | undefined = false): void {\n      const boardView = this.owner.sheet.attachView();\n\n      if (value) {\n        // remove placeOrderFab\n        this.owner.placeOrderFab.removeView();\n        // insert pickupOrdersFab\n        this.owner.pickupOrdersFab.insertView(boardView);\n      } else {\n        // remove pickupOrdersFab\n        this.owner.pickupOrdersFab.removeView();\n        // insert placeOrerFab\n        this.owner.placeOrderFab.insertView(boardView);\n      }\n    }\n  })\n  readonly pickupReady!: Property<this, Boolean | undefined>;\n\n  @TraitViewRef({\n    extends: true,\n    createView(): BoardView {\n      const mainElement = document.createElement(\"main\");\n      const boardView = new BoardView(mainElement).set({\n        style: {\n          width: \"100%\",\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: \"0px\",\n          margin: \"0px\",\n          backgroundColor: '#212121',\n        },\n      });\n\n      return boardView;\n    },\n  })\n  override readonly sheet!: TraitViewRef<this, Trait, BoardView> &\n    BoardController[\"sheet\"];\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView(): HtmlView {\n      const containerEl = document.createElement(\"div\");\n      const containerView = HtmlView.fromNode(containerEl).set({\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          margin: \"0px\",\n          marginBottom: '80px',\n        }\n      });\n\n      // text view\n      const emptyStatePView = containerView.appendChild(\"p\").set({\n        style: {\n          fontSize: \"20px\",\n          fontWeight: \"400\",\n          color: MainController.orderStatusColors[OrderStatus.orderPlaced],\n          marginTop: '24px',\n          marginRight: '80px',\n          marginBottom: \"80px\",\n          marginLeft: '80px',\n        },\n      });\n      emptyStatePView.node.innerText =\n        \"Tap the (+) button below to add an order!\";\n\n      return containerView;\n    },\n  })\n  readonly emptyState!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: ButtonStack,\n    createView(): ButtonStack {\n      const buttonStackView: ButtonStack = super.createView().set({\n        style: {\n          position: \"absolute\",\n          bottom: \"24px\",\n          right: \"24px\",\n        },\n      });\n      buttonStackView.button.view?.style.backgroundColor.set(MainController.orderStatusColors[OrderStatus.orderPlaced]);\n      buttonStackView.button.attachView().icon.attachView();\n      buttonStackView.button.view?.icon.push(VectorIcon.create(24, 24, 'M11,13L5,13L5,11L11,11L11,5L13,5L13,11L19,11L19,13L13,13L13,19L11,19Z'), false);\n      buttonStackView.button.view?.set({\n        style: {\n          width: '100%',\n          height: '100%',\n        },\n        classList: ['button-stack-view'],\n      });\n      buttonStackView.button.view?.icon.view?.set({\n        style: {\n          transform: Transform.parse(\"scale(1.5,1.5)\"),\n        },\n        classList: ['svg-container-view'],\n      });\n\n      // icon button handler\n      const that: ViewRef<MainController, ButtonStack> = this;\n      const handleClick = function (orderType: OrderType) {\n        return function () {\n          that.owner.createOrder(orderType);\n        };\n      };\n\n      /* c icon button */\n      const c: ButtonItem = buttonStackView.appendChild(\n        ButtonItem,\n        \"c\"\n      );\n      const cButton = c.button;\n      if (cButton) {\n        cButton.set({\n          style: {\n            backgroundColor: MainController.orderStatusColors[OrderStatus.orderPlaced],\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: '22px',\n            color: '#000000',\n          }\n        });\n        const text = cButton.appendChild('div').set({\n          style: {\n            transform: 'translate(-1px,-1px)',\n          }\n        });\n        text.node.innerText = 'C';\n      }\n      const cLabel = c.insertChild(HtmlView, null, \"label\").set({\n        style: {\n          marginTop: '6px',\n          height: '24px',\n          lineHeight: '24px',\n          paddingTop: '2px',\n          paddingBottom: '2px',\n          paddingLeft: '4px',\n          paddingRight: '4px',\n          backgroundColor: 'rgba(33, 33, 33, 0.8)',\n          borderRadius: '4px',\n          boxShadow: '0px 0px 4px rgba(33, 33, 33, 0.8)',\n        },\n        classList: ['button-label', 'c-label'],\n      });\n      cLabel.node.innerText = \"$30.00\";\n      c.addEventListener(\"click\", handleClick(OrderType.OrderC));\n\n      /* b icon button */\n      const b: ButtonItem = buttonStackView.appendChild(\n        ButtonItem,\n        \"b\"\n      );\n      if (b.button) {\n        b.button.set({\n          style: {\n            backgroundColor: MainController.orderStatusColors[OrderStatus.orderPlaced],\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: '22px',\n            color: '#000000',\n          }\n        });\n        const text = b.button.appendChild('div').set({\n          style: {\n            transform: 'translate(-1px,-1px)',\n          }\n        });\n        text.node.innerText = 'B';\n      }\n      const bLabel = b.insertChild(HtmlView, null, \"label\").set({\n        style: {\n          marginTop: '6px',\n          height: '24px',\n          lineHeight: '24px',\n          paddingTop: '2px',\n          paddingBottom: '2px',\n          paddingLeft: '4px',\n          paddingRight: '4px',\n          backgroundColor: 'rgba(33, 33, 33, 0.8)',\n          borderRadius: '4px',\n          boxShadow: '0px 0px 4px rgba(33, 33, 33, 0.8)',\n        },\n        classList: ['button-label', 'c-label'],\n      });\n      bLabel.node.innerText = \"$20.00\";\n      b.addEventListener(\"click\", handleClick(OrderType.OrderB));\n\n      /* a icon button */\n      const a: ButtonItem = buttonStackView.appendChild(\n        ButtonItem,\n        \"a\"\n      );\n      if (a.button) {\n        a.button.set({\n          style: {\n            backgroundColor: MainController.orderStatusColors[OrderStatus.orderPlaced],\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: '22px',\n            color: '#000000',\n          }\n        });\n        const text = a.button.appendChild('div').set({\n          style: {\n            transform: 'translate(-1px,-1px)',\n          }\n        });\n        text.node.innerText = 'A';\n      }\n      const aLabel = a.insertChild(HtmlView, null, \"label\").set({\n        style: {\n          marginTop: '4px',\n          height: '24px',\n          lineHeight: '24px',\n          paddingTop: '4px',\n          paddingBottom: '4px',\n          paddingLeft: '6px',\n          paddingRight: '6px',\n          backgroundColor: 'rgba(33, 33, 33, 0.8)',\n          borderRadius: '4px',\n          boxShadow: '0px 0px 4px rgba(33, 33, 33, 0.8)',\n        },\n        classList: ['button-label', 'c-label'],\n      });\n      aLabel.node.innerText = \"$10.00\";\n      a.addEventListener(\"click\", handleClick(OrderType.OrderA));\n\n      return buttonStackView;\n    },\n    initView(buttonStackView: ButtonStack): void {\n      buttonStackView.node.addEventListener('click', () => {\n        buttonStackView.presence.toggle();\n      });\n    },\n  })\n  readonly placeOrderFab!: ViewRef<this, ButtonStack> & Observes<ButtonStackObserver>;\n\n  @ViewRef({\n    viewType: FloatingButton,\n    createView() {\n      const fab: FloatingButton = super.createView().set({\n        style: {\n          position: \"absolute\",\n          bottom: \"24px\",\n          right: \"24px\",\n          width: '56px',\n          height: '56px',\n          overflow: 'unset',\n          zIndex: 1,\n        },\n        classList: ['pickup-orders-fab-button'],\n      });\n      fab.style.backgroundColor.set(MainController.orderStatusColors[OrderStatus.readyForPickup]);\n      fab.icon.attachView();\n      fab.icon.push(VectorIcon.create(\n        24,\n        24,\n        'M5,8L5,19L19,19L19,8L16,8L16,16L12,14L8,16L8,8L5,8ZM5,21C4.45,21,3.98,20.8,3.59,20.41C3.2,20.02,3,19.55,3,19L3,6.53C3,6.29,3.04,6.07,3.11,5.85C3.19,5.63,3.3,5.43,3.45,5.25L4.7,3.73C4.88,3.49,5.11,3.31,5.39,3.19C5.66,3.06,5.95,3,6.25,3L17.75,3C18.05,3,18.34,3.06,18.61,3.19C18.89,3.31,19.12,3.49,19.3,3.73L20.55,5.25C20.7,5.43,20.81,5.63,20.89,5.85C20.96,6.07,21,6.29,21,6.53L21,19C21,19.55,20.8,20.02,20.41,20.41C20.02,20.8,19.55,21,19,21L5,21ZM5.4,6L18.6,6L17.75,5L6.25,5L5.4,6ZM10,8L10,12.75L12,11.75L14,12.75L14,8L10,8ZM5,8.04L19,8.04L5,8.04Z'\n      ), false);\n      fab.icon.view?.set({\n        style: {\n          transform: Transform.parse(\"scale(1.5,1.5)\"),\n        },\n        classList: ['svg', 'black'],\n      });\n\n      const that: MainController = this.owner;\n      fab.addEventListener('click', function() {\n        that.pickUpAllOrders();\n      })\n\n      // helper text\n      const helperText = fab.insertChild('p', null).set({\n        style: {\n          position: 'absolute',\n          bottom: '34px',\n          right: '35px',\n          width: '200px',\n          color: MainController.orderStatusColors[OrderStatus.readyForPickup],\n          fontSize: '20px',\n          fontWeight: '400',\n          lineHeight: '27px',\n          backgroundColor: 'rgba(33, 33, 33, 0.9)',\n          borderRadius: '4px',\n          boxShadow: '0px 0px 4px rgba(33, 33, 33, 0.9)',\n        },\n        classList: ['pickup-orders-helper-text']\n      });\n      helperText.node.innerText = (\n        `Tap the button below\n        to pick up orders!`\n      );\n\n      return fab;\n    }\n  })\n  readonly pickupOrdersFab!: ViewRef<this, FloatingButton>;\n\n  @ControllerRef({\n    controllerType: OrderListController,\n  })\n  readonly orderListController!: ControllerRef<this, OrderListController>;\n\n  @ValueDownlink({\n    hostUri: 'warp://localhost:9001',\n    laneUri: 'status',\n    consumed: true,\n    didSet(value: Value): void {\n      const status = MainController.parseStoreStatus(value);\n      // propagate new value of inFlightCount\n      const newInFlightCount = [\n        OrderStatus.orderPlaced,\n        OrderStatus.orderProcessed,\n        OrderStatus.readyForPickup\n      ].reduce((acc, nextStatus: OrderStatus) => acc + status[nextStatus].total.count, 0);\n      this.owner.inFlightCount.set(newInFlightCount);\n\n      // propagate new value of pickupReady\n      const newPickupReadyValue = !status.orderPlaced.total.count && !status.orderProcessed.total.count && !!status.readyForPickup.total.count;\n      this.owner.pickupReady.set(newPickupReadyValue);\n    },\n  })\n  readonly statusDownlink!: ValueDownlink<this>;\n\n  @MapDownlink({\n    laneUri: \"placeOrder\",\n    consumed: true,\n    keyForm: Uri.form(),\n  })\n  readonly placeOrderDownlink!: MapDownlink<this, Uri, Value>;\n\n  @MapDownlink({\n    hostUri: 'warp://localhost:9001',\n    laneUri: 'updateOrder',\n    consumed: true,\n    keyForm: Uri.form(),\n  })\n  readonly updateOrderDownlink!: MapDownlink<this, Uri, Value>;\n\n  protected createOrder(orderType: OrderType): void {\n    const products = {\n      [orderType.charAt(orderType.length - 1)]: 1,\n    };\n    const status = 'orderPlaced';\n    const timestamp = Date.now().valueOf();\n\n    this.placeOrderDownlink.command({\n      products,\n      status,\n      timestamp\n    });\n  };\n\n  protected pickUpAllOrders(): void {\n    Object.values(this.orderListController.controller?.series.controllers ?? {})\n      .forEach((controller: TimeSeriesController | undefined) => {\n        if (controller === void 0) {\n          return;\n        }\n\n        this.updateOrderDownlink.setNodeUri(`/order/${controller.key}`);\n        this.updateOrderDownlink.open();\n        this.updateOrderDownlink.command(`{status:${OrderStatus.pickupCompleted}}`);\n        this.updateOrderDownlink.close();\n      })\n  }\n\n  static parseStoreStatus(v: Value): StoreStatus {\n    return [OrderStatus.orderPlaced, OrderStatus.orderProcessed, OrderStatus.readyForPickup, OrderStatus.pickupCompleted].reduce((acc, s) => {\n      [OrderType.OrderA, OrderType.OrderB, OrderType.OrderC].forEach(t => {\n        let count = v.get(s).get(t).numberValue(0);\n        let value = count * MainController.valuePerOrderType[t];\n        if (!acc[s]) { acc[s] = { total: { count: 0, value: 0 } } as StoreStatus[OrderStatus]; }\n        acc[s][t] = { count, value };\n        acc[s].total.count += count;\n        acc[s].total.value += value;\n      });\n      return acc;\n    }, {} as StoreStatus);\n  };\n\n  private static valuePerOrderType: Record<OrderType, number> = {\n    [OrderType.OrderA]: 10,\n    [OrderType.OrderB]: 20,\n    [OrderType.OrderC]: 30,\n    [OrderType.Unknown]: 0,\n  };\n\n  static readonly orderStatusColors: Record<OrderStatus, string> = {\n    [OrderStatus.orderPlaced]: '#F7913E',\n    [OrderStatus.orderProcessed]: '#F9F070',\n    [OrderStatus.readyForPickup]: '#57FAD6',\n    [OrderStatus.pickupCompleted]: '#FFFFFF',\n  };\n}\n","import { BoardController } from \"@swim/panel\";\nimport { Property } from \"@swim/component\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { HtmlView } from \"@swim/dom\";\nimport { ControllerRef } from \"@swim/controller\";\nimport { MainController } from \"./MainController\";\nimport { HtmlIconView, VectorIcon } from \"@swim/graphics\";\n\nexport class CustomerController extends BoardController {\n  constructor() {\n    super();\n\n    // set customerId\n    const customerId = (/(?<=\\/customer\\/)[^\\s!?\\/.*#|]+(?=\\/|$|\\?)/gm.exec(\n      window.location.href\n    ) ?? [\"\"])[0];\n    this.customerId.set(customerId);\n\n    // insert appBar view\n    this.initBoard();\n\n    // insert main view\n    this.mainController.controller?.sheet.insertView(this.sheet.attachView());\n  }\n\n  protected initBoard() {\n    const boardView = this.sheet.attachView().set({\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        boxSizing: \"border-box\",\n      },\n    });\n    this.appBarView.insertView(boardView);\n    this.mainController.attachController();\n  }\n\n  // repeated in MainController; not very DRY; there's probably a way to connect these values\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly customerId!: Property<this, string>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView() {\n      const nav = document.createElement(\"nav\");\n      nav.style.backgroundColor = \"#181818\";\n      return new HtmlView(nav).set({\n        style: {\n          width: \"100%\",\n          height: \"80px\",\n          flexGrow: 0,\n          flexShrink: 0,\n          flexBasis: \"auto\",\n          boxSizing: \"border-box\",\n          padding: \"16px\",\n        },\n      });\n    },\n    initView(appBarView: HtmlView): void {\n      const container = appBarView.appendChild(\"div\").set({\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          boxSizing: \"border-box\",\n        },\n      });\n      // insert NStream logo icon\n      container.insertChild(HtmlIconView, null, \"nStreamIcon\").setIntrinsic({\n        graphics: VectorIcon.create(\n          64,\n          64,\n          \"M0,0H64V64H0Z M5,5V59H59V5Z M44,38.78V46L25,29.55V46H20V18Z M39,25V18H44V29.33Z\"\n        ),\n        style: {\n          width: \"48px\",\n          height: \"48px\",\n          marginRight: \"16px\",\n        },\n        classList: [\"n-stream-icon\"],\n      });\n\n      // insert details container\n      const detailsContainer = container\n        .appendChild(\"div\", \"app-bar-details-container\")\n        .setIntrinsic({\n          style: {\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexBasis: \"0px\",\n            flexGrow: 1,\n            flexShrink: 1,\n            justifyContent: \"space-between\",\n            alignItems: \"flex-start\",\n          },\n        });\n\n      // insert NStream title text\n      const title = detailsContainer.appendChild(\"h1\").set({\n        style: {\n          width: \"auto\",\n          fontWeight: \"600\",\n          fontSize: \"20px\",\n          lineHeight: \"24px\",\n          color: \"#FFFFFF\",\n          margin: \"0px\",\n          boxSizing: \"border-box\",\n        },\n      });\n      title.node.innerText = \"NStream - Retail 360\";\n\n      const detailsInnerContainer = detailsContainer.appendChild(\"div\").set({\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n          boxSizing: \"border-box\",\n        },\n        classList: [\"details-inner-container\"],\n      });\n      // insert NStream subtitle text\n      const subtitle = detailsInnerContainer.appendChild(\"p\").set({\n        style: {\n          fontWeight: \"400\",\n          fontSize: \"16px\",\n          lineHeight: \"17px\",\n          color: \"#FFFFFF\",\n          boxSizing: \"border-box\",\n          margin: \"0px\",\n        },\n      });\n      subtitle.node.innerText = \"1.0.0b\";\n\n      // insert customer ID (i.e. \"/cam\" or \"/will\")\n      const customerNodeName = detailsInnerContainer.appendChild(\"p\").set({\n        style: {\n          fontWeight: \"400\",\n          fontSize: \"16px\",\n          lineHeight: \"17px\",\n          color: \"#FFFFFF\",\n          margin: \"0px\",\n          boxSizing: \"border-box\",\n        },\n      });\n      customerNodeName.node.innerText = `/${this.owner.customerId.value}`; // I feel like I need to bind this text to the value of this.owner.customerId somehow. bindInlet?\n\n      // insert container for generic user img icon\n      const rightAppBarContainer = container.appendChild(\"div\").setIntrinsic({\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-end\",\n        },\n        classList: [\"right-app-bar-container\"],\n      });\n      // insert generic user img icon\n      rightAppBarContainer\n        .insertChild(HtmlIconView, null, \"user-img-icon\")\n        .setIntrinsic({\n          graphics: VectorIcon.create(\n            24,\n            24,\n            \"M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M12,6 C13.93,6 15.5,7.57 15.5,9.5 C15.5,11.43 13.93,13 12,13 C10.07,13 8.5,11.43 8.5,9.5 C8.5,7.57 10.07,6 12,6 Z M12,20 C9.97,20 7.57,19.18 5.86,17.12 C7.55,15.8 9.68,15 12,15 C14.32,15 16.45,15.8 18.14,17.12 C16.43,19.18 14.03,20 12,20 Z\"\n          ),\n          style: {\n            width: \"36px\",\n            height: \"36px\",\n            marginLeft: \"2px\",\n          },\n          classList: [\"user-img-icon\"],\n        });\n    },\n  })\n  readonly appBarView!: ViewRef<this, View>;\n\n  @ControllerRef({\n    controllerType: MainController,\n    controllerKey: \"body\",\n  })\n  readonly mainController!: ControllerRef<\n    this,\n    MainController,\n    [MainController]\n  >;\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","_","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","error","suppressed","message","e","Error","OrderController","_a","TimeSeriesController","constructor","orderId","orderType","console","log","super","this","_instanceExtraInitializers","row","_row_initializers","leaf","_leaf_initializers","orderTypeCell","_orderTypeCell_initializers","statusCell","_statusCell_initializers","setKey","_row_decorators","ViewRef","viewType","RowView","extends","initView","rowView","style","height","_leaf_decorators","LeafView","leafView","marginTop","marginBottom","viewDidPress","viewDidLongPress","_orderTypeCell_decorators","TextCellView","viewKey","parentView","owner","insertView","createView","create","color","Look","accentColor","_statusCell_decorators","static","private","has","obj","OrderType","OrderStatus","OrderListController","TimeTableController","title","listTitle","customerId","_customerId_initializers","emptyState","_emptyState_initializers","panel","_panel_initializers","tablePanel","_tablePanel_initializers","header","_header_initializers","table","_table_initializers","orderTypeCol","_orderTypeCol_initializers","statusCol","_statusCol_initializers","ordersDownlink","_ordersDownlink_initializers","exec","window","location","href","setHostUri","setNodeUri","open","getColorFromStatus","status","orderPlaced","orderProcessed","_customerId_decorators","Property","valueType","String","_emptyState_decorators","HtmlView","containerEl","document","createElement","containerView","fromNode","width","display","flexDirection","justifyContent","alignItems","margin","appendChild","fontSize","fontWeight","maxWidth","node","innerText","_panel_decorators","TraitViewRef","parentPanelView","classList","add","_tablePanel_decorators","panelView","unitHeight","_header_decorators","headerView","_table_decorators","createLayout","cols","Array","ColLayout","TableLayout","Length","px","tableView","marginLeft","_orderTypeCol_decorators","ColView","attachView","TextColView","label","_statusCol_decorators","_ordersDownlink_decorators","MapDownlink","hostUri","laneUri","consumed","keyForm","Uri","form","didUpdate","nodeUri","orderController","getChild","pathName","stringValue","Unknown","numberValue","_b","OrderA","_c","OrderB","_d","OrderC","removeChild","moodStatus","orderStatusMood","modifyMood","Feel","default","moodModifier","content","orderStatusDescription","setValue","firstChild","alignSelf","series","addController","Map","Status","improving","readyForPickup","pickupCompleted","unknown","MainController","BoardController","inFlightCount","_inFlightCount_initializers","pickupReady","_pickupReady_initializers","sheet","_sheet_initializers","placeOrderFab","_placeOrderFab_initializers","pickupOrdersFab","_pickupOrdersFab_initializers","orderListController","_orderListController_initializers","statusDownlink","_statusDownlink_initializers","placeOrderDownlink","_placeOrderDownlink_initializers","updateOrderDownlink","_updateOrderDownlink_initializers","boardView","PanelView","MAIN_PANEL_KEY","attachController","ORDER_LIST_CONTROLLER_KEY","createOrder","products","charAt","timestamp","Date","now","valueOf","command","pickUpAllOrders","values","controller","controllers","forEach","close","parseStoreStatus","v","reduce","acc","s","t","count","valuePerOrderType","total","_inFlightCount_decorators","Number","binds","didSetValue","newValue","oldValue","removeView","unitWidth","_pickupReady_decorators","Boolean","undefined","_sheet_decorators","mainElement","BoardView","flexGrow","flexShrink","flexBasis","backgroundColor","emptyStatePView","orderStatusColors","marginRight","_placeOrderFab_decorators","ButtonStack","buttonStackView","position","bottom","right","button","view","icon","VectorIcon","_e","transform","Transform","parse","that","handleClick","c","ButtonItem","cButton","text","cLabel","insertChild","lineHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","boxShadow","addEventListener","b","bLabel","a","aLabel","presence","toggle","_pickupOrdersFab_decorators","FloatingButton","fab","overflow","zIndex","helperText","_orderListController_decorators","ControllerRef","controllerType","_statusDownlink_decorators","ValueDownlink","didSet","newInFlightCount","nextStatus","newPickupReadyValue","_placeOrderDownlink_decorators","_updateOrderDownlink_decorators","CustomerController","appBarView","_appBarView_initializers","mainController","_mainController_initializers","initBoard","boxSizing","_appBarView_decorators","nav","padding","container","HtmlIconView","setIntrinsic","graphics","detailsContainer","detailsInnerContainer","subtitle","customerNodeName","rightAppBarContainer","_mainController_decorators","controllerKey"],"mappings":"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"}